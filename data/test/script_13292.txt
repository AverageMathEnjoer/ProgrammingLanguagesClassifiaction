b'package com.github.eprendre.videosource\n\nimport com.github.eprendre.tingshu.extensions.config\nimport com.github.eprendre.tingshu.sources.AudioUrlExtractor\nimport com.github.eprendre.tingshu.sources.AudioUrlWebViewSniffExtractor\nimport com.github.eprendre.tingshu.sources.TingShu\nimport com.github.eprendre.tingshu.utils.*\nimport org.jsoup.Jsoup\n\nobject NanGua : TingShu() {\n    override fun getSourceId(): String {\n        return "d3121473ac094dc7b16158c2824a11d7"\n    }\n\n    override fun getUrl(): String {\n        return "http://www.nangua55.com"\n    }\n\n    override fun getName(): String {\n        return "\xe5\x8d\x97\xe7\x93\x9c\xe5\xbd\xb1\xe8\xa7\x86"\n    }\n\n    override fun search(keywords: String, page: Int): Pair<List<Book>, Int> {\n        val url = "http://www.nangua55.com/search/"\n\n        val doc = Jsoup.connect(url).config(true)\n            .headers(mapOf("Referer" to "http://www.nangua55.com/search/"))\n            .data("wd", keywords)\n            .post()\n        val currentPage = 1\n        val totalPage = 1\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select("#content > div")\n        elementList.forEach { item ->\n            val a = item.selectFirst(".video-pic")\n            val coverUrl = a.attr("data-original")\n            val bookUrl = a.absUrl("href")\n            val title = a.attr("title")\n            val author = ""\n            val artist = ""\n            val status = item.select(".info > li")[2].ownText()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.status = status\n                this.sourceId = getSourceId()\n            })\n        }\n        return Pair(list, 1)\n    }\n\n    override fun isCacheable(): Boolean {\n        return false\n    }\n\n    override fun getAudioUrlExtractor(): AudioUrlExtractor {\n        return AudioUrlWebViewSniffExtractor\n    }\n\n    override fun getCategoryMenus(): List<CategoryMenu> {\n        val menu1 = CategoryMenu(\n            "\xe7\x94\xb5\xe8\xa7\x86\xe5\x89\xa7", listOf(\n                CategoryTab("\xe5\x9b\xbd\xe4\xba\xa7\xe5\x89\xa7", "http://www.nangua55.com/index.php?s=home-vod-type-id-14-picm-1-p-1"),\n                CategoryTab("\xe9\x9f\xa9\xe5\x9b\xbd\xe5\x89\xa7", "http://www.nangua55.com/index.php?s=home-vod-type-id-17-picm-1-p-1"),\n                CategoryTab("\xe6\xac\xa7\xe7\xbe\x8e\xe5\x89\xa7", "http://www.nangua55.com/index.php?s=home-vod-type-id-19-picm-1-p-1"),\n                CategoryTab("\xe6\x97\xa5\xe6\x9c\xac\xe5\x89\xa7", "http://www.nangua55.com/index.php?s=home-vod-type-id-18-picm-1-p-1"),\n                CategoryTab("\xe9\xa6\x99\xe6\xb8\xaf\xe5\x89\xa7", "http://www.nangua55.com/index.php?s=home-vod-type-id-15-picm-1-p-1"),\n                CategoryTab("\xe5\x8f\xb0\xe6\xb9\xbe\xe5\x89\xa7", "http://www.nangua55.com/index.php?s=home-vod-type-id-16-picm-1-p-1"),\n                CategoryTab("\xe6\xb5\xb7\xe5\xa4\x96\xe5\x89\xa7", "http://www.nangua55.com/index.php?s=home-vod-type-id-20-picm-1-p-1")\n            )\n        )\n        val menu2 = CategoryMenu(\n            "\xe7\x94\xb5\xe5\xbd\xb1", listOf(\n                CategoryTab("\xe5\x8a\xa8\xe4\xbd\x9c\xe7\x89\x87", "http://www.nangua55.com/index.php?s=home-vod-type-id-5-picm-1-p-1"),\n                CategoryTab("\xe5\x96\x9c\xe5\x89\xa7\xe7\x89\x87", "http://www.nangua55.com/index.php?s=home-vod-type-id-6-picm-1-p-1"),\n                CategoryTab("\xe7\x88\xb1\xe6\x83\x85\xe7\x89\x87", "http://www.nangua55.com/index.php?s=home-vod-type-id-7-picm-1-p-1"),\n                CategoryTab("\xe7\xa7\x91\xe5\xb9\xbb\xe7\x89\x87", "http://www.nangua55.com/index.php?s=home-vod-type-id-8-picm-1-p-1"),\n                CategoryTab("\xe6\x81\x90\xe6\x80\x96\xe7\x89\x87", "http://www.nangua55.com/index.php?s=home-vod-type-id-9-picm-1-p-1"),\n                CategoryTab("\xe5\x89\xa7\xe6\x83\x85\xe7\x89\x87", "http://www.nangua55.com/index.php?s=home-vod-type-id-10-picm-1-p-1"),\n                CategoryTab("\xe6\x88\x98\xe4\xba\x89\xe7\x89\x87", "http://www.nangua55.com/index.php?s=home-vod-type-id-11-picm-1-p-1")\n            )\n        )\n        val menu3 = CategoryMenu(\n            "\xe5\x85\xb6\xe5\xae\x83", listOf(\n                CategoryTab("\xe5\x8a\xa8\xe6\xbc\xab", "http://www.nangua55.com/index.php?s=home-vod-type-id-3-area--year--letter--order--picm-1-p-1"),\n                CategoryTab("\xe7\xbb\xbc\xe8\x89\xba", "http://www.nangua55.com/index.php?s=home-vod-type-id-4-area--year--letter--order--picm-1-p-1"),\n                CategoryTab("\xe5\xbe\xae\xe7\x94\xb5\xe5\xbd\xb1", "http://www.nangua55.com/index.php?s=home-vod-type-id-30-area--year--letter--order--picm-1-p-1")\n            )\n        )\n\n        return listOf(menu1, menu2, menu3)\n    }\n\n    override fun getCategoryList(url: String): Category {\n        val list = ArrayList<Book>()\n        val doc = Jsoup.connect(url).config(true)\n            .headers(mapOf("Referer" to "http://www.nangua55.com")).get()\n        val pages = doc.selectFirst("#long-page > ul > .visible-xs").text().split("/")\n        val currentPage = pages[0].toInt()\n        val totalPage = pages[1].toInt()\n        val nextUrl = doc.select("#long-page > ul > li").first { it.text() == "\xe4\xb8\x8b\xe4\xb8\x80\xe9\xa1\xb5" }\n            .selectFirst("a").absUrl("href")\n\n        val elementList = doc.select("#content > li")\n        elementList.forEach { item ->\n            val a = item.selectFirst(".video-pic")\n            val coverUrl = a.attr("data-original")\n            val bookUrl = a.absUrl("href")\n            val title = item.selectFirst(".title").text()\n            val author = item.selectFirst(".subtitle").text()\n            val artist = "\xe8\xaf\x84\xe5\x88\x86: " + a.selectFirst(".score").text()\n            val status = a.selectFirst(".note").text()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.status = status\n                this.sourceId = getSourceId()\n            })\n        }\n\n        return Category(list, currentPage, totalPage, url, nextUrl)\n    }\n\n    override fun getBookDetailInfo(bookUrl: String, loadEpisodes: Boolean, loadFullPages: Boolean): BookDetail {\n        val episodes = ArrayList<Episode>()\n        if (loadEpisodes) {\n            val doc = Jsoup.connect(bookUrl).config(true).get()\n            val tabs = doc.select("#playTab > li")\n            val playlists = doc.select(".playlist > ul")\n            tabs.forEachIndexed { index, tab ->\n                val tabTitle = tab.text()\n                val list = playlists[index].select("li > a").map { element ->\n                    val title = "$tabTitle - ${element.text()}"\n                    val url = element.absUrl("href")\n                    Episode(title, url)\n                }.asReversed()\n                episodes.addAll(list)\n            }\n\n        }\n        return BookDetail(episodes)\n    }\n}'