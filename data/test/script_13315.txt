b'{-# OPTIONS_GHC -fno-warn-orphans #-}\n{-# LANGUAGE\n    DeriveDataTypeable\n  , DeriveGeneric\n  #-}\nmodule Type.Post where\n\nimport Data.Aeson\nimport Data.JSON.Schema\nimport Data.Text (Text)\nimport Data.Time (UTCTime)\nimport Data.Typeable\nimport GHC.Generics\nimport Generics.Generic.Aeson\nimport Generics.XmlPickler\nimport Text.XML.HXT.Arrow.Pickle\n\nimport qualified Type.User as User\n\ntype Id = Int\ntype Title = Text\n\ndata Post = Post\n  { id          :: Id\n  , author      :: User.Name\n  , createdTime :: UTCTime\n  , title       :: Title\n  , content     :: Text\n  } deriving (Eq, Generic, Ord, Show, Typeable)\n\ninstance XmlPickler Post where xpickle   = gxpickle\ninstance JSONSchema Post where schema    = gSchema\ninstance FromJSON   Post where parseJSON = gparseJson\ninstance ToJSON     Post where toJSON    = gtoJson\n\ninstance XmlPickler UTCTime where xpickle = xpPrim\n'