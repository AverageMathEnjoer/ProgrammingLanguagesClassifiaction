b'package com.quyunshuo.androidbaseframemvvm.base.utils\n\nimport android.app.Activity\nimport java.util.*\n\n/**\n * @Author: QuYunShuo\n * @Time: 2020/9/11\n * @Class: ActivityStackManager\n * @Remark: Activity \xe6\xa0\x88\xe7\xae\xa1\xe7\x90\x86\xe7\xb1\xbb\n */\nobject ActivityStackManager {\n\n    // \xe7\xae\xa1\xe7\x90\x86\xe6\xa0\x88\n    val activityStack by lazy { Stack<Activity>() }\n\n    /**\n     * \xe6\xb7\xbb\xe5\x8a\xa0 Activity \xe5\x88\xb0\xe7\xae\xa1\xe7\x90\x86\xe6\xa0\x88\n     * @param activity Activity\n     */\n    fun addActivityToStack(activity: Activity) {\n        activityStack.push(activity)\n    }\n\n    /**\n     * \xe5\xbc\xb9\xe5\x87\xba\xe6\xa0\x88\xe5\x86\x85\xe6\x8c\x87\xe5\xae\x9aActivity \xe4\xb8\x8dfinish\n     * @param activity Activity\n     */\n    fun popActivityToStack(activity: Activity) {\n        if (!activityStack.empty()) {\n            activityStack.forEach {\n                if (it == activity) {\n                    activityStack.remove(activity)\n                    return\n                }\n            }\n        }\n    }\n\n    /**\n     * \xe8\xbf\x94\xe5\x9b\x9e\xe5\x88\xb0\xe4\xb8\x8a\xe4\xb8\x80\xe4\xb8\xaa Activity \xe5\xb9\xb6\xe7\xbb\x93\xe6\x9d\x9f\xe5\xbd\x93\xe5\x89\x8d Activity\n     */\n    fun backToPreviousActivity() {\n        if (!activityStack.empty()) {\n            val activity = activityStack.pop()\n            if (!activity.isFinishing) activity.finish()\n        }\n    }\n\n    /**\n     * \xe6\xa0\xb9\xe6\x8d\xae\xe7\xb1\xbb\xe5\x90\x8d \xe5\x88\xa4\xe6\x96\xad\xe6\x98\xaf\xe5\x90\xa6\xe6\x98\xaf\xe5\xbd\x93\xe5\x89\x8d\xe7\x9a\x84 Activity\n     * @param cls Class<*> \xe7\xb1\xbb\xe5\x90\x8d\n     * @return Boolean\n     */\n    fun isCurrentActivity(cls: Class<*>): Boolean {\n        val currentActivity = getCurrentActivity()\n        return if (currentActivity != null) currentActivity.javaClass == cls else false\n    }\n\n    /**\n     * \xe8\x8e\xb7\xe5\x8f\x96\xe5\xbd\x93\xe5\x89\x8d\xe7\x9a\x84 Activity\n     */\n    fun getCurrentActivity(): Activity? =\n        if (!activityStack.empty()) activityStack.lastElement() else null\n\n    /**\n     * \xe7\xbb\x93\xe6\x9d\x9f\xe4\xb8\x80\xe4\xb8\xaa\xe6\xa0\x88\xe5\x86\x85\xe6\x8c\x87\xe5\xae\x9a\xe7\xb1\xbb\xe5\x90\x8d\xe7\x9a\x84 Activity\n     * @param cls Class<*>\n     */\n    fun finishActivity(cls: Class<*>) {\n        activityStack.forEach {\n            if (it.javaClass == cls) {\n                if (!it.isFinishing) it.finish()\n                return\n            }\n        }\n    }\n\n    /**\n     * \xe5\xbc\xb9\xe5\x87\xba\xe5\x85\xb6\xe4\xbb\x96 Activity\n     */\n    fun popOtherActivity() {\n        val activityList = activityStack.toList()\n        getCurrentActivity()?.run {\n            activityList.forEach { activity ->\n                if (this != activity) {\n                    activityStack.remove(activity)\n                    activity.finish()\n                }\n            }\n        }\n    }\n\n    /**\n     * \xe8\xbf\x94\xe5\x9b\x9e\xe5\x88\xb0\xe6\x8c\x87\xe5\xae\x9a Activity\n     */\n    fun backToSpecifyActivity(activityClass: Class<*>) {\n        val activityList = activityStack.toList().reversed()\n        activityList.forEach {\n            if (it.javaClass == activityClass) {\n                return\n            } else {\n                activityStack.pop()\n                it.finish()\n            }\n        }\n    }\n}'