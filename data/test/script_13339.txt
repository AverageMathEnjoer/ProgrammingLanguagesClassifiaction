b'package com.quyunshuo.androidbaseframemvvm.base\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.util.Log\nimport androidx.multidex.MultiDexApplication\nimport com.quyunshuo.androidbaseframemvvm.base.app.ActivityLifecycleCallbacksImpl\nimport com.quyunshuo.androidbaseframemvvm.base.app.LoadModuleProxy\nimport kotlinx.coroutines.*\nimport kotlin.system.measureTimeMillis\n\n/**\n * Application \xe5\x9f\xba\xe7\xb1\xbb\n *\n * @author Qu Yunshuo\n * @since 4/24/21 5:30 PM\n */\nopen class BaseApplication : MultiDexApplication() {\n\n    private val mCoroutineScope by lazy(mode = LazyThreadSafetyMode.NONE) { MainScope() }\n\n    private val mLoadModuleProxy by lazy(mode = LazyThreadSafetyMode.NONE) { LoadModuleProxy() }\n\n    companion object {\n        // \xe5\x85\xa8\xe5\xb1\x80Context\n        @SuppressLint("StaticFieldLeak")\n        lateinit var context: Context\n\n        @SuppressLint("StaticFieldLeak")\n        lateinit var application: BaseApplication\n    }\n\n    override fun attachBaseContext(base: Context) {\n        super.attachBaseContext(base)\n        context = base\n        application = this\n        mLoadModuleProxy.onAttachBaseContext(base)\n    }\n\n    override fun onCreate() {\n        super.onCreate()\n\n        // \xe5\x85\xa8\xe5\xb1\x80\xe7\x9b\x91\xe5\x90\xac Activity \xe7\x94\x9f\xe5\x91\xbd\xe5\x91\xa8\xe6\x9c\x9f\n        registerActivityLifecycleCallbacks(ActivityLifecycleCallbacksImpl())\n\n        mLoadModuleProxy.onCreate(this)\n\n        // \xe7\xad\x96\xe7\x95\xa5\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe7\xac\xac\xe4\xb8\x89\xe6\x96\xb9\xe4\xbe\x9d\xe8\xb5\x96\n        initDepends()\n    }\n\n    /**\n     * \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe7\xac\xac\xe4\xb8\x89\xe6\x96\xb9\xe4\xbe\x9d\xe8\xb5\x96\n     */\n    private fun initDepends() {\n        // \xe5\xbc\x80\xe5\x90\xaf\xe4\xb8\x80\xe4\xb8\xaa Default Coroutine \xe8\xbf\x9b\xe8\xa1\x8c\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe4\xb8\x8d\xe4\xbc\x9a\xe7\xab\x8b\xe5\x8d\xb3\xe4\xbd\xbf\xe7\x94\xa8\xe7\x9a\x84\xe7\xac\xac\xe4\xb8\x89\xe6\x96\xb9\n        mCoroutineScope.launch(Dispatchers.Default) {\n            mLoadModuleProxy.initByBackstage()\n        }\n\n        // \xe5\x89\x8d\xe5\x8f\xb0\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\n        val allTimeMillis = measureTimeMillis {\n            val depends = mLoadModuleProxy.initByFrontDesk()\n            var dependInfo: String\n            depends.forEach {\n                val dependTimeMillis = measureTimeMillis { dependInfo = it() }\n                Log.d("BaseApplication", "initDepends: $dependInfo : $dependTimeMillis ms")\n            }\n        }\n        Log.d("BaseApplication", "\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe5\xae\x8c\xe6\x88\x90 $allTimeMillis ms")\n    }\n\n    override fun onTerminate() {\n        super.onTerminate()\n        mLoadModuleProxy.onTerminate(this)\n        mCoroutineScope.cancel()\n    }\n}'