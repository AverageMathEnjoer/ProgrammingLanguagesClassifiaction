b'-- Time-stamp: <2009-05-06 13:54:34 simonmar>\n-----------------------------------------------------------------------------\n\nmodule Main where\n\nimport System.Environment\nimport Prog\nimport Board\nimport System.Random\n\nmain = do\n    args <- getArgs\n    let (version, n, depth, seed) = case args of \n            [v, n, d, s] -> (v,read n, read d, read s)\n            [v, n, d]    -> (v,read n, read d, 99999)\n            -- Provide a default behavior if run with no arguments (for testing):\n            []        -> ("monad", 15, 15, 99999)\n            _         -> error $ "Usage: main {nested, depth} n depth"\n    setStdGen (mkStdGen seed)\n    b <- randomBoard n\n    putStrLn $ showBoard b\n    case version of \n        "nested" -> do \n                putStrLn "Monad-par nested version:"\n                putStrLn $ solveNested depth b\n        "monad"  -> do \n                putStrLn "Monad-par based version:"\n                putStrLn $ solve depth b\n        _        -> error$ "unknown version: "++version\n'