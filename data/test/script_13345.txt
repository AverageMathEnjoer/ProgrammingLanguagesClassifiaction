b'// UVa12174 Shuffle\n// Rujia Liu\n#include<iostream>\n#include<vector>\nusing namespace std;\n\nconst int maxn = 100000 + 5;\nint s, n, x[maxn*3], cnt[maxn], ok[maxn*2];\n\nint main() {\n  int T;\n  cin >> T;\n  while(T--) {\n    cin >> s >> n;\n\n    // add s "-1" to the left/right of orriginal sequence\n    // so we don\'t have to worry about negative subscript or wrapping round\n    fill(x, x+n+2*s, -1);\n    for(int i = 0; i < n; i++) cin >> x[i+s];\n\n    int tot = 0; // how many different integers in current sliding window\n    fill(cnt+1, cnt+s+1, 0); // cnt[i] is the number of occurrence of i in the current sliding window\n    fill(ok, ok+n+s+1, 0);   // ok[i] = 1 iff the i-th sliding window didn\'t have duplicate numbers\n\n    // compute "ok" array\n    for(int i = 0; i < n+s+1; i++) {\n      if (tot == s) ok[i] = 1;              // complete window\n      if (i < s && tot == i) ok[i] = 1;     // incomplete windows on the left side\n      if (i > n && tot == n+s-i) ok[i] = 1; // incomplete windows on the right side\n\n      // update cnt and tot for the next sliding window\n      if (i == n+s) break; // no more sliding windows, so we stop here\n      if (x[i] != -1 && --cnt[x[i]]==0) tot--; // remove the first one\n      if (x[i+s] != -1 && cnt[x[i+s]]++==0) tot++; // add the next one\n    }\n\n    // check each possible answer\n    int ans = 0;\n    for(int i = 0; i < s; i++) {\n      int valid = 1;\n      for (int j = i; j < n+s+1; j += s)\n        if(!ok[j]) valid = 0;;\n      if(valid) ans++;\n    }\n    if(ans == n+1) ans = s; // special case\n    cout << ans << "\\n";\n  }\n  return 0;\n}\n'