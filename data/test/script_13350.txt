b'{-# LANGUAGE OverloadedStrings #-}\nmodule Main (main) where\n\nimport Control.Concurrent (forkIO, killThread)\nimport Control.Monad.Trans (liftIO)\nimport Happstack.Server.SimpleHTTP\n\nimport Rest.Driver.Happstack (apiToHandler\')\n\nimport Api (api)\nimport ApiTypes (ServerData (..), runBlogApi)\nimport Example (exampleBlog)\n\n-- | Run the server\nmain :: IO ()\nmain = do\n  -- Set up the server state\n  serverData <- exampleBlog\n\n  -- Start happstack\n  putStrLn "Starting happstack server on http://localhost:3000"\n  tid <- forkIO $ simpleHTTP (Conf 3000 Nothing Nothing 60 Nothing) (handle serverData)\n\n  -- Exit gracefully\n  waitForTermination\n  killThread tid\n\n-- | Request handler\nhandle :: ServerData -> ServerPartT IO Response\nhandle serverData = apiToHandler\' (liftIO . runBlogApi serverData) api\n\n'