b'package co.joebirch.composeplayground.window\n\nimport androidx.compose.material.Text\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.material.Button\nimport androidx.compose.material.TextButton\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.window.Dialog\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject DialogView : ComposableLayout {\n\n    @Composable\n    override fun build() {\n        val showingStandardPopup = remember { mutableStateOf(false) }\n\n        Box(\n            modifier = Modifier.fillMaxSize().padding(32.dp)\n        ) {\n            Column(modifier = Modifier.align(Alignment.Center)) {\n\n                Button(onClick = {\n                    showingStandardPopup.value = !showingStandardPopup.value\n                }) {\n                    Text(text = "Standard Popup")\n                }\n\n                Spacer(modifier = Modifier.height(16.dp))\n\n                if (showingStandardPopup.value) {\n                    Dialog(onDismissRequest = {\n                        showingStandardPopup.value = false\n                    }) {\n                        Column(\n                            modifier = Modifier.size(300.dp, 200.dp)\n                                .padding(16.dp)\n                                .background(Color.White)\n                                .align(Alignment.CenterHorizontally)\n                        ) {\n                            Text(text = "Jetpack Compose",\n                                modifier = Modifier.padding(16.dp)\n                                    .weight(1f))\n\n                            TextButton(\n                                onClick = {\n                                    showingStandardPopup.value = false\n                                },\n                                modifier = Modifier.align(Alignment.End)\n                                    .padding(16.dp)) {\n                                Text(text = "Dismiss")\n                            }\n                        }\n                    }\n                }\n            }\n\n\n        }\n    }\n}\n\n@Preview\n@Composable\nfun Dialog() {\n    val showingStandardPopup = remember { mutableStateOf(false) }\n    Column {\n\n        Button(onClick = {\n            showingStandardPopup.value = !showingStandardPopup.value\n        }) {\n            Text(text = "Standard Popup")\n        }\n\n        Spacer(modifier = Modifier.height(16.dp))\n\n        Dialog(onDismissRequest = {\n            showingStandardPopup.value = false\n        }) {\n            Text(text = "Jetpack Compose")\n        }\n    }\n}\n'