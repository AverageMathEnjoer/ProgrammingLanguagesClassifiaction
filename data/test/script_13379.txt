b'package icu.nullptr.twifucker.hook\n\nimport com.github.kyuubiran.ezxhelper.ClassUtils.loadClass\nimport com.github.kyuubiran.ezxhelper.HookFactory.`-Static`.createHook\nimport com.github.kyuubiran.ezxhelper.Log\nimport com.github.kyuubiran.ezxhelper.finders.FieldFinder\nimport com.github.kyuubiran.ezxhelper.finders.MethodFinder\nimport icu.nullptr.twifucker.afterMeasure\nimport icu.nullptr.twifucker.modulePrefs\n\nobject JsonProfileRecommendationModuleResponseHook : BaseHook() {\n    override val name: String\n        get() = "ProfileRecommendationModule"\n\n    override fun init() {\n        if (!modulePrefs.getBoolean("disable_recommended_users", false)) return\n\n        val jsonProfileRecommendationModuleResponseClass =\n            loadClass("com.twitter.model.json.people.JsonProfileRecommendationModuleResponse")\n        val jsonProfileRecommendationModuleResponseMapperClass =\n            loadClass("com.twitter.model.json.people.JsonProfileRecommendationModuleResponse\\$\\$JsonObjectMapper")\n\n\n        val recommendedUsersField =\n            FieldFinder.fromClass(jsonProfileRecommendationModuleResponseClass)\n                .filterByType(ArrayList::class.java).first()\n\n        MethodFinder.fromClass(jsonProfileRecommendationModuleResponseMapperClass)\n            .filterByName("_parse").filterByReturnType(jsonProfileRecommendationModuleResponseClass)\n            .first().createHook {\n                afterMeasure(name) { param ->\n                    param.result ?: return@afterMeasure\n                    recommendedUsersField.get(param.result).let { users ->\n                        if (users is ArrayList<*> && users.isNotEmpty()) {\n                            recommendedUsersField.set(param.result, null)\n                            Log.d("Removed recommended users")\n                        }\n                    }\n                }\n            }\n    }\n}'