b'// Copyright (c) 2022 Manuel Schneider\n\n#include "albert/logging.h"\n#include "albert/util/util.h"\n#include <QClipboard>\n#include <QDesktopServices>\n#include <QGuiApplication>\n#include <QProcess>\n#include <QUrl>\n\nstatic const char *website_url = "https://albertlauncher.github.io/";\nstatic const char *issue_tracker_url = "https://github.com/albertlauncher/albert/issues";\n\n\nvoid albert::openUrl(const QString &url)\n{\n    DEBG << QString("Opening URL \'%1\'").arg(url);\n    if (!QDesktopServices::openUrl(QUrl(url)))\n        WARN << "Failed opening URL" << url;\n}\n\nvoid albert::openWebsite()\n{\n    QDesktopServices::openUrl(QUrl(website_url));\n}\n\nvoid albert::openIssueTracker()\n{\n    QDesktopServices::openUrl(QUrl(issue_tracker_url));\n}\n\nvoid albert::setClipboardText(const QString &text)\n{\n    QGuiApplication::clipboard()->setText(text, QClipboard::Clipboard);\n    QGuiApplication::clipboard()->setText(text, QClipboard::Selection);\n}\n\nlong long albert::runDetachedProcess(const QStringList &commandline, const QString &working_dir)\n{\n    qint64 pid = 0;\n    if (!commandline.empty()) {\n        if (QProcess::startDetached(commandline[0], commandline.mid(1), working_dir, &pid))\n            INFO << "Detached process started successfully. PID:" << pid << commandline;\n        else\n            WARN << "Starting detached process failed." << commandline;\n    } else\n        WARN << "runDetachedProcess: commandline must not be empty!";\n    return pid;\n}\n'