b'/**\n * Copyright (C) 2020 Fernando Cejas Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.fernandocejas.sample.core.platform\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.fernandocejas.sample.R\nimport com.fernandocejas.sample.core.extension.inTransaction\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.android.synthetic.main.toolbar.*\n\n/**\n * Base Activity class with helper methods for handling fragment transactions and back button\n * events.\n *\n * @see AppCompatActivity\n */\n@AndroidEntryPoint\nabstract class BaseActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_layout)\n        setSupportActionBar(toolbar)\n        addFragment(savedInstanceState)\n    }\n\n    override fun onBackPressed() {\n        (supportFragmentManager.findFragmentById(R.id.fragmentContainer) as BaseFragment).onBackPressed()\n        super.onBackPressed()\n    }\n\n    private fun addFragment(savedInstanceState: Bundle?) =\n        savedInstanceState ?: supportFragmentManager.inTransaction {\n            add(\n                R.id.fragmentContainer,\n                fragment()\n            )\n        }\n\n    abstract fun fragment(): BaseFragment\n}\n'