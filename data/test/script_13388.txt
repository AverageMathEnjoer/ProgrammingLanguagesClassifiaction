b'package com.rd.animation.type;\n\nimport android.animation.IntEvaluator;\nimport android.animation.PropertyValuesHolder;\nimport androidx.annotation.NonNull;\nimport com.rd.animation.controller.ValueController;\n\npublic class ScaleDownAnimation extends ScaleAnimation {\n\n\tpublic ScaleDownAnimation(@NonNull ValueController.UpdateListener listener) {\n\t\tsuper(listener);\n\t}\n\n\t@NonNull\n\t@Override\n\tprotected PropertyValuesHolder createScalePropertyHolder(boolean isReverse) {\n\t\tString propertyName;\n\t\tint startRadiusValue;\n\t\tint endRadiusValue;\n\n\t\tif (isReverse) {\n\t\t\tpropertyName = ANIMATION_SCALE_REVERSE;\n\t\t\tstartRadiusValue = (int) (radius * scaleFactor);\n\t\t\tendRadiusValue = radius;\n\t\t} else {\n\t\t\tpropertyName = ANIMATION_SCALE;\n\t\t\tstartRadiusValue = radius;\n\t\t\tendRadiusValue = (int) (radius * scaleFactor);\n\t\t}\n\n\t\tPropertyValuesHolder holder = PropertyValuesHolder.ofInt(propertyName, startRadiusValue, endRadiusValue);\n\t\tholder.setEvaluator(new IntEvaluator());\n\n\t\treturn holder;\n\t}\n}\n\n'