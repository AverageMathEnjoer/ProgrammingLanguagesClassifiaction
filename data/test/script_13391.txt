b'module Main where\n\nimport Data.List\nimport Data.List.Split\nimport Control.Monad\n\n-- A definition that really should be in the standard\n-- library but seems to not be...\nforEachLine f = interact $ unlines . map f . lines\n\n\nmain = forEachLine $ show . parse\n\nparse = toString . sequence . fromString\n\nfromString = map (splitOn "|") . splitOn "."\ntoString = map (intercalate ".")\n\n{-\n  Conforms to the specification\n\n  "a.b.c.d"   -> ["a.b.c.d"]\n  "a|b.c.d"   -> ["a.c.d", "b.c.d"]\n  "a.b.c|d"   -> ["a.b.c", "a.b.d"]\n  "a|b.c|d.e" -> ["a.c.e", "a.d.e", "b.c.e", "b.d.e"]\n  "a|b|c.d"   -> ["a.d", "b.d", "c.d"]\n  "a.chequered|checked.pattern" -> ["a.chequered.pattern", "a.checked.pattern"]\n-}\n'