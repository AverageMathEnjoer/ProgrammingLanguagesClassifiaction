b'{-# LANGUAGE CPP #-}\n{-# OPTIONS_HADDOCK hide #-}\n\n#include "containers.h"\n\nmodule Utils.Containers.Internal.Coercions where\n\n#ifdef __GLASGOW_HASKELL__\nimport Data.Coerce\n#endif\n\ninfixl 8 .#\n#ifdef __GLASGOW_HASKELL__\n(.#) :: Coercible b a => (b -> c) -> (a -> b) -> a -> c\n(.#) f _ = coerce f\n#else\n(.#) :: (b -> c) -> (a -> b) -> a -> c\n(.#) = (.)\n#endif\n{-# INLINE (.#) #-}\n\ninfix 9 .^#\n\n-- | Coerce the second argument of a function. Conceptually,\n-- can be thought of as:\n--\n-- @\n--   (f .^# g) x y = f x (g y)\n-- @\n--\n-- However it is most useful when coercing the arguments to\n-- \'foldl\':\n--\n-- @\n--   foldl f b . fmap g = foldl (f .^# g) b\n-- @\n#ifdef __GLASGOW_HASKELL__\n(.^#) :: Coercible c b => (a -> c -> d) -> (b -> c) -> (a -> b -> d)\n(.^#) f _ = coerce f\n#else\n(.^#) :: (a -> c -> d) -> (b -> c) -> (a -> b -> d)\n(f .^# g) x y = f x (g y)\n#endif\n{-# INLINE (.^#) #-}\n'