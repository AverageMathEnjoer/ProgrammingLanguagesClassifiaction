b'#include <bits/stdc++.h>\nusing namespace std;\nint vis[20][200]; \nlong long dp[20][200];\n\n//nos such that their # of digits <= X and digit sum = S\nlong long count(int dig, int S){\n\t\n\tif(dig == 0 or S < 0) return 0;\n\tif(S == 0) return 1;\n\tif(dig == 1) return S <= 9;\n\t\n\tlong long &ans = dp[dig][S];\n\tif(vis[dig][S]) return ans;\n\tvis[dig][S] = 1;\n\tans = 0;\n\t\n\tfor(int i = 0; i <= 9; i++) ans += count(dig-1, S-i);\n\t\n\treturn ans;\n}\n\n//nos < X with digit sum S\nlong long go(long long X, int S){\n\tstring x = to_string(X);\n\tlong long ans = 0;\n\t\n\tint remLen = x.size()-1;\n\t\n\tfor(char c: x){\n\t\tint currDig = c-\'0\';\n\t\n\t\t//The first digit position where they differ is "i"\n\t\tfor(int i = 0; i < currDig; i++){\n\t\t\tans += count(remLen, S-i);\n\t\t}\n\t\t\n\t\t//Update the remaining lenght as well as the S\n\t\t//S is updated because currDig i.e x[i] is added to the prefix as\n\t\t//the next position where they differ will be i+1.\n\t\tremLen--;\n\t\tS -= currDig;\n\t}\n\t\n\treturn ans;\n\t\n}\n\nint main() {\n\tlong long L = 100, R = 1000, S = 13;\n\tcout << go(R+1, S)-go(L, S) << "<" << endl; \n\t// cout << count(3, 10) << " " << count(1, 8) << endl;\n\tint i, ans = 0;\n\tauto digsum = [](int x){\n\t\tint s = 0;\n\t\twhile(x) s+=x%10, x/=10;\n\t\treturn s;\n\t\t\n\t};\n\tfor(i=L; i<=R; i++) ans += digsum(i)==S;\n\tcout <<ans <<endl;\n\t\n\treturn 0;\n}\n'