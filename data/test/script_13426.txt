b'/*\n * Copyright (C) 2015 Naman Dwivedi\n *\n * Licensed under the GNU General Public License v3\n *\n * This is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n */\n\npackage com.naman14.timber.dataloaders;\n\nimport android.content.ContentResolver;\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.net.Uri;\nimport android.provider.MediaStore;\n\nimport com.naman14.timber.models.Song;\nimport com.naman14.timber.utils.PreferencesUtility;\n\nimport java.util.ArrayList;\n\npublic class AlbumSongLoader {\n\n    private static final long[] sEmptyList = new long[0];\n\n    public static ArrayList<Song> getSongsForAlbum(Context context, long albumID) {\n\n        Cursor cursor = makeAlbumSongCursor(context, albumID);\n        ArrayList arrayList = new ArrayList();\n        if ((cursor != null) && (cursor.moveToFirst()))\n            do {\n                long id = cursor.getLong(0);\n                String title = cursor.getString(1);\n                String artist = cursor.getString(2);\n                String album = cursor.getString(3);\n                int duration = cursor.getInt(4);\n                int trackNumber = cursor.getInt(5);\n                /*This fixes bug where some track numbers displayed as 100 or 200*/\n                while (trackNumber >= 1000) {\n                    trackNumber -= 1000; //When error occurs the track numbers have an extra 1000 or 2000 added, so decrease till normal.\n                }\n                long artistId = cursor.getInt(6);\n                long albumId = albumID;\n\n                arrayList.add(new Song(id, albumId, artistId, title, artist, album, duration, trackNumber));\n            }\n            while (cursor.moveToNext());\n        if (cursor != null)\n            cursor.close();\n        return arrayList;\n    }\n\n    public static Cursor makeAlbumSongCursor(Context context, long albumID) {\n        ContentResolver contentResolver = context.getContentResolver();\n        final String albumSongSortOrder = PreferencesUtility.getInstance(context).getAlbumSongSortOrder();\n        Uri uri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\n        String string = "is_music=1 AND title != \'\' AND album_id=" + albumID;\n        Cursor cursor = contentResolver.query(uri, new String[]{"_id", "title", "artist", "album", "duration", "track", "artist_id"}, string, null, albumSongSortOrder);\n        return cursor;\n    }\n}'