b'package com.kyleduo.switchbutton.demo;\n\nimport android.graphics.RectF;\nimport android.os.Bundle;\nimport android.text.Spannable;\nimport android.text.SpannableString;\nimport android.text.TextUtils;\nimport android.text.style.ImageSpan;\nimport android.view.View;\nimport android.widget.AdapterView;\nimport android.widget.ArrayAdapter;\nimport android.widget.ListView;\n\nimport com.kyleduo.switchbutton.SwitchButton;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class StyleInCodeActivity extends AppCompatActivity implements AdapterView.OnItemClickListener {\n\n    private SwitchButton mChangeSb;\n    private boolean mThumbMarginFlag, mThumbSizeFlag, mThumbRadiusFlag, mBackRadiusFlag, mBackMeasureRatioFlag, mAnimationDurationFlag;\n    private String[] opts = new String[]{\n            "setThumbColorRes/setThumbColor",\n            "setThumbDrawableRes/setThumbDrawable",\n            "setBackColorRes/setBackColor",\n            "setBackDrawableRes/setBackDrawable",\n            "setTintColor",\n            "setThumbMargin",\n            "setThumbSize",\n            "setThumbRadius (color-mode only)",\n            "setBackRadius (color-mode only)",\n            "setFadeBack",\n            "setThumbRangeRatio",\n            "setAnimationDuration",\n            "setText",\n            "setDrawDebugRect",\n    };\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_style_in_code);\n\n        mChangeSb = (SwitchButton) findViewById(R.id.sb_code);\n        ListView optLv = (ListView) findViewById(R.id.opt_lv);\n\n        optLv.setAdapter(new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, android.R.id.text1, opts));\n        optLv.setOnItemClickListener(this);\n    }\n\n    @Override\n    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n        switch (position) {\n            case 0:\n                mChangeSb.setThumbColorRes(R.color.custom_thumb_color);\n                break;\n            case 1:\n                mChangeSb.setThumbDrawableRes(R.drawable.miui_thumb_drawable);\n                break;\n            case 2:\n                mChangeSb.setBackColorRes(R.color.custom_back_color);\n                break;\n            case 3:\n                mChangeSb.setBackDrawableRes(R.drawable.miui_back_drawable);\n                break;\n            case 4:\n                mChangeSb.setTintColor(0x9F6C66);\n                break;\n            case 5: {\n                float margin = 10 * getResources().getDisplayMetrics().density;\n                float defaultMargin = SwitchButton.DEFAULT_THUMB_MARGIN_DP * getResources().getDisplayMetrics().density;\n                mChangeSb.setThumbMargin(mThumbMarginFlag ? new RectF(defaultMargin, defaultMargin, defaultMargin, defaultMargin) : new RectF(margin, margin, margin, margin));\n                mThumbMarginFlag = !mThumbMarginFlag;\n            }\n            break;\n            case 6: {\n                int size = (int) (30 * getResources().getDisplayMetrics().density);\n                mChangeSb.setThumbSize(size, size);\n                mThumbSizeFlag = !mThumbSizeFlag;\n            }\n            break;\n            case 7: {\n                float r = 2 * getResources().getDisplayMetrics().density;\n                mChangeSb.setThumbRadius(mThumbRadiusFlag ? Math.min(mChangeSb.getThumbWidth(), mChangeSb.getThumbHeight()) / 2f : r);\n                mThumbRadiusFlag = !mThumbRadiusFlag;\n            }\n            break;\n            case 8: {\n                float r = 2 * getResources().getDisplayMetrics().density;\n                mChangeSb.setBackRadius(mBackRadiusFlag ? Math.min(mChangeSb.getBackSizeF().x, mChangeSb.getBackSizeF().y) / 2f : r);\n                mBackRadiusFlag = !mBackRadiusFlag;\n            }\n            break;\n            case 9:\n                mChangeSb.setFadeBack(!mChangeSb.isFadeBack());\n                break;\n            case 10:\n                mChangeSb.setThumbRangeRatio(mBackMeasureRatioFlag ? SwitchButton.DEFAULT_THUMB_RANGE_RATIO : 4f);\n                mBackMeasureRatioFlag = !mBackMeasureRatioFlag;\n                break;\n            case 11:\n                mChangeSb.setAnimationDuration(mAnimationDurationFlag ? SwitchButton.DEFAULT_ANIMATION_DURATION : 1000);\n                mAnimationDurationFlag = !mAnimationDurationFlag;\n                break;\n            case 12: {\n                CharSequence on = mChangeSb.getTextOn();\n                CharSequence off = mChangeSb.getTextOff();\n                if (TextUtils.isEmpty(on) || TextUtils.isEmpty(off)) {\n                    SpannableString ss = new SpannableString("[icon]");\n                    ImageSpan span = new ImageSpan(this, R.drawable.icon_blog_small, ImageSpan.ALIGN_BOTTOM);\n                    ss.setSpan(span, 0, ss.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n                    mChangeSb.setText(ss, "OFF");\n                    mChangeSb.setTextExtra((int) (getResources().getDisplayMetrics().density * 4));\n                } else {\n                    mChangeSb.setText("", "");\n                }\n            }\n            break;\n            case 13:\n                mChangeSb.setDrawDebugRect(!mChangeSb.isDrawDebugRect());\n                break;\n            default:\n                break;\n        }\n    }\n}\n'