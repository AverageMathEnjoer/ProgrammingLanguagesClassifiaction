b'// UVa11181 Probability|Given\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\nconst int maxn = 20 + 5;\nint n, r, buy[maxn];\ndouble P[maxn], sum[maxn];\n\n// depth, current number of 1, and product of probs\nvoid dfs(int d, int c, double prob) {\n  if(c > r || d - c > n - r) return; // too many 1/0\n  if(d == n) {\n    sum[n] += prob;\n    for(int i = 0; i < n; i++) if(buy[i])\n      sum[i] += prob;\n    return;\n  }\n  buy[d] = 0;\n  dfs(d+1, c, prob*(1-P[d]));\n  buy[d] = 1;\n  dfs(d+1, c+1, prob*P[d]);\n}\n\nint main() {\n  int kase = 0;\n  while(scanf("%d%d", &n, &r) == 2 && n) {\n    for(int i = 0; i < n; i++) scanf("%lf", &P[i]);\n    memset(sum, 0, sizeof(sum));\n    dfs(0, 0, 1.0);\n    printf("Case %d:\\n", ++kase);\n    for(int i = 0; i < n; i++)\n      printf("%.6lf\\n", sum[i] / sum[n]);\n  }\n  return 0;\n}\n'