b'#include <bits/stdc++.h>\nusing namespace std;\n#define gc getchar_unlocked\n#define fo(i,n) for(i=0;i<n;i++)\n#define Fo(i,k,n) for(i=k;i<n;i++)\n#define ll long long\n#define si(x)\tscanf("%d",&x)\n#define sl(x)\tscanf("%I64d",&x)\n#define ss(s)\tscanf("%s",s)\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\n#define all(x) x.begin(), x.end()\n#define clr(x) memset(x, 0, sizeof(x))\n#define sortall(x) sort(all(x))\n#define tr(it, a) for(auto it = a.begin(); it != a.end(); it++)\n#define PI 3.1415926535897932384626\ntypedef pair<int, int>\tpii;\ntypedef pair<ll, ll>\tpll;\ntypedef vector<int>\t\tvi;\ntypedef vector<ll>\t\tvl;\ntypedef vector<pii>\t\tvpii;\ntypedef vector<pll>\t\tvpll;\ntypedef vector<vi>\t\tvvi;\ntypedef vector<vl>\t\tvvl;\nconst int mod = 1000000007;\nconst int N = 2e6;\nvi g[N];\nint pos_;\nll a[N], MX;\nint dp[N], b1[N], b2[N], p1[N], p2[N], from[N];\nint L, R;\n//http://codeforces.com/problemset/problem/474/E\n//pos_ is the \'i\' in a[i] while adding a[i] to BIT.\n//p1[pos] represents what position in array gives the max till pos.\nvoid add1(int pos, int val){\n\twhile(pos < N){\n\t\tif (b1[pos] <= val) b1[pos] = val, p1[pos] = pos_;\n\t\tpos += pos&-pos;\n\t}\t\n}\nvoid add2(int pos, int val){\n\tpos = MX-pos+1;\n\twhile(pos < N){\n\t\tif (b2[pos] <= val) b2[pos] = val, p2[pos] = pos_;\n\t\tpos += pos&-pos;\n\t}\t\n}\nint get1(int pos){\n\tint ans = -1;\n\twhile(pos){\n\t\tif (b1[pos] > ans) ans = b1[pos], L = p1[pos];\n\t\tans = max(b1[pos], ans);\n\t\tpos -= pos&-pos;\n\t}\t\n\treturn ans;\n}\nint get2(int pos){\n\tpos = MX-pos+1;\n\tint ans = -1;\n\twhile(pos){\n\t\tif (b2[pos] > ans) ans = b2[pos], R = p2[pos];\n\t\tpos -= pos&-pos;\n\t}\t\n\treturn ans;\n}\nset<ll> sett;\nmap<ll, int> mep;\nmap<int, ll> at;\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tint i,n,k,j,d;\n\tcin >> n >> d;\n\tfo(i, n){\n\t\tcin>>a[i];\n\t\tsett.insert(a[i]);\n\t}\n\tint pos = 0;\n\ttr(it, sett) mep[*it] = ++pos, at[pos] = *it;\n\ti = 0;\n\tMX = mep[*sett.rbegin()];\n\tpos_ = 1;\n\tfo(i, n)\n\t\tadd1(mep[a[i]], 1),\n\t\tadd2(mep[a[i]], 1);\n\tFo(i, 1, n){\n\t\tpos_ = i+1; L = R = 0;\n\t\tauto it = sett.lower_bound(a[i]-d);\n\t\tint left = 1, right = 1;\n\t\tif (*it != a[i]-d){\n\t\t\tif (it == sett.begin()) left = 0; \n\t\t\telse it--;\t\n\t\t}\n\t\tif (left) left = get1( mep[*it]);\n\t\tit = sett.lower_bound(a[i]+d);\n\t\tif (it == sett.end()) right = 0;\n\t\tif (right) right = get2(mep[*it]);\n\t\tint cur = max(left, right);\n\t\t\n\t\tif (cur>-1){\n\t\t\tfrom[i+1] = cur==left?L:R;\n\t\t\tcur++;\n\t\t\tdp[i] = cur;\n\t\t\tadd1(mep[a[i]], cur);\n\t\t\tadd2(mep[a[i]], cur);\n\t\t}\n\t}\n\t\n\tint cur = n, res = -1;\n\tfo(i, n) if (res < dp[i]) res = dp[i], cur = i+1;\n\tcout<<dp[cur-1]<<endl;\n\tfrom[1] = 0;\n\tvi ans;\n\twhile(cur){\n\t\tans.pb(cur);\n\t\tcur = from[cur];\n\t}\n\tfo(i, ans.size()) cout<<ans[(int)ans.size()-i-1]<<" ";\n\n\treturn 0;\n} \n\n'