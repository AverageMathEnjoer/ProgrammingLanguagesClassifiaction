b'{-# LANGUAGE OverloadedStrings #-}\n{-# OPTIONS_GHC -fno-warn-unused-imports#-}\nmodule Restexample.Client.User where\nimport Rest.Client.Internal\nimport qualified Rest.Types.Void\nimport qualified Rest.Types.Container\nimport qualified Type.UserInfo\nimport qualified Type.UserSignupError\nimport qualified Type.User\n\ntype Identifier = String\n\nreadId :: Identifier -> [String]\nreadId x = ["name", showUrl x]\n\nlist ::\n       ApiStateC m =>\n       [(String, String)] ->\n         m (ApiResponse Rest.Types.Void.Void\n              (Rest.Types.Container.List (Type.UserInfo.UserInfo)))\nlist pList\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/plain")]\n        request = makeReq "GET" "v1.0.0" [["user"]] pList rHeaders ""\n      in doRequest fromJSON fromJSON request\n\ncreate ::\n         ApiStateC m =>\n         Type.User.User ->\n           m (ApiResponse Type.UserSignupError.UserSignupError\n                Type.UserInfo.UserInfo)\ncreate input\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/json")]\n        request\n          = makeReq "POST" "v1.0.0" [["user"]] [] rHeaders (toJSON input)\n      in doRequest fromJSON fromJSON request'