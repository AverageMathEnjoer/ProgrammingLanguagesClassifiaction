b'\xef\xbb\xbfusing System.ComponentModel;\n\nnamespace DMSkin.Core\n{\n    public class ViewModelBase : INotifyPropertyChanged\n    {\n        #region \xe6\x98\xaf\xe5\x90\xa6\xe9\x80\x89\xe4\xb8\xad\n        private bool isChecked;\n        /// <summary>\n        /// \xe6\x98\xaf\xe5\x90\xa6\xe9\x80\x89\xe4\xb8\xad\n        /// </summary>\n        public bool IsChecked\n        {\n            get\n            {\n                return isChecked;\n            }\n            set\n            {\n                isChecked = value;\n                OnPropertyChanged(nameof(IsChecked));\n            }\n        }\n\n        #endregion\n\n        #region UI\xe6\x9b\xb4\xe6\x96\xb0\xe6\x8e\xa5\xe5\x8f\xa3\n        public event PropertyChangedEventHandler PropertyChanged;\n        protected virtual void OnPropertyChanged(string propertyName = null)\n        {\n            if (PropertyChanged != null)\n                PropertyChanged.Invoke(this, new PropertyChangedEventArgs(propertyName));\n        }\n        #endregion\n\n        #region \xe6\x98\xaf\xe5\x90\xa6\xe6\xad\xa3\xe5\x9c\xa8\xe5\x8a\xa0\xe8\xbd\xbd\n        private bool isLoad;\n\n        /// <summary>\n        /// \xe6\x98\xaf\xe5\x90\xa6\xe5\x8a\xa0\xe8\xbd\xbd\n        /// </summary>\n        public bool IsLoad\n        {\n            get { return isLoad; }\n            set\n            {\n                isLoad = value;\n                OnPropertyChanged(nameof(IsLoad));\n            }\n        }\n        #endregion\n\n        #region \xe6\x98\xaf\xe5\x90\xa6\xe9\x9c\x80\xe8\xa6\x81\xe5\x88\xb7\xe6\x96\xb0\n        private bool update;\n        /// <summary>\n        /// \xe5\x88\xb7\xe6\x96\xb0\n        /// </summary>\n        public bool Update\n        {\n            get { return update; }\n            set\n            {\n                update = value;\n                OnPropertyChanged(nameof(Update));\n            }\n        }\n        #endregion\n    }\n}\n'