b'package com.codeest.geeknews.presenter.wechat;\n\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.base.RxPresenter;\nimport com.codeest.geeknews.component.RxBus;\nimport com.codeest.geeknews.model.DataManager;\nimport com.codeest.geeknews.model.bean.WXItemBean;\nimport com.codeest.geeknews.model.event.SearchEvent;\nimport com.codeest.geeknews.model.http.response.WXHttpResponse;\nimport com.codeest.geeknews.base.contract.wechat.WechatContract;\nimport com.codeest.geeknews.util.RxUtil;\nimport com.codeest.geeknews.widget.CommonSubscriber;\n\nimport java.util.List;\n\nimport javax.inject.Inject;\n\nimport io.reactivex.Flowable;\nimport io.reactivex.annotations.NonNull;\nimport io.reactivex.functions.Function;\nimport io.reactivex.functions.Predicate;\n\n/**\n * Created by codeest on 16/8/29.\n */\n\npublic class WechatPresenter extends RxPresenter<WechatContract.View> implements WechatContract.Presenter {\n\n    private static final int NUM_OF_PAGE = 20;\n\n    private int currentPage = 1;\n    private String queryStr = null;\n\n    private DataManager mDataManager;\n\n    @Inject\n    public WechatPresenter(DataManager mDataManager) {\n        this.mDataManager = mDataManager;\n    }\n\n    @Override\n    public void attachView(WechatContract.View view) {\n        super.attachView(view);\n        registerEvent();\n    }\n\n    private void registerEvent() {\n        addSubscribe(RxBus.getDefault().toFlowable(SearchEvent.class)\n                .compose(RxUtil.<SearchEvent>rxSchedulerHelper())\n                .filter(new Predicate<SearchEvent>() {\n                    @Override\n                    public boolean test(@NonNull SearchEvent searchEvent) throws Exception {\n                        return searchEvent.getType() == Constants.TYPE_WECHAT;\n                    }\n                })\n                .map(new Function<SearchEvent, String>() {\n                    @Override\n                    public String apply(SearchEvent searchEvent) {\n                        return searchEvent.getQuery();\n                    }\n                })\n                .subscribeWith(new CommonSubscriber<String>(mView, "\xe6\x90\x9c\xe7\xb4\xa2\xe5\xa4\xb1\xe8\xb4\xa5\xe3\x83\xbd(\xe2\x89\xa7\xd0\x94\xe2\x89\xa6)\xe3\x83\x8e") {\n                    @Override\n                    public void onNext(String s) {\n                        queryStr = s;\n                        getSearchWechatData(s);\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        super.onError(e);\n                        registerEvent();\n                    }\n                })\n        );\n    }\n\n    @Override\n    public void getWechatData() {\n        queryStr = null;\n        currentPage = 1;\n        addSubscribe(mDataManager.fetchWechatListInfo(NUM_OF_PAGE,currentPage)\n                .compose(RxUtil.<WXHttpResponse<List<WXItemBean>>>rxSchedulerHelper())\n                .compose(RxUtil.<List<WXItemBean>>handleWXResult())\n                .subscribeWith(new CommonSubscriber<List<WXItemBean>>(mView) {\n                    @Override\n                    public void onNext(List<WXItemBean> wxItemBeen) {\n                        mView.showContent(wxItemBeen);\n                    }\n                })\n        );\n    }\n\n    @Override\n    public void getMoreWechatData() {\n        Flowable<WXHttpResponse<List<WXItemBean>>> observable;\n        if (queryStr != null) {\n            observable = mDataManager.fetchWechatSearchListInfo(NUM_OF_PAGE,++currentPage,queryStr);\n        } else {\n            observable = mDataManager.fetchWechatListInfo(NUM_OF_PAGE,++currentPage);\n        }\n        addSubscribe(observable\n                .compose(RxUtil.<WXHttpResponse<List<WXItemBean>>>rxSchedulerHelper())\n                .compose(RxUtil.<List<WXItemBean>>handleWXResult())\n                .subscribeWith(new CommonSubscriber<List<WXItemBean>>(mView, "\xe6\xb2\xa1\xe6\x9c\x89\xe6\x9b\xb4\xe5\xa4\x9a\xe4\xba\x86\xe3\x83\xbd(\xe2\x89\xa7\xd0\x94\xe2\x89\xa6)\xe3\x83\x8e") {\n                    @Override\n                    public void onNext(List<WXItemBean> wxItemBeen) {\n                        mView.showMoreContent(wxItemBeen);\n                    }\n                })\n        );\n    }\n\n    private void getSearchWechatData(String query) {\n        currentPage = 1;\n        addSubscribe(mDataManager.fetchWechatSearchListInfo(NUM_OF_PAGE,currentPage,query)\n                .compose(RxUtil.<WXHttpResponse<List<WXItemBean>>>rxSchedulerHelper())\n                .compose(RxUtil.<List<WXItemBean>>handleWXResult())\n                .subscribeWith(new CommonSubscriber<List<WXItemBean>>(mView) {\n                    @Override\n                    public void onNext(List<WXItemBean> wxItemBeen) {\n                        mView.showContent(wxItemBeen);\n                    }\n                })\n        );\n    }\n}\n'