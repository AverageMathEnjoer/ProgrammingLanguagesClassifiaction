b'package effectivejava.chapter5.item31;\nimport java.util.*;\n\n// Using a recursive type bound with wildcards (Page 143)\npublic class RecursiveTypeBound {\n    public static <E extends Comparable<? super E>> E max(\n        List<? extends E> list) {\n        if (list.isEmpty())\n            throw new IllegalArgumentException("Empty list");\n\n        E result = null;\n        for (E e : list)\n            if (result == null || e.compareTo(result) > 0)\n                result = e;\n\n        return result;\n    }\n\n    public static void main(String[] args) {\n        List<String> argList = Arrays.asList(args);\n        System.out.println(max(argList));\n    }\n}'