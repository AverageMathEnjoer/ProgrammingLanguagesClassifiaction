b'package com.bennyhuo.kotlin.coroutines\n\nimport kotlinx.coroutines.runBlocking\n\n/**\n * Created by benny.\n */\nfun a0() {\n    \n}\n\nsuspend fun a1() {\n    \n}\n\nfun b0(): Int {\n    TODO()\n}\n\nsuspend fun b1(): Int {\n    TODO()\n}\n\nfun Int.c0(block: (Int) -> String): String {\n    TODO()\n}\n\nfun c00(i: Int, block: (Int) -> String): String {\n    TODO()\n}\n\nsuspend fun Int.c1(block: (Int) -> String): String {\n    TODO()\n}\n\nsuspend fun c11(i: Int, block: (Int) -> String): String {\n    TODO()\n}\n\nfun x(block: suspend Int.((Int) -> String) -> String) {\n    runBlocking { \n        block(1) {\n            it.toString()\n        }\n    }\n}\n\nfun Int.println() {\n    \n}\n\nfun main() {\n    val typeA0 = ::a0 // () -> Unit\n    val typeA1 = ::a1 // suspend () -> Unit\n    \n    val typeB0 = ::b0 // () -> Int\n    val typeB1 = ::b1 // suspend () -> Int\n    \n    val typeC0 = Int::c0 // Int.((Int) -> String) -> String\n    val typeC0x = 1::c0 // ((Int) -> String) -> String\n    val typeC00 = ::c00 // (Int, (Int) -> String) -> String\n    val typeC1 = Int::c1 // suspend Int.((Int) -> String) -> String\n    val typeC11 = ::c11 // suspend (Int, (Int) -> String) -> String\n    \n    x(typeC1)\n    x(typeC11)\n    \n    listOf(1,2,3).forEach(Int::println)\n    listOf(1,2,3).forEach(::println)\n}'