b'package com.zzg.mybatis.generator.controller;\n\nimport com.jcraft.jsch.Session;\nimport com.zzg.mybatis.generator.model.DatabaseConfig;\nimport com.zzg.mybatis.generator.util.DbUtil;\nimport com.zzg.mybatis.generator.view.AlertUtil;\nimport javafx.concurrent.Task;\nimport javafx.fxml.FXML;\nimport javafx.scene.control.TabPane;\nimport javafx.scene.layout.AnchorPane;\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.EOFException;\nimport java.net.URL;\nimport java.util.ResourceBundle;\n\n/**\n * Project: mybatis-generator-gui\n *\n * @author github.com/slankka on 2019/1/22.\n */\npublic class TabPaneController extends BaseFXController {\n    private static Logger logger = LoggerFactory.getLogger(TabPaneController.class);\n\n    @FXML\n    private TabPane tabPane;\n\n    @FXML\n    private DbConnectionController tabControlAController;\n\n    @FXML\n    private OverSshController tabControlBController;\n\n    private boolean isOverssh;\n\n    private MainUIController mainUIController;\n\n    @Override\n    public void initialize(URL location, ResourceBundle resources) {\n        tabPane.setPrefHeight(((AnchorPane) tabPane.getSelectionModel().getSelectedItem().getContent()).getPrefHeight());\n        tabPane.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {\n            isOverssh = observable.getValue().getText().equals("SSH");\n            tabPane.prefHeightProperty().bind(((AnchorPane) tabPane.getSelectionModel().getSelectedItem().getContent()).prefHeightProperty());\n            getDialogStage().close();\n            getDialogStage().show();\n        });\n    }\n\n    public void setMainUIController(MainUIController mainUIController) {\n        this.mainUIController = mainUIController;\n        this.tabControlAController.setMainUIController(mainUIController);\n        this.tabControlAController.setTabPaneController(this);\n        this.tabControlBController.setMainUIController(mainUIController);\n        this.tabControlBController.setTabPaneController(this);\n    }\n\n    public void setConfig(DatabaseConfig selectedConfig) {\n        tabControlAController.setConfig(selectedConfig);\n        tabControlBController.setDbConnectionConfig(selectedConfig);\n        if (StringUtils.isNoneBlank(\n                selectedConfig.getSshHost(),\n                selectedConfig.getSshPassword(),\n                selectedConfig.getSshPort(),\n                selectedConfig.getSshUser(),\n                selectedConfig.getLport())) {\n            logger.info("Found SSH based Config");\n            tabPane.getSelectionModel().selectLast();\n        }\n    }\n\n    private DatabaseConfig extractConfigForUI() {\n        if (isOverssh) {\n            return tabControlBController.extractConfigFromUi();\n        } else {\n            return tabControlAController.extractConfigForUI();\n        }\n    }\n\n    @FXML\n    void saveConnection() {\n        if (isOverssh) {\n            tabControlBController.saveConfig();\n        } else {\n            tabControlAController.saveConnection();\n        }\n    }\n\n\n    @FXML\n    void testConnection() {\n        DatabaseConfig config = extractConfigForUI();\n        if (config == null) {\n            return;\n        }\n        if (StringUtils.isAnyEmpty(config.getName(),\n                config.getHost(),\n                config.getPort(),\n                config.getUsername(),\n                config.getEncoding(),\n                config.getDbType(),\n                config.getSchema())) {\n            AlertUtil.showWarnAlert("\xe5\xaf\x86\xe7\xa0\x81\xe4\xbb\xa5\xe5\xa4\x96\xe5\x85\xb6\xe4\xbb\x96\xe5\xad\x97\xe6\xae\xb5\xe5\xbf\x85\xe5\xa1\xab");\n            return;\n        }\n        Session sshSession = DbUtil.getSSHSession(config);\n        if (isOverssh && sshSession != null) {\n            PictureProcessStateController pictureProcessState = new PictureProcessStateController();\n            pictureProcessState.setDialogStage(getDialogStage());\n            pictureProcessState.startPlay();\n            //\xe5\xa6\x82\xe6\x9e\x9c\xe4\xb8\x8d\xe7\x94\xa8\xe5\xbc\x82\xe6\xad\xa5\xef\xbc\x8c\xe5\x88\x99\xe8\xa7\x86\xe5\x9b\xbe\xe4\xbc\x9a\xe7\xad\x89\xe6\x96\xb9\xe6\xb3\x95\xe8\xbf\x94\xe5\x9b\x9e\xe6\x89\x8d\xe4\xbc\x9a\xe6\x98\xbe\xe7\xa4\xba\n            Task task = new Task<Void>() {\n                @Override\n                protected Void call() throws Exception {\n                    DbUtil.engagePortForwarding(sshSession, config);\n                    DbUtil.getConnection(config);\n                    return null;\n                }\n            };\n            task.setOnFailed(event -> {\n                Throwable e = task.getException();\n                logger.error("task Failed", e);\n                if (e instanceof RuntimeException) {\n                    if (e.getMessage().equals("Address already in use: JVM_Bind")) {\n                        tabControlBController.setLPortLabelText(config.getLport() + "\xe5\xb7\xb2\xe7\xbb\x8f\xe8\xa2\xab\xe5\x8d\xa0\xe7\x94\xa8\xef\xbc\x8c\xe8\xaf\xb7\xe6\x8d\xa2\xe5\x85\xb6\xe4\xbb\x96\xe7\xab\xaf\xe5\x8f\xa3");\n                    }\n                    //\xe7\xab\xaf\xe5\x8f\xa3\xe8\xbd\xac\xe5\x8f\x91\xe4\xb8\x80\xe5\xae\x9a\xe4\xb8\x8d\xe6\x88\x90\xe5\x8a\x9f\xef\xbc\x8c\xe5\xaf\xbc\xe8\x87\xb4\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\xe8\xbf\x9e\xe6\x8e\xa5\xe4\xb8\x8d\xe4\xb8\x8a\n                    pictureProcessState.playFailState("\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xa4\xb1\xe8\xb4\xa5:" + e.getMessage(), true);\n                    return;\n                }\n\n                if (e.getCause() instanceof EOFException) {\n                    pictureProcessState.playFailState("\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xa4\xb1\xe8\xb4\xa5, \xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\xe7\x9a\x84\xe4\xb8\xbb\xe6\x9c\xba\xe5\x90\x8d\xef\xbc\x8c\xe5\xb9\xb6\xe4\xb8\x94\xe6\xa3\x80\xe6\x9f\xa5\xe7\xab\xaf\xe5\x8f\xa3\xe5\x92\x8c\xe7\x9b\xae\xe6\xa0\x87\xe7\xab\xaf\xe5\x8f\xa3\xe6\x98\xaf\xe5\x90\xa6\xe4\xb8\x80\xe8\x87\xb4", true);\n                    //\xe7\xab\xaf\xe5\x8f\xa3\xe8\xbd\xac\xe5\x8f\x91\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x88\x90\xe5\x8a\x9f\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\xe8\xbf\x9e\xe6\x8e\xa5\xe4\xb8\x8d\xe4\xb8\x8a\xef\xbc\x8c\xe6\x95\x85\xe9\x9c\x80\xe8\xa6\x81\xe9\x87\x8a\xe6\x94\xbe\xe8\xbf\x9e\xe6\x8e\xa5\n                    DbUtil.shutdownPortForwarding(sshSession);\n                    return;\n                }\n                pictureProcessState.playFailState("\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xa4\xb1\xe8\xb4\xa5:" + e.getMessage(), true);\n                //\xe5\x8f\xaf\xe8\x83\xbd\xe6\x98\xaf\xe7\xab\xaf\xe5\x8f\xa3\xe8\xbd\xac\xe5\x8f\x91\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x88\x90\xe5\x8a\x9f\xef\xbc\x8c\xe4\xbd\x86\xe6\x98\xaf\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\xe8\xbf\x9e\xe6\x8e\xa5\xe4\xb8\x8d\xe4\xb8\x8a\xef\xbc\x8c\xe6\x95\x85\xe9\x9c\x80\xe8\xa6\x81\xe9\x87\x8a\xe6\x94\xbe\xe8\xbf\x9e\xe6\x8e\xa5\n                DbUtil.shutdownPortForwarding(sshSession);\n            });\n            task.setOnSucceeded(event -> {\n                try {\n                    pictureProcessState.playSuccessState("\xe8\xbf\x9e\xe6\x8e\xa5\xe6\x88\x90\xe5\x8a\x9f", true);\n                    DbUtil.shutdownPortForwarding(sshSession);\n                    tabControlBController.recoverNotice();\n                } catch (Exception e) {\n                    logger.error("", e);\n                }\n            });\n            new Thread(task).start();\n        } else {\n            try {\n                DbUtil.getConnection(config);\n                AlertUtil.showInfoAlert("\xe8\xbf\x9e\xe6\x8e\xa5\xe6\x88\x90\xe5\x8a\x9f");\n            } catch (RuntimeException e) {\n                logger.error("", e);\n                AlertUtil.showWarnAlert("\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xa4\xb1\xe8\xb4\xa5, " + e.getMessage());\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n                AlertUtil.showWarnAlert("\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xa4\xb1\xe8\xb4\xa5");\n            }\n        }\n    }\n\n    @FXML\n    void cancel() {\n        getDialogStage().close();\n    }\n}\n'