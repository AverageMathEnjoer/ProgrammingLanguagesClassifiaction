b'module DeploySpec where\n\nimport Cachix.Types.Deploy\nimport Data.Aeson (eitherDecode, encode)\nimport qualified Data.ByteString.Lazy as BSL\nimport Data.HashMap.Strict\nimport Protolude\nimport Test.Hspec\nimport qualified Prelude\n\nspec :: Spec\nspec =\n  describe "Deploy" $ do\n    it "parses a simple deploy" testSimple\n    it "parses rollbackScript" testRollback\n\ntest :: BSL.ByteString -> Expectation\ntest input = (encode <$> (eitherDecode input :: Either Prelude.String Deploy)) `shouldBe` Right input\n\ntestSimple :: Expectation\ntestSimple = do\n  let input = "{\\"agents\\":{\\"myagent\\":\\"/nix/store/blabla\\"}}"\n  test input\n\ntestRollback :: Expectation\ntestRollback = do\n  let input = "{\\"agents\\":{\\"myagent\\":\\"/nix/store/blabla\\"},\\"rollbackScript\\":{\\"x86_64-linux\\":\\"/nix/store/rollback.sh\\"}}"\n  test input\n'