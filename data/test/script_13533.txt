b'package org.sang.service;\n\nimport org.sang.bean.Article;\nimport org.sang.mapper.ArticleMapper;\nimport org.sang.mapper.TagsMapper;\nimport org.sang.utils.Util;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.sql.Timestamp;\nimport java.util.Date;\nimport java.util.List;\n\n/**\n * Created by sang on 2017/12/20.\n */\n@Service\n@Transactional\npublic class ArticleService {\n    @Autowired\n    ArticleMapper articleMapper;\n    @Autowired\n    TagsMapper tagsMapper;\n\n    public int addNewArticle(Article article) {\n        //\xe5\xa4\x84\xe7\x90\x86\xe6\x96\x87\xe7\xab\xa0\xe6\x91\x98\xe8\xa6\x81\n        if (article.getSummary() == null || "".equals(article.getSummary())) {\n            //\xe7\x9b\xb4\xe6\x8e\xa5\xe6\x88\xaa\xe5\x8f\x96\n            String stripHtml = stripHtml(article.getHtmlContent());\n            article.setSummary(stripHtml.substring(0, stripHtml.length() > 50 ? 50 : stripHtml.length()));\n        }\n        if (article.getId() == -1) {\n            //\xe6\xb7\xbb\xe5\x8a\xa0\xe6\x93\x8d\xe4\xbd\x9c\n            Timestamp timestamp = new Timestamp(System.currentTimeMillis());\n            if (article.getState() == 1) {\n                //\xe8\xae\xbe\xe7\xbd\xae\xe5\x8f\x91\xe8\xa1\xa8\xe6\x97\xa5\xe6\x9c\x9f\n                article.setPublishDate(timestamp);\n            }\n            article.setEditTime(timestamp);\n            //\xe8\xae\xbe\xe7\xbd\xae\xe5\xbd\x93\xe5\x89\x8d\xe7\x94\xa8\xe6\x88\xb7\n            article.setUid(Util.getCurrentUser().getId());\n            int i = articleMapper.addNewArticle(article);\n            //\xe6\x89\x93\xe6\xa0\x87\xe7\xad\xbe\n            String[] dynamicTags = article.getDynamicTags();\n            if (dynamicTags != null && dynamicTags.length > 0) {\n                int tags = addTagsToArticle(dynamicTags, article.getId());\n                if (tags == -1) {\n                    return tags;\n                }\n            }\n            return i;\n        } else {\n            Timestamp timestamp = new Timestamp(System.currentTimeMillis());\n            if (article.getState() == 1) {\n                //\xe8\xae\xbe\xe7\xbd\xae\xe5\x8f\x91\xe8\xa1\xa8\xe6\x97\xa5\xe6\x9c\x9f\n                article.setPublishDate(timestamp);\n            }\n            //\xe6\x9b\xb4\xe6\x96\xb0\n            article.setEditTime(new Timestamp(System.currentTimeMillis()));\n            int i = articleMapper.updateArticle(article);\n            //\xe4\xbf\xae\xe6\x94\xb9\xe6\xa0\x87\xe7\xad\xbe\n            String[] dynamicTags = article.getDynamicTags();\n            if (dynamicTags != null && dynamicTags.length > 0) {\n                int tags = addTagsToArticle(dynamicTags, article.getId());\n                if (tags == -1) {\n                    return tags;\n                }\n            }\n            return i;\n        }\n    }\n\n    private int addTagsToArticle(String[] dynamicTags, Long aid) {\n        //1.\xe5\x88\xa0\xe9\x99\xa4\xe8\xaf\xa5\xe6\x96\x87\xe7\xab\xa0\xe7\x9b\xae\xe5\x89\x8d\xe6\x89\x80\xe6\x9c\x89\xe7\x9a\x84\xe6\xa0\x87\xe7\xad\xbe\n        tagsMapper.deleteTagsByAid(aid);\n        //2.\xe5\xb0\x86\xe4\xb8\x8a\xe4\xbc\xa0\xe4\xb8\x8a\xe6\x9d\xa5\xe7\x9a\x84\xe6\xa0\x87\xe7\xad\xbe\xe5\x85\xa8\xe9\x83\xa8\xe5\xad\x98\xe5\x85\xa5\xe6\x95\xb0\xe6\x8d\xae\xe5\xba\x93\n        tagsMapper.saveTags(dynamicTags);\n        //3.\xe6\x9f\xa5\xe8\xaf\xa2\xe8\xbf\x99\xe4\xba\x9b\xe6\xa0\x87\xe7\xad\xbe\xe7\x9a\x84id\n        List<Long> tIds = tagsMapper.getTagsIdByTagName(dynamicTags);\n        //4.\xe9\x87\x8d\xe6\x96\xb0\xe7\xbb\x99\xe6\x96\x87\xe7\xab\xa0\xe8\xae\xbe\xe7\xbd\xae\xe6\xa0\x87\xe7\xad\xbe\n        int i = tagsMapper.saveTags2ArticleTags(tIds, aid);\n        return i == dynamicTags.length ? i : -1;\n    }\n\n    public String stripHtml(String content) {\n        content = content.replaceAll("<p .*?>", "");\n        content = content.replaceAll("<br\\\\s*/?>", "");\n        content = content.replaceAll("\\\\<.*?>", "");\n        return content;\n    }\n\n    public List<Article> getArticleByState(Integer state, Integer page, Integer count,String keywords) {\n        int start = (page - 1) * count;\n        Long uid = Util.getCurrentUser().getId();\n        return articleMapper.getArticleByState(state, start, count, uid,keywords);\n    }\n\n//    public List<Article> getArticleByStateByAdmin(Integer page, Integer count,String keywords) {\n//        int start = (page - 1) * count;\n//        return articleMapper.getArticleByStateByAdmin(start, count,keywords);\n//    }\n\n    public int getArticleCountByState(Integer state, Long uid,String keywords) {\n        return articleMapper.getArticleCountByState(state, uid,keywords);\n    }\n\n    public int updateArticleState(Long[] aids, Integer state) {\n        if (state == 2) {\n            return articleMapper.deleteArticleById(aids);\n        } else {\n            return articleMapper.updateArticleState(aids, 2);//\xe6\x94\xbe\xe5\x85\xa5\xe5\x88\xb0\xe5\x9b\x9e\xe6\x94\xb6\xe7\xab\x99\xe4\xb8\xad\n        }\n    }\n\n    public int restoreArticle(Integer articleId) {\n        return articleMapper.updateArticleStateById(articleId, 1); // \xe4\xbb\x8e\xe5\x9b\x9e\xe6\x94\xb6\xe7\xab\x99\xe8\xbf\x98\xe5\x8e\x9f\xe5\x9c\xa8\xe5\x8e\x9f\xe5\xa4\x84\n    }\n\n    public Article getArticleById(Long aid) {\n        Article article = articleMapper.getArticleById(aid);\n        articleMapper.pvIncrement(aid);\n        return article;\n    }\n\n    public void pvStatisticsPerDay() {\n        articleMapper.pvStatisticsPerDay();\n    }\n\n    /**\n     * \xe8\x8e\xb7\xe5\x8f\x96\xe6\x9c\x80\xe8\xbf\x91\xe4\xb8\x83\xe5\xa4\xa9\xe7\x9a\x84\xe6\x97\xa5\xe6\x9c\x9f\n     * @return\n     */\n    public List<String> getCategories() {\n        return articleMapper.getCategories(Util.getCurrentUser().getId());\n    }\n\n    /**\n     * \xe8\x8e\xb7\xe5\x8f\x96\xe6\x9c\x80\xe8\xbf\x91\xe4\xb8\x83\xe5\xa4\xa9\xe7\x9a\x84\xe6\x95\xb0\xe6\x8d\xae\n     * @return\n     */\n    public List<Integer> getDataStatistics() {\n        return articleMapper.getDataStatistics(Util.getCurrentUser().getId());\n    }\n}\n'