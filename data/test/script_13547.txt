b'package co.joebirch.composeplayground.material\n\nimport androidx.compose.material.Text\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.AlertDialog\nimport androidx.compose.material.Button\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.RectangleShape\nimport androidx.compose.ui.unit.dp\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject AlertDialogView : ComposableLayout {\n\n    @Composable\n    override fun build() {\n        Column(\n            modifier = Modifier.fillMaxSize().padding(32.dp),\n            verticalArrangement = Arrangement.SpaceEvenly,\n            horizontalAlignment = Alignment.CenterHorizontally\n        ) {\n            AlertDialogComponent()\n        }\n    }\n\n}\n\n@Composable\nfun AlertDialogComponent() {\n    val showingDialog = remember { mutableStateOf(false) }\n    if (showingDialog.value) {\n        AlertDialog(\n            onDismissRequest = {\n                showingDialog.value = false\n            },\n            text = {\n                Text(text = "Body message")\n            },\n            title = {\n                Text(text = "Title")\n            },\n            buttons = {\n                Row(horizontalArrangement = Arrangement.End,\n                    modifier = Modifier.fillMaxWidth()\n                ) {\n                    Text(text = "Close",\n                        modifier = Modifier.padding(16.dp).clickable(onClick = {\n                            showingDialog.value = false\n                        }))\n                }\n            })\n    }\n    Button(onClick = {\n        showingDialog.value = true\n    }) {\n        Text(\n            text = "Show dialog"\n        )\n    }\n}\n\n@Composable\nfun ContentAlertDialogComponent() {\n    val showingDialog = remember { mutableStateOf(false) }\n    if (showingDialog.value) {\n        AlertDialog(\n            onDismissRequest = {\n                showingDialog.value = false\n            },\n            text = {\n                Text(text = "Body message")\n            },\n            title = {\n                Text(text = "Title")\n            },\n            confirmButton = {\n                Text(text = "Continue",\n                    modifier = Modifier.padding(16.dp).clickable(onClick = {\n                        showingDialog.value = false\n                        //startActivity(myActivityIntnet)\n                    }))\n            },\n            dismissButton = {\n                Text(text = "Close",\n                    modifier = Modifier.padding(16.dp).clickable(onClick = {\n                        showingDialog.value = false\n                    }))\n            },\n            backgroundColor = Color.White,\n            shape = RectangleShape\n        )\n    }\n    Button(onClick = {\n        showingDialog.value = true\n    }) {\n        Text(\n            text = "Show dialog"\n        )\n    }\n}\n\n\n@Composable\nfun BackgroundColorAlertDialogComponent() {\n    val showingDialog = remember { mutableStateOf(false) }\n    if (showingDialog.value) {\n        AlertDialog(\n            onDismissRequest = {\n                showingDialog.value = false\n            },\n            confirmButton = {\n                Text(text = "Close",\n                    modifier = Modifier.padding(16.dp).clickable(onClick = {\n                        showingDialog.value = false\n                    }))\n            }\n        )\n    }\n    Button(onClick = {\n        showingDialog.value = true\n    }) {\n        Text(\n            text = "Show dialog"\n        )\n    }\n}\n'