b'package com.naman14.timber.utils;\n\nimport android.annotation.TargetApi;\nimport android.app.Activity;\nimport android.app.ActivityManager;\nimport android.content.res.ColorStateList;\nimport android.graphics.Color;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.os.Build;\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport androidx.drawerlayout.widget.DrawerLayout;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.Window;\n\nimport com.afollestad.appthemeengine.Config;\nimport com.afollestad.appthemeengine.util.Util;\n\n/**\n * Created by naman on 02/01/16.\n */\npublic class ATEUtils {\n\n    public static void setStatusBarColor(Activity activity, String key, int color) {\n        try {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n                final Window window = activity.getWindow();\n                if (Config.coloredStatusBar(activity, key))\n                    window.setStatusBarColor(getStatusBarColor(color));\n                else window.setStatusBarColor(Color.BLACK);\n                if (Config.coloredNavigationBar(activity, key))\n                    window.setNavigationBarColor(color);\n                else window.setNavigationBarColor(Color.BLACK);\n                applyTaskDescription(activity, key, color);\n            }\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n                final View decorView = activity.getWindow().getDecorView();\n                final int lightStatusMode = Config.lightStatusBarMode(activity, key);\n                boolean lightStatusEnabled = false;\n                switch (lightStatusMode) {\n                    case Config.LIGHT_STATUS_BAR_OFF:\n                    default:\n                        break;\n                    case Config.LIGHT_STATUS_BAR_ON:\n                        lightStatusEnabled = true;\n                        break;\n                    case Config.LIGHT_STATUS_BAR_AUTO:\n                        lightStatusEnabled = Util.isColorLight(color);\n                        break;\n                }\n\n                final int systemUiVisibility = decorView.getSystemUiVisibility();\n                if (lightStatusEnabled) {\n                    decorView.setSystemUiVisibility(systemUiVisibility | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);\n                } else {\n                    decorView.setSystemUiVisibility(systemUiVisibility & ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);\n                }\n            }\n\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n                final int color2 = Config.coloredStatusBar(activity, key) ?\n                        Color.TRANSPARENT : Color.BLACK;\n                activity.getWindow().setStatusBarColor(color2);\n            }\n            if (Config.coloredStatusBar(activity, key))\n                ((DrawerLayout) ((ViewGroup) activity.findViewById(android.R.id.content)).getChildAt(0)).setStatusBarBackgroundColor(getStatusBarColor(color));\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    private static void applyTaskDescription(@NonNull Activity activity, @Nullable String key, int color) {\n        // Sets color of entry in the system recents page\n        try {\n            ActivityManager.TaskDescription td = new ActivityManager.TaskDescription(\n                    (String) activity.getTitle(),\n                    ((BitmapDrawable) activity.getApplicationInfo().loadIcon(activity.getPackageManager())).getBitmap(),\n                    color);\n            activity.setTaskDescription(td);\n        } catch (Exception ignored) {\n\n        }\n    }\n\n    public static int getStatusBarColor(int primaryColor) {\n        float[] arrayOfFloat = new float[3];\n        Color.colorToHSV(primaryColor, arrayOfFloat);\n        arrayOfFloat[2] *= 0.9F;\n        return Color.HSVToColor(arrayOfFloat);\n    }\n\n    public static void setFabBackgroundTint(FloatingActionButton fab, int color) {\n        ColorStateList fabColorStateList = new ColorStateList(\n                new int[][]{\n                        new int[]{}\n                },\n                new int[]{\n                        color,\n                }\n        );\n        fab.setBackgroundTintList(fabColorStateList);\n    }\n}\n'