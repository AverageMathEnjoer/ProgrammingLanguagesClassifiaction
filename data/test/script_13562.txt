b'#include "stdafx.h"\n#include "SplitterControlHandler.h"\n#include <stdint.h>\n#include <windowsx.h>\n\ntemplate <>\nbool SplitterControlHandler<true>::testCursorOverSplitter()\n{\n\t//Horizontal check (x-axis).\n\tPOINT cursor;\n\tRECT separateRect;\n\tif (GetCursorPos(&cursor) && ScreenToClient(hContentSeparate, &cursor)\n\t\t&& GetClientRect(hContentSeparate, &separateRect))\n\t{\n\t\tint x = cursor.x;\n\t\tint y = cursor.y;\n\t\tif (x >= -3 && x <= 3 && y >= 0 && y <= (separateRect.bottom - separateRect.top))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\ntemplate <>\nbool SplitterControlHandler<false>::testCursorOverSplitter()\n{\n\t//Vertical check (y-axis).\n\tPOINT cursor;\n\tRECT separateRect;\n\tif (GetCursorPos(&cursor) && ScreenToClient(hContentSeparate, &cursor)\n\t\t&& GetClientRect(hContentSeparate, &separateRect))\n\t{\n\t\tint x = cursor.x;\n\t\tint y = cursor.y;\n\t\tif (y >= -3 && y <= 3 && x >= 0 && x <= (separateRect.right - separateRect.left))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\ntemplate <>\nbool SplitterControlHandler<true>::onMouseMove(HWND hParent, int x, int y)\n{\n\tif (!this->splitterDown)\n\t\treturn false;\n\t//Horizontal check (x-axis).\n\n\tLONG newSplitterX = x - this->splitterOffset;\n\n\tRECT clientRect;\n\tif (GetClientRect(hParent, &clientRect) && (clientRect.right - clientRect.left) > 20)\n\t{\n\t\tLONG windowWidth = clientRect.right - clientRect.left;\n\t\tif (newSplitterX < 5) newSplitterX = 5;\n\t\telse if (newSplitterX > (windowWidth - 5)) newSplitterX = windowWidth - 5;\n\n\t\tfloat newRatio = (float)newSplitterX / (float)windowWidth;\n\t\tif (newRatio < ratioMin) newRatio = ratioMin;\n\t\telse if (newRatio > ratioMax) newRatio = ratioMax;\n\n\t\tthis->leftOrTopPanelRatio = newRatio;\n\t\tthis->requestResize = true;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\ntemplate <>\nbool SplitterControlHandler<false>::onMouseMove(HWND hParent, int x, int y)\n{\n\tif (!this->splitterDown)\n\t\treturn false;\n\t//Vertical check (y-axis).\n\n\tLONG newSplitterY = y - this->splitterOffset;\n\n\tRECT clientRect;\n\tif (GetClientRect(hParent, &clientRect) && (clientRect.bottom - clientRect.top) > 20)\n\t{\n\t\tLONG windowHeight = clientRect.bottom - clientRect.top;\n\t\tif (newSplitterY < 5) newSplitterY = 5;\n\t\telse if (newSplitterY > (windowHeight - 5)) newSplitterY = windowHeight - 5;\n\n\t\tfloat newRatio = (float)newSplitterY / (float)windowHeight;\n\t\tif (newRatio < ratioMin) newRatio = ratioMin;\n\t\telse if (newRatio > ratioMax) newRatio = ratioMax;\n\n\t\tthis->leftOrTopPanelRatio = newRatio;\n\t\tthis->requestResize = true;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\ntemplate <bool horizontal>\nbool SplitterControlHandler<horizontal>::handleWin32Message(HWND hParent, UINT message, WPARAM wParam, LPARAM lParam)\n{\n\tswitch (message)\n\t{\n\tcase WM_INITDIALOG:\n\t\tthis->splitterDown = false;\n\t\tbreak;\n\tcase WM_MOUSEMOVE:\n\t\tif (this->hContentSeparate != NULL)\n\t\t\treturn this->onMouseMove(hParent, GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam));\n\t\tbreak;\n\tcase WM_LBUTTONDOWN:\n\t\tif (this->hContentSeparate != NULL && !this->splitterDown && testCursorOverSplitter())\n\t\t{\n\t\t\tthis->splitterDown = true;\n\t\t\tSetCapture(hParent);\n\n\t\t\tint x = GET_X_LPARAM(lParam);\n\t\t\tint y = GET_Y_LPARAM(lParam);\n\n\t\t\t//Get the x/y position of the splitter in hDlg client coordinates.\n\t\t\tRECT separateRect = {};\n\t\t\tGetWindowRect(hContentSeparate, &separateRect);\n\t\t\tScreenToClient(hParent, &reinterpret_cast<POINT*>(&separateRect)[0]);\n\t\t\t\n\t\t\tif (horizontal)\n\t\t\t\tthis->splitterOffset = x - separateRect.left;\n\t\t\telse\n\t\t\t\tthis->splitterOffset = y - separateRect.top;\n\t\t\treturn true;\n\t\t}\n\t\tbreak;\n\tcase WM_LBUTTONUP:\n\t\tif (this->hContentSeparate != NULL && this->splitterDown)\n\t\t{\n\t\t\tthis->splitterDown = false;\n\t\t\tReleaseCapture();\n\t\t\treturn true;\n\t\t}\n\t\tbreak;\n\tcase WM_KILLFOCUS:\n\t\tif (this->hContentSeparate != NULL && this->splitterDown)\n\t\t{\n\t\t\tthis->splitterDown = false;\n\t\t\tReleaseCapture();\n\t\t\t//Let the caller also process this message.\n\t\t}\n\t\tbreak;\n\tcase WM_SETCURSOR:\n\t\tif (this->hContentSeparate != NULL && testCursorOverSplitter())\n\t\t{\n\t\t\tSetCursor(LoadCursor(NULL, horizontal ? IDC_SIZEWE : IDC_SIZENS));\n\t\t\treturn true;\n\t\t}\n\t\tbreak;\n\t}\n\treturn false;\n}\n\ntemplate class SplitterControlHandler<false>; //vertical\ntemplate class SplitterControlHandler<true>; //horizontal\n'