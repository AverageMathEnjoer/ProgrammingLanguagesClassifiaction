b'#\' preprocText\n#\'\n#\' Preprocess text data such as names and addresses.\n#\'\n#\' @usage preprocText(text, convert_text, tolower, soundex,\n#\' usps_address, remove_whitespace, remove_punctuation, convert_text_to)\n#\' @param text A vector of text data to convert.\n#\' @param convert_text Whether to convert text to the desired encoding, where\n#\' the encoding is specified in the \'convert_text_to\' argument. Default is\n#\' TRUE\n#\' @param tolower Whether to normalize the text to be all lowercase. Default is\n#\' TRUE.\n#\' @param soundex Whether to convert the field to the Census\'s soundex encoding.\n#\' Default is FALSE.\n#\' @param usps_address Whether to use USPS address standardization rules to clean address fields.\n#\' Default is FALSE.\n#\' @param remove_whitespace Whether to remove leading and trailing whitespace, and to convert multiple\n#\' spaces to a single space. Default is TRUE.\n#\' @param remove_punctuation Whether to remove punctuation from a string. Default is TRUE.\n#\' @param convert_text_to Which encoding to use when converting text. Default is \'Latin-ASCII\'.\n#\' Full list of encodings in the \\code{stri_trans_list()} function in the \\code{stringi} package.\n#\'\n#\' @return \\code{preprocText()} returns the preprocessed vector of text.\n#\'\n#\' @author Ben Fifield <benfifield@gmail.com>\n#\' @export\n#\' @importFrom stringi stri_trans_list stri_trans_general\n#\' @importFrom stringdist phonetic\n#\' @importFrom stringr str_trim\npreprocText <- function(text, convert_text = TRUE, tolower = TRUE,\n                        soundex = FALSE, usps_address = FALSE,\n                        remove_whitespace = TRUE,\n                        remove_punctuation = TRUE,\n                        convert_text_to = "Latin-ASCII"){\n\n    if(!(convert_text_to %in% stri_trans_list())){\n        stop("Sorry, that encoding is not included in the set of valid encodings. Please check \'stri_trans_list()\' in the \'stringi\' package for the full set of valid encodings.")\n    }\n    if(usps_address & !(tolower)){\n        cat("To use USPS standardization, the vector must be converted to lowercase. Changing tolower = TRUE.")\n        tolower <- TRUE\n    }\n    \n    if(convert_text){\n        text <- stri_trans_general(text, convert_text_to)\n    }\n    if(tolower){\n        text <- tolower(text)\n    }\n    if(usps_address){\n        text <- gsub("avenue", "ave", text)\n        text <- gsub("boulevard", "blvd", text)\n        text <- gsub("circle", "cir", text)\n        text <- gsub("court", "ct", text)\n        text <- gsub("drive", "dr", text)\n        text <- gsub("junction", "jct", text)\n        text <- gsub("place", "pl", text)\n        text <- gsub("road", "rd", text)\n        text <- gsub("route", "rte", text)\n        text <- gsub("square", "sq", text)\n        text <- gsub("street", "st", text)\n        text <- gsub("apartment", "apt", text)\n        text <- gsub("building", "bldg", text)\n    }\n    if(remove_whitespace){\n        text <- gsub("\\\\s+", " ", str_trim(text))\n    }\n    if(remove_punctuation){\n        text <- gsub(\'[[:punct:]]+\', \'\', text)\n    }\n    if(soundex){\n        text <- phonetic(text)\n    }\n\n    return(text)\n\n}\n'