b'module Main (main) where\n\nimport Rest.Gen.Types\nimport qualified Rest.Gen        as Gen\nimport qualified Rest.Gen.Config as Gen\n\nimport qualified Api\n\nmain :: IO ()\nmain = do\n  config <- Gen.configFromArgs "rest-example-gen"\n  Gen.generate\n    config\n    "RestExample"\n    Api.api\n    [] -- Additional modules to put in the generated cabal file\n    [] -- Additional imports in every module, typically used for orphan instances\n    -- rest-gen finds the originating module for each data type, when\n    -- these are re-exported from an internal module they can be\n    -- rewritten to something more stable.\n    [(ModuleName () "Data.Text.Internal", ModuleName () "Data.Text")]\n'