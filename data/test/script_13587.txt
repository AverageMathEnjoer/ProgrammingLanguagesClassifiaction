b'package com.codeest.geeknews.model;\n\nimport com.codeest.geeknews.model.bean.CommentBean;\nimport com.codeest.geeknews.model.bean.DailyBeforeListBean;\nimport com.codeest.geeknews.model.bean.DailyListBean;\nimport com.codeest.geeknews.model.bean.DetailExtraBean;\nimport com.codeest.geeknews.model.bean.GankItemBean;\nimport com.codeest.geeknews.model.bean.GankSearchItemBean;\nimport com.codeest.geeknews.model.bean.GoldListBean;\nimport com.codeest.geeknews.model.bean.GoldManagerBean;\nimport com.codeest.geeknews.model.bean.HotListBean;\nimport com.codeest.geeknews.model.bean.NodeBean;\nimport com.codeest.geeknews.model.bean.NodeListBean;\nimport com.codeest.geeknews.model.bean.RealmLikeBean;\nimport com.codeest.geeknews.model.bean.RepliesListBean;\nimport com.codeest.geeknews.model.bean.SectionChildListBean;\nimport com.codeest.geeknews.model.bean.SectionListBean;\nimport com.codeest.geeknews.model.bean.ThemeChildListBean;\nimport com.codeest.geeknews.model.bean.ThemeListBean;\nimport com.codeest.geeknews.model.bean.VersionBean;\nimport com.codeest.geeknews.model.bean.WXItemBean;\nimport com.codeest.geeknews.model.bean.WelcomeBean;\nimport com.codeest.geeknews.model.bean.ZhihuDetailBean;\nimport com.codeest.geeknews.model.db.DBHelper;\nimport com.codeest.geeknews.model.http.HttpHelper;\nimport com.codeest.geeknews.model.http.response.GankHttpResponse;\nimport com.codeest.geeknews.model.http.response.GoldHttpResponse;\nimport com.codeest.geeknews.model.http.response.MyHttpResponse;\nimport com.codeest.geeknews.model.http.response.WXHttpResponse;\nimport com.codeest.geeknews.model.prefs.PreferencesHelper;\n\nimport java.util.List;\n\nimport io.reactivex.Flowable;\n\n/**\n * @author: Est <codeest.dev@gmail.com>\n * @date: 2017/4/21\n * @desciption:\n */\n\npublic class DataManager implements HttpHelper, DBHelper, PreferencesHelper {\n\n    HttpHelper mHttpHelper;\n    DBHelper mDbHelper;\n    PreferencesHelper mPreferencesHelper;\n\n    public DataManager(HttpHelper httpHelper, DBHelper dbHelper, PreferencesHelper preferencesHelper) {\n        mHttpHelper = httpHelper;\n        mDbHelper = dbHelper;\n        mPreferencesHelper = preferencesHelper;\n    }\n\n    @Override\n    public boolean getNightModeState() {\n        return mPreferencesHelper.getNightModeState();\n    }\n\n    @Override\n    public void setNightModeState(boolean state) {\n        mPreferencesHelper.setNightModeState(state);\n    }\n\n    @Override\n    public boolean getNoImageState() {\n        return mPreferencesHelper.getNoImageState();\n    }\n\n    @Override\n    public void setNoImageState(boolean state) {\n        mPreferencesHelper.setNoImageState(state);\n    }\n\n    @Override\n    public boolean getAutoCacheState() {\n        return mPreferencesHelper.getAutoCacheState();\n    }\n\n    @Override\n    public void setAutoCacheState(boolean state) {\n        mPreferencesHelper.setAutoCacheState(state);\n    }\n\n    @Override\n    public int getCurrentItem() {\n        return mPreferencesHelper.getCurrentItem();\n    }\n\n    @Override\n    public void setCurrentItem(int item) {\n        mPreferencesHelper.setCurrentItem(item);\n    }\n\n    @Override\n    public boolean getLikePoint() {\n        return mPreferencesHelper.getLikePoint();\n    }\n\n    @Override\n    public void setLikePoint(boolean isFirst) {\n        mPreferencesHelper.setLikePoint(isFirst);\n    }\n\n    @Override\n    public boolean getVersionPoint() {\n        return mPreferencesHelper.getVersionPoint();\n    }\n\n    @Override\n    public void setVersionPoint(boolean isFirst) {\n        mPreferencesHelper.setVersionPoint(isFirst);\n    }\n\n    @Override\n    public boolean getManagerPoint() {\n        return mPreferencesHelper.getManagerPoint();\n    }\n\n    @Override\n    public void setManagerPoint(boolean isFirst) {\n        mPreferencesHelper.setManagerPoint(isFirst);\n    }\n\n    @Override\n    public void insertNewsId(int id) {\n        mDbHelper.insertNewsId(id);\n    }\n\n    @Override\n    public boolean queryNewsId(int id) {\n        return mDbHelper.queryNewsId(id);\n    }\n\n    @Override\n    public void insertLikeBean(RealmLikeBean bean) {\n        mDbHelper.insertLikeBean(bean);\n    }\n\n    @Override\n    public void deleteLikeBean(String id) {\n        mDbHelper.deleteLikeBean(id);\n    }\n\n    @Override\n    public boolean queryLikeId(String id) {\n        return mDbHelper.queryLikeId(id);\n    }\n\n    @Override\n    public List<RealmLikeBean> getLikeList() {\n        return mDbHelper.getLikeList();\n    }\n\n    @Override\n    public void changeLikeTime(String id, long time, boolean isPlus) {\n        mDbHelper.changeLikeTime(id, time, isPlus);\n    }\n\n    @Override\n    public void updateGoldManagerList(GoldManagerBean bean) {\n        mDbHelper.updateGoldManagerList(bean);\n    }\n\n    @Override\n    public GoldManagerBean getGoldManagerList() {\n        return mDbHelper.getGoldManagerList();\n    }\n\n    @Override\n    public Flowable<DailyListBean> fetchDailyListInfo() {\n        return mHttpHelper.fetchDailyListInfo();\n    }\n\n    @Override\n    public Flowable<DailyBeforeListBean> fetchDailyBeforeListInfo(String date) {\n        return mHttpHelper.fetchDailyBeforeListInfo(date);\n    }\n\n    @Override\n    public Flowable<ThemeListBean> fetchDailyThemeListInfo() {\n        return mHttpHelper.fetchDailyThemeListInfo();\n    }\n\n    @Override\n    public Flowable<ThemeChildListBean> fetchThemeChildListInfo(int id) {\n        return mHttpHelper.fetchThemeChildListInfo(id);\n    }\n\n    @Override\n    public Flowable<SectionListBean> fetchSectionListInfo() {\n        return mHttpHelper.fetchSectionListInfo();\n    }\n\n    @Override\n    public Flowable<SectionChildListBean> fetchSectionChildListInfo(int id) {\n        return mHttpHelper.fetchSectionChildListInfo(id);\n    }\n\n    @Override\n    public Flowable<ZhihuDetailBean> fetchDetailInfo(int id) {\n        return mHttpHelper.fetchDetailInfo(id);\n    }\n\n    @Override\n    public Flowable<DetailExtraBean> fetchDetailExtraInfo(int id) {\n        return mHttpHelper.fetchDetailExtraInfo(id);\n    }\n\n    @Override\n    public Flowable<WelcomeBean> fetchWelcomeInfo(String res) {\n        return mHttpHelper.fetchWelcomeInfo(res);\n    }\n\n    @Override\n    public Flowable<CommentBean> fetchLongCommentInfo(int id) {\n        return mHttpHelper.fetchLongCommentInfo(id);\n    }\n\n    @Override\n    public Flowable<CommentBean> fetchShortCommentInfo(int id) {\n        return mHttpHelper.fetchShortCommentInfo(id);\n    }\n\n    @Override\n    public Flowable<HotListBean> fetchHotListInfo() {\n        return mHttpHelper.fetchHotListInfo();\n    }\n\n    @Override\n    public Flowable<GankHttpResponse<List<GankItemBean>>> fetchTechList(String tech, int num, int page) {\n        return mHttpHelper.fetchTechList(tech, num, page);\n    }\n\n    @Override\n    public Flowable<GankHttpResponse<List<GankItemBean>>> fetchGirlList(int num, int page) {\n        return mHttpHelper.fetchGirlList(num, page);\n    }\n\n    @Override\n    public Flowable<GankHttpResponse<List<GankItemBean>>> fetchRandomGirl(int num) {\n        return mHttpHelper.fetchRandomGirl(num);\n    }\n\n    @Override\n    public Flowable<GankHttpResponse<List<GankSearchItemBean>>> fetchGankSearchList(String query, String type, int num, int page) {\n        return mHttpHelper.fetchGankSearchList(query, type, num, page);\n    }\n\n    @Override\n    public Flowable<WXHttpResponse<List<WXItemBean>>> fetchWechatListInfo(int num, int page) {\n        return mHttpHelper.fetchWechatListInfo(num, page);\n    }\n\n    @Override\n    public Flowable<WXHttpResponse<List<WXItemBean>>> fetchWechatSearchListInfo(int num, int page, String word) {\n        return mHttpHelper.fetchWechatSearchListInfo(num, page, word);\n    }\n\n    @Override\n    public Flowable<MyHttpResponse<VersionBean>> fetchVersionInfo() {\n        return mHttpHelper.fetchVersionInfo();\n    }\n\n    @Override\n    public Flowable<GoldHttpResponse<List<GoldListBean>>> fetchGoldList(String type, int num, int page) {\n        return mHttpHelper.fetchGoldList(type, num, page);\n    }\n\n    @Override\n    public Flowable<GoldHttpResponse<List<GoldListBean>>> fetchGoldHotList(String type, String dataTime, int limit) {\n        return mHttpHelper.fetchGoldHotList(type, dataTime, limit);\n    }\n\n    @Override\n    public Flowable<NodeBean> fetchNodeInfo(String name) {\n        return mHttpHelper.fetchNodeInfo(name);\n    }\n\n    @Override\n    public Flowable<List<NodeListBean>> fetchTopicList(String name) {\n        return mHttpHelper.fetchTopicList(name);\n    }\n\n    @Override\n    public Flowable<List<NodeListBean>> fetchTopicInfo(String id) {\n        return mHttpHelper.fetchTopicInfo(id);\n    }\n\n    @Override\n    public Flowable<List<RepliesListBean>> fetchRepliesList(String id) {\n        return mHttpHelper.fetchRepliesList(id);\n    }\n}\n'