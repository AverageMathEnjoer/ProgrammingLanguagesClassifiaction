b'-- | API for test providers.\n--\n-- @since 0.1\nmodule Test.Tasty.Providers\n  ( IsTest(..)\n  , testPassed\n  , testFailed\n  , testFailedDetails\n  , Result\n  , Progress(..)\n  , TestName\n  , TestTree\n  , singleTest\n  )\n  where\n\nimport Test.Tasty.Core\nimport Test.Tasty.Providers.ConsoleFormat (ResultDetailsPrinter, noResultDetails)\n\n-- | Convert a test to a leaf of the \'TestTree\'.\n--\n-- @since 0.1\nsingleTest :: IsTest t => TestName -> t -> TestTree\nsingleTest = SingleTest\n\n-- | \'Result\' of a passed test.\n--\n-- @since 0.8\ntestPassed\n  :: String -- ^ description (may be empty)\n  -> Result\ntestPassed desc = Result\n  { resultOutcome = Success\n  , resultDescription = desc\n  , resultShortDescription = "OK"\n  , resultTime = 0\n  , resultDetailsPrinter = noResultDetails\n  }\n\n-- | \'Result\' of a failed test.\n--\n-- @since 0.8\ntestFailed\n  :: String -- ^ description\n  -> Result\ntestFailed desc = Result\n  { resultOutcome = Failure TestFailed\n  , resultDescription = desc\n  , resultShortDescription = "FAIL"\n  , resultTime = 0\n  , resultDetailsPrinter = noResultDetails\n  }\n\n-- | \'Result\' of a failed test with custom details printer\n--\n-- @since 1.3.1\ntestFailedDetails\n  :: String               -- ^ description\n  -> ResultDetailsPrinter -- ^ details printer\n  -> Result\ntestFailedDetails desc printer = (testFailed desc)\n  { resultDetailsPrinter = printer }\n'