b'package co.joebirch.composeplayground.action\n\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.material.TextField\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.testTag\nimport androidx.compose.ui.test.*\nimport androidx.compose.ui.test.junit4.createComposeRule\nimport androidx.compose.ui.text.input.ImeAction\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.test.ext.junit.runners.AndroidJUnit4\nimport org.junit.Rule\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\n@RunWith(AndroidJUnit4::class)\nclass TextActionTests {\n\n    @get:Rule\n    val composeTestRule = createComposeRule()\n\n    private fun launchContent() {\n        composeTestRule.setContent {\n            MaterialTheme {\n                Surface {\n                    val textValue = remember { mutableStateOf(TextFieldValue()) }\n                    TextField(value = textValue.value, onValueChange = {\n                        textValue.value = it\n                    }, imeAction = ImeAction.Search, onImeActionPerformed = { _, _ ->\n                        textValue.value = TextFieldValue("Search!")\n                    }, modifier = Modifier.testTag("MyTag"))\n                }\n            }\n        }\n    }\n\n    @Test\n    fun testClick() {\n        launchContent()\n        composeTestRule.onNodeWithTag("MyTag").performGesture {\n\n        }\n        composeTestRule.onNodeWithTag("MyTag").apply {\n            performTextInput("Some text")\n            performTextReplacement("Replaced text")\n            performTextClearance()\n            performClick()\n            performImeAction()\n            performScrollTo()\n        }\n    }\n}'