b'\xef\xbb\xbfusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Business.Abstract;\nusing Core.Extensions;\nusing Entities.Concrete;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\n\nnamespace WebAPI.Controllers\n{\n    [Route("api/[controller]")]\n    [ApiController]\n    public class ProductsController : ControllerBase\n    {\n        private IProductService _productService;\n\n        public ProductsController(IProductService productService)\n        {\n            _productService = productService;\n        }\n\n        [HttpGet("getall")]\n        //[Authorize(Roles = "Product.List")]\n        public IActionResult GetList()\n        {\n            \n            var result = _productService.GetList();\n            if (result.Success)\n            {\n                return Ok(result.Data);\n            }\n\n            return BadRequest(result.Message);\n        }\n\n        [HttpGet("getlistbycategory")]\n        public IActionResult GetListByCategory(int categoryId)\n        {\n            var result = _productService.GetListByCategory(categoryId);\n            if (result.Success)\n            {\n                return Ok(result.Data);\n            }\n\n            return BadRequest(result.Message);\n        }\n\n        [HttpGet("getbyid")]\n        public IActionResult GetById(int productId)\n        {\n            var result = _productService.GetById(productId);\n            if (result.Success)\n            {\n                return Ok(result.Data);\n            }\n\n            return BadRequest(result.Message);\n        }\n\n        [HttpPost("add")]\n        public IActionResult Add(Product product)\n        {\n            var result = _productService.Add(product);\n            if (result.Success)\n            {\n                return Ok(result.Message);\n            }\n\n            return BadRequest(result.Message);\n        }\n\n        [HttpPost("update")]\n        public IActionResult Update(Product product)\n        {\n            var result = _productService.Update(product);\n            if (result.Success)\n            {\n                return Ok(result.Message);\n            }\n\n            return BadRequest(result.Message);\n        }\n\n        [HttpPost("delete")]\n        public IActionResult Delete(Product product)\n        {\n            var result = _productService.Delete(product);\n            if (result.Success)\n            {\n                return Ok(result.Message);\n            }\n\n            return BadRequest(result.Message);\n        }\n\n        [HttpPost("transaction")]\n        public IActionResult TransactionTest(Product product)\n        {\n            var result = _productService.TransactionalOperation(product);\n            if (result.Success)\n            {\n                return Ok(result.Message);\n            }\n\n            return BadRequest(result.Message);\n        }\n\n    }\n}'