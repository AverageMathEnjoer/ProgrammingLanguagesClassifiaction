b'package io.github.javiewer.fragment;\n\nimport android.os.Bundle;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\nimport androidx.core.content.ContextCompat;\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\nimport androidx.recyclerview.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport java.util.ArrayList;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport io.github.javiewer.R;\nimport io.github.javiewer.view.ViewUtil;\nimport io.github.javiewer.view.listener.BasicOnScrollListener;\n\n/**\n * Project: JAViewer\n */\npublic abstract class RecyclerFragment<I, LM extends RecyclerView.LayoutManager> extends Fragment {\n    @BindView(R.id.recycler_view)\n    protected RecyclerView mRecyclerView;\n\n    @BindView(R.id.refresh_layout)\n    protected SwipeRefreshLayout mRefreshLayout;\n\n    /*@BindView(R.id.adView)\n    protected AdView mAdView;*/\n\n    private SwipeRefreshLayout.OnRefreshListener mRefreshListener;\n\n    private BasicOnScrollListener mScrollListener;\n\n    private ArrayList<I> items = new ArrayList<>();\n\n    public RecyclerFragment() {\n        // Required empty public constructor\n    }\n\n    protected void setRecyclerViewPadding(int dp) {\n        this.mRecyclerView.setPadding(\n                ViewUtil.dpToPx(dp),\n                ViewUtil.dpToPx(dp),\n                ViewUtil.dpToPx(dp),\n                ViewUtil.dpToPx(dp)\n        );\n    }\n\n    @SuppressWarnings("unchecked")\n    public LM getLayoutManager() {\n        return (LM) this.mRecyclerView.getLayoutManager();\n    }\n\n    public void setLayoutManager(LM mLayoutManager) {\n        this.mRecyclerView.setLayoutManager(mLayoutManager);\n    }\n\n    public RecyclerView.Adapter getAdapter() {\n        if (this.mRecyclerView == null) {\n            return null;\n        }\n        return this.mRecyclerView.getAdapter();\n    }\n\n    public void setAdapter(RecyclerView.Adapter mAdapter) {\n        this.mRecyclerView.setAdapter(mAdapter);\n    }\n\n    public ArrayList<I> getItems() {\n        return items;\n    }\n\n    public void setItems(ArrayList<I> items) {\n        int size = getItems().size();\n        if (size > 0) {\n            getItems().clear();\n            getAdapter().notifyDataSetChanged();\n        }\n\n        getItems().addAll(items);\n        getAdapter().notifyDataSetChanged();\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        View view = inflater.inflate(R.layout.fragment_recycler, container, false);\n        ButterKnife.bind(this, view);\n        return view;\n    }\n\n    @SuppressWarnings("unchecked")\n    @Override\n    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        mRefreshLayout.setColorSchemeColors(\n                ContextCompat.getColor(this.getContext(), R.color.googleBlue),\n                ContextCompat.getColor(this.getContext(), R.color.googleGreen),\n                ContextCompat.getColor(this.getContext(), R.color.googleRed),\n                ContextCompat.getColor(this.getContext(), R.color.googleYellow)\n        );\n\n        if (savedInstanceState != null) {\n            this.getLayoutManager().onRestoreInstanceState(savedInstanceState.getParcelable("LayoutManagerState"));\n            this.setItems((ArrayList<I>) savedInstanceState.getSerializable("Items"));\n            if (this.getOnScrollListener() != null) {\n                this.getOnScrollListener().restoreState(savedInstanceState.getBundle("ScrollListenerState"));\n            }\n        }\n    }\n\n    public void addOnScrollListener(BasicOnScrollListener listener) {\n        mRecyclerView.addOnScrollListener(mScrollListener = listener);\n    }\n\n    public BasicOnScrollListener getOnScrollListener() {\n        return mScrollListener;\n    }\n\n    public SwipeRefreshLayout.OnRefreshListener getOnRefreshListener() {\n        return mRefreshListener;\n    }\n\n    public void setOnRefreshListener(SwipeRefreshLayout.OnRefreshListener listener) {\n        mRefreshLayout.setOnRefreshListener(mRefreshListener = listener);\n    }\n\n    @Override\n    public void onSaveInstanceState(Bundle outState) {\n        outState.putSerializable("Items", this.getItems());\n        outState.putParcelable("LayoutManagerState", getLayoutManager().onSaveInstanceState());\n\n        if (this.getOnScrollListener() != null) {\n            outState.putBundle("ScrollListenerState", getOnScrollListener().saveState());\n        }\n\n        super.onSaveInstanceState(outState);\n    }\n}\n'