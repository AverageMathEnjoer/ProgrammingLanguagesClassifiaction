b'// UVa1451 Average\n// Rujia Liu\n#include<cstdio>\nusing namespace std;\n\nconst int maxn = 100000 + 5;\n\nint n, L;\nchar s[maxn];\nint sum[maxn], p[maxn]; // average of i~j is (sum[j]-sum[i-1])/(j-i+1)\n\n// compare average of x1~x2 and x3~x4\nint compare_average(int x1, int x2, int x3, int x4) {\n  return (sum[x2]-sum[x1-1]) * (x4-x3+1) - (sum[x4]-sum[x3-1]) * (x2-x1+1);\n}\n\nint main() {\n  int T;\n  scanf("%d", &T);\n\n  while(T--) {\n    scanf("%d%d%s", &n, &L, s+1);\n\n    sum[0] = 0;\n    for(int i = 1; i <= n; i++) sum[i] = sum[i-1] + s[i] - \'0\';\n\n    int ansL = 1, ansR = L;\n\n    // p[i..j) is the sequence of candidate start points\n    int i = 0, j = 0;\n    for (int t = L; t <= n; t++) { // end point\n      while (j-i > 1 && compare_average(p[j-2], t-L, p[j-1], t-L) >= 0) j--; // remove concave points\n      p[j++] = t-L+1; // new candidate\n\n      while (j-i > 1 && compare_average(p[i], t, p[i+1], t) <= 0) i++; // update tangent point\n\n      // compare and update solution\n      int c = compare_average(p[i], t, ansL, ansR);\n      if (c > 0 || c == 0 && t - p[i] < ansR - ansL) {\n        ansL = p[i]; ansR = t;\n      }\n    }\n    printf("%d %d\\n", ansL, ansR);\n  }\n  return 0;\n}\n'