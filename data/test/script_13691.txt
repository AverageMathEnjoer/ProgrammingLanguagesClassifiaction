b'{-# LANGUAGE\n    DeriveDataTypeable\n  , DeriveGeneric\n  #-}\nmodule Type.PostError where\n\nimport Data.Aeson\nimport Data.JSON.Schema\nimport Data.Typeable\nimport GHC.Generics\nimport Generics.Generic.Aeson\nimport Generics.XmlPickler\nimport Rest.Error\nimport Text.XML.HXT.Arrow.Pickle\n\ndata PostError = InvalidTitle | InvalidContent\n  deriving (Eq, Generic, Ord, Show, Typeable)\n\ninstance FromJSON   PostError where parseJSON = gparseJson\ninstance JSONSchema PostError where schema    = gSchema\ninstance ToJSON     PostError where toJSON    = gtoJson\ninstance XmlPickler PostError where xpickle   = gxpickle\n\ninstance ToResponseCode PostError where\n  toResponseCode _ = 400\n'