b'(* Ignore the "do" keywords here, and the last line in the do blocks that are simply ().\nThese are just to allow us to reuse the same symbol names e.g. inventory in multiples places\nin a script. *)\n\n// Listing 17.1-2\nopen System.Collections.Generic\n\ndo\n    let inventory = Dictionary<string, float>()\n    //let inventory = Dictionary<_,_>()\n    //let inventory = Dictionary()\n\n    inventory.Add("Apples", 0.33)\n    inventory.Add("Oranges", 0.23)\n    inventory.Add("Bananas", 0.45)\n\n    inventory.Remove "Oranges" |> ignore\n\n    let bananas = inventory.["Bananas"]\n    let oranges = inventory.["Oranges"]\n    ()\n\n// Listing 17.3\ndo\n    let inventory : IDictionary<string, float> = \n        [ "Apples", 0.33; "Oranges", 0.23; "Bananas", 0.45 ]\n        |> dict\n\n    let bananas = inventory.["Bananas"]\n\n    inventory.Add("Pineapples", 0.85)\n    inventory.Remove("Bananas") |> ignore\n\ndo\n    // Listing 17.4\n    let inventory = \n        [ "Apples", 0.33; "Oranges", 0.23; "Bananas", 0.45 ]\n        |> Map.ofList\n\n    let apples = inventory.["Apples"]\n    let pineapples = inventory.["Pineapples"]\n\n    let newInventory =\n        inventory\n        |> Map.add "Pineapples" 0.87\n        |> Map.remove "Apples"\n\n    // Listing 17.5\n    let cheapFruit, expensiveFruit =\n        inventory\n        |> Map.partition(fun fruit cost -> cost < 0.3)\n\n    ()\n\n// Now you try\nopen System\nopen System.IO\n\nDirectory.EnumerateDirectories(@"C:\\")\n|> Seq.map DirectoryInfo\n|> Seq.map(fun di -> di.Name, di.CreationTimeUtc)\n|> Map.ofSeq\n|> Map.map(fun key value -> (DateTime.UtcNow - value).TotalDays)\n\n// Listing 17.6\nlet myBasket = [ "Apples"; "Apples"; "Apples"; "Bananas"; "Pinapples" ]\nlet fruitsILike = myBasket |> Set.ofList\n\n// Listing 17.7\nlet yourBasket = [ "Kiwi"; "Bananas"; "Grapes" ]\n\nlet allFruitsList = (myBasket @ yourBasket) |> List.distinct\n\nlet fruitsYouLike = yourBasket |> Set.ofList\nlet allFruits = fruitsILike + fruitsYouLike\n\n// Listing 17.8\nlet fruitsJustForMe = allFruits - fruitsYouLike\nlet fruitsWeCanShare = fruitsILike |> Set.intersect fruitsYouLike\nlet doILikeAllYourFruits = fruitsILike |> Set.isSubset fruitsYouLike\n\n'