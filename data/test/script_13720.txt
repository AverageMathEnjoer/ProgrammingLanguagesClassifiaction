b'package io.github.javiewer.activity;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Build;\nimport android.os.Bundle;\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.widget.Toolbar;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.webkit.CookieManager;\nimport android.webkit.WebResourceResponse;\nimport android.webkit.WebSettings;\nimport android.webkit.WebView;\nimport android.webkit.WebViewClient;\nimport android.widget.Button;\nimport android.widget.Toast;\n\nimport com.google.gson.Gson;\nimport com.google.gson.JsonObject;\n\nimport java.io.IOException;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport butterknife.OnClick;\nimport io.github.javiewer.R;\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.Interceptor;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.Response;\n\npublic class WebViewActivity extends SecureActivity {\n\n    public static OkHttpClient httpClient = new OkHttpClient.Builder().addInterceptor(new Interceptor() {\n        @Override\n        public Response intercept(Interceptor.Chain chain) throws IOException {\n            Request original = chain.request();\n\n            Request request = original.newBuilder()\n                    .header("Connection", " keep-alive")\n                    .header("Accept", " */*")\n                    .header("X-Requested-With", " XMLHttpRequest")\n                    .header("User-Agent", " Mozilla/5.0 (Windows NT 10.0 Win64 x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36")\n                    .header("Accept-Language", "zhCN,zh;q=0.8,en-US;q=0.5,cnq=0.3")\n                    .build();\n\n            return chain.proceed(request);\n        }\n    }).build();\n    @BindView(R.id.web_view)\n    WebView mWebView;\n    String embeddedUrl;\n    boolean locked = true;\n\n    public static Intent newIntent(Context context, String embeddedUrl) {\n        Intent intent = new Intent(context, WebViewActivity.class);\n        Bundle bundle = new Bundle();\n        bundle.putString("embedded_url", embeddedUrl);\n        intent.putExtras(bundle);\n        return intent;\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_web_view);\n\n        ButterKnife.bind(this);\n\n        Bundle bundle = this.getIntent().getExtras();\n        embeddedUrl = bundle.getString("embedded_url");\n\n\n        Toolbar toolbar = findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        final CookieManager cookieManager = CookieManager.getInstance();\n        if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            cookieManager.setAcceptThirdPartyCookies(mWebView, true);\n        }\n\n        WebSettings webSettings = mWebView.getSettings();\n        webSettings.setJavaScriptEnabled(true);\n\n        mWebView.setOnTouchListener(new View.OnTouchListener() {\n            @Override\n            public boolean onTouch(View v, MotionEvent event) {\n                return locked;\n            }\n        });\n\n        mWebView.setWebViewClient(new WebViewClient() {\n\n            @Nullable\n            @Override\n            public WebResourceResponse shouldInterceptRequest(WebView view, String url) {\n\n                if (url.contains("?hash=")) {\n                    String cookie = cookieManager.getCookie(url);\n\n                    final Request request = new Request.Builder()\n                            .url(url)\n                            .header("Referer", "https://javiewer.github.io/")\n                            .header("Cookie", cookie)\n                            .get()\n                            .build();\n\n                    httpClient.newCall(request).enqueue(new Callback() {\n                        @Override\n                        public void onFailure(Call call, IOException e) {\n                        }\n\n                        @Override\n                        public void onResponse(Call call, Response response) throws IOException {\n                            if (isFinishing()) {\n                                return;\n                            }\n\n                            Gson gson = new Gson();\n                            String json = response.body().string();\n                            JsonObject object = gson.fromJson(json, JsonObject.class);\n                            String playBack = object.get("url").getAsString();\n                            testVideoPlayBack(playBack);\n                            //Log.i("VideoPlayBack", playBack);\n                        }\n                    });\n                }\n\n                return super.shouldInterceptRequest(view, url);\n            }\n        });\n\n        mWebView.loadDataWithBaseURL(\n                "http://javiewer.github.io/",\n                "<iframe width=\\"100%\\" height=\\"100%\\" src=\\"" + embeddedUrl + "\\" frameborder=\\"0\\" allowfullscreen></iframe>",\n                "text/html",\n                null,\n                null\n        );\n    }\n\n    void testVideoPlayBack(String url) {\n        final Request request = new Request.Builder()\n                .url(url)\n                .get()\n                .build();\n        httpClient.newCall(request).enqueue(new Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n            }\n\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                if (isFinishing()) {\n                    return;\n                }\n\n                if (response.code() == 200) {\n                    Intent intent = new Intent();\n                    intent.putExtra("m3u8", response.request().url().toString());\n                    setResult(RESULT_OK, intent);\n\n                    WebViewActivity.this.finish();\n                }\n            }\n        });\n    }\n\n    @OnClick(R.id.button_unlock)\n    public void onUnlock(Button button) {\n        locked = false;\n        button.setEnabled(false);\n        Toast.makeText(this, "\xe9\x94\x81\xe5\xae\x9a\xe5\xb7\xb2\xe8\xa7\xa3\xe9\x99\xa4\xef\xbc\x8c\xe8\xaf\xb7\xe5\xae\x8c\xe6\x88\x90\xe9\xaa\x8c\xe8\xaf\x81\xe7\xa0\x81\xef\xbc\x8c\xe4\xb8\x8d\xe8\xa6\x81\xe6\x8c\x89\xe4\xbb\xbb\xe4\xbd\x95\xe5\x85\xb6\xe4\xbb\x96\xe5\x9c\xb0\xe6\x96\xb9\xef\xbc\x81", Toast.LENGTH_LONG).show();\n    }\n\n    @Override\n    public boolean onSupportNavigateUp() {\n        onBackPressed();\n        return true;\n    }\n}'