b'# week 9\n\n################################################\n# 1\n# analyze success as function of age\n\nlibrary(rethinking)\ndata(Achehunting)\nd <- Achehunting\n\ndat <- list(\n    S = ifelse(d$kg.meat>0,1,0),\n    A = standardize(log(d$age))\n)\n\n# log age model\nm1a <- ulam(\n    alist(\n        S ~ bernoulli(p),\n        logit(p) <- a + bA*A,\n        a ~ normal(0,1),\n        bA ~ normal(0,0.5)\n    ) , data=dat , chains=4 , cores=4 , log_lik=TRUE )\n\n# round age to nearest decade\nAr <- round( d$age / 10 ) * 10\nAseq <- c(10,20,30,40,50,60,70,80)\nSA <- sapply( Aseq , function(a) mean(dat$S[Ar==a]) )\nSAsd <- sapply( Aseq , function(a) sqrt( var(dat$S[Ar==a])/sum(dat$S[Ar==a]) ) )\nplot( Aseq , SA , ylim=c(0,1) , xlim=c(0,90) , type="b" , lwd=3 , col=2 , xlab="age (years)" , ylab="proportion successful" )\nfor ( i in 1:length(Aseq) ) lines( rep(Aseq[i],2) , SA[i] + SAsd[i]*c(-1,1) , col=2 )\n\npost <- extract.samples(m1a)\nfor ( i in 1:20 ) curve( inv_logit( post$a[i] + post$bA[i]*( log(x)-3.79 )/0.335 ) , add=TRUE , lwd=2 , col=grau() , from=1 )\n\n# try something else\n# normalize age\ndat$A2 <- d$age / 80\n\ncurve( 0.6*(1-exp(-3*x))*exp(-0.5*x) , from=0 , to=1 , ylim=c(0,1) )\n\nm1b <- ulam(\n    alist(\n        S ~ bernoulli(p),\n        p <- a*(1-exp(-b1*A2))*exp(-b2*A2),\n        a ~ beta(4,4),\n        c(b1,b2) ~ exponential(2)\n    ) , data=dat , chains=4 , cores=4 , log_lik=TRUE )\n\n# round age to nearest decade\nAr <- round( d$age / 10 ) * 10\nAseq <- c(10,20,30,40,50,60,70,80)\nSA <- sapply( Aseq , function(a) mean(dat$S[Ar==a]) )\nplot( Aseq , SA , ylim=c(0,1) , xlim=c(0,90) , type="b" , lwd=3 , col=2 , xlab="age (years)" , ylab="proportion successful" )\n\npost <- extract.samples(m1b)\nfor ( i in 1:20 ) with( post , \n    curve( a[i]*(1-exp(-b1[i]*x/80))*exp(-b2[i]*x/80) , add=TRUE , lwd=2 , col=grau() , from=1 ) )\n\n# now with elasticity\ncurve( 0.6*exp(-0.5*x)*(1-exp(-3*x))^2 , from=0 , to=1 , ylim=c(0,1) )\n\nm1c <- ulam(\n    alist(\n        S ~ bernoulli(p),\n        p <- a*exp(-b2*A2)*(1-exp(-b1*A2))^g,\n        a ~ beta(4,4),\n        g ~ exponential(0.5),\n        c(b1,b2) ~ exponential(2)\n    ) , data=dat , chains=4 , cores=4 , log_lik=TRUE )\n\npost <- extract.samples(m1c)\nfor ( i in 1:20 ) with( post , \n    curve( a[i]*exp(-b2[i]*x/80)*(1-exp(-b1[i]*x/80))^g[i] , add=TRUE , lwd=2 , col=grau() , from=1 ) )\n\ncompare( m1a , m1b , m1c , func=PSIS )\n\n################################################\n# 2\n# add individual hunter varying effects\n\ndat$H <- as.integer(as.factor(d$id))\ndat$NH <- max(dat$H)\n\ncheck_index(dat$H)\n\nm2 <- ulam(\n    alist(\n        S ~ bernoulli(p),\n        p <- a*exp(-b2H[H]*A2)*(1-exp(-b1H[H]*A2))^g,\n        # centered varying effects\n        transpars> vector[NH]:b1H <<- exp(b1+V[1:NH,1]),\n        transpars> vector[NH]:b2H <<- exp(b2+V[1:NH,2]),\n        # non-centered varying effects\n        transpars> matrix[NH,2]:V <-\n            compose_noncentered( sigma_H , L_Rho_H , Z ),\n        matrix[2,NH]:Z ~ normal( 0 , 1 ),\n        cholesky_factor_corr[2]:L_Rho_H ~ lkj_corr_cholesky( 4 ),\n        vector[2]:sigma_H ~ exponential(1),\n        # fixed priors\n        a ~ beta(4,4),\n        g ~ exponential(0.5),\n        c(b1,b2) ~ normal(0,0.5),\n        gq> matrix[2,2]:Rho_H <<- Chol_to_Corr( L_Rho_H )\n    ) , data=dat , chains=4 , cores=4 , iter=4000 )\n\nprecis(m2,3,pars=c("a","g","b1","b2","sigma_H","Rho_H"))\npost <- extract.samples(m2)\n\nblank(bty="n",ex=2)\n\n# round age to nearest decade\nAr <- round( d$age / 10 ) * 10\nAseq <- c(10,20,30,40,50,60,70,80)\nSA <- sapply( Aseq , function(a) mean(dat$S[Ar==a]) )\n\npar(mfrow=c(4,4))\nfor (k in 1:16 ) {\n\n    plot( Aseq , SA , ylim=c(0,1) , xlim=c(0,90) , type="b" , lwd=3 , col=0 , xlab="age (years)" , ylab="proportion successful" )\n\n    # plot nj random hunters\n    cols <- c(2,4,5,6)\n    nj <- 2\n    hseq <- sample(1:dat$NH,size=nj)\n    for ( j in hseq ) \n    for ( i in 1:10 ) with( post , \n        curve( a[i]*exp(-b2H[i,j]*x/80)*(1-exp(-b1H[i,j]*x/80))^g[i] , add=TRUE , lwd=2 , from=1 , col=cols[which(hseq==j)] ) )\n    points( Aseq , SA , type=\'b\' , col="white" , lwd=6 )\n    points( Aseq , SA , type=\'b\' , col=1 , lwd=3 )\n\n}#k\n\n# post <- extract.samples(m3)\n# post <- extract.samples(m2L)\n# a <- 1\n# compute variation across age for each hunter\nvHA <- rep(NA,dat$NH)\nmHA <- rep(NA,dat$NH) # mean success\nAseq <- 10:80\nfor ( i in 1:dat$NH ) {\n    # compute variation across age for each sample from posterior\n    # then average across samples\n    # v has margins [samples,ages]\n    v <- sapply( Aseq , function(x) \n        with( post , \n            a*exp(-b2H[,i]*x/80)*(1-exp(-b1H[,i]*x/80))^g ) )\n    # now average variation across ages\n    vHA[i] <- mean( apply( v , 1 , var ) )\n    mHA[i] <- mean( apply( v , 1 , mean ) )\n}#i\n\n# compute variation across individuals averaged by age\n# variation across all hunters at each age, then average over ages\nvAH <- rep(NA,length(Aseq))\nfor ( j in 1:length(Aseq) ) {\n    # variation at age j across all hunters\n    # v has margins [samples,hunters]\n    v <- sapply( 1:dat$NH , function(i) \n        with( post , \n            a*exp(-b2H[,i]*Aseq[j]/80)*(1-exp(-b1H[,i]*Aseq[j]/80))^g ) )\n    # average variance across individuals\n    vAH[j] <- mean( apply( v , 1 , var ) )\n}#j\n\n# average across hunters (of variation across age)\nmean(vHA)\n# average across age (of variation across hunters)\nmean(vAH)\n\nplot( Aseq , vAH , xlab="age (years)" , ylab="variation across hunters" , type="l" , lwd=3 , col=2 )\n\nplot( sort(vHA) , lwd=3 , col=2 , xlab="individual hunter" , ylab="variation across age" )\n\nplot( mHA , vHA , lwd=3 , col=2 , xlab="mean success across age" , ylab="variation across age" )\n\n################################################\n# 3\n# duration and impute missing values\n\nf <- function(x,a=0.9,b1=8,b2=0.8,g=6) a*exp(-b2*x)*(1-exp(-b1*x))^g\n\n# use poisson prob > 0, 1-exp(-lambda), and make lambda = L^d * f(age)\ncurve( 1-exp(-f(x)) , from=0 , to=1 , ylim=c(0,1) )\nfor ( L in c(0.1,0.5,1,10,100) )\ncurve( 1-exp(-(L^0.5)*f(x)) , add=TRUE , col=2 )\n\nL = d$hours / max(d$hours,na.rm=TRUE)\ndat$log_L <- log(L)\n\nccidx <- which(!is.na(dat$log_L))\ndatcc <- list(\n    S = dat$S[ccidx],\n    A2 = dat$A2[ccidx],\n    H = dat$H[ccidx],\n    NH = dat$NH,\n    log_L = dat$log_L[ccidx] \n)\n\nflist3 <- alist(\n    S ~ bernoulli(p),\n    p <- 1-exp( -exp(lambda*log_L) * f ),\n    f <- exp(-b2H[H]*A2)*(1-exp(-b1H[H]*A2))^g,\n    # centered varying effects\n    transpars> vector[NH]:b1H <<- exp(b1+V[1:NH,1]),\n    transpars> vector[NH]:b2H <<- exp(b2+V[1:NH,2]),\n    # non-centered varying effects\n    transpars> matrix[NH,2]:V <-\n        compose_noncentered( sigma_H , L_Rho_H , Z ),\n    matrix[2,NH]:Z ~ normal( 0 , 1 ),\n    cholesky_factor_corr[2]:L_Rho_H ~ lkj_corr_cholesky( 4 ),\n    vector[2]:sigma_H ~ exponential(1),\n    # duration prior\n    log_L ~ normal(muL,sigmaL),\n    muL ~ normal(-1,0.25),\n    sigmaL ~ exponential(2),\n    # fixed priors\n    lambda ~ exponential(1),\n    g ~ exponential(0.5),\n    c(b1,b2) ~ normal(0,0.5),\n    gq> matrix[2,2]:Rho_H <<- Chol_to_Corr( L_Rho_H )\n)\n\nm3cc <- ulam( flist3 , data=datcc , chains=4 , cores=4 , iter=1000 )\n\nm3 <- ulam( flist3 , data=dat , chains=4 , cores=4 , warmup=1000 , iter=4000 )\n\nprecis(m3,3,pars=c("b1","b2","g","lambda","sigma_H"))\nprecis(m3cc,3,pars=c("b1","b2","g","lambda","sigma_H"))\n\npost <- extract.samples(m3)\n\nf <- function(x,a=1,b1=8,b2=0.8,g=6) a*exp(-b2*x)*(1-exp(-b1*x))^g\n\nplot( NULL , xlim=c(-4,0) , ylim=c(0,1) , xlab="log trip duration" , ylab="probability success" )\n\nfor ( i in 1:20 )\nwith( post , \ncurve( 1-exp( -exp(x)^lambda[i] * f(0.5,b1=exp(b1[i]),b2=exp(b2[i]),g=g[i]) ) , add=TRUE , lwd=3 , col=2 )\n)\n\n# version of model 2 that uses same success function, for comparison\ndat0 <- dat\ndat0$log_L <- NULL\nm2L <- ulam(\n    alist(\n        S ~ bernoulli(p),\n        p <- 1 - exp( -exp(-b2H[H]*A2)*(1-exp(-b1H[H]*A2))^g ),\n        # centered varying effects\n        transpars> vector[NH]:b1H <<- exp(b1+V[1:NH,1]),\n        transpars> vector[NH]:b2H <<- exp(b2+V[1:NH,2]),\n        # non-centered varying effects\n        transpars> matrix[NH,2]:V <-\n            compose_noncentered( sigma_H , L_Rho_H , Z ),\n        matrix[2,NH]:Z ~ normal( 0 , 1 ),\n        cholesky_factor_corr[2]:L_Rho_H ~ lkj_corr_cholesky( 4 ),\n        vector[2]:sigma_H ~ exponential(1),\n        # fixed priors\n        a ~ beta(4,4),\n        g ~ exponential(0.5),\n        c(b1,b2) ~ normal(0,0.5),\n        gq> matrix[2,2]:Rho_H <<- Chol_to_Corr( L_Rho_H )\n    ) , data=dat0 , chains=4 , cores=4 , warmup=1000 , iter=4000 )\n\n################################################\n# 4\n# model harvest size\n\ndat$M <- d$kg.meat / mean(d$kg.meat[dat$S==1])\ndatcc$M <- dat$M[ccidx]\n\ndens( log(dat$M[dat$S==1]) , lwd=3 , col=2 , xlab="log(M)|M>0" )\n\nflist4 <- alist(\n    M|S==1 ~ dlnorm(mu,tau),\n    mu <- a + lambda*log_L + log(f),\n    f <- exp(-b2H[H]*A2)*(1-exp(-b1H[H]*A2))^g,\n    tau ~ exponential(1),\n    # centered varying effects\n    transpars> vector[NH]:b1H <<- exp(b1+V[1:NH,1]),\n    transpars> vector[NH]:b2H <<- exp(b2+V[1:NH,2]),\n    # non-centered varying effects\n    transpars> matrix[NH,2]:V <-\n        compose_noncentered( sigma_H , L_Rho_H , Z ),\n    matrix[2,NH]:Z ~ normal( 0 , 1 ),\n    cholesky_factor_corr[2]:L_Rho_H ~ lkj_corr_cholesky( 4 ),\n    vector[2]:sigma_H ~ exponential(1),\n    # duration prior\n    log_L ~ normal(muL,sigmaL),\n    muL ~ normal(0,0.25),\n    sigmaL ~ exponential(2),\n    # fixed priors\n    a ~ normal(0,0.5),\n    lambda ~ exponential(1),\n    g ~ exponential(0.5),\n    c(b1,b2) ~ normal(0,0.5),\n    gq> matrix[2,2]:Rho_H <<- Chol_to_Corr( L_Rho_H )\n)\n\nm4cc <- ulam( flist4 , data=datcc , chains=4 , cores=4 , iter=1000 )\n\nm4 <- ulam( flist4 , data=dat , chains=4 , cores=4 , warmup=1000 , iter=4000 )\n\nprecis(m4,3,pars=c("sigma_H"))\n\n# plot hunters against empirical means at each age\nblank(bty="n",ex=2)\n\n# round age to nearest decade\nAr <- round( d$age / 10 ) * 10\nAseq <- c(10,20,30,40,50,60,70,80)\nMA <- sapply( Aseq , function(a) mean(dat$M[dat$S==1 & Ar==a]) )\n\npost <- extract.samples(m4)\nLL <- log(0.45)\npar(mfrow=c(3,3))\nfor (k in 1:9 ) {\n\n    plot( Aseq , MA , ylim=c(0,1.3) , xlim=c(0,90) , type="b" , lwd=3 , col=0 , xlab="age (years)" , ylab="expected harvest" )\n\n    # plot nj random hunters\n    cols <- c(2,4,5,6)\n    nj <- 2\n    hseq <- sample(1:dat$NH,size=nj)\n    for ( j in hseq ) \n    for ( i in 1:10 ) with( post , \n        curve( \n                exp( \n                    a[i] + lambda[i]*LL +   \n                    (-b2H[i,j]*x/80) + g[i]*log(1-exp(-b1H[i,j]*x/80))\n                    + tau[i]^2/2 \n                ), \n            add=TRUE , lwd=2 , from=1 , col=cols[which(hseq==j)] ) )\n    points( Aseq , SA , type=\'b\' , col="white" , lwd=6 )\n    points( Aseq , SA , type=\'b\' , col=1 , lwd=3 )\n\n}#k\n'