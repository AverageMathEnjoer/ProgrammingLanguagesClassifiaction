b'package effectivejava.chapter4.item20;\nimport java.util.*;\n\n// Skeletal implementation class (Pages 102-3)\npublic abstract class AbstractMapEntry<K,V>\n        implements Map.Entry<K,V> {\n    // Entries in a modifiable map must override this method\n    @Override public V setValue(V value) {\n        throw new UnsupportedOperationException();\n    }\n    \n    // Implements the general contract of Map.Entry.equals\n    @Override public boolean equals(Object o) {\n        if (o == this)\n            return true;\n        if (!(o instanceof Map.Entry))\n            return false;\n        Map.Entry<?,?> e = (Map.Entry) o;\n        return Objects.equals(e.getKey(),   getKey())\n                && Objects.equals(e.getValue(), getValue());\n    }\n\n    // Implements the general contract of Map.Entry.hashCode\n    @Override public int hashCode() {\n        return Objects.hashCode(getKey())\n                ^ Objects.hashCode(getValue());\n    }\n\n    @Override public String toString() {\n        return getKey() + "=" + getValue();\n    }\n}\n'