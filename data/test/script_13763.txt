b'// UVa1607 Gates\n// Rujia Liu\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nconst int maxm = 200000 + 5;\n\nint n, m;\n\nstruct Gates {\n  int a, b, o;\n} gates[maxm];\n\n// returns the output of input 000..0111...1 (there are k 0\'s)\nint output(int k) {\n  for(int i = 1; i <= m; i++) {\n    int a = gates[i].a;\n    int b = gates[i].b;\n    int va = a < 0 ? -a > k : gates[a].o;\n    int vb = b < 0 ? -b > k : gates[b].o;\n    gates[i].o = !(va && vb);\n  }\n  return gates[m].o;\n}\n\n// returns k such that \n// 1. output(k) = output(n)\n// 2. output(k-1) = output(0)\nint solve(int vn) {\n  int L = 1, R = n;\n  while(L < R) {\n    int M = L + (R-L)/2;\n    if(output(M) == vn) R = M; else L = M+1;\n  }\n  return L;\n}\n\nint main() {\n  int T;\n  scanf("%d", &T);\n  while(T--) {\n    scanf("%d%d", &n, &m);\n    for (int i = 1; i <= m; i++)\n      scanf("%d%d", &gates[i].a, &gates[i].b);\n    int v0 = output(0);\n    int vn = output(n);\n    if(v0 == vn) {\n      for(int i = 1; i <= n; i++) printf("0");\n    } else {\n      int x = solve(vn);\n      for(int i = 1; i < x; i++) printf("0");\n      printf("x");\n      for(int i = x+1; i <= n; i++) printf("1");\n    }\n    printf("\\n");\n  }\n  return 0;\n}\n'