b'#\' Print Method for Objects of Class \\dQuote{list}\n#\'\n#\' Displays a list comprised of summarytools objects created with\n#\'   \\code{\\link{lapply}}. \n#\'\n#\' @usage\n#\'  \\method{print}{list}(x, method = "pander", file = "", \n#\'   append = FALSE, report.title = NA, table.classes = NA, \n#\'   bootstrap.css = st_options(\'bootstrap.css\'), \n#\'   custom.css = st_options(\'custom.css\'), silent = FALSE, \n#\'   footnote = st_options(\'footnote\'), collapse = 0,\n#\'   escape.pipe = st_options(\'escape.pipe\'), \\dots)\n#\' \n#\' @details This function is there only for cases where the object to be printed\n#\'   was created with \\code{\\link{lapply}}, as opposed to the recommended\n#\'   functions for creating grouped results (\\code{\\link{stby}} and\n#\'   \\code{\\link[dplyr]{group_by}}).\n#\' \n#\' @inheritParams print.summarytools\n#\' @method print list\n#\' @export\nprint.list <- function(x,\n                       method        = "pander",\n                       file          = "",\n                       append        = FALSE, \n                       report.title  = NA,\n                       table.classes = NA, \n                       bootstrap.css = st_options("bootstrap.css"), \n                       custom.css    = st_options("custom.css"),\n                       silent        = FALSE,\n                       footnote      = st_options("footnote"), \n                       collapse      = 0,\n                       escape.pipe   = st_options("escape.pipe"),\n                       ...) {\n\n  if (inherits(x[[1]], "summarytools")) {\n    \n    view(x,\n         method        = method,\n         file          = file,\n         append        = append, \n         report.title  = report.title,\n         table.classes = table.classes, \n         bootstrap.css = bootstrap.css,\n         custom.css    = custom.css,\n         silent        = silent,\n         footnote      = footnote,\n         collapse      = collapse,\n         escape.pipe   = escape.pipe,\n         ...)\n    \n  } else {\n    base::print.default(x, ...)\n  }\n}\n'