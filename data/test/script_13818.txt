b'package com.quyunshuo.androidbaseframemvvm.base.utils.network\n\nimport android.net.ConnectivityManager\nimport android.net.Network\nimport android.net.NetworkCapabilities\n\n\n/**\n * \xe5\xae\x9e\xe6\x97\xb6\xe7\x9b\x91\xe5\x90\xac\xe7\xbd\x91\xe7\xbb\x9c\xe7\x8a\xb6\xe6\x80\x81\xe5\x8f\x98\xe5\x8c\x96\xe7\x9a\x84[ConnectivityManager.NetworkCallback]\xe5\xae\x9e\xe7\x8e\xb0\xe7\xb1\xbb\n *\n * @author Qu Yunshuo\n * @since 2021/7/10 5:38 \xe4\xb8\x8b\xe5\x8d\x88\n */\nclass NetworkCallbackImpl : ConnectivityManager.NetworkCallback() {\n\n    /**\n     * \xe5\xbd\x93\xe5\x89\x8d\xe7\xbd\x91\xe7\xbb\x9c\xe7\xb1\xbb\xe5\x9e\x8b\n     */\n    var currentNetworkType: NetworkTypeEnum = NetworkTypeEnum.OTHER\n\n    /**\n     * \xe5\xbd\x93\xe5\x89\x8d\xe7\xbd\x91\xe7\xbb\x9c\xe6\x98\xaf\xe5\x90\xa6\xe5\xb7\xb2\xe8\xbf\x9e\xe6\x8e\xa5\n     */\n    var isConnected = false\n\n    /**\n     * \xe6\xb3\xa8\xe5\x86\x8c\xe7\x9a\x84\xe7\x9b\x91\xe5\x90\xac\n     */\n    var changeCall: NetworkStateChangeListener? = null\n\n    override fun onAvailable(network: Network) {\n        super.onAvailable(network)\n        isConnected = true\n        changeCall?.networkConnectChange(isConnected)\n    }\n\n    override fun onLost(network: Network) {\n        super.onLost(network)\n        isConnected = false\n        changeCall?.networkConnectChange(isConnected)\n    }\n\n    override fun onCapabilitiesChanged(network: Network, networkCapabilities: NetworkCapabilities) {\n        super.onCapabilitiesChanged(network, networkCapabilities)\n        if (networkCapabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_VALIDATED)) {\n            currentNetworkType = networkTypeConvert(networkCapabilities)\n            changeCall?.networkTypeChange(currentNetworkType)\n        }\n    }\n\n    /**\n     * \xe7\xbd\x91\xe7\xbb\x9c\xe7\xb1\xbb\xe5\x9e\x8b\xe8\xbd\xac\xe6\x8d\xa2\n     */\n    private fun networkTypeConvert(networkCapabilities: NetworkCapabilities): NetworkTypeEnum {\n        return when {\n            networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR) -> {\n                NetworkTypeEnum.TRANSPORT_CELLULAR\n            }\n            networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI) -> {\n                NetworkTypeEnum.TRANSPORT_WIFI\n            }\n            networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_BLUETOOTH) -> {\n                NetworkTypeEnum.TRANSPORT_BLUETOOTH\n            }\n            networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_ETHERNET) -> {\n                NetworkTypeEnum.TRANSPORT_ETHERNET\n            }\n            networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_VPN) -> {\n                NetworkTypeEnum.TRANSPORT_VPN\n            }\n            networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI_AWARE) -> {\n                NetworkTypeEnum.TRANSPORT_WIFI_AWARE\n            }\n            networkCapabilities.hasTransport(NetworkCapabilities.TRANSPORT_LOWPAN) -> {\n                NetworkTypeEnum.TRANSPORT_LOWPAN\n            }\n            else -> NetworkTypeEnum.OTHER\n        }\n    }\n}'