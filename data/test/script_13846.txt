b"-- |\n-- Copyright  : (c) Ivan Perez and Manuel Baerenz, 2016\n-- License    : BSD3\n-- Maintainer : ivan.perez@keera.co.uk\n--\n-- Utility functions to work with 'Arrow's.\nmodule Control.Arrow.Util where\n\n-- External imports\nimport Control.Arrow (Arrow, arr, (&&&), (>>^), (^<<))\n\n-- | Constantly produce the same output.\nconstantly :: Arrow a => b -> a c b\nconstantly = arr . const\n{-# INLINE constantly #-}\n\n-- * Apply functions at the end\n\n-- | Alternative name for '^<<'.\nelementwise :: Arrow a => (c -> d) -> a b c -> a b d\nelementwise = (^<<)\n\n-- | Apply a curried function with two arguments to the outputs of two arrows.\nelementwise2 :: Arrow a => (c -> d -> e) -> a b c -> a b d -> a b e\nelementwise2 op a1 a2 = (a1 &&& a2) >>^ uncurry op\n"