b'package effectivejava.chapter4.item18;\nimport java.util.*;\n\n// Reusable forwarding class (Page 90)\npublic class ForwardingSet<E> implements Set<E> {\n    private final Set<E> s;\n    public ForwardingSet(Set<E> s) { this.s = s; }\n\n    public void clear()               { s.clear();            }\n    public boolean contains(Object o) { return s.contains(o); }\n    public boolean isEmpty()          { return s.isEmpty();   }\n    public int size()                 { return s.size();      }\n    public Iterator<E> iterator()     { return s.iterator();  }\n    public boolean add(E e)           { return s.add(e);      }\n    public boolean remove(Object o)   { return s.remove(o);   }\n    public boolean containsAll(Collection<?> c)\n                                   { return s.containsAll(c); }\n    public boolean addAll(Collection<? extends E> c)\n                                   { return s.addAll(c);      }\n    public boolean removeAll(Collection<?> c)\n                                   { return s.removeAll(c);   }\n    public boolean retainAll(Collection<?> c)\n                                   { return s.retainAll(c);   }\n    public Object[] toArray()          { return s.toArray();  }\n    public <T> T[] toArray(T[] a)      { return s.toArray(a); }\n    @Override public boolean equals(Object o)\n                                       { return s.equals(o);  }\n    @Override public int hashCode()    { return s.hashCode(); }\n    @Override public String toString() { return s.toString(); }\n}\n'