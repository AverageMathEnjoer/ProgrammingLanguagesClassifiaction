b'import com.github.eprendre.tingshu.utils.Book\nimport com.github.eprendre.tingshu.utils.Episode\nimport org.jsoup.Jsoup\nimport org.junit.Test\nimport java.net.URLEncoder\n\nclass YingHuaTest {\n\n    @Test\n    fun search() {\n        val keywords = "\xe6\x88\x91"\n        val page = 1\n        val encodedKeywords = URLEncoder.encode(keywords, "utf-8")\n        val url = if (page == 1) {\n            "http://www.yinghuacd.com/search/${encodedKeywords}"\n        } else {\n            "http://www.yinghuacd.com/search/${encodedKeywords}/?page=${page}"\n        }\n        val doc = Jsoup.connect(url).testConfig(true).get()\n\n        val currentPage = 1\n        val totalPage = doc.selectFirst("#lastn")?.text()?.toInt() ?: 1\n\n        println(currentPage)\n        println(totalPage)\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select(".lpic > ul > li")\n        elementList.forEach { item ->\n            val coverUrl = item.selectFirst("a > img").attr("src")\n            val bookUrl = item.selectFirst("a").absUrl("href")\n            val title = item.selectFirst("h2 > a").text()\n            val status = item.selectFirst("span").text()\n            val desc = item.selectFirst("p").text()\n            val author = ""\n            val artist = ""\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.status = status\n                this.intro = desc\n            })\n        }\n        println(list)\n    }\n\n    @Test\n    fun bookDetail() {\n        val bookUrl = "http://www.yinghuacd.com/show/5478.html"\n        val doc = Jsoup.connect(bookUrl).testConfig(true).get()\n\n        val episodes = ArrayList<Episode>()\n        val elements = doc.select(".movurl > ul > li > a")\n        elements.forEach { element ->\n            val title = element.text()\n            val url = element.absUrl("href")\n            episodes.add(Episode(title, url))\n        }\n        episodes.reverse()\n        println(episodes)\n    }\n\n    @Test\n    fun categoryList() {\n        val url = "http://www.yinghuacd.com/japan/"\n        val list = ArrayList<Book>()\n        val doc = Jsoup.connect(url).testConfig(true).get()\n\n        var currentPage = 1\n        val totalPage = doc.selectFirst("#lastn")?.text()?.toInt() ?: 1\n        var nextUrl = ""\n        if (totalPage > 1) {\n            nextUrl = doc.select(".pages > .a1").last()?.absUrl("href") ?: ""\n            currentPage = doc.selectFirst(".pages > span")?.text()?.toInt() ?: 1\n        }\n\n        println(currentPage)\n        println(totalPage)\n        println(nextUrl)\n\n        val elementList = doc.select(".lpic > ul > li")\n        elementList.forEach { item ->\n            val coverUrl = item.selectFirst("a > img").attr("src")\n            val bookUrl = item.selectFirst("a").absUrl("href")\n            val title = item.selectFirst("h2 > a").text()\n            val status = item.selectFirst("span").text()\n            val desc = item.selectFirst("p").text()\n            val author = ""\n            val artist = ""\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.status = status\n                this.intro = desc\n            })\n        }\n        println(list)\n    }\n\n    @Test\n    fun getPlayUrl() {\n        val url = "http://www.yinghuacd.com/v/5478-1.html"\n        val doc = Jsoup.connect(url).testConfig(true).get()\n        val u = doc.selectFirst("#playbox").attr("data-vid")\n            .split("$")[0]\n        println(u)\n    }\n}'