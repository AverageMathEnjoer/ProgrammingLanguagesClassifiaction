b'{-# LANGUAGE CPP #-}\n\n-- |\n-- Module      : Hoodle.ModelAction.Layer\n-- Copyright   : (c) 2011-2014 Ian-Woo Kim\n--\n-- License     : BSD3\n-- Maintainer  : Ian-Woo Kim <ianwookim@gmail.com>\n-- Stability   : experimental\n-- Portability : GHC\nmodule Hoodle.ModelAction.Layer where\n\nimport Control.Category ((.))\nimport Control.Lens (over, view)\nimport Data.Hoodle.Generic (glayers)\nimport Data.Hoodle.Zipper (current, replace)\nimport Data.IORef (IORef, modifyIORef)\nimport Graphics.Hoodle.Render.Type (RLayer)\nimport qualified Graphics.UI.Gtk as Gtk\nimport Hoodle.Type.Alias (EditMode, Page)\nimport Hoodle.Util (maybeRead)\nimport Prelude hiding (id, (.))\n\n-- |\ngetCurrentLayer :: Page EditMode -> RLayer\ngetCurrentLayer = current . view glayers\n\n-- |\nadjustCurrentLayer :: RLayer -> Page EditMode -> Page EditMode\nadjustCurrentLayer nlayer = over glayers (replace nlayer)\n\n-- |\nlayerChooseDialog :: IORef Int -> Int -> Int -> IO Gtk.Dialog\nlayerChooseDialog layernumref cidx len = do\n  dialog <- Gtk.dialogNew\n  layerentry <- Gtk.entryNew\n  Gtk.entrySetText layerentry (show (succ cidx))\n  label <- Gtk.labelNew (Just (" / " ++ show len))\n  hbox <- Gtk.hBoxNew False 0\n  upper <- fmap Gtk.castToContainer (Gtk.dialogGetContentArea dialog)\n  Gtk.containerAdd upper hbox\n  Gtk.boxPackStart hbox layerentry Gtk.PackNatural 0\n  Gtk.boxPackStart hbox label Gtk.PackGrow 0\n  Gtk.widgetShowAll upper\n  buttonOk <- Gtk.dialogAddButton dialog Gtk.stockOk Gtk.ResponseOk\n  _buttonCancel <- Gtk.dialogAddButton dialog Gtk.stockCancel Gtk.ResponseCancel\n\n  _ <- buttonOk `Gtk.on` Gtk.buttonActivated $ do\n    txt <- Gtk.get layerentry Gtk.entryText\n    maybe (return ()) (modifyIORef layernumref . const . pred) . maybeRead $ txt\n  return dialog\n'