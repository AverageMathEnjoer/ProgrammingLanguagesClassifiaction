b'package com.rd.utils;\n\nimport android.os.Build;\nimport android.view.View;\n\nimport java.util.concurrent.atomic.AtomicInteger;\n\npublic class IdUtils {\n\n    private static final AtomicInteger nextGeneratedId = new AtomicInteger(1);\n\n    public static int generateViewId(){\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR1) {\n            return generateId();\n        } else {\n            return View.generateViewId();\n        }\n    }\n\n    /**\n     * Generate a value suitable for use in #setId(int).\n     * This value will not collide with ID values generated at build time by aapt for R.id.\n     *\n     * @return a generated ID value\n     */\n    private static int generateId() {\n        for (; ; ) {\n            final int result = nextGeneratedId.get();\n            // aapt-generated IDs have the high byte nonzero; clamp to the range under that.\n            int newValue = result + 1;\n            if (newValue > 0x00FFFFFF) newValue = 1; // Roll over to 1, not 0.\n            if (nextGeneratedId.compareAndSet(result, newValue)) {\n                return result;\n            }\n        }\n    }\n}\n'