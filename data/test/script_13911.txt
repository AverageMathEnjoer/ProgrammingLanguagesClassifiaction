b'# week 5\n\n# 1\n\nlibrary(rethinking)\ndata(NWOGrants)\nd <- NWOGrants\ndat <- list(\n    A = as.integer(d$awards),\n    N = as.integer(d$applications),\n    G = ifelse( d$gender=="f" , 1L , 2L ) ,\n    D = as.integer(d$discipline) \n)\n\n# for total effect, just G, no D\nm1 <- ulam(\n    alist(\n        A ~ binomial( N , p ),\n        logit(p) <- a[G],\n        a[G] ~ normal(-1,1)\n    ), data=dat , chains=4 , cores=4 )\n\nprecis(m1,2)\n\npost1 <- extract.samples(m1)\npost1$pG1 <- inv_logit( post1$a[,1] )\npost1$pG2 <- inv_logit( post1$a[,2] )\npost1$G_contrast <- post1$pG1 - post1$pG2\n\ndens( post1$G_contrast , lwd=4 , col=2 , xlab="F-M contrast (total)" )\nabline( v=0 , lty=3 )\n\n# 2\n\n# now with discipline\n\nm2 <- ulam(\n    alist(\n        A ~ binomial( N , p ),\n        logit(p) <- a[G,D],\n        matrix[G,D]:a ~ normal(-1,1)\n    ), data=dat , chains=4 , cores=4 )\n\nprecis(m2,3)\n\ntotal_apps <- sum(dat$N)\napps_per_disc <- sapply( 1:9 , function(i) sum(dat$N[dat$D==i]) )\n\npG1 <- link(m2,data=list(\n    D=rep(1:9,times=apps_per_disc),\n    N=rep(1,total_apps),\n    G=rep(1,total_apps)))\n\npG2 <- link(m2,data=list(\n    D=rep(1:9,times=apps_per_disc),\n    N=rep(1,total_apps),\n    G=rep(2,total_apps)))\n\ndens( pG1 - pG2 , lwd=4 , col=2 , xlab="F-M contrast (marginal)" , xlim=c(-0.3,0.3) )\nabline( v=0 , lty=3 )\n\n# show contrasts for each discipline\nplot( NULL , xlim=c(-0.4,0.4) , ylim=c(0,18) , xlab="F-M contrast for each discipline" , ylab="Density" )\nabline( v=0 , lty=3 )\ndat$disc <- as.character(d$discipline)\ndisc <- dat$disc[order(dat$D)]\nfor ( i in 1:9 ) {\n    pG1Di <- link(m2,data=list(D=i,N=1,G=1))\n    pG2Di <- link(m2,data=list(D=i,N=1,G=2))\n    Gcont <- pG1Di - pG2Di\n    dens( Gcont , add=TRUE , lwd=3 , col=i )\n    xloc <- ifelse( mean(Gcont) < 0 , -0.35 , 0.35 )\n    xpos <- ifelse( mean(Gcont) < 0 , 4 , 2 )\n    text( xloc + 0.5*mean(Gcont) , 18-i , disc[2*i] , col=i , pos=xpos , font=2 )\n}\n\n# 3\n\ntotal_f <- sum(d$applications[d$gender=="f"])\npDf <- d$applications[d$gender=="f"] / total_f\n\ntotal_m <- sum(d$applications[d$gender=="m"])\npDm <- d$applications[d$gender=="m"] / total_m\n\n# overall award rate in each discipline\nn_apps <- xtabs( dat$N ~ dat$D )\nn_awards <- xtabs( dat$A ~ dat$D )\np_award <- n_awards / n_apps\n\n# f/m award rate in each discipline\npost <- extract.samples(m2)\npF <- apply( inv_logit(post$a[,1,]) , 2 , mean )\npM <- apply( inv_logit(post$a[,2,]) , 2 , mean )\n\nplot( pDf , pDm , lwd=3 , col=ifelse(pDf>pDm,2,4) , pch=ifelse(pF>pM,"F","M") )\nabline(a=0,b=1, lty=3)\n\nidentify( pDf , pDm , round(p_award,2) )\n\n# 4\n\nlibrary(rethinking)\ndata(UFClefties)\nd <- UFClefties\ndat <- list(\n    Y = d$fighter1.win,\n    L1 = d$fighter1.lefty,\n    L2 = d$fighter2.lefty\n)\n\nm4a <- ulam(\n    alist(\n        Y ~ bernoulli(p),\n        logit(p) <- b*(L1 - L2),\n        b ~ normal(0,1)\n    ) , data=dat , chains=4 , cores=4  )\n\npost <- extract.samples(m4a)\ndens( inv_logit(post$b) , xlab="prob lefty win over righty" , lwd=4 , col=2 , xlim=c(0,1) )\nabline(v=0.5,lty=3)\n\n# model that tries to estimate fighter ability\n# not mentioned in solution guide, but this is what it would look like\n# sort(unique(c(d$fighter1,d$fighter2)))\ndat$id1 <- d$fighter1\ndat$id2 <- d$fighter2\nm4b <- ulam(\n    alist(\n        Y ~ bernoulli(p),\n        logit(p) <- (a[id1]*sigma + b*L1) - (a[id2]*sigma + b*L2) ,\n        vector[244]:a ~ normal(0,1),\n        b ~ normal(0,0.5),\n        sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4  )\nprecis(m4b,2)\n\n# SIMULATION\n# collider explanation example\nN <- 5000\nL <- rbern(N,0.1)\nA <- rnorm(N)\nQ <- rep(1,N)\n\n# qualify if A large enough or Lefty\nQ <- ifelse( A > 2 | (A > 1.25 & L==1) , 1 , 0 )\n\n# summarize\ntable(Q,L)\nsum(Q==1 & L==1)/sum(Q==1) # prop lefties\nmean( A[L==1 & Q==1] )\nmean( A[L==0 & Q==1] )\n\n# now sim fights among those qualifying\nk <- 2 # importance of ability differences\nb <- 0.5 # lefty advantage\nl <- L[Q==1]\na <- A[Q==1]\nM <- sum(Q==1)\nW <- rep(NA,M/2) # matches\nid1 <- rep(NA,M/2)\nid2 <- rep(NA,M/2)\nL1 <- id1\nL2 <- L1\nfor ( i in 1:(M/2) ) {\n    a1 <- a[i] + b*l[i]\n    a2 <- a[M/2+i] + b*l[M/2+i]\n    p <- inv_logit( k*(a1 - a2) )\n    f1win <- rbern(1,p)\n    W[i] <- f1win\n    id1[i] <- i\n    id2[i] <- M/2+i\n    L1[i] <- l[i]\n    L2[i] <- l[M/2+i]\n}\n\n# now estimate left hand advantage\n\ndatx <- list( Y=W , id1=id1, id2=id2 , L1=L1 , L2=L2 , nid=max(id2) )\n\nm4x <- ulam(\n    alist(\n        Y ~ bernoulli(p),\n        logit(p) <- b*(L1 - L2),\n        b ~ normal(0,0.5)\n    ) , data=datx , chains=4 , cores=4  )\n\nprecis(m4x,1)\n\npost <- extract.samples(m4x)\ndens( inv_logit(post$b) , xlab="prob lefty win over righty" , lwd=4 , col=2 , xlim=c(0,1) )\nabline(v=0.5,lty=3)\n'