b'{-# LANGUAGE ScopedTypeVariables #-}\nmodule Api.Test.DashedName (resource) where\n\nimport Control.Monad.Reader\nimport Control.Monad.Trans.Except\nimport Rest\nimport qualified Rest.Resource as R\n\nimport Api.Test (WithText)\n\ntype SiteId = String\n\ntype WithSiteSubscription = ReaderT SiteId WithText\n\nresource :: Resource WithText WithSiteSubscription SiteId Void Void\nresource = mkResourceReader\n  { R.name   = "foo-bar"\n  , R.schema = noListing $ named [("id", singleRead id)]\n  , R.remove = Just remove\n  }\n\nremove :: Handler WithSiteSubscription\nremove = mkConstHandler id handler\n  where\n    handler :: ExceptT Reason_ WithSiteSubscription ()\n    handler = return ()\n'