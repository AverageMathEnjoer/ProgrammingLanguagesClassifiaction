b"{-# OPTIONS_GHC -fno-warn-orphans #-}\n-- |\n-- Copyright  : (c) Ivan Perez and Manuel Baerenz, 2016\n-- License    : BSD3\n-- Maintainer : ivan.perez@keera.co.uk\n--\n-- Instance of 'ArrowPlus' for Monadic Stream Functions ('MSF').\n--\n-- Import this module to include that (orphan) instance.\n--\n-- This is only defined for monads that are instances of 'MonadPlus'.\nmodule Data.MonadicStreamFunction.Instances.ArrowPlus where\n\n-- External imports\nimport Control.Applicative (Alternative (..))\nimport Control.Arrow       (ArrowPlus (..), ArrowZero (..))\nimport Control.Monad       (MonadPlus, mplus, mzero)\n\n-- Internal imports\nimport Data.MonadicStreamFunction.Core         ()\nimport Data.MonadicStreamFunction.InternalCore (MSF (MSF, unMSF))\n\n-- | Instance of 'ArrowZero' for Monadic Stream Functions ('MSF'). The monad\n-- must be an instance of 'MonadPlus'.\ninstance (Monad m, MonadPlus m) => ArrowZero (MSF m) where\n  zeroArrow = MSF $ const mzero\n\n-- | Instance of 'ArrowPlus' for Monadic Stream Functions ('MSF'). The monad\n-- must be an instance of 'MonadPlus'.\ninstance (Monad m, MonadPlus m) => ArrowPlus (MSF m) where\n  sf1 <+> sf2 = MSF $ \\a -> unMSF sf1 a `mplus` unMSF sf2 a\n\n-- | Instance of 'Alternative' for Monadic Stream Functions ('MSF'),\n-- implemented using the 'ArrowZero' and 'ArrowPlus' instances.\ninstance (Functor m, Monad m, MonadPlus m) => Alternative (MSF m a) where\n  empty = zeroArrow\n  (<|>) = (<+>)\n"