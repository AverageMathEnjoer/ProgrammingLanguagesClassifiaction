b'package com.github.eprendre.sources_by_eprendre\n\nimport com.github.eprendre.tingshu.extensions.config\nimport com.github.eprendre.tingshu.extensions.getCookie\nimport com.github.eprendre.tingshu.extensions.getDesktopUA\nimport com.github.eprendre.tingshu.sources.*\nimport com.github.eprendre.tingshu.utils.*\nimport org.jsoup.Jsoup\nimport java.net.URL\nimport java.net.URLEncoder\n\nobject YouShengXiaoShuoBa : TingShu(), CoverUrlExtraHeaders, AudioUrlExtraHeaders {\n    override fun getSourceId(): String {\n        return "c242639e0cea4abeade8b9729f03ba0b"\n    }\n\n    override fun getUrl(): String {\n        return "http://m.ysxs8.vip"\n    }\n\n    override fun getName(): String {\n        return "\xe6\x9c\x89\xe5\xa3\xb0\xe5\xb0\x8f\xe8\xaf\xb4\xe5\x90\xa7"\n    }\n\n    override fun getDesc(): String {\n        return "\xe6\x8e\xa8\xe8\x8d\x90\xe6\x8c\x87\xe6\x95\xb0:3\xe6\x98\x9f \xe2\xad\x90\xe2\xad\x90\xe2\xad\x90\\n\xe6\x90\x9c\xe7\xb4\xa2\xe5\xa4\xb1\xe6\x95\x88"\n    }\n\n    override fun isSearchable(): Boolean {\n        return false\n    }\n\n    override fun search(keywords: String, page: Int): Pair<List<Book>, Int> {\n        val encodedKeywords = URLEncoder.encode(keywords, "gb2312")\n        val url = "http://m.ysxs8.vip/search.asp?searchword=$encodedKeywords&page=$page"\n        val doc = Jsoup.connect(url).config().get()\n\n        val totalPage = doc.selectFirst(".page").ownText().split("/")[1].toInt()\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select("#cateList_wap > .bookbox")\n        elementList.forEach { element ->\n            val coverUrl = element.selectFirst(".bookimg > img").attr("orgsrc")\n            val title = element.selectFirst(".bookname").text()\n            val bookId = element.attr("bookid")\n            val bookUrl = "http://m.ysxs8.vip/downlist/$bookId.html"\n            val (author, artist) = element.selectFirst(".author").let {\n                val array = it.text().split(" ")\n                Pair(array[1].replace("\xe6\x92\xad\xe9\x9f\xb3:", "\xe4\xbd\x9c\xe8\x80\x85: "), array[0].replace("\xe4\xbd\x9c\xe8\x80\x85\xef\xbc\x9a", "\xe6\x92\xad\xe9\x9f\xb3: "))\n            }\n            val status = element.selectFirst(".update").text()\n            val intro = element.selectFirst(".intro_line").text()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.intro = intro\n                this.status = status\n                this.sourceId = getSourceId()\n            })\n        }\n        return Pair(list, totalPage)\n    }\n\n    override fun getBookDetailInfo(bookUrl: String, loadEpisodes: Boolean, loadFullPages: Boolean): BookDetail {\n        val episodes = ArrayList<Episode>()\n        if (loadEpisodes) {\n            val doc = Jsoup.connect(bookUrl).config().get()\n            val list = doc.select("#playlist > ul > li > a").map {\n                Episode(it.text(), it.attr("abs:href"))\n            }\n            episodes.addAll(list)\n        }\n        return BookDetail(episodes)\n    }\n\n    override fun getAudioUrlExtractor(): AudioUrlExtractor {\n        AudioUrlWebViewExtractor.setUp(\n            script = "document.getElementById(\\"xplayer\\").contentDocument.getElementById(\\"viframe\\").contentDocument.getElementsByTagName(\\"audio\\")[0].src") { str ->\n            return@setUp str.replace("\'", "").replace("\\"", "")\n        }\n        return AudioUrlWebViewExtractor\n    }\n\n    override fun getCategoryMenus(): List<CategoryMenu> {\n        val menu1 = CategoryMenu(\n            "\xe6\x9c\x89\xe5\xa3\xb0\xe5\xb0\x8f\xe8\xaf\xb4", listOf(\n                CategoryTab("\xe7\xbd\x91\xe7\xbb\x9c\xe7\x8e\x84\xe5\xb9\xbb", "http://m.ysxs8.vip/downlist/r52_1.html"),\n                CategoryTab("\xe6\x8e\xa2\xe9\x99\xa9\xe7\x9b\x97\xe5\xa2\x93", "http://m.ysxs8.vip/downlist/r45_1.html"),\n                CategoryTab("\xe6\x81\x90\xe6\x80\x96\xe6\x82\xac\xe7\x96\x91", "http://m.ysxs8.vip/downlist/r17_1.html"),\n                CategoryTab("\xe8\xaf\x84\xe4\xb9\xa6\xe4\xb8\x8b\xe8\xbd\xbd", "http://m.ysxs8.vip/downlist/r3_1.html"),\n                CategoryTab("\xe5\x8e\x86\xe5\x8f\xb2\xe5\x86\x9b\xe4\xba\x8b", "http://m.ysxs8.vip/downlist/r15_1.html"),\n                CategoryTab("\xe4\xbc\xa0\xe7\xbb\x9f\xe6\xad\xa6\xe4\xbe\xa0", "http://m.ysxs8.vip/downlist/r12_1.html"),\n                CategoryTab("\xe9\x83\xbd\xe5\xb8\x82\xe8\xa8\x80\xe6\x83\x85", "http://m.ysxs8.vip/downlist/r13_1.html"),\n                CategoryTab("\xe5\xae\x98\xe5\x9c\xba\xe5\x88\x91\xe4\xbe\xa6", "http://m.ysxs8.vip/downlist/r14_1.html"),\n                CategoryTab("\xe4\xba\xba\xe7\x89\xa9\xe4\xbc\xa0\xe8\xae\xb0", "http://m.ysxs8.vip/downlist/r16_1.html")\n            )\n        )\n        val menu2 = CategoryMenu(\n            "\xe5\x85\xb6\xe5\xae\x83", listOf(\n                CategoryTab("\xe7\x9b\xb8\xe5\xa3\xb0\xe6\x88\x8f\xe6\x9b\xb2", "http://m.ysxs8.vip/downlist/r7_1.html"),\n                CategoryTab("\xe7\xae\xa1\xe7\x90\x86\xe8\x90\xa5\xe9\x94\x80", "http://m.ysxs8.vip/downlist/r6_1.html"),\n                CategoryTab("\xe5\xb9\xbf\xe6\x92\xad\xe5\x89\xa7", "http://m.ysxs8.vip/downlist/r18_1.html"),\n                CategoryTab("\xe7\x99\xbe\xe5\xae\xb6\xe8\xae\xb2\xe5\x9d\x9b", "http://m.ysxs8.vip/downlist/r32_1.html"),\n                CategoryTab("\xe5\xa4\x96\xe8\xaf\xad\xe8\xaf\xbb\xe7\x89\xa9", "http://m.ysxs8.vip/downlist/r35_1.html"),\n                CategoryTab("\xe5\x84\xbf\xe7\xab\xa5\xe8\xaf\xbb\xe7\x89\xa9", "http://m.ysxs8.vip/downlist/r4_1.html"),\n                CategoryTab("\xe6\x98\x8e\xe6\x9c\x9d\xe9\x82\xa3\xe4\xba\x9b\xe4\xba\x8b\xe5\x84\xbf", "http://m.ysxs8.vip/downlist/r36_1.html"),\n                CategoryTab("\xe6\x9c\x89\xe5\xa3\xb0\xe6\x96\x87\xe5\xad\xa6", "http://m.ysxs8.vip/downlist/r41_1.html"),\n                CategoryTab("\xe8\x81\x8c\xe5\x9c\xba\xe5\x95\x86\xe6\x88\x98", "http://m.ysxs8.vip/downlist/r81_1.html")\n            )\n        )\n        return listOf(menu1, menu2)\n    }\n\n    override fun getCategoryList(url: String): Category {\n        val doc = Jsoup.connect(url).config().get()\n        val pageElement = doc.selectFirst(".page")\n        val nextUrl = pageElement.selectFirst(".next").absUrl("href")\n\n        val (currentPage, totalPage) = pageElement.ownText().replace("\xe6\xac\xa1", "")\n            .replace("\xef\xbc\x9a", "").replace("\xe9\xa1\xb5", "").trim()\n            .split("/").let {\n            Pair(it[0].toInt(), it[1].toInt())\n        }\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select(".book-ol > .book-subli > a")\n        elementList.forEach { element ->\n            val coverUrl = element.selectFirst("img").attr("data-original")\n            val title = element.selectFirst(".book-title").text()\n            val bookUrl = element.absUrl("href")\n            val (author, artist) = element.select(".book-submeta").last().text().trim().let {\n                val array = it.split("\xe6\x92\xad\xe9\x9f\xb3\xef\xbc\x9a")\n                Pair(array[0].replace("\xe4\xbd\x9c\xe8\x80\x85\xef\xbc\x9a", "").trim(), array[1].trim())\n            }\n            val status = element.selectFirst(".book-submeta").text()\n            val intro = element.selectFirst(".book-desc").text()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.intro = intro\n                this.status = status\n                this.sourceId = getSourceId()\n            })\n        }\n\n        return Category(list, currentPage, totalPage, url, nextUrl)\n    }\n\n    override fun coverHeaders(coverUrl: String, headers: MutableMap<String, String>): Boolean {\n        if(coverUrl.contains("ysxs8.vip")) {\n            headers["Host"] = URL(coverUrl).host\n            headers["User-Agent"] = getDesktopUA()\n            return true\n        }\n        return false\n    }\n\n    override fun headers(audioUrl: String): Map<String, String> {\n        val hashMap = hashMapOf<String, String>()\n        if (audioUrl.contains("ysxs8")) {//\xe5\x88\xa4\xe6\x96\xad\xe4\xb8\x80\xe4\xb8\x8b\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe4\xb8\x80\xe4\xb8\xaa\xe7\xbd\x91\xe7\xab\x99\xe5\x8f\xaf\xe8\x83\xbd\xe4\xbc\x9a\xe7\x88\xac\xe5\x8f\x96\xe5\xa4\x9a\xe5\xae\xb6\xe8\xb5\x84\xe6\xba\x90\n            hashMap["Cookie"] = getCookie("http://m.ysxs8.vip/") ?: ""\n        }\n        return hashMap\n    }\n\n}'