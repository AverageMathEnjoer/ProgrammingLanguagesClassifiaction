b'package effectivejava.chapter6.item39.annotationwitharrayparameter;\n\nimport java.util.*;\n\n// Program containing an annotation with an array parameter (Page 185)\npublic class Sample3 {\n    // This variant can process annotations whose parameter is a single element (identical to those on page 183)\n    @ExceptionTest(ArithmeticException.class)\n    public static void m1() {  // Test should pass\n        int i = 0;\n        i = i / i;\n    }\n    @ExceptionTest(ArithmeticException.class)\n    public static void m2() {  // Should fail (wrong exception)\n        int[] a = new int[0];\n        int i = a[1];\n    }\n    @ExceptionTest(ArithmeticException.class)\n    public static void m3() { }  // Should fail (no exception)\n\n    // Code containing an annotation with an array parameter (Page 185)\n    @ExceptionTest({ IndexOutOfBoundsException.class,\n                     NullPointerException.class })\n    public static void doublyBad() {   // Should pass\n        List<String> list = new ArrayList<>();\n\n        // The spec permits this method to throw either\n        // IndexOutOfBoundsException or NullPointerException\n        list.addAll(5, null);\n    }\n}\n'