b'package com.codeest.geeknews.ui.zhihu.fragment;\n\nimport android.app.ActivityOptions;\nimport android.content.Intent;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.v4.widget.SwipeRefreshLayout;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.View;\n\nimport com.codeest.geeknews.R;\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.base.RootFragment;\nimport com.codeest.geeknews.base.contract.zhihu.DailyContract;\nimport com.codeest.geeknews.component.RxBus;\nimport com.codeest.geeknews.model.bean.DailyBeforeListBean;\nimport com.codeest.geeknews.model.bean.DailyListBean;\nimport com.codeest.geeknews.presenter.zhihu.DailyPresenter;\nimport com.codeest.geeknews.ui.zhihu.activity.CalendarActivity;\nimport com.codeest.geeknews.ui.zhihu.activity.ZhihuDetailActivity;\nimport com.codeest.geeknews.ui.zhihu.adapter.DailyAdapter;\nimport com.codeest.geeknews.util.CircularAnimUtil;\nimport com.codeest.geeknews.util.DateUtil;\nimport com.prolificinteractive.materialcalendarview.CalendarDay;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport butterknife.BindView;\nimport butterknife.OnClick;\n\n/**\n * Created by codeest on 2016/8/11.\n */\npublic class DailyFragment extends RootFragment<DailyPresenter> implements DailyContract.View {\n\n    @BindView(R.id.fab_calender)\n    FloatingActionButton fabCalender;\n    @BindView(R.id.swipe_refresh)\n    SwipeRefreshLayout swipeRefresh;\n    @BindView(R.id.view_main)\n    RecyclerView rvDailyList;\n\n    String currentDate;\n    DailyAdapter mAdapter;\n    List<DailyListBean.StoriesBean> mList = new ArrayList<>();\n\n    boolean isDataReady = false;\n\n    @Override\n    protected void initInject() {\n        getFragmentComponent().inject(this);\n    }\n\n    @Override\n    protected int getLayoutId() {\n        return R.layout.fragment_daily;\n    }\n\n    @Override\n    protected void initEventAndData() {\n        super.initEventAndData();\n        currentDate = DateUtil.getTomorrowDate();\n        mAdapter = new DailyAdapter(mContext,mList);\n        mAdapter.setOnItemClickListener(new DailyAdapter.OnItemClickListener() {\n            @Override\n            public void onItemClick(int position,View shareView) {\n                mPresenter.insertReadToDB(mList.get(position).getId());\n                mAdapter.setReadState(position,true);\n                if(mAdapter.getIsBefore()) {\n                    mAdapter.notifyItemChanged(position + 1);\n                } else {\n                    mAdapter.notifyItemChanged(position + 2);\n                }\n                Intent intent = new Intent();\n                intent.setClass(mContext, ZhihuDetailActivity.class);\n                intent.putExtra(Constants.IT_ZHIHU_DETAIL_ID, mList.get(position).getId());\n                ActivityOptions options = ActivityOptions.makeSceneTransitionAnimation(mActivity, shareView, "shareView");\n                mContext.startActivity(intent,options.toBundle());\n            }\n        });\n        swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n            @Override\n            public void onRefresh() {\n                if(currentDate.equals(DateUtil.getTomorrowDate())) {\n                    mPresenter.getDailyData();\n                } else {\n                    int year = Integer.valueOf(currentDate.substring(0,4));\n                    int month = Integer.valueOf(currentDate.substring(4,6));\n                    int day = Integer.valueOf(currentDate.substring(6,8));\n                    CalendarDay date = CalendarDay.from(year, month - 1, day);\n                    RxBus.getDefault().post(date);\n                }\n            }\n        });\n        rvDailyList.setLayoutManager(new LinearLayoutManager(mContext));\n        rvDailyList.setAdapter(mAdapter);\n        stateLoading();\n        mPresenter.getDailyData();\n    }\n\n    @Override\n    public void onStart() {\n        super.onStart();\n        if (isDataReady) {\n            mPresenter.startInterval();\n        }\n    }\n\n    @Override\n    public void onStop() {\n        super.onStop();\n        mPresenter.stopInterval();\n    }\n\n    /**\n     * \xe5\xbd\x93\xe5\xa4\xa9\xe6\x95\xb0\xe6\x8d\xae\n     * @param info\n     */\n    @Override\n    public void showContent(DailyListBean info) {\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n        stateMain();\n        mList = info.getStories();\n        currentDate = String.valueOf(Integer.valueOf(info.getDate()) + 1);\n        mAdapter.addDailyDate(info);\n        isDataReady = true;\n        mPresenter.startInterval();\n    }\n\n    /**\n     * \xe8\xbf\x87\xe5\xbe\x80\xe6\x95\xb0\xe6\x8d\xae\n     * @param date\n     * @param info\n     */\n    @Override\n    public void showMoreContent(String date,DailyBeforeListBean info) {\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n        stateMain();\n        isDataReady = false;\n        mPresenter.stopInterval();\n        mList = info.getStories();\n        currentDate = String.valueOf(Integer.valueOf(info.getDate()));\n        mAdapter.addDailyBeforeDate(info);\n    }\n\n    @Override\n    public void doInterval(int currentCount) {\n        mAdapter.changeTopPager(currentCount);\n    }\n\n    @OnClick(R.id.fab_calender)\n    void startCalender() {\n        Intent it = new Intent();\n        it.setClass(mContext,CalendarActivity.class);\n        CircularAnimUtil.startActivity(mActivity,it,fabCalender,R.color.fab_bg);\n    }\n\n    @Override\n    public void stateError() {\n        super.stateError();\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n    }\n}\n'