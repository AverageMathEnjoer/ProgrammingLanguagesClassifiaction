b'-- |\n-- Module      : Hoodle.Widget.Scroll\n-- Copyright   : (c) 2014 Ian-Woo Kim\n--\n-- License     : BSD3\n-- Maintainer  : Ian-Woo Kim <ianwookim@gmail.com>\n-- Stability   : experimental\n-- Portability : GHC\n--\n-- Pan-Zoom widget drawing and action\nmodule Hoodle.Widget.Scroll where\n\nimport Control.Lens ((%~))\nimport Hoodle.Accessor (pureUpdateUhdl)\nimport Hoodle.Coroutine.Draw (invalidateInBBox)\nimport Hoodle.Type.Canvas\n  ( CanvasId,\n    canvasWidgets,\n    unboxLens,\n  )\nimport Hoodle.Type.Coroutine (MainCoroutine)\nimport Hoodle.Type.Enum (DrawFlag (Efficient))\nimport Hoodle.Type.HoodleState\n  ( getCanvasInfo,\n    setCanvasInfo,\n  )\nimport Hoodle.Type.Widget\n  ( doesUseScrollWidget,\n    widgetConfig,\n  )\n\n-- |\ntoggleScroll :: CanvasId -> MainCoroutine ()\ntoggleScroll cid = do\n  pureUpdateUhdl $ \\uhdl ->\n    let ncinfobox =\n          ( (unboxLens (canvasWidgets . widgetConfig . doesUseScrollWidget) %~ not)\n              . getCanvasInfo cid\n          )\n            uhdl\n     in setCanvasInfo (cid, ncinfobox) uhdl\n  invalidateInBBox Nothing Efficient cid\n'