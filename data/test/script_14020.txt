b'package com.github.eprendre.sources_by_eprendre\n\nimport com.github.eprendre.tingshu.extensions.config\nimport com.github.eprendre.tingshu.sources.AudioUrlExtractor\nimport com.github.eprendre.tingshu.sources.AudioUrlJsoupExtractor\nimport com.github.eprendre.tingshu.sources.TingShu\nimport com.github.eprendre.tingshu.utils.*\nimport org.jsoup.Jsoup\n\nobject VBus : TingShu() {\n    override fun getSourceId(): String {\n        return "405d26b44ad24b25a450ede64bac682f"\n    }\n\n    override fun getUrl(): String {\n        return "https://www.vbus.cc/"\n    }\n\n    override fun getName(): String {\n        return "\xe5\xa3\xb0\xe9\x9f\xb3\xe5\xb7\xb4\xe5\xa3\xab"\n    }\n\n    override fun getDesc(): String {\n        return "\xe6\x8e\xa8\xe8\x8d\x90\xe6\x8c\x87\xe6\x95\xb0:2\xe6\x98\x9f \xe2\xad\x90\xe2\xad\x90\\n\xe4\xb8\x80\xe4\xb8\xaa\xe6\x97\xa0\xe9\x9a\x9c\xe7\xa2\x8d\xe4\xba\xa4\xe6\xb5\x81\xe5\xb9\xb3\xe5\x8f\xb0\xef\xbc\x8c\xe4\xb8\x80\xe7\xbe\xa4\xe7\x83\xad\xe7\x88\xb1\xe5\xa3\xb0\xe9\x9f\xb3\xe7\x9a\x84\xe4\xba\xba\xe3\x80\x82"\n    }\n\n    override fun isWebViewNotRequired(): Boolean {\n        return true\n    }\n\n    /**\n     * \xe6\xb2\xa1\xe6\x9c\x89\xe6\x90\x9c\xe7\xb4\xa2\n     */\n    override fun isSearchable(): Boolean {\n        return false\n    }\n\n    override fun search(keywords: String, page: Int): Pair<List<Book>, Int> {\n        return Pair(emptyList(), 1)\n    }\n\n    override fun getAudioUrlExtractor(): AudioUrlExtractor {\n        AudioUrlJsoupExtractor.setUp { doc ->\n            doc.selectFirst("audio").absUrl("src")\n        }\n        return AudioUrlJsoupExtractor\n    }\n\n    override fun getCategoryMenus(): List<CategoryMenu> {\n        val menu = CategoryMenu(\n                "\xe5\xa3\xb0\xe9\x9f\xb3\xe5\xb7\xb4\xe5\xa3\xab", listOf(\n                CategoryTab("\xe6\x8e\xa8\xe8\x8d\x90", "https://www.vbus.cc/recommend/1"),\n                CategoryTab("\xe6\x9c\x80\xe6\x96\xb0", "https://www.vbus.cc/new/1"),\n                CategoryTab("\xe6\x9c\x80\xe7\x83\xad", "https://www.vbus.cc/hot/1"))\n        )\n        return listOf(menu)\n    }\n\n    override fun getCategoryList(url: String): Category {\n        val doc = Jsoup.connect(url).config(false).get()\n        val pages = doc.select(".page-item > a")\n        val nextPage = pages.firstOrNull { it.text().contains("\xe4\xb8\x8b\xe4\xb8\x80\xe9\xa1\xb5") }\n        var nextUrl = ""\n        if (nextPage != null) {\n            nextUrl = nextPage.absUrl("href")\n        }\n        val currentPage = url.split("/").last().toInt()\n        val totalPage = if (nextPage == null) {\n            currentPage\n        } else {\n            currentPage + 1\n        }\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select(".program-list > li")\n        elementList.forEach { element ->\n            val a = element.selectFirst("h3 > a")\n            val bookUrl = a.absUrl("href")\n            val coverUrl = ""\n            val title = a.text()\n            val programMeta = element.selectFirst(".program-meta")\n            val status = programMeta.select("span").last().text()\n            val artist = programMeta.select("span").first().text()\n            val author = programMeta.select("> a").joinToString(separator = ",") { it.text() }\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.status = status\n                this.sourceId = getSourceId()\n            })\n        }\n        return Category(list, currentPage, totalPage, url, nextUrl)\n    }\n\n    override fun getBookDetailInfo(bookUrl: String, loadEpisodes: Boolean, loadFullPages: Boolean): BookDetail {\n        val episodes = ArrayList<Episode>()\n        if (loadEpisodes) {\n            episodes.add(Episode("\xe9\x9f\xb3\xe9\xa2\x91", bookUrl))\n        }\n        return BookDetail(episodes)\n    }\n}'