b'\xef\xbb\xbf#load "DecisionTrees.fs"\nopen MachineLearning.DecisionTrees\n\n// Construct a Decision Tree by hand\nlet manualTree = \n    Choice\n        ("Sci-Fi",\n         [|("No",\n            Choice\n              ("Action",\n               [|("Yes", Conclusion "Stallone");\n                 ("No", Conclusion "Schwarzenegger")|]));\n           ("Yes", Conclusion "Schwarzenegger")|])\n\n// Use the tree to Classify a test Subject\nlet test = [| ("Action", "Yes"); ("Sci-Fi", "Yes") |]\nlet actor = classify test manualTree\n\n// Sample dataset\nlet movies =\n    [| "Action"; "Sci-Fi"; "Actor" |],\n    [| [| "Yes"; "No";  "Stallone" |];\n       [| "Yes"; "No";  "Stallone" |];\n       [| "No";  "No";  "Schwarzenegger"  |];\n       [| "Yes"; "Yes"; "Schwarzenegger"  |];\n       [| "Yes"; "Yes"; "Schwarzenegger"  |] |]\n\n// Construct the Decision Tree off the data\n// and classify another test subject\nlet tree = build movies\nlet subject = [| ("Action", "Yes"); ("Sci-Fi", "No") |]\nlet answer = classify subject tree\n\n// Lenses dataset: http://archive.ics.uci.edu/ml/datasets/Lenses\n// The following code assumes the dataset has been massaged a bit,\n// and that data has been transformed to be comma-separated instead of tab.\n\n//open System.IO\n//let lenses = \n//    let file = the path to the file goes here\n//    let fileAsLines =\n//        File.ReadAllLines(file)\n//        |> Array.map (fun line -> line.Split(\',\'))\n//    let dataset = \n//        fileAsLines\n//        |> Array.map (fun line -> \n//            [| line.[0]\n//               line.[1]; \n//               line.[2]; \n//               line.[3];\n//               line.[4]|])\n//    let labels = [| "Age"; "Presc."; "Astigm"; "Tears"; "Decision" |]\n//    labels, dataset\n\n// Nursery Dataset: http://archive.ics.uci.edu/ml/datasets/Nursery\n\n//open System.IO\n//let nursery =\n//    let file = the path to the file goes here\n//    let fileAsLines =\n//        File.ReadAllLines(file)\n//        |> Array.map (fun line -> line.Split(\',\'))\n//    let labels = [| "parents"; "has_nurs"; "form"; "children"; "housing"; "finance"; "social"; "health"; "Decision" |]\n//    let dataset = \n//        fileAsLines\n//        |> Array.map (fun line -> \n//            [| line.[0]\n//               line.[1]; \n//               line.[2]; \n//               line.[3];\n//               line.[4]\n//               line.[5]\n//               line.[6]\n//               line.[7]\n//               line.[8] |])\n//    labels, dataset'