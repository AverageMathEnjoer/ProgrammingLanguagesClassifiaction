b'package effectivejava.chapter11.item79;\nimport java.util.*;\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\n\n// Simple test of ObservableSet - Page 319\npublic class Test3 {\n    public static void main(String[] args) {\n        ObservableSet<Integer> set =\n                new ObservableSet<>(new HashSet<>());\n\n// Observer that uses a background thread needlessly\n        set.addObserver(new SetObserver<>() {\n            public void added(ObservableSet<Integer> s, Integer e) {\n                System.out.println(e);\n                if (e == 23) {\n                    ExecutorService exec =\n                            Executors.newSingleThreadExecutor();\n                    try {\n                        exec.submit(() -> s.removeObserver(this)).get();\n                    } catch (ExecutionException | InterruptedException ex) {\n                        throw new AssertionError(ex);\n                    } finally {\n                        exec.shutdown();\n                    }\n                }\n            }\n        });\n\n        for (int i = 0; i < 100; i++)\n            set.add(i);\n    }\n}'