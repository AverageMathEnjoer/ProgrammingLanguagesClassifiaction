b'// UVa247 Calling Circles\n// Rujia Liu\n#include<cstdio>\n#include<vector>\n#include<string>\n#include<map>\n#include<cstring>\nusing namespace std;\n\nvector<string> names;\nint ID(const string& s) {\n  for(int i = 0; i < names.size(); i++)\n    if(names[i] == s) return i;\n  names.push_back(s);\n  return names.size() - 1;\n}\n\nconst int maxn = 25 + 5;\nint n, m, vis[maxn], d[maxn][maxn];\nvoid dfs(int u) {\n  vis[u] = 1;\n  for(int v = 0; v < n; v++)\n    if(!vis[v] && d[u][v] && d[v][u]) {\n      printf(", %s", names[v].c_str());\n      dfs(v);\n    }\n}\n\nint main() {\n  char s1[99], s2[99];\n  int kase = 0;\n  while(scanf("%d%d", &n, &m) == 2 && n) {\n    names.clear();\n    memset(d, 0, sizeof(d));\n    for(int i = 0; i < n; i++) d[i][i] = 1;\n    while(m--) {\n      scanf("%s%s", s1, s2);\n      d[ID(s1)][ID(s2)] = 1;\n    }\n    for(int k = 0; k < n; k++)\n      for(int i = 0; i < n; i++)\n        for(int j = 0; j < n; j++)\n          d[i][j] |= d[i][k] && d[k][j];\n\n    if(kase > 0) printf("\\n");\n    printf("Calling circles for data set %d:\\n", ++kase);\n\n    memset(vis, 0, sizeof(vis));\n    for(int i = 0; i < n; i++)\n      if(!vis[i]) {\n        printf("%s", names[i].c_str());\n        dfs(i);\n        printf("\\n");\n      }\n  }\n  return 0;\n}\n'