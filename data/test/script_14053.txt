b'package icu.nullptr.twifucker.ui\n\nimport android.app.AlertDialog\nimport android.app.Dialog\nimport android.content.Context\nimport android.view.ViewGroup\nimport android.view.ViewGroup.LayoutParams.MATCH_PARENT\nimport android.view.ViewGroup.LayoutParams.WRAP_CONTENT\nimport androidx.recyclerview.widget.RecyclerView\nimport com.github.kyuubiran.ezxhelper.EzXHelper.addModuleAssetPath\nimport icu.nullptr.twifucker.R\nimport icu.nullptr.twifucker.modulePrefs\nimport org.json.JSONArray\n\nclass FeatureSwitchDialog(context: Context) : Dialog(context) {\n\n    class FeatureSwitchAdapter(private var arr: JSONArray, private val context: Context) :\n        RecyclerView.Adapter<FeatureSwitchAdapter.ViewHolder>() {\n        class ViewHolder(itemView: FeatureSwitchItem) : RecyclerView.ViewHolder(itemView) {\n            val featureSwitchItem = itemView\n            val keyView = itemView.keyTextView\n            var valueView = itemView.valueTextView\n        }\n\n        fun reloadAddedData(arr: JSONArray) {\n            this.arr = arr\n            notifyItemInserted(arr.length() - 1)\n        }\n\n        fun reset() {\n            val len = arr.length()\n            arr = JSONArray()\n            notifyItemRangeRemoved(0, len)\n        }\n\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\n            val view = FeatureSwitchItem(parent.context)\n            return ViewHolder(view)\n        }\n\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n            val isBoolean = arr.getJSONObject(position).optString("type", "boolean") == "boolean"\n            val key = arr.getJSONObject(position).optString("key")\n\n            holder.keyView.text = key\n            if (isBoolean) {\n                val bool = arr.getJSONObject(position).optBoolean("value")\n                holder.valueView.text = bool.toString()\n            } else {\n                val decimal = arr.getJSONObject(position).optString("value")\n                holder.valueView.text = decimal\n            }\n\n            holder.featureSwitchItem.setOnClickListener { _ ->\n                if (!isBoolean) return@setOnClickListener\n                val bool = !arr.getJSONObject(position).optBoolean("value")\n                holder.valueView.text = bool.toString()\n                arr.getJSONObject(position).put("value", bool)\n                modulePrefs.putString("feature_switch", arr.toString())\n            }\n            holder.featureSwitchItem.setOnLongClickListener { _ ->\n                addModuleAssetPath(context)\n                AlertDialog.Builder(context).let {\n                    it.setMessage(R.string.msg_yes_no)\n                    it.setPositiveButton(R.string.yes) { _, _ ->\n                        arr.remove(position)\n                        modulePrefs.putString("feature_switch", arr.toString())\n                        notifyItemChanged(position)\n                    }\n                    it.setNegativeButton(R.string.no, null)\n                    it.show()\n                }\n                true\n            }\n        }\n\n        override fun getItemCount(): Int = arr.length()\n    }\n\n    init {\n        addModuleAssetPath(context)\n\n        val featureSwitch = modulePrefs.getString("feature_switch", "[]")\n        var arr = JSONArray(featureSwitch)\n        val featureSwitchAdapter = FeatureSwitchAdapter(arr, context)\n\n        val featureSwitchView = FeatureSwitchView(context).apply {\n            layoutParams = ViewGroup.LayoutParams(\n                MATCH_PARENT, WRAP_CONTENT\n            )\n        }\n        featureSwitchView.setAdapter(featureSwitchAdapter)\n        featureSwitchView.setOnResetClickListener {\n            addModuleAssetPath(context)\n            AlertDialog.Builder(context).let {\n                it.setMessage(R.string.msg_yes_no)\n                it.setPositiveButton(R.string.yes) { _, _ ->\n                    arr = JSONArray()\n                    modulePrefs.putString("feature_switch", "[]")\n                    featureSwitchAdapter.reset()\n                }\n                it.setNegativeButton(R.string.no, null)\n                it.show()\n            }\n        }\n        featureSwitchView.setOnAddClickListener {\n            KeyValueDialog(context) {\n                featureSwitchAdapter.reloadAddedData(it)\n            }\n        }\n        setContentView(featureSwitchView)\n        show()\n        window?.setLayout(\n            MATCH_PARENT, WRAP_CONTENT\n        )\n    }\n}\n'