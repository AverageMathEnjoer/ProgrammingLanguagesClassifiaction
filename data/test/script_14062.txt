b'package effectivejava.chapter7.item42;\n\nimport java.util.function.DoubleBinaryOperator;\n\n// Enum with function object fields & constant-specific behavior (Page 195)\npublic enum Operation {\n    PLUS  ("+", (x, y) -> x + y),\n    MINUS ("-", (x, y) -> x - y),\n    TIMES ("*", (x, y) -> x * y),\n    DIVIDE("/", (x, y) -> x / y);\n\n    private final String symbol;\n    private final DoubleBinaryOperator op;\n\n    Operation(String symbol, DoubleBinaryOperator op) {\n        this.symbol = symbol;\n        this.op = op;\n    }\n\n    @Override public String toString() { return symbol; }\n\n    public double apply(double x, double y) {\n        return op.applyAsDouble(x, y);\n    }\n\n    // Main method from Item 34 (Page 163)\n    public static void main(String[] args) {\n        double x = Double.parseDouble(args[0]);\n        double y = Double.parseDouble(args[1]);\n        for (Operation op : Operation.values())\n            System.out.printf("%f %s %f = %f%n",\n                    x, op, y, op.apply(x, y));\n    }\n}\n'