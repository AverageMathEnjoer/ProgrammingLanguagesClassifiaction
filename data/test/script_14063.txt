b'using System;\nusing System.Runtime.InteropServices;\n\nstatic unsafe class Console\n{\n    [DllImport("kernel32")]\n    static extern IntPtr GetStdHandle(int nStdHandle);\n\n    [DllImport("kernel32")]\n    static extern IntPtr WriteConsoleW(IntPtr hConsole, void* lpBuffer, int charsToWrite, out int charsWritten, void* reserved);\n\n    public static void WriteLine(string s)\n    {\n        IntPtr stdInputHandle = GetStdHandle(-11);\n        int charsWritten;\n\n        fixed (char* c = s)\n        {\n            WriteConsoleW(stdInputHandle, c, s.Length, out charsWritten, null);\n        }\n\n        char newLine = \'\\n\';\n        WriteConsoleW(stdInputHandle, &newLine, 1, out charsWritten, null);\n    }\n}\n\nclass MyException : Exception { }\n\ninterface IFooer\n{\n    void Foo();\n}\n\nstruct Fooer : IFooer\n{\n    public void Foo() => Console.WriteLine("Foo");\n}\n\nclass Program\n{\n    static int Main()\n    {\n        try\n        {\n            throw new MyException();\n            Console.WriteLine("Exception not thrown!");\n        }\n        catch\n        {\n            Console.WriteLine("Exception caught");\n        }\n\n        IFooer fooer = (IFooer)new Fooer();\n        fooer.Foo();\n\n        return 42;\n    }\n}\n'