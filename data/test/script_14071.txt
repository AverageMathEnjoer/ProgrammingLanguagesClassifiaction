b'{-# LANGUAGE CPP #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# OPTIONS_GHC -fno-warn-orphans #-}\n\nmodule Hoodle.Type.Event where\n\nimport Control.Concurrent (MVar, ThreadId)\nimport Control.Monad.Trans.Crtn.Event (ActionOrder (..))\nimport Data.ByteString (ByteString)\nimport Data.Hoodle.BBox (BBoxed)\nimport Data.Hoodle.Simple\n  ( Anchor,\n    Dimension,\n    Image,\n    Item,\n    Link,\n    Stroke,\n  )\nimport Data.IORef (IORef)\nimport qualified Data.Text as T\nimport Data.UUID (UUID)\nimport Graphics.Hoodle.Render.Type\n  ( CanvasId,\n    RBackground,\n    RHoodle,\n    RItem,\n    SurfaceID,\n  )\nimport qualified Graphics.Rendering.Cairo as Cairo\nimport qualified Graphics.UI.Gtk as Gtk\nimport Hoodle.Device (PenButton, PointerCoord)\nimport Hoodle.Type.Enum\n  ( BackgroundStyle,\n    NewPageModeType,\n    PenColor,\n    PenType,\n    RotateDir,\n    SelectType,\n  )\nimport Hoodle.Type.PageArrangement (PageNum)\nimport Hoodle.Util (UrlPath)\n\n-- |\ndata AllEvent = UsrEv UserEvent | SysEv SystemEvent\n  deriving (Show)\n\n-- | orphan instance for Surface for convenience\ninstance Show Cairo.Surface where\n  show _ = "cairo surface"\n\n-- |\ndata SystemEvent\n  = TestSystemEvent\n  | ClockUpdateEvent\n  | RenderCacheUpdate (SurfaceID, (Double, Cairo.Surface))\n  deriving (Show)\n\n-- |\ndata UserEvent\n  = Initialized (Maybe FilePath)\n  | CanvasConfigure Int Double Double\n  | UpdateCanvas Int\n  | UpdateCanvasEfficient Int\n  | PenDown Int PenButton PointerCoord\n  | PenMove Int PointerCoord\n  | PenUp Int PointerCoord\n  | TouchDown Int PointerCoord\n  | TouchMove Int PointerCoord\n  | TouchUp Int PointerCoord\n  | PenColorChanged PenColor\n  | PenWidthChanged Int\n  | AssignPenMode (Either PenType SelectType)\n  | BackgroundStyleChanged BackgroundStyle\n  | AssignNewPageMode NewPageModeType\n  | HScrollBarMoved Int Double\n  | VScrollBarMoved Int Double\n  | VScrollBarStart Int Double\n  | VScrollBarEnd Int Double\n  | PaneMoveStart\n  | PaneMoveEnd\n  | ToViewAppendMode\n  | ToSelectMode\n  | ToSinglePage\n  | ToContSinglePage\n  | Menu MenuEvent\n  | GotOk\n  | OkCancel Bool\n  | FileChosen (Maybe FilePath)\n  | ColorChosen (Maybe PenColor)\n  | GotClipboardContent (Maybe [Item])\n  | ContextMenuCreated\n  | GotContextMenuSignal ContextMenuEvent\n  | LaTeXInput (Maybe (ByteString, ByteString))\n  | TextInput (Maybe String)\n  | AddLink (Maybe (String, FilePath))\n  | OpenLink UrlPath (Maybe (T.Text, T.Text))\n  | OpenShared UUID\n  | OpenTemp UUID FilePath\n  | EventDisconnected\n  | GetHoodleFileInfo (IORef (Maybe String))\n  | GetHoodleFileInfoFromTab UUID (IORef (Maybe String))\n  | GotLink (Maybe String) (Int, Int)\n  | FileReloadOrdered\n  | CustomKeyEvent String\n  | GotRevision String String\n  | GotRevisionInk String [Stroke]\n  | ChangeDialog\n  | ActionOrdered\n  | GotRecogResult Bool T.Text\n  | MiniBuffer MiniBufferEvent\n  | MultiLine MultiLineEvent\n  | RenderEv RenderEvent\n  | LinePosition (Maybe (Int, Int))\n  | Keyword (Maybe T.Text)\n  | SwitchTab Int\n  | CloseTab UUID\n  | UIEv UIEvent\n  | NetworkProcess NetworkEvent\n  deriving (Show)\n\n-- | orphan instance for IORef for convenience\ninstance Show (IORef a) where\n  show _ = "IORef"\n\nnewtype UIEvent = UIGetFlag Bool\n  deriving (Show)\n\ndata RenderEvent\n  = GotRItem RItem\n  | GotRItems [RItem]\n  | GotRBackground RBackground\n  | GotRHoodle RHoodle\n  | GotNone\n  | FinishCommand SurfaceID\n  deriving (Show)\n\n-- |\ndata MenuEvent\n  = MenuNew\n  | MenuAnnotatePDF\n  | MenuOpen\n  | MenuSave\n  | MenuSaveAs\n  | MenuReload\n  | MenuRecentDocument\n  | MenuLoadPNGorJPG\n  | MenuLoadSVG\n  | MenuLoadImageBackground\n  | MenuText\n  | MenuEmbedTextSource\n  | MenuEditEmbedTextSource\n  | MenuTextFromSource\n  | MenuLaTeX\n  | MenuCombineLaTeX\n  | MenuLaTeXFromSource\n  | MenuUpdateLaTeX\n  | MenuEmbedPredefinedImage\n  | MenuEmbedPredefinedImage2\n  | MenuEmbedPredefinedImage3\n  | MenuPrint\n  | MenuExport\n  | MenuStartSync\n  | MenuVersionSave\n  | MenuShowRevisions\n  | MenuShowUUID\n  | MenuQuit\n  | MenuUndo\n  | MenuRedo\n  | MenuCut\n  | MenuCopy\n  | MenuPaste\n  | MenuDelete\n  | MenuFullScreen\n  | MenuZoom\n  | MenuZoomIn\n  | MenuZoomOut\n  | MenuNormalSize\n  | MenuPageWidth\n  | MenuPageHeight\n  | MenuSetZoom\n  | MenuFirstPage\n  | MenuPreviousPage\n  | MenuNextPage\n  | MenuLastPage\n  | MenuShowLayer\n  | MenuHideLayer\n  | MenuHSplit\n  | MenuVSplit\n  | MenuDelCanvas\n  | MenuNewPageBefore\n  | MenuNewPageAfter\n  | MenuNewPageAtEnd\n  | MenuDeletePage\n  | MenuExportPageSVG\n  | MenuNewLayer\n  | MenuNextLayer\n  | MenuPrevLayer\n  | MenuGotoLayer\n  | MenuDeleteLayer\n  | MenuPaperSize\n  | MenuPaperColor\n  | MenuPaperStyle\n  | MenuApplyToAllPages\n  | MenuEmbedAllPDFBkg\n  | MenuDefaultPaper\n  | MenuSetAsDefaultPaper\n  | MenuAddLink\n  | MenuAddAnchor\n  | MenuListAnchors\n  | MenuSelectRegion\n  | MenuSelectRectangle\n  | MenuVerticalSpace\n  | MenuPenOptions\n  | MenuEraserOptions\n  | MenuHighlighterOptions\n  | MenuTextFont\n  | MenuColorPicker\n  | MenuDefaultPen\n  | MenuDefaultEraser\n  | MenuDefaultHighlighter\n  | MenuDefaultText\n  | MenuSetAsDefaultOption\n  | MenuRelaunch\n  | MenuUseXInput\n  | MenuUseTouch\n  | MenuUsePopUpMenu\n  | MenuEmbedImage\n  | MenuEmbedPDF\n  | MenuFollowLinks\n  | MenuKeepAspectRatio\n  | MenuUseVariableCursor\n  | MenuTogglePanZoomWidget\n  | MenuToggleLayerWidget\n  | MenuToggleClockWidget\n  | MenuToggleScrollWidget\n  | MenuPressureSensitivity\n  | MenuAddTab\n  | MenuCloseTab\n  | MenuAbout\n  | MenuDefault\n  | MenuEditNetEmbedTextSource\n  | MenuToggleNetworkEditSource\n  | MenuLaTeXNetwork\n  deriving (Show)\n\n-- |\ndata ImgType = TypSVG | TypPDF\n  deriving (Show, Ord, Eq)\n\n-- |\ndata ContextMenuEvent\n  = CMenuSaveSelectionAs ImgType\n  | CMenuCut\n  | CMenuCopy\n  | CMenuDelete\n  | CMenuCanvasView CanvasId PageNum Double Double\n  | CMenuAutosavePage\n  | CMenuLinkConvert Link\n  | CMenuCreateALink\n  | CMenuAssocWithNewFile\n  | CMenuMakeLinkToAnchor Anchor\n  | CMenuPangoConvert (Double, Double) T.Text\n  | CMenuLaTeXConvert (Double, Double) T.Text\n  | CMenuLaTeXConvertNetwork (Double, Double) T.Text\n  | CMenuLaTeXUpdate (Double, Double) Dimension T.Text\n  | CMenuCropImage (BBoxed Image)\n  | CMenuRotate RotateDir (BBoxed Image)\n  | CMenuExport (BBoxed Image)\n  | CMenuExportHoodlet Item\n  | CMenuConvertSelection Item\n  | CMenuCustom\n  deriving (Show, Ord, Eq)\n\n-- | event for minibuffer operation (currently pen only)\ndata MiniBufferEvent\n  = MiniBufferInitialized Gtk.DrawWindow\n  | MiniBufferPenDown PenButton PointerCoord\n  | MiniBufferPenUp PointerCoord\n  | MiniBufferPenMove PointerCoord\n  deriving (Show)\n\n-- | orphan instance for DrawWindow for convenience\ninstance Show Gtk.DrawWindow where\n  show _ = "DrawWindow"\n\n-- | event for multiline text view/buffer\nnewtype MultiLineEvent = MultiLineChanged T.Text\n  deriving (Show)\n\n-- | event for network\ndata NetworkEvent\n  = NetworkDialog\n  | NetworkInitialized ThreadId (MVar ())\n  | NetworkReceived T.Text\n  | NetworkCloseDialog\n  | NetworkClosed\n  deriving (Show)\n\n-- | orphan instance for MVar for convenience\ninstance Show (MVar ()) where\n  show _ = "MVar"\n\n-- |\nviewModeToUserEvent :: Gtk.RadioAction -> IO UserEvent\nviewModeToUserEvent a = do\n  v <- Gtk.radioActionGetCurrentValue a\n  case v of\n    1 -> return ToSinglePage\n    0 -> return ToContSinglePage\n    _ -> return ToSinglePage\n\n-- |\nmkIOaction :: ((AllEvent -> IO ()) -> IO AllEvent) -> Either (ActionOrder AllEvent) AllEvent\nmkIOaction = Left . ActionOrder\n'