b'package lyons.order.service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport lyons.dao.OrderDaoImpl;\nimport lyons.order.entity.Order;\n\n/**\n * \n * \xb6\xa9\xb5\xa5\xbd\xd3\xbf\xda\xca\xb5\xcf\xd6\xc0\xe0\n * @author  lyons(zhanglei)\n */\npublic class OrderServiceImpl\n{\n    OrderDaoImpl dao = new OrderDaoImpl();\n    \n    /**\n     * \xb2\xe9\xd1\xaf\xcb\xf9\xd3\xd0\xd3\xc3\xbb\xa7\xcb\xf9\xd3\xd0\xb6\xa9\xb5\xa5\xc1\xd0\xb1\xed\n     * @return\n     */\n    public List<Order> orderAllList()\n    {\n        return dao.queryOrderAllList();\n    }\n    \n    /**\n     * \xb2\xe9\xd1\xaf\xb5\xb1\xc7\xb0\xd3\xc3\xbb\xa7\xcb\xf9\xd3\xd0\xb6\xa9\xb5\xa5\xc1\xd0\xb1\xed\n     * @param userName\n     * @return\n     */\n    public List<Order> orderList(String userName)\n    {\n        return dao.queryOrderListByuserName(userName);\n    }\n    \n    /**\n     * \xb8\xf9\xbe\xdd\xd3\xc3\xbb\xa7\xc3\xfb+\xb9\xd8\xbc\xfc\xd7\xd6\xb2\xe9\xd1\xaf\xb6\xa9\xb5\xa5\n     * @param condition\n     * @return\n     */\n    public List<Order> orderListByKeyName(String queryUserName,String keyWord)\n    {\n        //\xd3\xc3\xbb\xa7\xca\xb2\xc3\xb4\xb6\xbc\xc3\xbb\xd3\xd0\xca\xe4\xc8\xeb\xca\xb1\xb7\xb5\xbb\xd8\xc8\xab\xb2\xbf\xb6\xa9\xb5\xa5\xc1\xd0\xb1\xed\n        if (queryUserName==null && "".equals(queryUserName.trim())&& keyWord==null && "".equals(keyWord.trim()))\n        {\n            return orderAllList();\n        }\n        \n        Order orderList = new Order();\n        if (!(queryUserName==null || "".equals(queryUserName.trim())))\n        {\n            orderList.setUserName(queryUserName);\n        }\n        if (!(keyWord==null || "".equals(keyWord.trim())))\n        {\n            orderList.setKeyWord(keyWord);\n        }\n        \n        return dao.queryOrderByKeyName(orderList);\n        \n    }\n    \n    \n    /**\n     * \xc9\xbe\xb3\xfd\xb5\xa5\xb8\xf6\xa1\xb0\xcb\xf9\xd3\xd0\xa1\xb1\xb6\xa9\xb5\xa5\n     * @param userName\n     * @return\n     */\n    public void deleteOrderOneById(String idstr)\n    {\n        if (!(idstr==null || "".equals(idstr)))\n        {\n           int id = Integer.parseInt(idstr);\n           dao.deleteOrderOneById(id);\n        }\n        \n        return;\n        \n    }\n    \n    /**\n     * \n     * \xc5\xfa\xc1\xbf\xc9\xbe\xb3\xfd\xb6\xa9\xb5\xa5 By ids\n     * @param userName\n     * @return\n     */\n    public void deleteOrderBatch(String[] ids)\n    {\n        List<Integer> idList = new ArrayList<Integer>();\n        if (ids==null||ids.length<=0)\n        {\n            String idTemp[] = {"-1"};\n            ids = idTemp;//\xb7\xc0\xd6\xb9\xbf\xd5\xd6\xb8\xd5\xeb\xd2\xec\xb3\xa3\n        }\n        for (String id : ids)\n        {\n            idList.add(Integer.valueOf(id));\n        }\n        dao.deleteOrderBatch(idList);\n        \n    }\n    \n    /**\n     * \n     * \xc5\xfa\xc1\xbf\xcc\xed\xbc\xd3\xb6\xa9\xb5\xa5\n     * @param map\n     */\n    public void insertOrderBatch(List<Order> listOrder)\n    {\n        if (listOrder.size() >0 )\n        {\n            dao.insertOrderBatch(listOrder);\n        }\n        \n    }\n    \n}\n'