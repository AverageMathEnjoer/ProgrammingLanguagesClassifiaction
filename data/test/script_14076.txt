b'package com.loper7.date_time_picker\n\nimport android.util.Log\nimport com.loper7.date_time_picker.number_picker.NumberPicker\nimport java.text.DateFormatSymbols\nimport java.util.*\nimport kotlin.collections.ArrayList\n\n/**\n *\n * @CreateDate:     2020/9/11 13:41\n * @Description:    java\xe7\xb1\xbb\xe4\xbd\x9c\xe7\x94\xa8\xe6\x8f\x8f\xe8\xbf\xb0\n * @Author:         LOPER7\n * @Email:          loper7@163.com\n */\nobject DateTimeConfig {\n    const val YEAR = 0\n    const val MONTH = 1\n    const val DAY = 2\n    const val HOUR = 3\n    const val MIN = 4\n    const val SECOND = 5\n\n    const val GLOBAL_LOCAL = 0\n    const val GLOBAL_CHINA = 1\n    const val GLOBAL_US = 2\n\n    const val DATE_DEFAULT = 0 //\xe5\x85\xac\xe5\x8e\x86\n    const val DATE_LUNAR = 1 //\xe5\x86\x9c\xe5\x8e\x86\n\n    //\xe6\x95\xb0\xe5\xad\x97\xe6\xa0\xbc\xe5\xbc\x8f\xe5\x8c\x96\xef\xbc\x8c<10\xe7\x9a\x84\xe6\x95\xb0\xe5\xad\x97\xe5\x89\x8d\xe8\x87\xaa\xe5\x8a\xa8\xe5\x8a\xa00\n    val formatter =\n        NumberPicker.Formatter { value: Int ->\n            var str = value.toString()\n            if (value < 10) {\n                str = "0$str"\n            }\n            str\n        }\n    //\xe5\x9b\xbd\xe9\x99\x85\xe5\x8c\x96\xe6\xa0\xbc\xe6\x9c\x88\xe4\xbb\xbd\xe6\xa0\xbc\xe5\xbc\x8f\xe5\x8c\x96\n    val globalizationMonthFormatter =\n        NumberPicker.Formatter { value: Int ->\n            var str = value.toString()\n            if (value in 1..12)\n                str = DateFormatSymbols(Locale.US).months.toList()[value - 1]\n            str\n        }\n\n\n\n    //\xe5\x9b\xbd\xe9\x99\x85\xe5\x8c\x96\xe6\xa0\xbc\xe6\x9c\x88\xe4\xbb\xbd\xe6\xa0\xbc\xe5\xbc\x8f\xe5\x8c\x96-\xe7\xbc\xa9\xe5\x86\x99\n    val globalMonthFormatter =\n        NumberPicker.Formatter { value: Int ->\n            var str = value.toString()\n            if (value in 1..12) {\n                var month = DateFormatSymbols(Locale.US).months.toList()[value - 1]\n                str = if (month.length > 3)\n                    month.substring(0, 3)\n                else\n                    month\n            }\n            str\n        }\n\n\n    private fun isChina(): Boolean {\n        return Locale.getDefault().language.contains("zh", true)\n    }\n\n    fun showChina(global: Int): Boolean {\n        return global == GLOBAL_CHINA || (global == GLOBAL_LOCAL && isChina())\n    }\n\n\n}'