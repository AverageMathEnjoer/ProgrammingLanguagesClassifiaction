b'\xef\xbb\xbfusing System.Text;\nusing System.Text.RegularExpressions;\n\nnamespace RonSijm.ButtFish.Ascii;\n\npublic static class FENToCharArrayConverter\n{\n    private const string DigitsRegexString = "[\\\\d]+";\n    // TODO (CORE7): Use [RegexGenerator(DigitsRegexString)]\n    private static readonly Regex DigitsRegex = new(DigitsRegexString);\n\n    public static char[,] ConvertToCharArray(this string fenCode)\n    {\n        var result = new char[8, 8];\n        var fenLineSplit = fenCode.Split(\' \');\n\n        var piecePositionsArray = ReplaceDigitsWithEmptyStrings(fenLineSplit[0]).Split(\'/\');\n\n        if (piecePositionsArray.Length != 8)\n        {\n            return null;\n        }\n\n        for (var index = 0; index < piecePositionsArray.Length; index++)\n        {\n            var row = piecePositionsArray[index];\n\n            for (var i = 0; i < 8; i++)\n            {\n                result[index, i] = row[i];\n            }\n        }\n\n        return result;\n    }\n\n    public static bool IsWhiteToMove(this string fenCode)\n    {\n        var fenLineSplit = fenCode.Split(\' \');\n        if (fenLineSplit[1] == "w")\n        {\n            return true;\n        }\n\n        if (fenLineSplit[1] == "b")\n        {\n            return false;\n        }\n\n        throw new ArgumentOutOfRangeException();\n    }\n\n    private static string ReplaceDigitsWithEmptyStrings(string position)\n    {\n        var isMatch = DigitsRegex.Match(position);\n        var bob = new StringBuilder(position);\n\n        while (isMatch.Success)\n        {\n            var emptySquareCount = int.Parse(isMatch.Value);\n            var newPositionString = string.Empty;\n\n            for (var i = 0; i < emptySquareCount; i++)\n            {\n                newPositionString += " ";\n            }\n\n            bob.Remove(isMatch.Index, 1);\n            bob.Insert(isMatch.Index, newPositionString);\n\n            position = bob.ToString();\n            isMatch = DigitsRegex.Match(position);\n        }\n\n        return position;\n    }\n}'