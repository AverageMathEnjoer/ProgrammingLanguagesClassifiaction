b'/*\n**  Included in SQLite3 port to C#-SQLite;  2008 Noah B Hart\n**  C#-SQLite is an independent reimplementation of the SQLite software library\n**\n*************************************************************************\n**  Repository path : $HeadURL: https://sqlitecs.googlecode.com/svn/trunk/C%23SQLite/src/parse_h.cs $\n**  Revision        : $Revision$\n**  Last Change Date: $LastChangedDate: 2009-08-04 13:34:52 -0700 (Tue, 04 Aug 2009) $\n**  Last Changed By : $LastChangedBy: noah.hart $\n*************************************************************************\n*/\n\nnamespace CS_SQLite3\n{\n  public partial class CSSQLite\n  {\n    //#define TK_SEMI                            1\n    //#define TK_EXPLAIN                         2\n    //#define TK_QUERY                           3\n    //#define TK_PLAN                            4\n    //#define TK_BEGIN                           5\n    //#define TK_TRANSACTION                     6\n    //#define TK_DEFERRED                        7\n    //#define TK_IMMEDIATE                       8\n    //#define TK_EXCLUSIVE                       9\n    //#define TK_COMMIT                         10\n    //#define TK_END                            11\n    //#define TK_ROLLBACK                       12\n    //#define TK_SAVEPOINT                      13\n    //#define TK_RELEASE                        14\n    //#define TK_TO                             15\n    //#define TK_TABLE                          16\n    //#define TK_CREATE                         17\n    //#define TK_IF                             18\n    //#define TK_NOT                            19\n    //#define TK_EXISTS                         20\n    //#define TK_TEMP                           21\n    //#define TK_LP                             22\n    //#define TK_RP                             23\n    //#define TK_AS                             24\n    //#define TK_COMMA                          25\n    //#define TK_ID                             26\n    //#define TK_INDEXED                        27\n    //#define TK_ABORT                          28\n    //#define TK_AFTER                          29\n    //#define TK_ANALYZE                        30\n    //#define TK_ASC                            31\n    //#define TK_ATTACH                         32\n    //#define TK_BEFORE                         33\n    //#define TK_BY                             34\n    //#define TK_CASCADE                        35\n    //#define TK_CAST                           36\n    //#define TK_COLUMNKW                       37\n    //#define TK_CONFLICT                       38\n    //#define TK_DATABASE                       39\n    //#define TK_DESC                           40\n    //#define TK_DETACH                         41\n    //#define TK_EACH                           42\n    //#define TK_FAIL                           43\n    //#define TK_FOR                            44\n    //#define TK_IGNORE                         45\n    //#define TK_INITIALLY                      46\n    //#define TK_INSTEAD                        47\n    //#define TK_LIKE_KW                        48\n    //#define TK_MATCH                          49\n    //#define TK_KEY                            50\n    //#define TK_OF                             51\n    //#define TK_OFFSET                         52\n    //#define TK_PRAGMA                         53\n    //#define TK_RAISE                          54\n    //#define TK_REPLACE                        55\n    //#define TK_RESTRICT                       56\n    //#define TK_ROW                            57\n    //#define TK_TRIGGER                        58\n    //#define TK_VACUUM                         59\n    //#define TK_VIEW                           60\n    //#define TK_VIRTUAL                        61\n    //#define TK_REINDEX                        62\n    //#define TK_RENAME                         63\n    //#define TK_CTIME_KW                       64\n    //#define TK_ANY                            65\n    //#define TK_OR                             66\n    //#define TK_AND                            67\n    //#define TK_IS                             68\n    //#define TK_BETWEEN                        69\n    //#define TK_IN                             70\n    //#define TK_ISNULL                         71\n    //#define TK_NOTNULL                        72\n    //#define TK_NE                             73\n    //#define TK_EQ                             74\n    //#define TK_GT                             75\n    //#define TK_LE                             76\n    //#define TK_LT                             77\n    //#define TK_GE                             78\n    //#define TK_ESCAPE                         79\n    //#define TK_BITAND                         80\n    //#define TK_BITOR                          81\n    //#define TK_LSHIFT                         82\n    //#define TK_RSHIFT                         83\n    //#define TK_PLUS                           84\n    //#define TK_MINUS                          85\n    //#define TK_STAR                           86\n    //#define TK_SLASH                          87\n    //#define TK_REM                            88\n    //#define TK_CONCAT                         89\n    //#define TK_COLLATE                        90\n    //#define TK_UMINUS                         91\n    //#define TK_UPLUS                          92\n    //#define TK_BITNOT                         93\n    //#define TK_STRING                         94\n    //#define TK_JOIN_KW                        95\n    //#define TK_CONSTRAINT                     96\n    //#define TK_DEFAULT                        97\n    //#define TK_NULL                           98\n    //#define TK_PRIMARY                        99\n    //#define TK_UNIQUE                         100\n    //#define TK_CHECK                          101\n    //#define TK_REFERENCES                     102\n    //#define TK_AUTOINCR                       103\n    //#define TK_ON                             104\n    //#define TK_DELETE                         105\n    //#define TK_UPDATE                         106\n    //#define TK_INSERT                         107\n    //#define TK_SET                            108\n    //#define TK_DEFERRABLE                     109\n    //#define TK_FOREIGN                        110\n    //#define TK_DROP                           111\n    //#define TK_UNION                          112\n    //#define TK_ALL                            113\n    //#define TK_EXCEPT                         114\n    //#define TK_INTERSECT                      115\n    //#define TK_SELECT                         116\n    //#define TK_DISTINCT                       117\n    //#define TK_DOT                            118\n    //#define TK_FROM                           119\n    //#define TK_JOIN                           120\n    //#define TK_USING                          121\n    //#define TK_ORDER                          122\n    //#define TK_GROUP                          123\n    //#define TK_HAVING                         124\n    //#define TK_LIMIT                          125\n    //#define TK_WHERE                          126\n    //#define TK_INTO                           127\n    //#define TK_VALUES                         128\n    //#define TK_INTEGER                        129\n    //#define TK_FLOAT                          130\n    //#define TK_BLOB                           131\n    //#define TK_REGISTER                       132\n    //#define TK_VARIABLE                       133\n    //#define TK_CASE                           134\n    //#define TK_WHEN                           135\n    //#define TK_THEN                           136\n    //#define TK_ELSE                           137\n    //#define TK_INDEX                          138\n    //#define TK_ALTER                          139\n    //#define TK_ADD                            140\n    //#define TK_TO_TEXT                        141\n    //#define TK_TO_BLOB                        142\n    //#define TK_TO_NUMERIC                     143\n    //#define TK_TO_INT                         144\n    //#define TK_TO_REAL                        145\n    //#define TK_END_OF_FILE                    146\n    //#define TK_ILLEGAL                        147\n    //#define TK_SPACE                          148\n    //#define TK_UNCLOSED_STRING                149\n    //#define TK_FUNCTION                       150\n    //#define TK_COLUMN                         151\n    //#define TK_AGG_FUNCTION                   152\n    //#define TK_AGG_COLUMN                     153\n    //#define TK_CONST_FUNC                     154\n    const int TK_SEMI = 1;\n    const int TK_EXPLAIN = 2;\n    const int TK_QUERY = 3;\n    const int TK_PLAN = 4;\n    const int TK_BEGIN = 5;\n    const int TK_TRANSACTION = 6;\n    const int TK_DEFERRED = 7;\n    const int TK_IMMEDIATE = 8;\n    const int TK_EXCLUSIVE = 9;\n    const int TK_COMMIT = 10;\n    const int TK_END = 11;\n    const int TK_ROLLBACK = 12;\n    const int TK_SAVEPOINT = 13;\n    const int TK_RELEASE = 14;\n    const int TK_TO = 15;\n    const int TK_TABLE = 16;\n    const int TK_CREATE = 17;\n    const int TK_IF = 18;\n    const int TK_NOT = 19;\n    const int TK_EXISTS = 20;\n    const int TK_TEMP = 21;\n    const int TK_LP = 22;\n    const int TK_RP = 23;\n    const int TK_AS = 24;\n    const int TK_COMMA = 25;\n    const int TK_ID = 26;\n    const int TK_INDEXED = 27;\n    const int TK_ABORT = 28;\n    const int TK_AFTER = 29;\n    const int TK_ANALYZE = 30;\n    const int TK_ASC = 31;\n    const int TK_ATTACH = 32;\n    const int TK_BEFORE = 33;\n    const int TK_BY = 34;\n    const int TK_CASCADE = 35;\n    const int TK_CAST = 36;\n    const int TK_COLUMNKW = 37;\n    const int TK_CONFLICT = 38;\n    const int TK_DATABASE = 39;\n    const int TK_DESC = 40;\n    const int TK_DETACH = 41;\n    const int TK_EACH = 42;\n    const int TK_FAIL = 43;\n    const int TK_FOR = 44;\n    const int TK_IGNORE = 45;\n    const int TK_INITIALLY = 46;\n    const int TK_INSTEAD = 47;\n    const int TK_LIKE_KW = 48;\n    const int TK_MATCH = 49;\n    const int TK_KEY = 50;\n    const int TK_OF = 51;\n    const int TK_OFFSET = 52;\n    const int TK_PRAGMA = 53;\n    const int TK_RAISE = 54;\n    const int TK_REPLACE = 55;\n    const int TK_RESTRICT = 56;\n    const int TK_ROW = 57;\n    const int TK_TRIGGER = 58;\n    const int TK_VACUUM = 59;\n    const int TK_VIEW = 60;\n    const int TK_VIRTUAL = 61;\n    const int TK_REINDEX = 62;\n    const int TK_RENAME = 63;\n    const int TK_CTIME_KW = 64;\n    const int TK_ANY = 65;\n    const int TK_OR = 66;\n    const int TK_AND = 67;\n    const int TK_IS = 68;\n    const int TK_BETWEEN = 69;\n    const int TK_IN = 70;\n    const int TK_ISNULL = 71;\n    const int TK_NOTNULL = 72;\n    const int TK_NE = 73;\n    const int TK_EQ = 74;\n    const int TK_GT = 75;\n    const int TK_LE = 76;\n    const int TK_LT = 77;\n    const int TK_GE = 78;\n    const int TK_ESCAPE = 79;\n    const int TK_BITAND = 80;\n    const int TK_BITOR = 81;\n    const int TK_LSHIFT = 82;\n    const int TK_RSHIFT = 83;\n    const int TK_PLUS = 84;\n    const int TK_MINUS = 85;\n    const int TK_STAR = 86;\n    const int TK_SLASH = 87;\n    const int TK_REM = 88;\n    const int TK_CONCAT = 89;\n    const int TK_COLLATE = 90;\n    const int TK_UMINUS = 91;\n    const int TK_UPLUS = 92;\n    const int TK_BITNOT = 93;\n    const int TK_STRING = 94;\n    const int TK_JOIN_KW = 95;\n    const int TK_CONSTRAINT = 96;\n    const int TK_DEFAULT = 97;\n    const int TK_NULL = 98;\n    const int TK_PRIMARY = 99;\n    const int TK_UNIQUE = 100;\n    const int TK_CHECK = 101;\n    const int TK_REFERENCES = 102;\n    const int TK_AUTOINCR = 103;\n    const int TK_ON = 104;\n    const int TK_DELETE = 105;\n    const int TK_UPDATE = 106;\n    const int TK_INSERT = 107;\n    const int TK_SET = 108;\n    const int TK_DEFERRABLE = 109;\n    const int TK_FOREIGN = 110;\n    const int TK_DROP = 111;\n    const int TK_UNION = 112;\n    const int TK_ALL = 113;\n    const int TK_EXCEPT = 114;\n    const int TK_INTERSECT = 115;\n    const int TK_SELECT = 116;\n    const int TK_DISTINCT = 117;\n    const int TK_DOT = 118;\n    const int TK_FROM = 119;\n    const int TK_JOIN = 120;\n    const int TK_USING = 121;\n    const int TK_ORDER = 122;\n    const int TK_GROUP = 123;\n    const int TK_HAVING = 124;\n    const int TK_LIMIT = 125;\n    const int TK_WHERE = 126;\n    const int TK_INTO = 127;\n    const int TK_VALUES = 128;\n    const int TK_INTEGER = 129;\n    const int TK_FLOAT = 130;\n    const int TK_BLOB = 131;\n    const int TK_REGISTER = 132;\n    const int TK_VARIABLE = 133;\n    const int TK_CASE = 134;\n    const int TK_WHEN = 135;\n    const int TK_THEN = 136;\n    const int TK_ELSE = 137;\n    const int TK_INDEX = 138;\n    const int TK_ALTER = 139;\n    const int TK_ADD = 140;\n    const int TK_TO_TEXT = 141;\n    const int TK_TO_BLOB = 142;\n    const int TK_TO_NUMERIC = 143;\n    const int TK_TO_INT = 144;\n    const int TK_TO_REAL = 145;\n    const int TK_END_OF_FILE = 146;\n    const int TK_ILLEGAL = 147;\n    const int TK_SPACE = 148;\n    const int TK_UNCLOSED_STRING = 149;\n    const int TK_FUNCTION = 150;\n    const int TK_COLUMN = 151;\n    const int TK_AGG_FUNCTION = 152;\n    const int TK_AGG_COLUMN = 153;\n    const int TK_CONST_FUNC = 154;\n  }\n}\n'