b'package effectivejava.chapter12.item90;\n\n// Period class with serialization proxy - Pages 363-364\n\nimport java.util.*;\nimport java.io.*;\n\n// Immutable class that uses defensive copying\npublic final class Period implements Serializable {\n    private final Date start;\n    private final Date end;\n\n    /**\n     * @param  start the beginning of the period\n     * @param  end the end of the period; must not precede start\n     * @throws IllegalArgumentException if start is after end\n     * @throws NullPointerException if start or end is null\n     */\n    public Period(Date start, Date end) {\n        this.start = new Date(start.getTime());\n        this.end   = new Date(end.getTime());\n        if (this.start.compareTo(this.end) > 0)\n            throw new IllegalArgumentException(\n                    start + " after " + end);\n    }\n\n    public Date start () { return new Date(start.getTime()); }\n\n    public Date end () { return new Date(end.getTime()); }\n\n    public String toString() { return start + " - " + end; }\n\n\n    // Serialization proxy for Period class\n    private static class SerializationProxy implements Serializable {\n        private final Date start;\n        private final Date end;\n\n        SerializationProxy(Period p) {\n            this.start = p.start;\n            this.end = p.end;\n        }\n\n        private static final long serialVersionUID =\n                234098243823485285L; // Any number will do (Item 87)\n    }\n\n    // writeReplace method for the serialization proxy pattern\n    private Object writeReplace() {\n        return new SerializationProxy(this);\n    }\n\n    // readObject method for the serialization proxy pattern\n    private void readObject(ObjectInputStream stream)\n            throws InvalidObjectException {\n        throw new InvalidObjectException("Proxy required");\n    }\n}'