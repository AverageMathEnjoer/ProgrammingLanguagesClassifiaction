b'package lyons.user.service;\n\nimport java.io.IOException;\nimport java.util.Map;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport lyons.dao.UserDaoImp;\nimport lyons.user.entity.User;\n\n/**\n * \n * \xe7\x94\xa8\xe6\x88\xb7\xe6\xb3\xa8\xe5\x86\x8c\xe6\x9c\x8d\xe5\x8a\xa1\xe7\xb1\xbb\n * \n * @author  lyons(zhanglei)\n * \n * \xe5\x90\x88\xe6\xb3\x95\xe9\xaa\x8c\xe8\xaf\x81\xe5\xba\x94\xe8\xaf\xa5\xe7\x95\x99\xe7\xbb\x99\xe5\x89\x8d\xe7\xab\xafjs\n */\npublic class RegisterService\n{\n    String username;\n    String userpass;\n    String again_userpass;\n    String phone;\n    User userBean = new User();\n    UserDaoImp userDao = new  UserDaoImp();\n    UserService userService = new UserService();\n//    Map<String, Object> registerUserMap = new HashMap<String, Object>();\n    public void register(HttpServletRequest request, HttpServletResponse response,\n        Map<String, String> registerMap) throws ServletException, IOException\n    {\n        username = registerMap.get("username");\n        userpass = registerMap.get("userpass");\n        again_userpass = registerMap.get("again_userpass");\n        phone = registerMap.get("phone");\n        \n        request.setAttribute("userBean", userBean);\n        \n        if (username==null)\n        {\n            username = "";\n        }\n        if (userpass==""||userpass==null)\n        {\n            userpass = "error";\n        }\n\n        String regex = "[\\\\d]{11}";\n        if (!(again_userpass.equals(userpass)))\n        {\n            userBean.setBackNews("\xe4\xb8\xa4\xe6\xac\xa1\xe5\xaf\x86\xe7\xa0\x81\xe4\xb8\x8d\xe4\xb8\x80\xe8\x87\xb4,\xe6\xb3\xa8\xe5\x86\x8c\xe5\xa4\xb1\xe8\xb4\xa5");\n            request.getRequestDispatcher("/jsp/join/register.jsp").forward(request, response);\n        }else if (phone!=null&&phone.length()>0&&!phone.matches(regex)) \n                {\n                        userBean.setBackNews("\xe8\xaf\xb7\xe6\xad\xa3\xe7\xa1\xae\xe5\xa1\xab\xe5\x86\x9911\xe4\xbd\x8d\xe6\x89\x8b\xe6\x9c\xba\xe5\x8f\xb7");\n                        request.getRequestDispatcher("/jsp/join/register.jsp").forward(request, response);\n                        return;\n                }else \n                    {\n                        String backNews = ""; \n//                      String regex = "[\\\\w]{4,16}";\n//                      boolean userFlag = username.matches(regex) && userpass.length()>5;\n                        if (userpass.length()>5) //\xe5\xaf\x86\xe7\xa0\x81\xe9\x95\xbf\xe5\xba\xa6\xe9\x99\x90\xe5\x88\xb6 \xe8\x87\xb3\xe5\xb0\x91\xe5\x85\xad\xe4\xbd\x8d\xe6\x95\xb0\n                        {\n                            \n                            if (userService.isExistence(username))\n                            {\n                                backNews = "\xe8\xaf\xa5\xe7\x94\xa8\xe6\x88\xb7\xe5\x90\x8d\xe5\xb7\xb2\xe8\xa2\xab\xe6\xb3\xa8\xe5\x86\x8c"+"<br>";  //\xe8\xbf\x99\xe6\xa0\xb7\xe7\x9a\x84\xe9\xaa\x8c\xe8\xaf\x81\xe7\x95\x99\xe7\xbb\x99js\xe5\x89\x8d\xe7\xab\xaf\xe9\xaa\x8c\xe8\xaf\x81\n                                userBean.setBackNews(backNews);\n                                request.getRequestDispatcher("/jsp/join/register.jsp").forward(request, response);\n                            }else {\n                                    userDao.insertUser(registerMap);//\xe5\x8e\xbb\xe6\xb3\xa8\xe5\x86\x8c\n                                    backNews = "\xe6\xb3\xa8\xe5\x86\x8c\xe6\x88\x90\xe5\x8a\x9f";\n                                    userBean.setBackNews(backNews);\n                                    request.getRequestDispatcher("/jsp/join/registerSuccess.jsp").forward(request, response);\n                            }\n                        }else \n                            {\n                                userBean.setBackNews("\xe5\xaf\x86\xe7\xa0\x81\xe4\xb8\x8d\xe5\x90\x88\xe6\xb3\x95");\n                                request.getRequestDispatcher("/jsp/join/register.jsp").forward(request, response);\n                            }\n                    }\n        \n    }\n    \n}\n'