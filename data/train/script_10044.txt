b'{-# LANGUAGE NoImplicitPrelude #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n\nmodule Course.FastAnagrams where\n\nimport Course.Core\nimport Course.List\nimport Course.Functor\nimport qualified Data.Set as S\n\n-- Return all anagrams of the given string\n-- that appear in the given dictionary file.\nfastAnagrams ::\n  Chars\n  -> FilePath\n  -> IO (List Chars)\nfastAnagrams =\n  error "todo: Course.FastAnagrams#fastAnagrams"\n\nnewtype NoCaseString =\n  NoCaseString {\n    ncString :: Chars\n  }\n\ninstance Eq NoCaseString where\n  (==) = (==) `on` map toLower . ncString\n\ninstance Show NoCaseString where\n  show = show . ncString\n'