b'package effectivejava.chapter5.item28;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Random;\nimport java.util.concurrent.ThreadLocalRandom;\n\n// List-based Chooser - typesafe (Page 129)\npublic class Chooser<T> {\n    private final List<T> choiceList;\n\n    public Chooser(Collection<T> choices) {\n        choiceList = new ArrayList<>(choices);\n    }\n\n    public T choose() {\n        Random rnd = ThreadLocalRandom.current();\n        return choiceList.get(rnd.nextInt(choiceList.size()));\n    }\n\n    public static void main(String[] args) {\n        List<Integer> intList = List.of(1, 2, 3, 4, 5, 6);\n\n        Chooser<Integer> chooser = new Chooser<>(intList);\n\n        for (int i = 0; i < 10; i++) {\n            Number choice = chooser.choose();\n            System.out.println(choice);\n        }\n    }\n}\n'