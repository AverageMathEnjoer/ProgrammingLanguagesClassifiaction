b'/*\n * Copyright (C) 2012 Andrew Neal\n * Copyright (C) 2014 The CyanogenMod Project\n * Copyright (C) 2015 Naman Dwivedi\n * Licensed under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law\n * or agreed to in writing, software distributed under the License is\n * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\npackage com.naman14.timber.dataloaders;\n\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.provider.MediaStore;\nimport android.provider.MediaStore.Audio.AudioColumns;\n\nimport com.naman14.timber.models.Song;\nimport com.naman14.timber.utils.PreferencesUtility;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class LastAddedLoader {\n\n    private static Cursor mCursor;\n\n    public static List<Song> getLastAddedSongs(Context context) {\n\n        ArrayList<Song> mSongList = new ArrayList<>();\n        mCursor = makeLastAddedCursor(context);\n\n        if (mCursor != null && mCursor.moveToFirst()) {\n            do {\n                long id = mCursor.getLong(0);\n                String title = mCursor.getString(1);\n                String artist = mCursor.getString(2);\n                String album = mCursor.getString(3);\n                int duration = mCursor.getInt(4);\n                int trackNumber = mCursor.getInt(5);\n                long artistId = mCursor.getInt(6);\n                long albumId = mCursor.getLong(7);\n\n                final Song song = new Song(id, albumId, artistId, title, artist, album, duration, trackNumber);\n\n                mSongList.add(song);\n            } while (mCursor.moveToNext());\n        }\n        if (mCursor != null) {\n            mCursor.close();\n            mCursor = null;\n        }\n        return mSongList;\n    }\n\n    public static final Cursor makeLastAddedCursor(final Context context) {\n        //four weeks ago\n        long fourWeeksAgo = (System.currentTimeMillis() / 1000) - (4 * 3600 * 24 * 7);\n        long cutoff = PreferencesUtility.getInstance(context).getLastAddedCutoff();\n        // use the most recent of the two timestamps\n        if (cutoff < fourWeeksAgo) {\n            cutoff = fourWeeksAgo;\n        }\n\n        final StringBuilder selection = new StringBuilder();\n        selection.append(AudioColumns.IS_MUSIC + "=1");\n        selection.append(" AND " + AudioColumns.TITLE + " != \'\'");\n        selection.append(" AND " + MediaStore.Audio.Media.DATE_ADDED + ">");\n        selection.append(cutoff);\n\n        return context.getContentResolver().query(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI,\n                new String[]{"_id", "title", "artist", "album", "duration", "track", "artist_id", "album_id"}, selection.toString(), null, MediaStore.Audio.Media.DATE_ADDED + " DESC");\n    }\n}\n'