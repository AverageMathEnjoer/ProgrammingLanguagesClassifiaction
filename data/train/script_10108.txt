b'package com.db.williamchart.renderer.executor\n\nimport com.db.williamchart.data.AxisType\nimport org.junit.Assert.assertEquals\nimport org.junit.Test\n\nclass MeasureLineChartPaddingsTest {\n\n    private val measureLineChartPaddings by lazy {\n        MeasureLineChartPaddings()\n    }\n\n    @Test\n    fun `no paddings when no axis is displayed at all`() {\n        // Act\n        val paddings = measureLineChartPaddings.invoke(\n            axisType = AxisType.NONE,\n            labelsHeight = 1f,\n            longestLabelWidth = 1f,\n            labelsPaddingToInnerChart = 1f,\n            lineThickness = 0f,\n            pointsDrawableWidth = 0,\n            pointsDrawableHeight = 0\n        )\n\n        // Assert\n        assertEquals(0f, paddings.left)\n        assertEquals(0f, paddings.top)\n        assertEquals(0f, paddings.right)\n        assertEquals(0f, paddings.bottom)\n    }\n\n    @Test\n    fun `paddings take into account line thickness`() {\n        // Arrange\n        val lineThickness = 999f\n        val halfLineThickness = lineThickness / 2\n\n        // Act\n        val paddings = measureLineChartPaddings.invoke(\n            axisType = AxisType.XY,\n            labelsHeight = 0f,\n            longestLabelWidth = 0f,\n            labelsPaddingToInnerChart = 0f,\n            lineThickness = lineThickness,\n            pointsDrawableWidth = 0,\n            pointsDrawableHeight = 0\n        )\n\n        // Assert\n        assertEquals(halfLineThickness, paddings.left)\n        assertEquals(lineThickness, paddings.top)\n        assertEquals(halfLineThickness, paddings.right)\n        assertEquals(lineThickness, paddings.bottom)\n    }\n\n    @Test\n    fun `paddings take into account label height`() {\n        // Arrange\n        val labelsHeight = 999f\n        val halfLabelsHeight = labelsHeight / 2\n\n        // Act\n        val paddings = measureLineChartPaddings.invoke(\n            axisType = AxisType.XY,\n            labelsHeight = labelsHeight,\n            longestLabelWidth = 0f,\n            labelsPaddingToInnerChart = 0f,\n            lineThickness = 0f,\n            pointsDrawableWidth = 0,\n            pointsDrawableHeight = 0\n        )\n\n        // Assert\n        assertEquals(0f, paddings.left)\n        assertEquals(halfLabelsHeight, paddings.top)\n        assertEquals(0f, paddings.right)\n        assertEquals(labelsHeight, paddings.bottom)\n    }\n}\n'