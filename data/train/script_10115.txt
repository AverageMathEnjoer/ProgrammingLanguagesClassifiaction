b'// UVa1252 Twenty Questions\n// Rujia Liu\n#include<cstdio>\n#include<ctime>\n#include<cstring>\n#include<algorithm>\n#include<cassert>\nusing namespace std;\n\nconst int maxn = 128;\nconst int maxm = 11;\n\nint kase, n, m;\nchar objects[maxn][maxm + 100];\n\nint vis[1<<maxm][1<<maxm], d[1<<maxm][1<<maxm];\nint cnt[1<<maxm][1<<maxm]; // cnt[s][a]: how many object satisfies: Intersect(featureSet(i), s) = a\n\n// s: the set of features we already asked\n// a: subset of s that the object has\nint dp(int s, int a) {\n  if(cnt[s][a] <= 1) return 0;\n  if(cnt[s][a] == 2) return 1;\n\n  int& ans = d[s][a];\n  if(vis[s][a] == kase) return ans;\n  vis[s][a] = kase;\n\n  ans = m;\n  for(int k = 0; k < m; k++)\n    if(!(s & (1<<k))) { // haven\'t asked\n      int s2 = s|(1<<k), a2 = a|(1<<k);\n      if(cnt[s2][a2] >= 1 && cnt[s2][a] >= 1) {\n        int need = max(dp(s2, a2),     // the object has feature k\n                       dp(s2, a)) + 1; // the object doesn\'t have feature k\n        ans = min(ans, need);\n      }\n    }\n  return ans;\n}\n\nvoid init() {\n  for(int s = 0; s < (1<<m); s++) {\n    for(int a = s; a; a = (a-1)&s)\n      cnt[s][a] = 0;\n    cnt[s][0] = 0;\n  }\n  for(int i = 0; i < n; i++) {\n    int features = 0;\n    for(int f = 0; f < m; f++)\n      if(objects[i][f] == \'1\') features |= (1<<f);\n    for(int s = 0; s < (1<<m); s++)\n      cnt[s][s & features]++;\n  }\n}\n\n\nint main() {\n  memset(vis, 0, sizeof(vis));\n  while(scanf("%d%d", &m, &n) == 2 && n) {\n    ++kase;\n    for(int i = 0; i < n; i++) scanf("%s", objects[i]);\n    init();\n    printf("%d\\n", dp(0, 0));\n  }\n  return 0;\n}\n'