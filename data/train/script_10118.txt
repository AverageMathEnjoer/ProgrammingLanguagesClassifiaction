b'\xef\xbb\xbfusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\n\nnamespace Rubeus.Kerberos.PAC {\n    public class UpnDns : PacInfoBuffer {\n\n        public short UpnLength { get; private set; }\n        public short UpnOffset { get; private set; }\n        public short DnsDomainNameLen { get; private set; }\n        public short DnsDomainNameOffset { get; private set; }\n        public int Flags { get; set; }\n        public string DnsDomainName { get; set; }\n        public string Upn { get; set; }\n\n        public UpnDns(int flags, string dnsDomainName, string upn) {\n            Flags = flags;\n            DnsDomainName = dnsDomainName;\n            Upn = upn;\n            Type = PacInfoBufferType.UpnDns;\n        }\n\n        public UpnDns(byte[] data) : base(data, PacInfoBufferType.UpnDns) {\n            Decode(data);\n        }\n\n        public override byte[] Encode() {\n\n            UpnOffset = 16;\n            UpnLength = (short)(Upn.Length * 2);\n\n            DnsDomainNameLen = (short)(DnsDomainName.Length * 2);\n            DnsDomainNameOffset = (short)(UpnOffset + UpnLength);\n\n            BinaryWriter bw = new BinaryWriter(new MemoryStream());\n            bw.Write(UpnLength);\n            bw.Write(UpnOffset);\n            bw.Write(DnsDomainNameLen);\n            bw.Write(DnsDomainNameOffset);\n            bw.Write(Flags);\n            bw.Write(new byte[] { 0x00, 0x00, 0x00, 0x00 });\n            bw.Write(Encoding.Unicode.GetBytes(Upn));\n            bw.Write(Encoding.Unicode.GetBytes(DnsDomainName));\n            bw.Write(new byte[] { 0x00, 0x00, 0x00, 0x00 });\n            return ((MemoryStream)bw.BaseStream).ToArray();\n        }\n\n        protected override void Decode(byte[] data) {\n\n            UpnLength = br.ReadInt16();\n            UpnOffset = br.ReadInt16();\n            DnsDomainNameLen = br.ReadInt16();\n            DnsDomainNameOffset = br.ReadInt16();\n            Flags = br.ReadInt32();\n\n            br.BaseStream.Position = UpnOffset;\n            Upn = Encoding.Unicode.GetString(br.ReadBytes(UpnLength));\n\n            br.BaseStream.Position = DnsDomainNameOffset;\n            DnsDomainName = Encoding.Unicode.GetString(br.ReadBytes(DnsDomainNameLen));                    \n        }\n    }\n}\n'