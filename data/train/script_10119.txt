b'// UVa207 PGA Tour Prize Money\n// Rujia Liu\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cassert>\nusing namespace std;\n\n#define REP(i,n) for(int i = 0; i < (n); i++)\n\nconst int maxn = 144;\nconst int n_cut = 70;\n\nstruct Player {\n  char name[25];\n  int amateur;\n  int sc[4];\n  int sc36, sc72, dq;\n  int rnds;\n} player[maxn];\n\nint n;\ndouble purse, p[n_cut];\n\nbool cmp1(const Player& p1, const Player& p2) {\n  if(p1.sc36 < 0 && p2.sc36 < 0) return false; // equal\n  if(p1.sc36 < 0) return false; // p2 smaller\n  if(p2.sc36 < 0) return true; // p1 smaller\n  return p1.sc36 < p2.sc36;\n}\n\nbool cmp2(const Player& p1, const Player& p2) {\n  if(p1.dq && p2.dq) {\n    if(p1.rnds != p2.rnds) return p2.rnds < p1.rnds;\n    if(p1.sc72 != p2.sc72) return p1.sc72 < p2.sc72;\n    return strcmp(p1.name, p2.name) < 0;\n  }\n  if(p1.dq) return false;\n  if(p2.dq) return true;\n  if(p1.sc72 != p2.sc72) return p1.sc72 < p2.sc72;\n  return strcmp(p1.name, p2.name) < 0;\n}\n\nvoid print_result() {\n  printf("Player Name          Place     RD1  RD2");\n  printf("  RD3  RD4  TOTAL     Money Won\\n");\n  printf("---------------------------------------");\n  printf("--------------------------------\\n");\n\n  int i = 0, pos = 0;\n  while(i < n) {\n    if(player[i].dq) {\n      printf("%s           ",player[i].name);\n      REP(j,player[i].rnds) printf("%-5d", player[i].sc[j]);\n      REP(j,4-player[i].rnds) printf("     ");\n      printf("DQ\\n");\n      i++;\n      continue;\n    }\n\n    int j = i;\n    int m = 0; // number of tied players\n    bool have_money = false;\n    double tot = 0.0; // total pooled money\n    while(j < n && player[i].sc72 == player[j].sc72) {\n      if(!player[j].amateur) {\n        m++;          \n        if(pos < n_cut) {\n          have_money = true; // yeah! they still have money\n          tot += p[pos++];\n        }\n      }\n      j++;\n    }\n\n    // print player [i,j) together because they have the same rank\n    int rank = i + 1; // rank of all these m players\n    double amount = purse * tot / m; // if m=0, amount will be nan but we don\'t use it in that case :)\n    while(i < j) {\n      printf("%s ", player[i].name);\n      char t[5];\n      sprintf(t, "%d%c", rank, m > 1 && have_money && !player[i].amateur ? \'T\' : \' \');\n      printf("%-10s", t);\n      REP(e,4) printf("%-5d", player[i].sc[e]);\n\n      // with prize\n      if(!player[i].amateur && have_money) {\n        printf("%-10d", player[i].sc72);\n        printf("$%9.2lf\\n", amount / 100.0);\n      } else\n        printf("%d\\n", player[i].sc72);\n      i++;\n    }\n  }\n}\n\nint main() {\n  int T; \n  char s[40];\n\n  gets(s);\n  sscanf(s,"%d",&T);\n  while(T--) {\n    gets(s); // empty line\n\n    // prize\n    gets(s);\n    sscanf(s,"%lf", &purse);\n    REP(i,n_cut) {\n      gets(s);\n      sscanf(s, "%lf", &p[i]);\n    }\n\n    // players\n    gets(s);\n    sscanf(s, "%d", &n);\n    assert(n <= 144);\n    REP(k,n) {\n      // read a 32-character line\n      gets(s);\n\n      // player name\n      strncpy(player[k].name, s, 20);      \n      player[k].name[20] = 0;\n      player[k].amateur = 0;\n      if(strchr(player[k].name, \'*\')) {\n        player[k].amateur = 1;\n      }\n\n      // scores\n      player[k].sc36 = player[k].sc72 = player[k].dq=0;\n      memset(player[k].sc, -1, sizeof(player[k].sc));\n      REP(i,4) {\n        // raw score\n        char t[5];\n        REP(j,3) t[j] = s[20 + i*3 + j]; t[3] = \'\\0\';\n\n        // parse\n        if(!sscanf(t,"%d", &player[k].sc[i])) {\n          // DQ!\n          player[k].rnds = i;\n          player[k].dq = -1;\n          if(i < 2) player[k].sc36 = -1;\n          break; // skip other rounds (filled with -1, initially)\n        } else {          \n          player[k].sc72 += player[k].sc[i];\n          if(i < 2)\n            player[k].sc36 += player[k].sc[i];\n        }\n      }\n    }\n\n    // round 1\n    sort(player, player+n, cmp1);\n    assert(player[n_cut-1].sc36 >= 0);\n    for(int i = n_cut-1; i < n; i++)\n      if(i == n-1 || player[i].sc36 != player[i+1].sc36) { n = i+1; break; }\n\n    // round 2\n    sort(player, player+n, cmp2);\n    \n    // print result\n    print_result();\n \n    if(T) printf("\\n");\n  }\n  \n  return 0;\n}\n'