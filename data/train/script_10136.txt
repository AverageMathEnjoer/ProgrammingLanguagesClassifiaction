b'#\' Export statistical output to HTML or Latex table\n#\' \n#\' Export currently showing R stats object or stats object obj to a\n#\' HTML or Latex table\n#\' @import stats\n#\' @importFrom utils capture.output\n#\' @import stargazer\n#\' @aliases table2tex table2html \n#\' @param x given R stats object or list of stats objects to export; if set to \\code{NULL} \n#\' the output of the previous R command will be exported.\n#\' @param file name of output file. The appropriate extension is added automatically.\n#\' @param type desired output type - \\code{"TEX"} for Latex and \\code{"HTML"} for HTML.\n#\' @param digits number of significant digits to show for all columns except\n#\' for the column with p values.\n#\' @param digitspvals number of significant digits to show for columns with p\n#\' values.\n#\' @param trim.pval a threshold below which the p-values are trimmed as \n#\' "< \\code{trim.pval}".\n#\' @param summary logical indicating whether or not to summarize data files.\n#\' @param standAlone logical indicating whether exported Latex code should be\n#\' standalone compilable, or whether it will be pasted into another document.\n#\' @param add.rownames logical indicating whether the names of the rows should be added\n#\' to the table (inserting a column before first column).\n#\' @param \\dots extra options are passed on to stargazer.\n#\' @return No return value\n#\' @details Objects that can be exported are all those supported by \\code{\\link[xtable]{xtable}}, \n#\' \\code{\\link{tidy}} (see \\code{\\link{table2office}} for an extensive list of supported \n#\' methods), or \\code{\\link[stargazer]{stargazer}}. The models supported by \n#\' \\code{\\link[stargazer]{stargazer}} are:\n#\' \\itemize{\n#\' \\item \\code{aftreg} (\\code{eha})\n#\' \\item \\code{anova} (\\code{stats})\n#\' \\item \\code{aov} (\\code{stats})\n#\' \\item \\code{aovlist} (\\code{stats})\n#\' \\item \\code{arima} (\\code{stats}) \n#\' \\item \\code{betareg} (\\code{betareg})\n#\' \\item \\code{binaryChoice} (\\code{sampleSelection})\n#\' \\item \\code{bj} (\\code{rms})\n#\' \\item \\code{brglm} (\\code{brglm}) \n#\' \\item \\code{censReg} (\\code{censReg})\n#\' \\item \\code{coeftest} (\\code{lmtest})\n#\' \\item \\code{coxph} (\\code{survival})\n#\' \\item \\code{coxreg} (\\code{eha}) \n#\' \\item \\code{clm} (\\code{ordinal})\n#\' \\item \\code{clogit} (\\code{survival})\n#\' \\item \\code{cph} (\\code{rms})\n#\' \\item \\code{dynlm} (\\code{dynlm})\n#\' \\item \\code{ergm} (\\code{ergm})\n#\' \\item \\code{errorsarlm} (\\code{spdev})\n#\' \\item \\code{felm} (\\code{lfe})\n#\' \\item \\code{gam} (\\code{mgcv})\n#\' \\item \\code{garchFit} (\\code{fGarch})\n#\' \\item \\code{gee} (\\code{gee})\n#\' \\item \\code{glm} (\\code{stats})\n#\' \\item \\code{Glm} (\\code{rms})\n#\' \\item \\code{glmer} (\\code{lme4})\n#\' \\item \\code{glmrob} (\\code{robustbase})\n#\' \\item \\code{gls} (\\code{nlme})\n#\' \\item \\code{Gls} (\\code{rms})\n#\' \\item \\code{gmm} (\\code{gmm})\n#\' \\item \\code{heckit} (\\code{sampleSelection})\n#\' \\item \\code{hetglm} (\\code{glmx})\n#\' \\item \\code{hurdle} (\\code{pscl})\n#\' \\item \\code{ivreg} (\\code{AER})\n#\' \\item \\code{lagarlm} (\\code{spdep})\n#\' \\item \\code{lm} (\\code{stats})\n#\' \\item \\code{lme} (\\code{nlme})\n#\' \\item \\code{lmer} (\\code{lme4})\n#\' \\item \\code{lmrob} (\\code{robustbase})\n#\' \\item \\code{lrm} (\\code{rms})\n#\' \\item \\code{maBina} (\\code{erer})\n#\' \\item \\code{mclogit} (\\code{mclogit})\n#\' \\item \\code{mlogit} (\\code{mlogit})\n#\' \\item \\code{mnlogit} (\\code{mnlogit})\n#\' \\item \\code{mlreg} (\\code{eha})\n#\' \\item \\code{multinom} (\\code{nnet})\n#\' \\item \\code{nlme} (\\code{nlme})\n#\' \\item \\code{nlmer} (\\code{lme4})\n#\' \\item \\code{ols} (\\code{rms})\n#\' \\item \\code{pgmm} (\\code{plm})\n#\' \\item \\code{phreg} (\\code{eha})\n#\' \\item \\code{plm} (\\code{plm})\n#\' \\item \\code{pmg} (\\code{plm})\n#\' \\item \\code{polr} (\\code{MASS})\n#\' \\item \\code{psm} (\\code{rms})\n#\' \\item \\code{rem.dyad} (\\code{relevent})\n#\' \\item \\code{rlm} (\\code{MASS})\n#\' \\item \\code{rq} (\\code{quantreg})\n#\' \\item \\code{Rq} (\\code{rms})\n#\' \\item \\code{selection} (\\code{sampleSelection})\n#\' \\item \\code{svyglm} (\\code{survey})\n#\' \\item \\code{survreg} (\\code{survival})\n#\' \\item \\code{tobit} (\\code{AER})\n#\' \\item \\code{weibreg} (\\code{eha})\n#\' \\item \\code{zeroin} (\\code{pscl})\n#\' \\item \\code{relogit} (\\code{zelig})\n#\' \\item \\code{cloglog.net} (\\code{zelig})\n#\' \\item \\code{gamma.net} (\\code{zelig})\n#\' \\item \\code{probit.net} (\\code{zelig}) \n#\' \\item \\code{logit.net} (\\code{zelig})\n#\' }\n#\' @author Tom Wenseleers, Christophe Vanderaa\n#\' @example examples/table2tex.R\n#\' @seealso \\code{\\link{table2office}} ,\\code{\\link{table2ppt}}, \\code{\\link{table2doc}}, \n#\' \\code{\\link[stargazer]{stargazer}}\n#\' @export\n#\' \ntable2tex = function(x = NULL, file = "Rtable", type="TEX", digits = 2, digitspvals = 2, \n                     trim.pval = 1e-16, summary=FALSE, standAlone=TRUE, add.rownames = FALSE,...) {\n  # Get the data that will be exported\n  obj=x\n  if (is.null(obj)) \n    outp = .Last.value else outp = obj  # capture previously shown output or use passed object\n  if (is.null(outp)) \n    stop("no R stats object available to export")\n  obj=outp\n\n  # Match the requested file type\n  type=toupper(type)\n  type=match.arg(type,c("TEX","HTML"))\n  if (type=="HTML") { ext=".html" }\n  if (type=="TEX") { ext=".tex" }\n  file = sub("^(.*)[.].*", "\\\\1", file)  # remove extension if given\n  file = paste0(file, ext)  # add extension\n  \n  # Depending on the class of the data call the formating function\n  if (length(intersect(class(obj), as.character(gsub("xtable.", "", methods(xtable))))) >= 1) {\n    obj <- xtable2(x=obj, ndigits = digits, ndigitspvals = digitspvals, trim.pval=trim.pval)\n    obj <- as.data.frame(obj)\n  } else if (length(intersect(class(obj), as.character(gsub("tidy.", "", methods(tidy))))) >= 1) {\n    obj <- tidy2(x=obj, ndigits = digits, ndigitspvals = digitspvals, trim.pval=trim.pval)\n    obj <- as.data.frame(obj)\n  } \n  # Else supported objects that should be supported by stargazer\n  \n  if ("aov" %in% class(obj)) {obj=as.data.frame(anova(obj));summary=FALSE}\n  if ("summary.aov" %in% class(obj)) {obj=as.data.frame(obj);summary=FALSE}\n  # object supported by stargazer?\n  supported=!grepl("Unrecognized object type",paste(capture.output(stargazer(obj)),collapse=""))\n  if (!supported) stop(paste0("Object of class ",class(obj)," is not supported by stargazer."))\n  \n  # preview table in viewer or browser\n  htmlout = capture.output(stargazer(obj, type="html", summary=summary, rownames = add.rownames, digits = digits,...)) \n  texout = capture.output(stargazer(obj, type="latex", summary=summary, rownames = add.rownames, digits = digits,...))\n  outp = preview(htmlout)\n    \n  # export to HTML/Latex\n  if (standAlone) {\n    texheader=c("\\\\documentclass[10pt]{article}","\\\\begin{document}")\n    texfooter=c("\\\\end{document}")\n    texout=c(texout[1:3],texheader,texout[4:length(texout)],texfooter)\n  }\n  if (type=="HTML") { fileConn = file(file)\n                      writeLines(htmlout,file)\n                      close(fileConn) }\n  \n  if (type=="TEX") { fileConn = file(file)\n                     writeLines(texout,file)\n                     close(fileConn) }\n  \n  message(paste0("Exported table as ",file))\n  \n}\n\n#\' @describeIn table2tex\n#\' Export statistical output to HTML table\n#\' @export\ntable2html = function(...) table2tex(type = "HTML", ...)\n'