b'/*\n * Copyright 2013 - 2016 Mario Arias\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * \thttp://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.funktionale.validation\n\nimport org.funktionale.either.Disjunction\nimport org.testng.Assert.*\nimport org.testng.annotations.Test\n\ndata class ExampleForValidation(val number: Int, val text: String)\n\nclass ValidationTest {\n\n    @Test\n    fun validationTest() {\n        val d1 = Disjunction.right(1)\n        val d2 = Disjunction.right(2)\n        val d3 = Disjunction.right(3)\n\n        val validation = Validation(d1, d2, d3)\n        assertFalse(validation.hasFailures)\n        assertEquals(validation.failures, listOf<String>())\n    }\n\n    @Test\n    fun validationTestWithError() {\n        val d1 = Disjunction.right(1)\n        val d2 = Disjunction.left("Not a number")\n        val d3 = Disjunction.right(3)\n\n        val validation = Validation(d1, d2, d3)\n        assertTrue(validation.hasFailures)\n        assertEquals(validation.failures, listOf("Not a number"))\n    }\n\n    @Test\n    fun validate2Test() {\n        val r1 = Disjunction.right(1)\n        val r2 = Disjunction.right("blahblah")\n        val l1 = Disjunction.left("fail1")\n        val l2 = Disjunction.left("fail2")\n        assertEquals(\n                validate(r1, r2, ::ExampleForValidation),\n                Disjunction.right(ExampleForValidation(1, "blahblah"))\n        )\n        assertEquals(\n                validate(r1, l2, ::ExampleForValidation),\n                Disjunction.left(listOf("fail2"))\n        )\n        assertEquals(\n                validate(l1, l2, ::ExampleForValidation),\n                Disjunction.left(listOf("fail1", "fail2"))\n        )\n    }\n}'