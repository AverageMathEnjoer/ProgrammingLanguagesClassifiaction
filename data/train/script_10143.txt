b'// Listing 5.6\nlet add (a:int, b:int) : int =\n    let answer:int = a + b\n    answer\n\n// Listing 5.7\nlet getLength name = sprintf "Name is %d letters." name.Length\nlet getLength (name:string) = sprintf "Name is %d letters." name.Length\nlet foo(name) = "Hello! " + getLength(name)\n\n// Listing 5.8\nopen System.Collections.Generic\nlet numbers = List<_>()\nnumbers.Add(10)\nnumbers.Add(20)\n\nlet otherNumbers = List()\notherNumbers.Add(10)\notherNumbers.Add(20)\n\n// Listing 5.9\nlet createList(first, second) =\n    let output = List()\n    output.Add(first)\n    output.Add(second)\n    output\n\n// Listing 5.10\nlet sayHello(someValue) =\n    let innerFunction(number) =\n        if number > 10 then "Isaac"\n        elif number > 20 then "Fred"\n        else "Sara"\n\n    let resultOfInner =\n        if someValue < 10.0 then innerFunction(5)\n        else innerFunction(15)\n        \n    "Hello " + resultOfInner\n\nlet result = sayHello(10.5)\n'