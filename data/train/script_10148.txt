b'namespace CS_SQLite3\n{\n  public partial class CSSQLite\n  {\n    /* Automatically generated.  Do not edit */\n    /* See the mkopcodeh.awk script for details */\n    /* Automatically generated.  Do not edit */\n    /* See the mkopcodeh.awk script for details */\n    //#define OP_VNext                                1\n    //#define OP_Affinity                             2\n    //#define OP_Column                               3\n    //#define OP_SetCookie                            4\n    //#define OP_Seek                                 5\n    //#define OP_Real                               130   /* same as TK_FLOAT    */\n    //#define OP_Sequence                             6\n    //#define OP_Savepoint                            7\n    //#define OP_Ge                                  78   /* same as TK_GE       */\n    //#define OP_RowKey                               8\n    //#define OP_SCopy                                9\n    //#define OP_Eq                                  74   /* same as TK_EQ       */\n    //#define OP_OpenWrite                           10\n    //#define OP_NotNull                             72   /* same as TK_NOTNULL  */\n    //#define OP_If                                  11\n    //#define OP_ToInt                              144   /* same as TK_TO_INT   */\n    //#define OP_String8                             94   /* same as TK_STRING   */\n    //#define OP_CollSeq                             12\n    //#define OP_OpenRead                            13\n    //#define OP_Expire                              14\n    //#define OP_AutoCommit                          15\n    //#define OP_Gt                                  75   /* same as TK_GT       */\n    //#define OP_Pagecount                           16\n    //#define OP_IntegrityCk                         17\n    //#define OP_Sort                                18\n    //#define OP_Copy                                20\n    //#define OP_Trace                               21\n    //#define OP_Function                            22\n    //#define OP_IfNeg                               23\n    //#define OP_And                                 67   /* same as TK_AND      */\n    //#define OP_Subtract                            85   /* same as TK_MINUS    */\n    //#define OP_Noop                                24\n    //#define OP_Return                              25\n    //#define OP_Remainder                           88   /* same as TK_REM      */\n    //#define OP_NewRowid                            26\n    //#define OP_Multiply                            86   /* same as TK_STAR     */\n    //#define OP_Variable                            27\n    //#define OP_String                              28\n    //#define OP_RealAffinity                        29\n    //#define OP_VRename                             30\n    //#define OP_ParseSchema                         31\n    //#define OP_VOpen                               32\n    //#define OP_Close                               33\n    //#define OP_CreateIndex                         34\n    //#define OP_IsUnique                            35\n    //#define OP_NotFound                            36\n    //#define OP_Int64                               37\n    //#define OP_MustBeInt                           38\n    //#define OP_Halt                                39\n    //#define OP_Rowid                               40\n    //#define OP_IdxLT                               41\n    //#define OP_AddImm                              42\n    //#define OP_Statement                           43\n    //#define OP_RowData                             44\n    //#define OP_MemMax                              45\n    //#define OP_Or                                  66   /* same as TK_OR       */\n    //#define OP_NotExists                           46\n    //#define OP_Gosub                               47\n    //#define OP_Divide                              87   /* same as TK_SLASH    */\n    //#define OP_Integer                             48\n    //#define OP_ToNumeric                          143   /* same as TK_TO_NUMERIC*/\n    //#define OP_Prev                                49\n    //#define OP_RowSetRead                          50\n    //#define OP_Concat                              89   /* same as TK_CONCAT   */\n    //#define OP_RowSetAdd                           51\n    //#define OP_BitAnd                              80   /* same as TK_BITAND   */\n    //#define OP_VColumn                             52\n    //#define OP_CreateTable                         53\n    //#define OP_Last                                54\n    //#define OP_SeekLe                              55\n    //#define OP_IsNull                              71   /* same as TK_ISNULL   */\n    //#define OP_IncrVacuum                          56\n    //#define OP_IdxRowid                            57\n    //#define OP_ShiftRight                          83   /* same as TK_RSHIFT   */\n    //#define OP_ResetCount                          58\n    //#define OP_ContextPush                         59\n    //#define OP_Yield                               60\n    //#define OP_DropTrigger                         61\n    //#define OP_DropIndex                           62\n    //#define OP_IdxGE                               63\n    //#define OP_IdxDelete                           64\n    //#define OP_Vacuum                              65\n    //#define OP_IfNot                               68\n    //#define OP_DropTable                           69\n    //#define OP_SeekLt                              70\n    //#define OP_MakeRecord                          79\n    //#define OP_ToBlob                             142   /* same as TK_TO_BLOB  */\n    //#define OP_ResultRow                           90\n    //#define OP_Delete                              91\n    //#define OP_AggFinal                            92\n    //#define OP_Compare                             95\n    //#define OP_ShiftLeft                           82   /* same as TK_LSHIFT   */\n    //#define OP_Goto                                96\n    //#define OP_TableLock                           97\n    //#define OP_Clear                               98\n    //#define OP_Le                                  76   /* same as TK_LE       */\n    //#define OP_VerifyCookie                        99\n    //#define OP_AggStep                            100\n    //#define OP_ToText                             141   /* same as TK_TO_TEXT  */\n    //#define OP_Not                                 19   /* same as TK_NOT      */\n    //#define OP_ToReal                             145   /* same as TK_TO_REAL  */\n    //#define OP_SetNumColumns                      101\n    //#define OP_Transaction                        102\n    //#define OP_VFilter                            103\n    //#define OP_Ne                                  73   /* same as TK_NE       */\n    //#define OP_VDestroy                           104\n    //#define OP_ContextPop                         105\n    //#define OP_BitOr                               81   /* same as TK_BITOR    */\n    //#define OP_Next                               106\n    //#define OP_Count                              107\n    //#define OP_IdxInsert                          108\n    //#define OP_Lt                                  77   /* same as TK_LT       */\n    //#define OP_SeekGe                             109\n    //#define OP_Insert                             110\n    //#define OP_Destroy                            111\n    //#define OP_ReadCookie                         112\n    //#define OP_RowSetTest                         113\n    //#define OP_LoadAnalysis                       114\n    //#define OP_Explain                            115\n    //#define OP_HaltIfNull                         116\n    //#define OP_OpenPseudo                         117\n    //#define OP_OpenEphemeral                      118\n    //#define OP_Null                               119\n    //#define OP_Move                               120\n    //#define OP_Blob                               121\n    //#define OP_Add                                 84   /* same as TK_PLUS     */\n    //#define OP_Rewind                             122\n    //#define OP_SeekGt                             123\n    //#define OP_VBegin                             124\n    //#define OP_VUpdate                            125\n    //#define OP_IfZero                             126\n    //#define OP_BitNot                              93   /* same as TK_BITNOT   */\n    //#define OP_VCreate                            127\n    //#define OP_Found                              128\n    //#define OP_IfPos                              129\n    //#define OP_NullRow                            131\n    //#define OP_Jump                               132\n    //#define OP_Permutation                        133\n\n    const int OP_VNext = 1;\n    const int OP_Affinity = 2;\n    const int OP_Column = 3;\n    const int OP_SetCookie = 4;\n    const int OP_Seek = 5;\n    const int OP_Real = 130;   /* same as TK_FLOAT=*/\n    const int OP_Sequence = 6;\n    const int OP_Savepoint = 7;\n    const int OP_Ge = 78; /* same as TK_GE=   */\n    const int OP_RowKey = 8;\n    const int OP_SCopy = 9;\n    const int OP_Eq = 74;   /* same as TK_EQ=   */\n    const int OP_OpenWrite = 10;\n    const int OP_NotNull = 72;  /* same as TK_NOTNULL  */\n    const int OP_If = 11;\n    const int OP_ToInt = 144; /* same as TK_TO_INT   */\n    const int OP_String8 = 94;  /* same as TK_STRING   */\n    const int OP_CollSeq = 12;\n    const int OP_OpenRead = 13;\n    const int OP_Expire = 14;\n    const int OP_AutoCommit = 15;\n    const int OP_Gt = 75; /* same as TK_GT=   */\n    const int OP_Pagecount = 16;\n    const int OP_IntegrityCk = 17;\n    const int OP_Sort = 18;\n    const int OP_Copy = 20;\n    const int OP_Trace = 21;\n    const int OP_Function = 22;\n    const int OP_IfNeg = 23;\n    const int OP_And = 67;/* same as TK_AND=  */\n    const int OP_Subtract = 85;  /* same as TK_MINUS=*/\n    const int OP_Noop = 24;\n    const int OP_Return = 25;\n    const int OP_Remainder = 88; /* same as TK_REM=  */\n    const int OP_NewRowid = 26;\n    const int OP_Multiply = 86; /* same as TK_STAR= */\n    const int OP_Variable = 27;\n    const int OP_String = 28;\n    const int OP_RealAffinity = 29;\n    const int OP_VRename = 30;\n    const int OP_ParseSchema = 31;\n    const int OP_VOpen = 32;\n    const int OP_Close = 33;\n    const int OP_CreateIndex = 34;\n    const int OP_IsUnique = 35;\n    const int OP_NotFound = 36;\n    const int OP_Int64 = 37;\n    const int OP_MustBeInt = 38;\n    const int OP_Halt = 39;\n    const int OP_Rowid = 40;\n    const int OP_IdxLT = 41;\n    const int OP_AddImm = 42;\n    const int OP_Statement = 43;\n    const int OP_RowData = 44;\n    const int OP_MemMax = 45;\n    const int OP_Or = 66; /* same as TK_OR=   */\n    const int OP_NotExists = 46;\n    const int OP_Gosub = 47;\n    const int OP_Divide = 87;/* same as TK_SLASH=*/\n    const int OP_Integer = 48;\n    const int OP_ToNumeric = 143; /* same as TK_TO_NUMERIC*/\n    const int OP_Prev = 49;\n    const int OP_RowSetRead = 50;\n    const int OP_Concat = 89;  /* same as TK_CONCAT   */\n    const int OP_RowSetAdd = 51;\n    const int OP_BitAnd = 80;   /* same as TK_BITAND   */\n    const int OP_VColumn = 52;\n    const int OP_CreateTable = 53;\n    const int OP_Last = 54;\n    const int OP_SeekLe = 55;\n    const int OP_IsNull = 71; /* same as TK_ISNULL   */\n    const int OP_IncrVacuum = 56;\n    const int OP_IdxRowid = 57;\n    const int OP_ShiftRight = 83;  /* same as TK_RSHIFT   */\n    const int OP_ResetCount = 58;\n    const int OP_ContextPush = 59;\n    const int OP_Yield = 60;\n    const int OP_DropTrigger = 61;\n    const int OP_DropIndex = 62;\n    const int OP_IdxGE = 63;\n    const int OP_IdxDelete = 64;\n    const int OP_Vacuum = 65;\n    const int OP_IfNot = 68;\n    const int OP_DropTable = 69;\n    const int OP_SeekLt = 70;\n    const int OP_MakeRecord = 79;\n    const int OP_ToBlob = 142; /* same as TK_TO_BLOB  */\n    const int OP_ResultRow = 90;\n    const int OP_Delete = 91;\n    const int OP_AggFinal = 92;\n    const int OP_Compare = 95;\n    const int OP_ShiftLeft = 82; /* same as TK_LSHIFT   */\n    const int OP_Goto = 96;\n    const int OP_TableLock = 97;\n    const int OP_Clear = 98;\n    const int OP_Le = 76; /* same as TK_LE=   */\n    const int OP_VerifyCookie = 99;\n    const int OP_AggStep = 100;\n    const int OP_ToText = 141; /* same as TK_TO_TEXT  */\n    const int OP_Not = 19;  /* same as TK_NOT=  */\n    const int OP_ToReal = 145;/* same as TK_TO_REAL  */\n    const int OP_SetNumColumns = 101;\n    const int OP_Transaction = 102;\n    const int OP_VFilter = 103;\n    const int OP_Ne = 73; /* same as TK_NE=   */\n    const int OP_VDestroy = 104;\n    const int OP_ContextPop = 105;\n    const int OP_BitOr = 81; /* same as TK_BITOR=*/\n    const int OP_Next = 106;\n    const int OP_Count = 107;\n    const int OP_IdxInsert = 108;\n    const int OP_Lt = 77;  /* same as TK_LT=   */\n    const int OP_SeekGe = 109;\n    const int OP_Insert = 110;\n    const int OP_Destroy = 111;\n    const int OP_ReadCookie = 112;\n    const int OP_RowSetTest = 113;\n    const int OP_LoadAnalysis = 114;\n    const int OP_Explain = 115;\n    const int OP_HaltIfNull = 116;\n    const int OP_OpenPseudo = 117;\n    const int OP_OpenEphemeral = 118;\n    const int OP_Null = 119;\n    const int OP_Move = 120;\n    const int OP_Blob = 121;\n    const int OP_Add = 84; /* same as TK_PLUS= */\n    const int OP_Rewind = 122;\n    const int OP_SeekGt = 123;\n    const int OP_VBegin = 124;\n    const int OP_VUpdate = 125;\n    const int OP_IfZero = 126;\n    const int OP_BitNot = 93;/* same as TK_BITNOT   */\n    const int OP_VCreate = 127;\n    const int OP_Found = 128;\n    const int OP_IfPos = 129;\n    const int OP_NullRow = 131;\n    const int OP_Jump = 132;\n    const int OP_Permutation = 133;\n\n    /* The following opcode values are never used */\n    //#define OP_NotUsed_134                        134\n    //#define OP_NotUsed_135                        135\n    //#define OP_NotUsed_136                        136\n    //#define OP_NotUsed_137                        137\n    //#define OP_NotUsed_138                        138\n    //#define OP_NotUsed_139                        139\n    //#define OP_NotUsed_140                        140\n\n    /* The following opcode values are never used */\n    const int OP_NotUsed_134 = 134;\n    const int OP_NotUsed_135 = 135;\n    const int OP_NotUsed_136 = 136;\n    const int OP_NotUsed_137 = 137;\n    const int OP_NotUsed_138 = 138;\n    const int OP_NotUsed_139 = 139;\n    const int OP_NotUsed_140 = 140;\n\n\n    /* Properties such as "out2" or "jump" that are specified in\n    ** comments following the "case" for each opcode in the vdbe.c\n    ** are encoded into bitvectors as follows:\n    */\n    //#define OPFLG_JUMP            0x0001  /* jump:  P2 holds jmp target */\n    //#define OPFLG_OUT2_PRERELEASE 0x0002  /* out2-prerelease: */\n    //#define OPFLG_IN1             0x0004  /* in1:   P1 is an input */\n    //#define OPFLG_IN2             0x0008  /* in2:   P2 is an input */\n    //#define OPFLG_IN3             0x0010  /* in3:   P3 is an input */\n    //#define OPFLG_OUT3            0x0020  /* out3:  P3 is an output */\n\n    const int OPFLG_JUMP = 0x0001;            /* jump:  P2 holds jmp target */\n    const int OPFLG_OUT2_PRERELEASE = 0x0002; /* out2-prerelease: */\n    const int OPFLG_IN1 = 0x0004;             /* in1:   P1 is an input */\n    const int OPFLG_IN2 = 0x0008;             /* in2:   P2 is an input */\n    const int OPFLG_IN3 = 0x0010;             /* in3:   P3 is an input */\n    const int OPFLG_OUT3 = 0x0020;            /* out3:  P3 is an output */\n\n    public static int[] OPFLG_INITIALIZER = new int[]{\n/*   0 */ 0x00, 0x01, 0x00, 0x00, 0x10, 0x08, 0x02, 0x00,\n/*   8 */ 0x00, 0x04, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00,\n/*  16 */ 0x02, 0x00, 0x01, 0x04, 0x04, 0x00, 0x00, 0x05,\n/*  24 */ 0x00, 0x04, 0x02, 0x00, 0x02, 0x04, 0x00, 0x00,\n/*  32 */ 0x00, 0x00, 0x02, 0x11, 0x11, 0x02, 0x05, 0x00,\n/*  40 */ 0x02, 0x11, 0x04, 0x00, 0x00, 0x0c, 0x11, 0x01,\n/*  48 */ 0x02, 0x01, 0x21, 0x08, 0x00, 0x02, 0x01, 0x11,\n/*  56 */ 0x01, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x11,\n/*  64 */ 0x00, 0x00, 0x2c, 0x2c, 0x05, 0x00, 0x11, 0x05,\n/*  72 */ 0x05, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x00,\n/*  80 */ 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c, 0x2c,\n/*  88 */ 0x2c, 0x2c, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00,\n/*  96 */ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,\n/* 104 */ 0x00, 0x00, 0x01, 0x02, 0x08, 0x11, 0x00, 0x02,\n/* 112 */ 0x02, 0x15, 0x00, 0x00, 0x10, 0x00, 0x00, 0x02,\n/* 120 */ 0x00, 0x02, 0x01, 0x11, 0x00, 0x00, 0x05, 0x00,\n/* 128 */ 0x11, 0x05, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00,\n/* 136 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04,\n/* 144 */ 0x04, 0x04,\n};\n  }\n}\n'