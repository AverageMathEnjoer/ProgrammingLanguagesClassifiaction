b'package com.codeest.geeknews.util;\n\nimport android.content.res.XmlResourceParser;\nimport android.support.v4.util.ArrayMap;\n\n/**\n * Created by codeest on 16/12/30.\n */\n\npublic class XmlUtil {\n\n    public static ArrayMap<String, ArrayMap<String,String>> parseNodes(XmlResourceParser xmlResourceParser) throws Exception{\n            if (xmlResourceParser==null)\n                return  null;\n            ArrayMap<String, ArrayMap<String,String>> map = null;\n            ArrayMap<String,String> nodeMap = null;\n            int root=xmlResourceParser.getEventType();\n            while (root!= XmlResourceParser.END_DOCUMENT){\n                switch (root){\n                    case XmlResourceParser.START_DOCUMENT:\n                        map = new ArrayMap<>();\n                        break;\n                    case XmlResourceParser.START_TAG:\n                        if("index".equals(xmlResourceParser.getName())){\n                            String nodeName = xmlResourceParser.getAttributeValue(0);\n                            nodeMap = new ArrayMap<>();\n                            if (map != null) {\n                                map.put(nodeName, nodeMap);\n                            }\n                        }\n                        else if ("node".equals(xmlResourceParser.getName())){\n                            String node = xmlResourceParser.getAttributeValue(0);\n                            String nodeName = xmlResourceParser.nextText();\n                            if (nodeMap != null) {\n                                nodeMap.put(node, nodeName);\n                            }\n                        }\n                        break;\n                    case XmlResourceParser.END_TAG:\n                        if("index".equals(xmlResourceParser.getName())){\n                            nodeMap = null;\n                        }\n                        break;\n                }\n                root=xmlResourceParser.next();\n            }\n            return map;\n        }\n}\n'