b'package com.codeest.geeknews.ui.vtex.activity;\n\nimport android.support.v4.widget.SwipeRefreshLayout;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.Toolbar;\nimport android.view.Menu;\nimport android.view.MenuItem;\n\nimport com.codeest.geeknews.R;\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.base.RootActivity;\nimport com.codeest.geeknews.model.bean.NodeListBean;\nimport com.codeest.geeknews.model.bean.RealmLikeBean;\nimport com.codeest.geeknews.model.bean.RepliesListBean;\nimport com.codeest.geeknews.model.http.api.VtexApis;\nimport com.codeest.geeknews.presenter.vtex.RepliesPresenter;\nimport com.codeest.geeknews.base.contract.vtex.RepliesContract;\nimport com.codeest.geeknews.ui.vtex.adapter.RepliesAdapter;\nimport com.codeest.geeknews.util.ShareUtil;\nimport com.codeest.geeknews.util.SystemUtil;\nimport com.codeest.geeknews.widget.CommonItemDecoration;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport butterknife.BindView;\n\n/**\n * Created by codeest on 16/12/19.\n */\n\npublic class RepliesActivity extends RootActivity<RepliesPresenter> implements RepliesContract.View {\n\n    @BindView(R.id.tool_bar)\n    Toolbar toolBar;\n    @BindView(R.id.view_main)\n    RecyclerView rvContent;\n    @BindView(R.id.swipe_refresh)\n    SwipeRefreshLayout swipeRefresh;\n\n    private RepliesAdapter mAdapter;\n    private NodeListBean mTopBean;\n    private MenuItem menuItem;\n    private String topicId;\n    private boolean isLiked;\n\n    @Override\n    protected void initInject() {\n        getActivityComponent().inject(this);\n    }\n\n    @Override\n    protected int getLayout() {\n        return R.layout.activity_replies;\n    }\n\n    @Override\n    protected void initEventAndData() {\n        super.initEventAndData();\n        setToolBar(toolBar, "\xe5\xb8\x96\xe5\xad\x90\xe8\xaf\xa6\xe6\x83\x85");\n        topicId = getIntent().getExtras().getString(Constants.IT_VTEX_TOPIC_ID);\n        mTopBean = getIntent().getParcelableExtra(Constants.IT_VTEX_REPLIES_TOP);\n        mAdapter = new RepliesAdapter(mContext, new ArrayList<RepliesListBean>(), mTopBean);\n        CommonItemDecoration mDecoration = new CommonItemDecoration(2, CommonItemDecoration.UNIT_PX);\n        rvContent.addItemDecoration(mDecoration);\n        rvContent.setLayoutManager(new LinearLayoutManager(mContext));\n        rvContent.setAdapter(mAdapter);\n        swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n            @Override\n            public void onRefresh() {\n                mPresenter.getContent(topicId);\n            }\n        });\n        stateLoading();\n        mPresenter.getContent(topicId);\n        if (mTopBean == null) {\n            mPresenter.getTopInfo(topicId);\n        }\n    }\n\n\n    @Override\n    public void stateError() {\n        super.stateError();\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n    }\n\n    @Override\n    public void showContent(List<RepliesListBean> mList) {\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n        stateMain();\n        mAdapter.setContentData(mList);\n    }\n\n    @Override\n    public void showTopInfo(NodeListBean mTopInfo) {\n        mTopBean = mTopInfo;\n        mAdapter.setTopData(mTopInfo);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.tech_meun, menu);\n        menuItem = menu.findItem(R.id.action_like);\n        setLikeState(mPresenter.query(topicId));\n        return true;\n    }\n\n    @Override public boolean onOptionsItemSelected(MenuItem item) {\n        int id = item.getItemId();\n        switch (id) {\n            case R.id.action_like:\n                if(isLiked) {\n                    item.setIcon(R.mipmap.ic_toolbar_like_n);\n                    mPresenter.delete(topicId);\n                    isLiked = false;\n                } else {\n                    item.setIcon(R.mipmap.ic_toolbar_like_p);\n                    RealmLikeBean bean = new RealmLikeBean();\n                    bean.setId(topicId);\n                    bean.setImage(mTopBean.getMember().getavatar_normal());\n//                    bean.setUrl(url);\n                    bean.setTitle(mTopBean.getTitle());\n                    bean.setType(Constants.TYPE_VTEX);\n                    bean.setTime(System.currentTimeMillis());\n                    mPresenter.insert(bean);\n                    isLiked = true;\n                }\n                break;\n            case R.id.action_copy:\n                SystemUtil.copyToClipBoard(mContext, VtexApis.REPLIES_URL + topicId);\n                return true;\n            case R.id.action_share:\n                ShareUtil.shareText(mContext, VtexApis.REPLIES_URL + topicId, "\xe5\x88\x86\xe4\xba\xab\xe4\xb8\x80\xe7\xaf\x87\xe6\x96\x87\xe7\xab\xa0");\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    private void setLikeState(boolean state) {\n        if(state) {\n            menuItem.setIcon(R.mipmap.ic_toolbar_like_p);\n            isLiked = true;\n        } else {\n            menuItem.setIcon(R.mipmap.ic_toolbar_like_n);\n            isLiked = false;\n        }\n    }\n}\n'