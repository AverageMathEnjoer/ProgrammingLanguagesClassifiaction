b"{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE TypeFamilies #-}\n\n-----------------------------------------------------------------------------\n\n-- |\n-- Module      : Data.Hoodle.Select\n-- Copyright   : (c) 2011,2012,2014 Ian-Woo Kim\n--\n-- License     : BSD3\n-- Maintainer  : Ian-Woo Kim <ianwookim@gmail.com>\n-- Stability   : experimental\n-- Portability : GHC\nmodule Data.Hoodle.Select where\n\nimport Data.ByteString (ByteString)\nimport Data.Hoodle.Generic\n  ( GHoodle (..),\n    PDFData,\n    gembeddedpdf,\n    gembeddedtext,\n    ghoodleID,\n    gpages,\n    grevisions,\n    gtitle,\n  )\nimport Data.Hoodle.Simple (Revision)\nimport qualified Data.Text as T\nimport Lens.Micro (Lens', lens)\nimport Lens.Micro.Extras (view)\n\n-- |\ndata GSelect a b = GSelect\n  { gselect_id :: ByteString,\n    gselect_ttl :: ByteString,\n    gselect_revisions :: [Revision],\n    gselect_embeddedpdf :: Maybe PDFData, -- Maybe ByteString\n    gselect_embeddedtext :: Maybe T.Text,\n    gselect_all :: a,\n    gselect_selected :: b\n  }\n\ngselHoodleID :: Lens' (GSelect a b) ByteString\ngselHoodleID = lens gselect_id (\\f a -> f {gselect_id = a})\n\n-- |\ngselTitle :: Lens' (GSelect a b) ByteString\ngselTitle = lens gselect_ttl (\\f a -> f {gselect_ttl = a})\n\n-- |\ngselRevisions :: Lens' (GSelect a b) [Revision]\ngselRevisions = lens gselect_revisions (\\f a -> f {gselect_revisions = a})\n\n-- |\ngselEmbeddedPdf :: Lens' (GSelect a b) (Maybe PDFData)\ngselEmbeddedPdf = lens gselect_embeddedpdf (\\f a -> f {gselect_embeddedpdf = a})\n\n-- |\ngselEmbeddedText :: Lens' (GSelect a b) (Maybe T.Text)\ngselEmbeddedText = lens gselect_embeddedtext (\\f a -> f {gselect_embeddedtext = a})\n\n-- |\ngselAll :: Lens' (GSelect a b) a\ngselAll = lens gselect_all (\\f a -> f {gselect_all = a})\n\n-- |\ngselSelected :: Lens' (GSelect a b) b\ngselSelected = lens gselect_selected (\\f a -> f {gselect_selected = a})\n\ngSelect2GHoodle :: GSelect (m a) b -> GHoodle m a\ngSelect2GHoodle =\n  GHoodle <$> view gselHoodleID\n    <*> view gselTitle\n    <*> view gselRevisions\n    <*> view gselEmbeddedPdf\n    <*> view gselEmbeddedText\n    <*> view gselAll\n\ngHoodle2GSelect :: GHoodle m a -> GSelect (m a) (Maybe b)\ngHoodle2GSelect =\n  GSelect <$> view ghoodleID\n    <*> view gtitle\n    <*> view grevisions\n    <*> view gembeddedpdf\n    <*> view gembeddedtext\n    <*> view gpages\n    <*> pure Nothing\n"