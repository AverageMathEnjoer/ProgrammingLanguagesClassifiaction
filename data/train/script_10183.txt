b'package com.github.eprendre.sources_by_eprendre\n\nimport com.github.eprendre.tingshu.extensions.config\nimport com.github.eprendre.tingshu.sources.AudioUrlExtractor\nimport com.github.eprendre.tingshu.sources.AudioUrlWebViewExtractor\nimport com.github.eprendre.tingshu.sources.AudioUrlWebViewSniffExtractor\nimport com.github.eprendre.tingshu.sources.TingShu\nimport com.github.eprendre.tingshu.utils.*\nimport org.jsoup.Jsoup\nimport java.net.URLEncoder\n\nobject LiuTingWang : TingShu() {\n    override fun getSourceId(): String {\n        return "3fb16598bb214631807e2000e08c746c"\n    }\n\n    override fun getUrl(): String {\n        return "http://www.6ting.cn"\n    }\n\n    override fun getName(): String {\n        return "\xe5\x85\xad\xe5\x90\xac\xe7\xbd\x91"\n    }\n\n    override fun getDesc(): String {\n        return "\xe6\x8e\xa8\xe8\x8d\x90\xe6\x8c\x87\xe6\x95\xb0:3\xe6\x98\x9f \xe2\xad\x90\xe2\xad\x90\xe2\xad\x90\\n \xe4\xb8\x80\xe5\xae\xb6\xe4\xbc\x98\xe8\xb4\xa8\xe7\x9a\x84\xe7\x8e\x84\xe5\xb9\xbb\xe6\xad\xa6\xe4\xbe\xa0\xe6\x9c\x89\xe5\xa3\xb0\xe5\xb0\x8f\xe8\xaf\xb4\xe5\x88\x86\xe4\xba\xab\xe7\xbd\x91\xe7\xab\x99"\n    }\n\n    override fun search(keywords: String, page: Int): Pair<List<Book>, Int> {\n        val encodedKeywords = URLEncoder.encode(keywords, "utf-8")\n        val url = "http://www.6ting.cn/search.php?page=${page}&searchword=${encodedKeywords}"\n        val doc = Jsoup.connect(url).config(false).get()\n\n        val pager = doc.select(".pager > li")\n        var totalPage = page\n        if (pager.size > 0) {\n            pager.firstOrNull { it.text().equals("\xe4\xb8\x8b\xe4\xb8\x80\xe9\xa1\xb5") }?.let {\n                totalPage = page + 1\n            }\n        }\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select(".list-unstyled > li.ting-col")\n        elementList.forEach { element ->\n            val coverUrl = element.selectFirst("img").absUrl("src")\n            val bookUrl = element.selectFirst("h4 > a").absUrl("href")\n            val title = element.selectFirst("h4 > a").text()\n            val l = element.select("h6 > a")\n            val author = l.first().text()\n            val artist = l.last().text()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.sourceId = getSourceId()\n            })\n        }\n        return Pair(list, totalPage)\n    }\n\n    override fun getAudioUrlExtractor(): AudioUrlExtractor {\n        AudioUrlWebViewExtractor.setUp(script = "var scripts = document.querySelector(\'iframe\').contentDocument.scripts; scripts[scripts.length - 1].textContent") { str ->\n           return@setUp Regex("url: \'(.+)\',cover").find(str)?.groupValues?.get(1) ?: ""\n        }\n        return AudioUrlWebViewExtractor\n    }\n\n    override fun getCategoryMenus(): List<CategoryMenu> {\n        return listOf(\n            CategoryMenu(\n                "\xe5\x88\x86\xe7\xb1\xbb", listOf(\n                    CategoryTab("\xe7\x8e\x84\xe5\xb9\xbb\xe6\xad\xa6\xe4\xbe\xa0", "http://www.6ting.cn/booklist/1.html"),\n                    CategoryTab("\xe9\x83\xbd\xe5\xb8\x82\xe8\xa8\x80\xe6\x83\x85", "http://www.6ting.cn/booklist/2.html"),\n                    CategoryTab("\xe7\xa7\x91\xe5\xb9\xbb", "http://www.6ting.cn/booklist/3.html"),\n                    CategoryTab("\xe5\x88\x91\xe4\xbe\xa6\xe6\x8e\xa8\xe7\x90\x86", "http://www.6ting.cn/booklist/4.html"),\n                    CategoryTab("\xe6\x81\x90\xe6\x80\x96\xe6\x83\x8a\xe6\x82\x9a", "http://www.6ting.cn/booklist/5.html"),\n                    CategoryTab("\xe5\x8e\x86\xe5\x8f\xb2\xe5\x86\x9b\xe4\xba\x8b", "http://www.6ting.cn/booklist/7.html"),\n                    CategoryTab("\xe9\x80\x9a\xe4\xbf\x97", "http://www.6ting.cn/booklist/8.html"),\n                    CategoryTab("\xe7\x99\xbe\xe5\xae\xb6\xe8\xae\xb2\xe5\x9d\x9b", "http://www.6ting.cn/booklist/9.html"),\n                    CategoryTab("\xe5\x84\xbf\xe7\xab\xa5\xe8\xaf\xbb\xe7\x89\xa9", "http://www.6ting.cn/booklist/10.html"),\n                    CategoryTab("\xe7\x9b\xb8\xe5\xa3\xb0\xe8\xaf\x84\xe4\xb9\xa6", "http://www.6ting.cn/booklist/11.html"),\n                    CategoryTab("\xe7\xbb\x8f\xe5\x85\xb8", "http://www.6ting.cn/booklist/12.html"),\n                    CategoryTab("\xe5\x85\xb6\xe5\xae\x83", "http://www.6ting.cn/booklist/13.html")\n                )\n            ))\n    }\n\n    override fun getCategoryList(url: String): Category {\n        val doc = Jsoup.connect(url).config(false).get()\n\n        val pager = doc.select(".pager > li > a")\n        var currentPage = 1\n        var totalPage = 1\n        var nextUrl = ""\n        if (pager.size > 0) {\n            pager.firstOrNull { it.text().equals("\xe4\xb8\x8b\xe4\xb8\x80\xe9\xa1\xb5") }?.let {\n                totalPage = currentPage + 1\n                nextUrl = it.absUrl("href")\n            }\n        }\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select(".list-unstyled > li.ting-col")\n        elementList.forEach { element ->\n            val coverUrl = element.selectFirst("img").absUrl("src")\n            val bookUrl = element.selectFirst("h4 > a").absUrl("href")\n            val title = element.selectFirst("h4 > a").text()\n            val intro = element.selectFirst("h4 > a").attr("title")\n            val l = element.select("h6 > a")\n            val author = l.first().text()\n            val artist = l.last().text()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.intro = intro\n                this.sourceId = getSourceId()\n            })\n        }\n\n        return Category(list, currentPage, totalPage, url, nextUrl)\n    }\n\n    override fun getBookDetailInfo(bookUrl: String, loadEpisodes: Boolean, loadFullPages: Boolean): BookDetail {\n        val episodes = ArrayList<Episode>()\n        if (loadEpisodes) {\n            val doc = Jsoup.connect(bookUrl).config(false).get()\n            val playlists = doc.select("#ting-tab-content > div > .play-list")\n            playlists.forEach { element ->\n                val l = element.select("li > a").map {\n                    Episode(it.text(), it.absUrl("href"))\n                }\n                if (l.size > episodes.size) {\n                    episodes.clear()\n                    episodes.addAll(l)\n                }\n            }\n        }\n        return BookDetail(episodes)\n    }\n}'