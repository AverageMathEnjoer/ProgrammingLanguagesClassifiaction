b'#-----------you need to install the following packages. this only needs to be done once.\r\ninstall.packages(c(\'sf\', \'foreign\', \'tidyverse\', \'stringi\', \'lwgeom\'))\r\n\r\n#-----------initialize libraries. This needs to be done for each new R session \r\nlibrary(sf)\r\nlibrary(foreign)\r\nlibrary(tidyverse)\r\nlibrary(lwgeom)\r\nlibrary(stringi)\r\noptions(stringsAsFactors = FALSE)\r\n\r\n#-----------download files\r\n#pick a region and download/unzip the .shp.zip file: http://download.geofabrik.de/\r\n\r\n#-----------set the working directory to wherever you unzipped the downloaded files to\r\nsetwd("C:/Users/Erin/Documents/DataViz/!Complete/IndivRoads/OSM_Data/London/")\r\n\r\n\r\n#-----------set some basic info about the city you\'re mapping\r\ncity <- "london"\r\nlat <- 51.508420 #center point latitude\r\nlong <- -0.112730 #center point longitude\r\nrad <- 20000 #radius, in meters, around the center point to map\r\ncrs <- 102013 #ESRI projection for mapping. I found mine here: https://spatialreference.org/ref/esri/europe-albers-equal-area-conic/ 102013 will give good results for Europe.\r\n\r\n\r\n#-----------set up the road types you want to plot and what colors they should be\r\nplottypes <-  c(\'Road\', \'Street\', \'Avenue\', \'Lane\', \'Close\', \'Way\', \'Place\', \'Embankment\')\r\nplotcolors <-  c(\'Road\' = \'#59c8e5\', \'Street\' = \'#fed032\', \'Avenue\' =\'#4cb580\', \'Lane\' = \'#fe4d64\', \'Close\' = \'#0a7abf\',\r\n                 \'Way\' = \'#2e968c\', \'Place\' = \'#fe9ea5\', \'Embankment\' = \'#fe9ea5\', \'Motorway\' = "#ff9223", \'Other\' = \'#cccccc\')\r\n\r\n\r\n#-----------get to plotting\r\n#import  road geography\r\nfilename <- "gis_osm_roads_free_1"\r\nallroads <- read_sf(".", filename)\r\n\r\n#subset the roads into a circle.\r\npt <- data.frame(lat = lat, long = long)\r\npt <- pt %>% st_as_sf(coords = c("long", "lat"), crs = 4326) %>%  st_transform(crs) \r\ncircle <- st_buffer(pt, dist = rad)\r\ncircle <- circle %>% st_transform(st_crs(allroads))\r\nallroads <- st_intersection(circle, allroads)\r\n\r\n#remove unnamed footpaths\r\nallroads <- allroads[!(allroads$fclass  == "footway" & is.na(allroads$name)),]\r\n\r\n#add in length \r\nallroads$len <- st_length(allroads)\r\n\r\n#-----derive road suffixes-----\r\n#run this line if your suffixes are at the END of the name (e.g. Canal Street)\r\nallroads$TYPE <- substr(allroads$name, stri_locate_last(allroads$name, regex = " ")[, 1] + 1,  nchar(allroads$name)) %>% stri_trans_general(id = "Title")\r\n\r\n#run this line if your "suffixes" are at the BEGINNING of the name (e.g. Calle de los Gatos)\r\nallroads$TYPE <- substr(allroads$name, 1,  str_locate(allroads$name, " ")[, 1] -1)  %>% stri_trans_general(id = "Title")   #for road prefixes\r\n\r\n#--------uncomment and run this code to get the top roads by length.\r\n#--------i usually run this to decide what road types to plot\r\n#plottype <- allroads %>% select(TYPE,len)\r\n#plottype$geometry <- NULL\r\n#plottype <- subset(plottype, !is.na(TYPE))\r\n#plottype <- plottype %>% group_by(TYPE) %>% summarise(Length = sum(len)) %>% arrange(-Length) \r\n\r\n\r\n#rename motorways that don\'t have some other designation\r\nallroads$TYPE[allroads$fclass == \'motorway\' & !(allroads$TYPE %in% plottypes)] <- "Motorway"\r\n\r\n#put other roads into their own dataframe\r\nallroads$TYPE[!(allroads$TYPE %in% plottypes) & allroads$TYPE != \'Motorway\'] <- "Other"\r\notherroads <- allroads[(allroads$TYPE  == "Other"),]\r\nallroads <- allroads[(allroads$TYPE  != "Other"),]\r\n\r\n#plot it\r\nblankbg <-theme(axis.line=element_blank(),axis.text.x=element_blank(),\r\n                axis.text.y=element_blank(),axis.ticks=element_blank(),\r\n                axis.title.x=element_blank(), axis.title.y=element_blank(),\r\n                panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),\r\n                panel.grid.minor=element_blank(),plot.background=element_blank())\r\n\r\nggplot() + blankbg + theme(panel.grid.major = element_line(colour = "transparent")) + \r\n  geom_sf(data=otherroads, size = .8, aes(color=TYPE)) + \r\n  geom_sf(data=allroads, size =1, aes(color=TYPE)) + \r\n  scale_color_manual(values = plotcolors, guide = "legend") \r\n\r\nggsave(paste0(".", city, ".png"), plot = last_plot(),\r\n       scale = 1, width = 24, height = 36, units = "in",\r\n       dpi = 500)\r\n\r\n\r\n\r\n\r\n\r\n\r\n'