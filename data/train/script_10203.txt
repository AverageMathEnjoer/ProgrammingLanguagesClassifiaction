b'package co.joebirch.composeplayground.assertions\n\nimport androidx.compose.material.Text\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.testTag\nimport androidx.compose.ui.test.assertIsEnabled\nimport androidx.compose.ui.test.assertIsNotEnabled\nimport androidx.compose.ui.test.junit4.createComposeRule\nimport androidx.compose.ui.test.onNodeWithTag\nimport androidx.test.ext.junit.runners.AndroidJUnit4\nimport org.junit.Rule\nimport org.junit.Test\nimport org.junit.runner.RunWith\n\n@RunWith(AndroidJUnit4::class)\nclass AssertEnabledTests {\n\n    @get:Rule\n    val composeTestRule = createComposeRule()\n\n    private fun launchContent(clickable: Boolean) {\n        composeTestRule.setContent {\n            MaterialTheme {\n                Surface {\n                    Box {\n                        if (clickable) {\n                            Text(\n                                text = "Hello",\n                                modifier = Modifier.clickable(onClick = {\n\n                                }).testTag("MyTag")\n                            )\n                        } else {\n                            Text(\n                                text = "Hello"\n                            )\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    @Test\n    fun testHasClickAction() {\n        launchContent(true)\n        composeTestRule.onNodeWithTag("MyTag")\n            .assertIsEnabled()\n    }\n\n    @Test\n    fun testNoClickAction() {\n        launchContent(false)\n        composeTestRule.onNodeWithTag("MyTag")\n            .assertIsNotEnabled()\n    }\n}'