b'/*\n* Copyright (C) 2014 The CyanogenMod Project\n*\n* Licensed under the Apache License, Version 2.0 (the "License");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an "AS IS" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\npackage com.naman14.timber.provider;\n\nimport android.content.Context;\nimport android.database.sqlite.SQLiteDatabase;\nimport android.database.sqlite.SQLiteOpenHelper;\n\npublic class MusicDB extends SQLiteOpenHelper {\n\n    public static final String DATABASENAME = "musicdb.db";\n    private static final int VERSION = 4;\n    private static MusicDB sInstance = null;\n\n    private final Context mContext;\n\n    public MusicDB(final Context context) {\n        super(context, DATABASENAME, null, VERSION);\n\n        mContext = context;\n    }\n\n    public static final synchronized MusicDB getInstance(final Context context) {\n        if (sInstance == null) {\n            sInstance = new MusicDB(context.getApplicationContext());\n        }\n        return sInstance;\n    }\n\n    @Override\n    public void onCreate(SQLiteDatabase db) {\n        MusicPlaybackState.getInstance(mContext).onCreate(db);\n        RecentStore.getInstance(mContext).onCreate(db);\n        SongPlayCount.getInstance(mContext).onCreate(db);\n        SearchHistory.getInstance(mContext).onCreate(db);\n    }\n\n    @Override\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n        MusicPlaybackState.getInstance(mContext).onUpgrade(db, oldVersion, newVersion);\n        RecentStore.getInstance(mContext).onUpgrade(db, oldVersion, newVersion);\n        SongPlayCount.getInstance(mContext).onUpgrade(db, oldVersion, newVersion);\n        SearchHistory.getInstance(mContext).onUpgrade(db, oldVersion, newVersion);\n    }\n\n    @Override\n    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n        MusicPlaybackState.getInstance(mContext).onDowngrade(db, oldVersion, newVersion);\n        RecentStore.getInstance(mContext).onDowngrade(db, oldVersion, newVersion);\n        SongPlayCount.getInstance(mContext).onDowngrade(db, oldVersion, newVersion);\n        SearchHistory.getInstance(mContext).onDowngrade(db, oldVersion, newVersion);\n    }\n}\n'