b'{-# LANGUAGE TypeApplications #-}\nmodule Main where\n\nimport Criterion.Main (bench, bgroup, defaultMain, nf)\n\nimport qualified Data.List as Stl\n\nimport qualified ArrayInsertionSort as Arr\nimport qualified ListInsertionSort as Lst\nimport qualified VecInsertionSort as Vec\n\nmain :: IO ()\nmain = defaultMain $\n  let testList = [1..300] ++ [300,299..1] in\n  [ bgroup "is500"\n    [ bench "lst" $ nf Lst.sort        [500,499..1]\n    , bench "arr" $ nf Arr.sort        [500,499..1]\n    , bench "vec" $ nf Vec.sort        [500,499..1]\n    , bench "stl" $ nf (Stl.sort @Int) [500,499..1]\n    ]\n  , bgroup "is600"\n    [ bench "lst" $ nf Lst.sort        testList\n    , bench "arr" $ nf Arr.sort        testList\n    , bench "vec" $ nf Vec.sort        testList\n    , bench "stl" $ nf (Stl.sort @Int) testList\n    ]\n  ]\n'