b'module GameModel where\n\nimport qualified Data.Map as M\n\ndata Coord = Coord Int Int deriving (Eq, Ord, Show)\ndata CellMineStatus = CellMine | CellNotMine deriving (Eq, Ord, Show)\ndata CellVisibility = CellKnown | CellUnknown deriving (Eq, Ord, Show)\ndata CellStatus = CellStatus {cellVisibility :: CellVisibility, cellMineStatus :: CellMineStatus } deriving (Eq, Ord, Show)\n\ndata Game = Game {\n    gameGridSize :: Int\n  , gameStatus :: M.Map Coord CellStatus\n                 } deriving (Show)\n'