b'module Cachix.Types.BinaryCache where\n\nimport Cachix.Types.Permission (Permission)\nimport Data.Aeson (FromJSON, ToJSON)\nimport Data.Swagger (ToParamSchema (..), ToSchema)\nimport Protolude\nimport Servant.API\n\ndata BinaryCache = BinaryCache\n  { name :: Text,\n    uri :: Text,\n    isPublic :: Bool,\n    publicSigningKeys :: [Text],\n    githubUsername :: Text,\n    permission :: Permission,\n    preferredCompressionMethod :: CompressionMethod\n  }\n  deriving (Show, Generic, FromJSON, ToJSON, ToSchema, NFData)\n\ndata CompressionMethod = XZ | ZSTD\n  deriving (Show, Read, Generic, FromJSON, ToJSON, ToSchema, NFData)\n\ninstance FromHttpApiData CompressionMethod where\n  parseUrlPiece "xz" = Right XZ\n  parseUrlPiece "zst" = Right ZSTD\n  parseUrlPiece compressionMethod = Left $ "Wrong compression method: " <> compressionMethod\n\ninstance ToHttpApiData CompressionMethod where\n  toUrlPiece XZ = "xz"\n  toUrlPiece ZSTD = "zst"\n\ninstance ToParamSchema CompressionMethod where\n  toParamSchema _ = toParamSchema (Proxy :: Proxy Text)\n'