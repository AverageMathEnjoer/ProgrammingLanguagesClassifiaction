b'module Main where\n\nimport Control.Monad (replicateM)\nimport Text.Trifecta\nimport Text.Trifecta.Delta(Delta(..))\nimport Text.PrettyPrint.ANSI.Leijen(putDoc)\n\n\nint :: Parser Int\nint = fromInteger <$> integer\n\nn_words :: Int -> Parser [String]\nn_words n = replicateM n \n  (token $ some alphaNum)\n\ngrammar :: Parser ()\ngrammar = int >>= n_words >> eof\n\n\nmain = do\n  putStr "INPUT> "\n  str <- getLine\n  case parseString grammar (Columns 0 0) str of\n    Failure doc -> do\n      putDoc doc\n      putStrLn "Wrong!"\n    Success xs -> putStrLn "Correct!"\n  main\n'