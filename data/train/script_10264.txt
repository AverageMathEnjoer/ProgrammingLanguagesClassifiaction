b'\xef\xbb\xbf// \xe5\x9f\x83\xe5\x8f\x8a\xe5\x88\x86\xe6\x95\xb0\xe9\x97\xae\xe9\xa2\x98\n// Rujia Liu\n\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<cassert>\nusing namespace std;\n\nint a, b, maxd;\n\ntypedef long long LL;\n\nLL gcd(LL a, LL b) {\n  return b == 0 ? a : gcd(b, a%b);\n}\n\n// \xe8\xbf\x94\xe5\x9b\x9e\xe6\xbb\xa1\xe8\xb6\xb31/c <= a/b\xe7\x9a\x84\xe6\x9c\x80\xe5\xb0\x8fc\ninline int get_first(LL a, LL b) {\n  return b/a+1;\n}\n\nconst int maxn = 100 + 5;\n\nLL v[maxn], ans[maxn];\n\n// \xe5\xa6\x82\xe6\x9e\x9c\xe5\xbd\x93\xe5\x89\x8d\xe8\xa7\xa3v\xe6\xaf\x94\xe7\x9b\xae\xe5\x89\x8d\xe6\x9c\x80\xe4\xbc\x98\xe8\xa7\xa3ans\xe6\x9b\xb4\xe4\xbc\x98\xef\xbc\x8c\xe6\x9b\xb4\xe6\x96\xb0ans\nbool better(int d) {\n  for(int i = d; i >= 0; i--) if(v[i] != ans[i]) {\n    return ans[i] == -1 || v[i] < ans[i];\n  }\n  return false;\n}\n\n// \xe5\xbd\x93\xe5\x89\x8d\xe6\xb7\xb1\xe5\xba\xa6\xe4\xb8\xbad\xef\xbc\x8c\xe5\x88\x86\xe6\xaf\x8d\xe4\xb8\x8d\xe8\x83\xbd\xe5\xb0\x8f\xe4\xba\x8efrom\xef\xbc\x8c\xe5\x88\x86\xe6\x95\xb0\xe4\xb9\x8b\xe5\x92\x8c\xe6\x81\xb0\xe5\xa5\xbd\xe4\xb8\xbaaa/bb\nbool dfs(int d, int from, LL aa, LL bb) {\n  if(d == maxd) {\n    if(bb % aa) return false; // aa/bb\xe5\xbf\x85\xe9\xa1\xbb\xe6\x98\xaf\xe5\x9f\x83\xe5\x8f\x8a\xe5\x88\x86\xe6\x95\xb0\n    v[d] = bb/aa;\n    if(better(d)) memcpy(ans, v, sizeof(LL) * (d+1));\n    return true;\n  }\n  bool ok = false;\n  from = max(from, get_first(aa, bb)); // \xe6\x9e\x9a\xe4\xb8\xbe\xe7\x9a\x84\xe8\xb5\xb7\xe7\x82\xb9\n  for(int i = from; ; i++) {\n    // \xe5\x89\xaa\xe6\x9e\x9d\xef\xbc\x9a\xe5\xa6\x82\xe6\x9e\x9c\xe5\x89\xa9\xe4\xb8\x8b\xe7\x9a\x84maxd+1-d\xe4\xb8\xaa\xe5\x88\x86\xe6\x95\xb0\xe5\x85\xa8\xe9\x83\xa8\xe9\x83\xbd\xe6\x98\xaf1/i\xef\xbc\x8c\xe5\x8a\xa0\xe8\xb5\xb7\xe6\x9d\xa5\xe4\xbb\x8d\xe7\x84\xb6\xe4\xb8\x8d\xe8\xb6\x85\xe8\xbf\x87aa/bb\xef\xbc\x8c\xe5\x88\x99\xe6\x97\xa0\xe8\xa7\xa3\n    if(bb * (maxd+1-d) <= i * aa) break;\n    v[d] = i;\n    // \xe8\xae\xa1\xe7\xae\x97aa/bb - 1/i\xef\xbc\x8c\xe8\xae\xbe\xe7\xbb\x93\xe6\x9e\x9c\xe4\xb8\xbaa2/b2\n    LL b2 = bb*i;\n    LL a2 = aa*i - bb;\n    LL g = gcd(a2, b2); // \xe4\xbb\xa5\xe4\xbe\xbf\xe7\xba\xa6\xe5\x88\x86\n    if(dfs(d+1, i+1, a2/g, b2/g)) ok = true;\n  }\n  return ok;\n}\n\nint main() {\n  int kase = 0;\n  while(cin >> a >> b) {\n    int ok = 0;\n    for(maxd = 1; maxd <= 100; maxd++) {\n      memset(ans, -1, sizeof(ans));\n      if(dfs(0, get_first(a, b), a, b)) { ok = 1; break; }\n    }\n    cout << "Case " << ++kase << ": ";\n    if(ok) {\n      cout << a << "/" << b << "=";\n      for(int i = 0; i < maxd; i++) cout << "1/" << ans[i] << "+";\n      cout << "1/" << ans[maxd] << "\\n";\n    } else cout << "No solution.\\n";\n  }\n  return 0;\n}\n'