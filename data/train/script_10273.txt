b'/*\n * Copyright (C) 2015 Naman Dwivedi\n *\n * Licensed under the GNU General Public License v3\n *\n * This is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n */\n\npackage com.naman14.timber.fragments;\n\nimport android.os.Bundle;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport com.naman14.timber.R;\nimport com.naman14.timber.adapters.ArtistSongAdapter;\nimport com.naman14.timber.dataloaders.ArtistSongLoader;\nimport com.naman14.timber.models.Song;\nimport com.naman14.timber.utils.Constants;\nimport com.naman14.timber.widgets.DividerItemDecoration;\n\nimport java.util.ArrayList;\n\npublic class ArtistMusicFragment extends Fragment {\n\n    public static RecyclerView songsRecyclerview;\n    private long artistID = -1;\n    private ArtistSongAdapter mSongAdapter;\n\n    public static ArtistMusicFragment newInstance(long id) {\n        ArtistMusicFragment fragment = new ArtistMusicFragment();\n        Bundle args = new Bundle();\n        args.putLong(Constants.ARTIST_ID, id);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            artistID = getArguments().getLong(Constants.ARTIST_ID);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View rootView = inflater.inflate(\n                R.layout.fragment_artist_music, container, false);\n\n        songsRecyclerview = (RecyclerView) rootView.findViewById(R.id.recycler_view_songs);\n\n        setUpSongs();\n\n\n        return rootView;\n    }\n\n\n    private void setUpSongs() {\n        songsRecyclerview.setLayoutManager(new LinearLayoutManager(getActivity()));\n\n        ArrayList<Song> songList;\n        songList = ArtistSongLoader.getSongsForArtist(getActivity(), artistID);\n\n        // adding one dummy song to top of arraylist\n        //there will be albums header at this position in recyclerview\n        songList.add(0, new Song(-1, -1, -1, "dummy", "dummy", "dummy", -1, -1));\n\n        mSongAdapter = new ArtistSongAdapter(getActivity(), songList, artistID);\n        songsRecyclerview.addItemDecoration(new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST));\n        songsRecyclerview.setAdapter(mSongAdapter);\n    }\n\n\n}\n'