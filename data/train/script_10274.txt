b'import com.github.eprendre.tingshu.utils.Book\nimport com.github.eprendre.tingshu.utils.Episode\nimport com.github.kittinunf.fuel.Fuel\nimport com.google.gson.Gson\nimport org.jsoup.Jsoup\nimport org.junit.Test\nimport java.net.URI\nimport java.net.URL\nimport java.net.URLDecoder\n\nclass KouDaiWeiKeTangTest {\n\n    @Test\n    fun bookDetail() {\n        val bookUrl = "http://www.xiai123.com/2016qiu-1s.html"\n        val doc = Jsoup.connect(bookUrl).testConfig().get()\n        val url = doc.select(".biaoqian1 > div > script").first {\n            it.attr("src").startsWith("http")\n        }.attr("src")\n\n        val js = Fuel.get(url).responseString().third.get()\n            .replace("\\t", "")\n            .replace("\\r\\n", "")\n            .replace("\'", "\\"")\n            .replace("title:", "\\"title\\":")\n            .replace("singer:", "\\"singer\\":")\n            .replace("cover:", "\\"cover\\":")\n            .replace("src:", "\\"src\\":")\n        val result = Regex("(\\\\[.+])").find(js)?.groupValues?.get(1)\n        val list = Gson().fromJson(result, Array<TempBean>::class.java).toList()\n            .map {\n                val u = it.src\n                val audioUrl = if (URLDecoder.decode(u, "UTF-8") != u) {//\xe5\xb7\xb2\xe7\xbc\x96\xe7\xa0\x81\n                    u\n                } else {//\xe6\x9c\xaa\xe7\xbc\x96\xe7\xa0\x81\n                    val url1 = URL(u)\n                    val uri = URI(url1.protocol, url1.userInfo, url1.host, url1.port, url1.path, url1.query, url1.ref)\n                    uri.toASCIIString()//\xe8\x8b\xa5\xe9\x9f\xb3\xe9\xa2\x91\xe5\x9c\xb0\xe5\x9d\x80\xe5\x90\xab\xe4\xb8\xad\xe6\x96\x87\xe4\xbc\x9a\xe5\xaf\xbc\xe8\x87\xb4\xe6\x9f\x90\xe4\xba\x9b\xe8\xae\xbe\xe5\xa4\x87\xe6\x92\xad\xe6\x94\xbe\xe5\xa4\xb1\xe8\xb4\xa5\n                }\n                Episode(it.title, audioUrl)\n            }\n\n        println(list)\n    }\n\n    data class TempBean(\n        val title: String,\n        val singer: String,\n        val cover: String,\n        val src: String\n    )\n\n    @Test\n    fun menu() {\n        val url = "http://www.xiai123.com/index.html"\n//        val url = "http://www.xiai123.com/kewen.html"\n        val doc = Jsoup.connect(url).testConfig().get()\n        doc.select(".index_item > ul > li > a").forEach {\n            println("CategoryTab(\\"${it.text()}\\", \\"${it.absUrl("href")}\\"),")\n        }\n    }\n\n    @Test\n    fun categoryList() {\n//        val url = "http://www.xiai123.com/yilinbanyingyu.html"\n        val url = "http://www.xiai123.com/index.html"\n        val doc = Jsoup.connect(url).testConfig().get()\n        val list = ArrayList<Book>()\n        doc.select(".index_item > ul > li > a").forEach {\n            val coverUrl = it.selectFirst("img").absUrl("src")\n            val title = it.text()\n            val bookUrl = it.absUrl("href")\n            if (bookUrl != "http://www.xiai123.com/kewen.html") {\n                list.add(Book(coverUrl, bookUrl, title, "", ""))\n            }\n        }\n\n        println(list)\n    }\n}'