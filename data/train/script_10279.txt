b'\xef\xbb\xbfusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing Castle.DynamicProxy;\nusing Core.CrossCuttingConcerns.Validation;\nusing Core.Utilities.Interceptors;\nusing Core.Utilities.Messages;\nusing FluentValidation;\n\nnamespace Core.Aspects.Autofac.Validation\n{\n    public class ValidationAspect:MethodInterception\n    {\n        private Type _validatorType;\n        public ValidationAspect(Type validatorType)\n        {\n            if (!typeof(IValidator).IsAssignableFrom(validatorType))\n            {\n                throw new System.Exception(AspectMessages.WrongValidationType);\n            }\n\n            _validatorType = validatorType;\n        }\n        protected override void OnBefore(IInvocation invocation)\n        {\n            var validator = (IValidator)Activator.CreateInstance(_validatorType);\n            var entityType = _validatorType.BaseType.GetGenericArguments()[0];\n            var entities = invocation.Arguments.Where(t => t.GetType() == entityType);\n            foreach (var entity in entities)\n            {\n                ValidationTool.Validate(validator,entity);\n            }\n        }\n    }\n}\n'