b'#I @"..\\..\\..\\packages\\"\n\n#r @"Http.fs\\lib\\net40\\HttpClient.dll"\n#r @"FSharp.Data\\lib\\net40\\FSharp.Data.dll"\nopen HttpClient\nopen System\n\nmodule Auth =\n    let [<Literal>] private ResponseSample = """{"token_type":"bearer","expires_in":3600,"scope":"wl.emails wl.basic wl.offline_access wl.signin","access_token":"access-token","refresh_token":"refresh-token","user_id":"cc2c4130f73448339235ed7862f1d4b5"}"""\n\n    type private OAuthResponse = FSharp.Data.JsonProvider<ResponseSample>\n    let private buildAccessTokenUrl clientId clientSecret authCode = sprintf "https://login.live.com/oauth20_token.srf?client_id=%s&client_secret=%s&redirect_uri=https://login.live.com/oauth20_desktop.srf&grant_type=authorization_code&code=%s" clientId clientSecret authCode\n    let private buildRefreshTokenUrl clientId clientSecret refreshToken = sprintf "https://login.live.com/oauth20_token.srf?client_id=%s&client_secret=%s&redirect_uri=https://login.live.com/oauth20_desktop.srf&grant_type=refresh_token&refresh_token=%s" clientId clientSecret refreshToken\n    /// Opens a browser window to let you grant permissions to your app.\n    let grantPermissions clientId =\n        let scope = "wl.emails%20wl.basic%20wl.offline_access%20wl.signin"\n        let url = sprintf "https://login.live.com/oauth20_authorize.srf?client_id=%s&redirect_uri=https://login.live.com/oauth20_desktop.srf&response_type=code&scope=%s" clientId scope\n        System.Diagnostics.Process.Start url\n    \n    /// Try to get initial set of OAuthTokens\n    let tryGetTokens clientId clientSecret authCode =\n        let parseInitialAuth response =\n            let response = OAuthResponse.Parse response\n            response.AccessToken, response.RefreshToken\n\n        let tryGetBody = function\n            | { StatusCode = 200; EntityBody = Some body } -> Some body\n            | _ -> None\n\n        buildAccessTokenUrl clientId clientSecret authCode\n        |> createRequest HttpMethod.Get\n        |> getResponse\n        |> tryGetBody\n        |> Option.map parseInitialAuth\n\n/// Get client ID and Secret from  MS Live OAuth app registration site\nlet clientId, clientSecret = "", ""\n\n/// Opens a browser window to grant permissions. Copy the "code" query string value to authCode below!\nAuth.grantPermissions clientId\nlet authCode = ""\n\n// Now we can finally create the access token!\nlet tokens = Auth.tryGetTokens clientId clientSecret authCode'