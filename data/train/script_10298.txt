b'// UVa1572 Self-Assembly\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\n#include<vector>\nusing namespace std;\n\nint ID(char a1, char a2) {\n  return (a1-\'A\')*2 + (a2 == \'+\' ? 0 : 1);\n}\n\nint G[52][52];\n\n// connect(A+, B-) means a border labeled with A- can be transformed to B-\nvoid connect(char a1, char a2, char b1, char b2) {\n  if(a1 == \'0\' || b1 == \'0\') return;\n  int u = ID(a1, a2)^1, v = ID(b1, b2);\n  G[u][v] = 1;\n}\n\nint c[52];\n\n// returns true iff there is a cycle reachable from u\nbool dfs(int u) {\n  c[u] = -1;\n  for(int v = 0; v < 52; v++) if(G[u][v]) {\n    if(c[v] < 0) return true;\n    else if(!c[v] && dfs(v)) return true;\n  }\n  c[u] = 1;\n  return false;\n}\n\nbool find_cycle() {\n  memset(c, 0, sizeof(c));\n  for(int i = 0; i < 52; i++) if(!c[i])\n    if(dfs(i)) return true;\n  return false;\n}\n\nint main() {\n  int n;\n  while(scanf("%d", &n) == 1 && n) {\n    memset(G, 0, sizeof(G));\n    while(n--) {\n      char s[10];\n      scanf("%s", s);\n      for(int i = 0; i < 4; i++)\n        for(int j = 0; j < 4; j++) if(i != j)\n          connect(s[i*2], s[i*2+1], s[j*2], s[j*2+1]);\n    }\n    if(find_cycle()) printf("unbounded\\n");\n    else printf("bounded\\n");\n  }\n  return 0;\n}\n'