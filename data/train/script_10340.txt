b'{-# LANGUAGE OverloadedStrings #-}\n{-# OPTIONS_GHC -fno-warn-unused-imports#-}\nmodule Restexample.Client.Test.FooBar where\nimport Rest.Client.Internal\nimport qualified Restexample.Client.Test as Test\nimport qualified Rest.Types.Error\nimport qualified Rest.Types.Void\nimport qualified Rest.StringMap.HashMap.Strict\n\ntype Identifier = [(Char)]\n\nreadId :: Identifier -> [String]\nreadId x = ["id", showUrl x]\n\nremoveManyId ::\n               ApiStateC m =>\n               Rest.StringMap.HashMap.Strict.StringHashMap ([(Char)]) (()) ->\n                 m (ApiResponse (Rest.Types.Error.Reason (Rest.Types.Void.Void))\n                      (Rest.StringMap.HashMap.Strict.StringHashMap ([(Char)])\n                         (Rest.Types.Error.Status\n                            (Rest.Types.Error.Reason (Rest.Types.Void.Void))\n                            (()))))\nremoveManyId input\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/json")]\n        request\n          = makeReq "DELETE" "v1.0.0" [["test"], ["foo-bar"], ["id"]] []\n              rHeaders\n              (toJSON input)\n      in doRequest fromJSON fromJSON request\n\nremove ::\n         ApiStateC m =>\n         Identifier -> m (ApiResponse Rest.Types.Void.Void ())\nremove fooBar\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/plain")]\n        request\n          = makeReq "DELETE" "v1.0.0" [["test"], ["foo-bar"], readId fooBar]\n              []\n              rHeaders\n              ""\n      in doRequest fromJSON (const ()) request'