b'{-# LANGUAGE NoImplicitPrelude #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE RebindableSyntax #-}\n\nmodule Course.Core(\n  Eq(..)\n, Ord(..)\n, Show(..)\n, Integral(..)\n, RealFrac(..)\n, Num(..)\n, Fractional(..)\n, Bool(..)\n, Either(..)\n, Int\n, Integer\n, IO\n, Rational\n, seq\n, error\n, undefined\n, const\n, flip\n, curry\n, uncurry\n, id\n, otherwise\n, (.)\n, ($)\n, (&&)\n, (||)\n, not\n, even\n, odd\n, fst\n, snd\n, getChar\n, on\n, first\n, second\n, (&&&)\n, (***)\n, IsString(..)\n, module Data.Char\n, ifThenElse\n, bool\n) where\n\n\nimport Prelude(\n    Eq(..)\n  , Ord(..)\n  , Show(..)\n  , Integral(..)\n  , RealFrac(..)\n  , Num(..)\n  , Fractional(..)\n  , Bool(..)\n  , Either(..)\n  , Char\n  , Int\n  , Integer\n  , IO\n  , Rational\n  , seq\n  , error\n  , undefined\n  , const\n  , flip\n  , curry\n  , uncurry\n  , id\n  , otherwise\n  , (.)\n  , ($)\n  , (&&)\n  , (||)\n  , not\n  , even\n  , odd\n  , fst\n  , snd\n  )\nimport Data.String(\n  IsString(..)\n  )\n\nimport System.IO(\n    getChar\n  )\nimport Data.Function(\n    on\n  )\nimport Control.Arrow(\n    first\n  , second\n  , (&&&)\n  , (***)\n  )\nimport Data.Char\n\nifThenElse ::\n  Bool\n  -> a\n  -> a\n  -> a\nifThenElse True t _ =\n  t\nifThenElse False _ f =\n  f\n\nbool ::\n  a\n  -> a\n  -> Bool\n  -> a\nbool f _ False =\n  f\nbool _ t True =\n  t\n\n'