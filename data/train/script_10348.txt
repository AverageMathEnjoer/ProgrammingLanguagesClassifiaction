b'\xef\xbb\xbf//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//     Runtime Version:4.0.30319.42000\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\n// Source Executable: c:\\users\\ceri.coburn\\source\\repos\\playgrounddll\\x64\\release\\playgrounddll.dll\n// Interface ID: 4870536e-23fa-4cd5-9637-3f1a1699d3dc\n// Interface Version: 1.0\n// Client Generated: 18/05/2021 21:28:48\n// NtApiDotNet Version: 1.1.30\n\nusing System;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Runtime.InteropServices;\nusing System.Security.Principal;\nusing System.Text;\n\nnamespace Rubeus.Ndr {\n\n    #region Marshal Helpers\n    internal class _Marshal_Helper : Rubeus.Ndr.Marshal.NdrMarshalBuffer {\n        public void Write_0(_PAC_DEVICE_INFO p0) {\n            WriteStruct<_PAC_DEVICE_INFO>(p0);\n        }\n        public void Write_1(_RPC_SID p0) {\n            WriteStruct<_RPC_SID>(p0);\n        }\n        public void Write_2(_RPC_SID_IDENTIFIER_AUTHORITY p0) {\n            WriteStruct<_RPC_SID_IDENTIFIER_AUTHORITY>(p0);\n        }\n        public void Write_3(_GROUP_MEMBERSHIP p0) {\n            WriteStruct<_GROUP_MEMBERSHIP>(p0);\n        }\n        public void Write_4(_KERB_SID_AND_ATTRIBUTES p0) {\n            WriteStruct<_KERB_SID_AND_ATTRIBUTES>(p0);\n        }\n        public void Write_5(DOMAIN_GROUP_MEMBERSHIP p0) {\n            WriteStruct<DOMAIN_GROUP_MEMBERSHIP>(p0);\n        }\n        public void Write_6(_PAC_DEVICE_CLAIMS_INFO p0) {\n            WriteStruct<_PAC_DEVICE_CLAIMS_INFO>(p0);\n        }\n        public void Write_7(_CLAIMS_SET_METADATA p0) {\n            WriteStruct<_CLAIMS_SET_METADATA>(p0);\n        }\n        public void Write_8(_UPN_DNS_INFO p0) {\n            WriteStruct<_UPN_DNS_INFO>(p0);\n        }\n        public void Write_9(_KERB_VALIDATION_INFO p0) {\n            WriteStruct<_KERB_VALIDATION_INFO>(p0);\n        }\n        public void Write_10(_RPC_UNICODE_STRING p0) {\n            WriteStruct<_RPC_UNICODE_STRING>(p0);\n        }\n        public void Write_11(_USER_SESSION_KEY p0) {\n            WriteStruct<_USER_SESSION_KEY>(p0);\n        }\n        public void Write_12(_CYPHER_BLOCK p0) {\n            WriteStruct<_CYPHER_BLOCK>(p0);\n        }\n        public void Write_13(_PAC_INFO_BUFFER p0) {\n            WriteStruct<_PAC_INFO_BUFFER>(p0);\n        }\n        public void Write_14(_NTLM_SUPPLEMENTAL_CREDENTIAL p0) {\n            WriteStruct<_NTLM_SUPPLEMENTAL_CREDENTIAL>(p0);\n        }\n        public void Write_15(_PAC_CLIENT_INFO p0) {\n            WriteStruct<_PAC_CLIENT_INFO>(p0);\n        }\n        public void Write_16(_S4U_DELEGATION_INFO p0) {\n            WriteStruct<_S4U_DELEGATION_INFO>(p0);\n        }\n        public void Write_17(_PAC_CREDENTIAL_DATA p0) {\n            WriteStruct<_PAC_CREDENTIAL_DATA>(p0);\n        }\n        public void Write_18(_SECPKG_SUPPLEMENTAL_CRED p0) {\n            WriteStruct<_SECPKG_SUPPLEMENTAL_CRED>(p0);\n        }\n        public void Write_19(_GROUP_MEMBERSHIP[] p0, long p1) {\n            WriteConformantStructArray<_GROUP_MEMBERSHIP>(p0, p1);\n        }\n        public void Write_20(_KERB_SID_AND_ATTRIBUTES[] p0, long p1) {\n            WriteConformantStructArray<_KERB_SID_AND_ATTRIBUTES>(p0, p1);\n        }\n        public void Write_21(DOMAIN_GROUP_MEMBERSHIP[] p0, long p1) {\n            WriteConformantStructArray<DOMAIN_GROUP_MEMBERSHIP>(p0, p1);\n        }\n        public void Write_22(int[] p0, long p1) {\n            WriteConformantArray<int>(p0, p1);\n        }\n        public void Write_23(byte[] p0) {\n            WriteFixedByteArray(p0, 6);\n        }\n        public void Write_24(_GROUP_MEMBERSHIP[] p0, long p1) {\n            WriteConformantStructArray<_GROUP_MEMBERSHIP>(p0, p1);\n        }\n        public void Write_25(byte[] p0, long p1) {\n            WriteConformantArray<byte>(p0, p1);\n        }\n        public void Write_26(byte[] p0, long p1) {\n            WriteConformantArray<byte>(p0, p1);\n        }\n        public void Write_27(_GROUP_MEMBERSHIP[] p0, long p1) {\n            WriteConformantStructArray<_GROUP_MEMBERSHIP>(p0, p1);\n        }\n        public void Write_28(int[] p0) {\n            WriteFixedPrimitiveArray<int>(p0, 2);\n        }\n        public void Write_29(int[] p0) {\n            WriteFixedPrimitiveArray<int>(p0, 7);\n        }\n        public void Write_30(_KERB_SID_AND_ATTRIBUTES[] p0, long p1) {\n            WriteConformantStructArray<_KERB_SID_AND_ATTRIBUTES>(p0, p1);\n        }\n        public void Write_31(_GROUP_MEMBERSHIP[] p0, long p1) {\n            WriteConformantStructArray<_GROUP_MEMBERSHIP>(p0, p1);\n        }\n        public void Write_32(char[] p0, long p1, long p2) {\n            WriteConformantVaryingArray<char>(p0, p1, p2);\n        }\n        public void Write_33(_CYPHER_BLOCK[] p0) {\n            WriteFixedStructArray<_CYPHER_BLOCK>(p0, 2);\n        }\n        public void Write_34(sbyte[] p0) {\n            WriteFixedPrimitiveArray<sbyte>(p0, 8);\n        }\n        public void Write_35(sbyte[] p0) {\n            WriteFixedPrimitiveArray<sbyte>(p0, 16);\n        }\n        public void Write_36(string p0) {\n            WriteFixedString(p0, 1);\n        }\n        public void Write_37(_RPC_UNICODE_STRING[] p0, long p1) {\n            WriteConformantStructArray<_RPC_UNICODE_STRING>(p0, p1);\n        }\n        public void Write_38(_SECPKG_SUPPLEMENTAL_CRED[] p0, long p1) {\n            WriteConformantStructArray<_SECPKG_SUPPLEMENTAL_CRED>(p0, p1);\n        }\n        public void Write_39(sbyte[] p0, long p1) {\n            WriteConformantArray<sbyte>(p0, p1);\n        }\n        internal void Write_40(_FILETIME p0) {\n            WriteStruct<_FILETIME>(p0);\n        }\n    }\n    internal class _Unmarshal_Helper : Rubeus.Ndr.Marshal.NdrUnmarshalBuffer {\n\n        public _Unmarshal_Helper(byte[] ba) :\n                base(ba) {\n        }\n        public _PAC_DEVICE_INFO Read_0() {\n            return ReadStruct<_PAC_DEVICE_INFO>();\n        }\n        public _RPC_SID Read_1() {\n            return ReadStruct<_RPC_SID>();\n        }\n        public _RPC_SID_IDENTIFIER_AUTHORITY Read_2() {\n            return ReadStruct<_RPC_SID_IDENTIFIER_AUTHORITY>();\n        }\n        public _GROUP_MEMBERSHIP Read_3() {\n            return ReadStruct<_GROUP_MEMBERSHIP>();\n        }\n        public _KERB_SID_AND_ATTRIBUTES Read_4() {\n            return ReadStruct<_KERB_SID_AND_ATTRIBUTES>();\n        }\n        public DOMAIN_GROUP_MEMBERSHIP Read_5() {\n            return ReadStruct<DOMAIN_GROUP_MEMBERSHIP>();\n        }\n        public _PAC_DEVICE_CLAIMS_INFO Read_6() {\n            return ReadStruct<_PAC_DEVICE_CLAIMS_INFO>();\n        }\n        public _CLAIMS_SET_METADATA Read_7() {\n            return ReadStruct<_CLAIMS_SET_METADATA>();\n        }\n        public _UPN_DNS_INFO Read_8() {\n            return ReadStruct<_UPN_DNS_INFO>();\n        }\n        public _KERB_VALIDATION_INFO Read_9() {\n            return ReadStruct<_KERB_VALIDATION_INFO>();\n        }\n        public _RPC_UNICODE_STRING Read_10() {\n            return ReadStruct<_RPC_UNICODE_STRING>();\n        }\n        public _USER_SESSION_KEY Read_11() {\n            return ReadStruct<_USER_SESSION_KEY>();\n        }\n        public _CYPHER_BLOCK Read_12() {\n            return ReadStruct<_CYPHER_BLOCK>();\n        }\n        public _PAC_INFO_BUFFER Read_13() {\n            return ReadStruct<_PAC_INFO_BUFFER>();\n        }\n        public _NTLM_SUPPLEMENTAL_CREDENTIAL Read_14() {\n            return ReadStruct<_NTLM_SUPPLEMENTAL_CREDENTIAL>();\n        }\n        public _PAC_CLIENT_INFO Read_15() {\n            return ReadStruct<_PAC_CLIENT_INFO>();\n        }\n        public _S4U_DELEGATION_INFO Read_16() {\n            return ReadStruct<_S4U_DELEGATION_INFO>();\n        }\n        public _PAC_CREDENTIAL_DATA Read_17() {\n            return ReadStruct<_PAC_CREDENTIAL_DATA>();\n        }\n        public _SECPKG_SUPPLEMENTAL_CRED Read_18() {\n            return ReadStruct<_SECPKG_SUPPLEMENTAL_CRED>();\n        }\n        public _GROUP_MEMBERSHIP[] Read_19() {\n            return ReadConformantStructArray<_GROUP_MEMBERSHIP>();\n        }\n        public _KERB_SID_AND_ATTRIBUTES[] Read_20() {\n            return ReadConformantStructArray<_KERB_SID_AND_ATTRIBUTES>();\n        }\n        public DOMAIN_GROUP_MEMBERSHIP[] Read_21() {\n            return ReadConformantStructArray<DOMAIN_GROUP_MEMBERSHIP>();\n        }\n        public int[] Read_22() {\n            return ReadConformantArray<int>();\n        }\n        public byte[] Read_23() {\n            return ReadFixedByteArray(6);\n        }\n        public _GROUP_MEMBERSHIP[] Read_24() {\n            return ReadConformantStructArray<_GROUP_MEMBERSHIP>();\n        }\n        public byte[] Read_25() {\n            return ReadConformantArray<byte>();\n        }\n        public byte[] Read_26() {\n            return ReadConformantArray<byte>();\n        }\n        public _GROUP_MEMBERSHIP[] Read_27() {\n            return ReadConformantStructArray<_GROUP_MEMBERSHIP>();\n        }\n        public int[] Read_28() {\n            return ReadFixedPrimitiveArray<int>(2);\n        }\n        public int[] Read_29() {\n            return ReadFixedPrimitiveArray<int>(7);\n        }\n        public _KERB_SID_AND_ATTRIBUTES[] Read_30() {\n            return ReadConformantStructArray<_KERB_SID_AND_ATTRIBUTES>();\n        }\n        public _GROUP_MEMBERSHIP[] Read_31() {\n            return ReadConformantStructArray<_GROUP_MEMBERSHIP>();\n        }\n        public char[] Read_32() {\n            return ReadConformantVaryingArray<char>();\n        }\n        public _CYPHER_BLOCK[] Read_33() {\n            return ReadFixedStructArray<_CYPHER_BLOCK>(2);\n        }\n        public sbyte[] Read_34() {\n            return ReadFixedPrimitiveArray<sbyte>(8);\n        }\n        public sbyte[] Read_35() {\n            return ReadFixedPrimitiveArray<sbyte>(16);\n        }\n        public string Read_36() {\n            return ReadFixedString(1);\n        }\n        public _RPC_UNICODE_STRING[] Read_37() {\n            return ReadConformantStructArray<_RPC_UNICODE_STRING>();\n        }\n        public _SECPKG_SUPPLEMENTAL_CRED[] Read_38() {\n            return ReadConformantStructArray<_SECPKG_SUPPLEMENTAL_CRED>();\n        }\n        public sbyte[] Read_39() {\n            return ReadConformantArray<sbyte>();\n        }\n        public _FILETIME Read_40() {\n            return ReadStruct<_FILETIME>();\n        }\n    }\n    #endregion\n    #region Complex Types\n    public struct _PAC_DEVICE_INFO : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteInt32(UserId);\n            m.WriteInt32(PrimaryGroupId);\n            m.WriteEmbeddedPointer<_RPC_SID>(AccountDomainId, new System.Action<_RPC_SID>(m.Write_1));\n            m.WriteInt32(AccountGroupCount);\n            m.WriteEmbeddedPointer<_GROUP_MEMBERSHIP[], long>(AccountGroupIds, new System.Action<_GROUP_MEMBERSHIP[], long>(m.Write_19), AccountGroupCount);\n            m.WriteInt32(SidCount);\n            m.WriteEmbeddedPointer<_KERB_SID_AND_ATTRIBUTES[], long>(ExtraSids, new System.Action<_KERB_SID_AND_ATTRIBUTES[], long>(m.Write_20), SidCount);\n            m.WriteInt32(DomainGroupCount);\n            m.WriteEmbeddedPointer<DOMAIN_GROUP_MEMBERSHIP[], long>(DomainGroup, new System.Action<DOMAIN_GROUP_MEMBERSHIP[], long>(m.Write_21), DomainGroupCount);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            UserId = u.ReadInt32();\n            PrimaryGroupId = u.ReadInt32();\n            AccountDomainId = u.ReadEmbeddedPointer<_RPC_SID>(new System.Func<_RPC_SID>(u.Read_1), false);\n            AccountGroupCount = u.ReadInt32();\n            AccountGroupIds = u.ReadEmbeddedPointer<_GROUP_MEMBERSHIP[]>(new System.Func<_GROUP_MEMBERSHIP[]>(u.Read_19), false);\n            SidCount = u.ReadInt32();\n            ExtraSids = u.ReadEmbeddedPointer<_KERB_SID_AND_ATTRIBUTES[]>(new System.Func<_KERB_SID_AND_ATTRIBUTES[]>(u.Read_20), false);\n            DomainGroupCount = u.ReadInt32();\n            DomainGroup = u.ReadEmbeddedPointer<DOMAIN_GROUP_MEMBERSHIP[]>(new System.Func<DOMAIN_GROUP_MEMBERSHIP[]>(u.Read_21), false);\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public int UserId;\n        public int PrimaryGroupId;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_RPC_SID> AccountDomainId;\n        public int AccountGroupCount;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_GROUP_MEMBERSHIP[]> AccountGroupIds;\n        public int SidCount;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_KERB_SID_AND_ATTRIBUTES[]> ExtraSids;\n        public int DomainGroupCount;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<DOMAIN_GROUP_MEMBERSHIP[]> DomainGroup;\n        public static _PAC_DEVICE_INFO CreateDefault() {\n            return new _PAC_DEVICE_INFO();\n        }\n        public _PAC_DEVICE_INFO(int UserId, int PrimaryGroupId, System.Nullable<_RPC_SID> AccountDomainId, int AccountGroupCount, _GROUP_MEMBERSHIP[] AccountGroupIds, int SidCount, _KERB_SID_AND_ATTRIBUTES[] ExtraSids, int DomainGroupCount, DOMAIN_GROUP_MEMBERSHIP[] DomainGroup) {\n            this.UserId = UserId;\n            this.PrimaryGroupId = PrimaryGroupId;\n            this.AccountDomainId = AccountDomainId;\n            this.AccountGroupCount = AccountGroupCount;\n            this.AccountGroupIds = AccountGroupIds;\n            this.SidCount = SidCount;\n            this.ExtraSids = ExtraSids;\n            this.DomainGroupCount = DomainGroupCount;\n            this.DomainGroup = DomainGroup;\n        }\n    }\n\n    [StructLayout(LayoutKind.Sequential)]\n    public struct _RPC_SID : Rubeus.Ndr.Marshal.INdrConformantStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteSByte(Revision);\n            m.WriteSByte(SubAuthorityCount);\n            m.Write_2(IdentifierAuthority);\n            m.Write_22(Rubeus.Win32.Rpc.RpcUtils.CheckNull(SubAuthority, "SubAuthority"), SubAuthorityCount);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            Revision = u.ReadSByte();\n            SubAuthorityCount = u.ReadSByte();\n            IdentifierAuthority = u.Read_2();\n            SubAuthority = u.Read_22();\n        }\n        int Rubeus.Ndr.Marshal.INdrConformantStructure.GetConformantDimensions() {\n            return 1;\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public sbyte Revision;\n        public sbyte SubAuthorityCount;\n        public _RPC_SID_IDENTIFIER_AUTHORITY IdentifierAuthority;\n        public int[] SubAuthority;\n        public static _RPC_SID CreateDefault() {\n            _RPC_SID ret = new _RPC_SID();\n            ret.SubAuthority = new int[0];\n            return ret;\n        }\n        public _RPC_SID(sbyte Revision, sbyte SubAuthorityCount, _RPC_SID_IDENTIFIER_AUTHORITY IdentifierAuthority, int[] SubAuthority) {\n            this.Revision = Revision;\n            this.SubAuthorityCount = SubAuthorityCount;\n            this.IdentifierAuthority = IdentifierAuthority;\n            this.SubAuthority = SubAuthority;\n        }\n\n        public _RPC_SID(SecurityIdentifier sid) {\n            byte[] binarySid = new byte[sid.BinaryLength];\n            sid.GetBinaryForm(binarySid, 0);\n            BinaryReader br = new BinaryReader(new MemoryStream(binarySid));\n\n            Revision = br.ReadSByte();\n            SubAuthorityCount = br.ReadSByte();\n            IdentifierAuthority.Value = br.ReadBytes(6);\n            SubAuthority = new int[SubAuthorityCount];\n            for(int idx=0; idx<SubAuthorityCount; ++idx) {\n                SubAuthority[idx] = br.ReadInt32();\n            }\n        }\n\n        public override string ToString() {\n            //TODO: cache SID as string\n            BinaryWriter br = new BinaryWriter(new MemoryStream());\n            br.Write(Revision);\n            br.Write(SubAuthorityCount);\n            br.Write(IdentifierAuthority.Value);\n            foreach(var sa in SubAuthority) {\n                br.Write(sa);\n            }\n\n            return new SecurityIdentifier(((MemoryStream)br.BaseStream).ToArray(),0).ToString();\n        }\n    }\n    public struct _RPC_SID_IDENTIFIER_AUTHORITY : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.Write_23(Rubeus.Win32.Rpc.RpcUtils.CheckNull(Value, "Value"));\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            Value = u.Read_23();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 1;\n        }\n        public byte[] Value;\n        public static _RPC_SID_IDENTIFIER_AUTHORITY CreateDefault() {\n            _RPC_SID_IDENTIFIER_AUTHORITY ret = new _RPC_SID_IDENTIFIER_AUTHORITY();\n            ret.Value = new byte[6];\n            return ret;\n        }\n        public _RPC_SID_IDENTIFIER_AUTHORITY(byte[] Value) {\n            this.Value = Value;\n        }\n    }\n\n    public struct _FILETIME : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteUInt32(LowDateTime);\n            m.WriteUInt32(HighDateTime);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            LowDateTime = u.ReadUInt32();\n            HighDateTime = u.ReadUInt32();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public uint LowDateTime;\n        public uint HighDateTime;\n        public static _FILETIME CreateDefault() {\n            var ft = new _FILETIME();\n            ft.LowDateTime = 0xffffffff;\n            ft.HighDateTime = 0x7fffffff;\n            return ft;\n        }\n        public _FILETIME(uint LowDateTime, uint HighDateTime) {\n            this.LowDateTime = LowDateTime;\n            this.HighDateTime = HighDateTime;\n        }\n        public _FILETIME(DateTime dateTime) {\n            var fileTime = dateTime.ToFileTimeUtc();\n            LowDateTime = (uint)(fileTime & 0xffffffff);\n            HighDateTime = (uint)( (fileTime >> 32) & 0xffffffff);\n        }\n        \n        public override string ToString() {\n            if (LowDateTime != 0xffffffff && HighDateTime != 0x7fffffff) {\n                return DateTime.FromFileTimeUtc((long)LowDateTime | ((long)HighDateTime << 32)).ToString("dd/MM/yyyy HH:mm:ss.fff");\n            } else {\n                return "";\n            }\n        }\n    }\n\n    public struct _GROUP_MEMBERSHIP : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteInt32(RelativeId);\n            m.WriteInt32(Attributes);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            RelativeId = u.ReadInt32();\n            Attributes = u.ReadInt32();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public int RelativeId;\n        public int Attributes;\n        public static _GROUP_MEMBERSHIP CreateDefault() {\n            return new _GROUP_MEMBERSHIP();\n        }\n        public _GROUP_MEMBERSHIP(int RelativeId, int Attributes) {\n            this.RelativeId = RelativeId;\n            this.Attributes = Attributes;\n        }\n    }\n    public struct _KERB_SID_AND_ATTRIBUTES : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteEmbeddedPointer<_RPC_SID>(Sid, new System.Action<_RPC_SID>(m.Write_1));\n            m.WriteInt32(Attributes);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            Sid = u.ReadEmbeddedPointer<_RPC_SID>(new System.Func<_RPC_SID>(u.Read_1), false);\n            Attributes = u.ReadInt32();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_RPC_SID> Sid;\n        public int Attributes;\n        public static _KERB_SID_AND_ATTRIBUTES CreateDefault() {\n            return new _KERB_SID_AND_ATTRIBUTES();\n        }\n        public _KERB_SID_AND_ATTRIBUTES(System.Nullable<_RPC_SID> Sid, int Attributes) {\n            this.Sid = Sid;\n            this.Attributes = Attributes;\n        }\n    }\n    public struct DOMAIN_GROUP_MEMBERSHIP : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteEmbeddedPointer<_RPC_SID>(DomainId, new System.Action<_RPC_SID>(m.Write_1));\n            m.WriteInt32(GroupCount);\n            m.WriteEmbeddedPointer<_GROUP_MEMBERSHIP[], long>(GroupIds, new System.Action<_GROUP_MEMBERSHIP[], long>(m.Write_24), GroupCount);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            DomainId = u.ReadEmbeddedPointer<_RPC_SID>(new System.Func<_RPC_SID>(u.Read_1), false);\n            GroupCount = u.ReadInt32();\n            GroupIds = u.ReadEmbeddedPointer<_GROUP_MEMBERSHIP[]>(new System.Func<_GROUP_MEMBERSHIP[]>(u.Read_24), false);\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_RPC_SID> DomainId;\n        public int GroupCount;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_GROUP_MEMBERSHIP[]> GroupIds;\n        public static DOMAIN_GROUP_MEMBERSHIP CreateDefault() {\n            return new DOMAIN_GROUP_MEMBERSHIP();\n        }\n        public DOMAIN_GROUP_MEMBERSHIP(System.Nullable<_RPC_SID> DomainId, int GroupCount, _GROUP_MEMBERSHIP[] GroupIds) {\n            this.DomainId = DomainId;\n            this.GroupCount = GroupCount;\n            this.GroupIds = GroupIds;\n        }\n    }\n    public struct _PAC_DEVICE_CLAIMS_INFO : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteEmbeddedPointer<_CLAIMS_SET_METADATA>(Claims, new System.Action<_CLAIMS_SET_METADATA>(m.Write_7));\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            Claims = u.ReadEmbeddedPointer<_CLAIMS_SET_METADATA>(new System.Func<_CLAIMS_SET_METADATA>(u.Read_7), false);\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_CLAIMS_SET_METADATA> Claims;\n        public static _PAC_DEVICE_CLAIMS_INFO CreateDefault() {\n            return new _PAC_DEVICE_CLAIMS_INFO();\n        }\n        public _PAC_DEVICE_CLAIMS_INFO(System.Nullable<_CLAIMS_SET_METADATA> Claims) {\n            this.Claims = Claims;\n        }\n    }\n    public struct _CLAIMS_SET_METADATA : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteInt32(ulClaimsSetSize);\n            m.WriteEmbeddedPointer<byte[], long>(ClaimsSet, new System.Action<byte[], long>(m.Write_25), ulClaimsSetSize);\n            m.WriteEnum16(usCompressionFormat);\n            m.WriteInt32(ulUncompressedClaimsSetSize);\n            m.WriteInt16(usReservedType);\n            m.WriteInt32(ulReservedFieldSize);\n            m.WriteEmbeddedPointer<byte[], long>(ReservedField, new System.Action<byte[], long>(m.Write_26), ulReservedFieldSize);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            ulClaimsSetSize = u.ReadInt32();\n            ClaimsSet = u.ReadEmbeddedPointer<byte[]>(new System.Func<byte[]>(u.Read_25), false);\n            usCompressionFormat = u.ReadEnum16();\n            ulUncompressedClaimsSetSize = u.ReadInt32();\n            usReservedType = u.ReadInt16();\n            ulReservedFieldSize = u.ReadInt32();\n            ReservedField = u.ReadEmbeddedPointer<byte[]>(new System.Func<byte[]>(u.Read_26), false);\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public int ulClaimsSetSize;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<byte[]> ClaimsSet;\n        public Rubeus.Ndr.Marshal.NdrEnum16 usCompressionFormat;\n        public int ulUncompressedClaimsSetSize;\n        public short usReservedType;\n        public int ulReservedFieldSize;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<byte[]> ReservedField;\n        public static _CLAIMS_SET_METADATA CreateDefault() {\n            return new _CLAIMS_SET_METADATA();\n        }\n        public _CLAIMS_SET_METADATA(int ulClaimsSetSize, byte[] ClaimsSet, Rubeus.Ndr.Marshal.NdrEnum16 usCompressionFormat, int ulUncompressedClaimsSetSize, short usReservedType, int ulReservedFieldSize, byte[] ReservedField) {\n            this.ulClaimsSetSize = ulClaimsSetSize;\n            this.ClaimsSet = ClaimsSet;\n            this.usCompressionFormat = usCompressionFormat;\n            this.ulUncompressedClaimsSetSize = ulUncompressedClaimsSetSize;\n            this.usReservedType = usReservedType;\n            this.ulReservedFieldSize = ulReservedFieldSize;\n            this.ReservedField = ReservedField;\n        }\n    }\n    public struct _UPN_DNS_INFO : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteInt16(UpnLength);\n            m.WriteInt16(UpnOffset);\n            m.WriteInt16(DnsDomainNameLength);\n            m.WriteInt16(DnsDomainNameOffset);\n            m.WriteInt32(Flags);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            UpnLength = u.ReadInt16();\n            UpnOffset = u.ReadInt16();\n            DnsDomainNameLength = u.ReadInt16();\n            DnsDomainNameOffset = u.ReadInt16();\n            Flags = u.ReadInt32();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public short UpnLength;\n        public short UpnOffset;\n        public short DnsDomainNameLength;\n        public short DnsDomainNameOffset;\n        public int Flags;\n        public static _UPN_DNS_INFO CreateDefault() {\n            return new _UPN_DNS_INFO();\n        }\n        public _UPN_DNS_INFO(short UpnLength, short UpnOffset, short DnsDomainNameLength, short DnsDomainNameOffset, int Flags) {\n            this.UpnLength = UpnLength;\n            this.UpnOffset = UpnOffset;\n            this.DnsDomainNameLength = DnsDomainNameLength;\n            this.DnsDomainNameOffset = DnsDomainNameOffset;\n            this.Flags = Flags;\n        }\n    }\n    public struct _KERB_VALIDATION_INFO : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.Write_40(LogonTime);\n            m.Write_40(LogoffTime);\n            m.Write_40(KickOffTime);\n            m.Write_40(PasswordLastSet);\n            m.Write_40(PasswordCanChange);\n            m.Write_40(PasswordMustChange);\n            m.Write_10(EffectiveName);\n            m.Write_10(FullName);\n            m.Write_10(LogonScript);\n            m.Write_10(ProfilePath);\n            m.Write_10(HomeDirectory);\n            m.Write_10(HomeDirectoryDrive);\n            m.WriteInt16(LogonCount);\n            m.WriteInt16(BadPasswordCount);\n            m.WriteInt32(UserId);\n            m.WriteInt32(PrimaryGroupId);\n            m.WriteInt32(GroupCount);\n            m.WriteEmbeddedPointer<_GROUP_MEMBERSHIP[], long>(GroupIds, new System.Action<_GROUP_MEMBERSHIP[], long>(m.Write_27), GroupCount);\n            m.WriteInt32(UserFlags);\n            m.Write_11(UserSessionKey);\n            m.Write_10(LogonServer);\n            m.Write_10(LogonDomainName);\n            m.WriteEmbeddedPointer<_RPC_SID>(LogonDomainId, new System.Action<_RPC_SID>(m.Write_1));\n            m.Write_28(Rubeus.Win32.Rpc.RpcUtils.CheckNull(Reserved1, "Reserved1"));\n            m.WriteInt32(UserAccountControl);\n            m.Write_29(Rubeus.Win32.Rpc.RpcUtils.CheckNull(Reserved3, "Reserved3"));\n            m.WriteInt32(SidCount);\n            m.WriteEmbeddedPointer<_KERB_SID_AND_ATTRIBUTES[], long>(ExtraSids, new System.Action<_KERB_SID_AND_ATTRIBUTES[], long>(m.Write_30), SidCount);\n            m.WriteEmbeddedPointer<_RPC_SID>(ResourceGroupDomainSid, new System.Action<_RPC_SID>(m.Write_1));\n            m.WriteInt32(ResourceGroupCount);\n            m.WriteEmbeddedPointer<_GROUP_MEMBERSHIP[], long>(ResourceGroupIds, new System.Action<_GROUP_MEMBERSHIP[], long>(m.Write_31), ResourceGroupCount);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            LogonTime = u.Read_40();\n            LogoffTime = u.Read_40();\n            KickOffTime = u.Read_40();\n            PasswordLastSet = u.Read_40();\n            PasswordCanChange = u.Read_40();\n            PasswordMustChange = u.Read_40();\n            EffectiveName = u.Read_10();\n            FullName = u.Read_10();\n            LogonScript = u.Read_10();\n            ProfilePath = u.Read_10();\n            HomeDirectory = u.Read_10();\n            HomeDirectoryDrive = u.Read_10();\n            LogonCount = u.ReadInt16();\n            BadPasswordCount = u.ReadInt16();\n            UserId = u.ReadInt32();\n            PrimaryGroupId = u.ReadInt32();\n            GroupCount = u.ReadInt32();\n            GroupIds = u.ReadEmbeddedPointer<_GROUP_MEMBERSHIP[]>(new System.Func<_GROUP_MEMBERSHIP[]>(u.Read_27), false);\n            UserFlags = u.ReadInt32();\n            UserSessionKey = u.Read_11();\n            LogonServer = u.Read_10();\n            LogonDomainName = u.Read_10();\n            LogonDomainId = u.ReadEmbeddedPointer<_RPC_SID>(new System.Func<_RPC_SID>(u.Read_1), false);\n            Reserved1 = u.Read_28();\n            UserAccountControl = u.ReadInt32();\n            Reserved3 = u.Read_29();\n            SidCount = u.ReadInt32();\n            ExtraSids = u.ReadEmbeddedPointer<_KERB_SID_AND_ATTRIBUTES[]>(new System.Func<_KERB_SID_AND_ATTRIBUTES[]>(u.Read_30), false);\n            ResourceGroupDomainSid = u.ReadEmbeddedPointer<_RPC_SID>(new System.Func<_RPC_SID>(u.Read_1), false);\n            ResourceGroupCount = u.ReadInt32();\n            ResourceGroupIds = u.ReadEmbeddedPointer<_GROUP_MEMBERSHIP[]>(new System.Func<_GROUP_MEMBERSHIP[]>(u.Read_31), false);\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public _FILETIME LogonTime;\n        public _FILETIME LogoffTime;\n        public _FILETIME KickOffTime;\n        public _FILETIME PasswordLastSet;\n        public _FILETIME PasswordCanChange;\n        public _FILETIME PasswordMustChange;\n        public _RPC_UNICODE_STRING EffectiveName;\n        public _RPC_UNICODE_STRING FullName;\n        public _RPC_UNICODE_STRING LogonScript;\n        public _RPC_UNICODE_STRING ProfilePath;\n        public _RPC_UNICODE_STRING HomeDirectory;\n        public _RPC_UNICODE_STRING HomeDirectoryDrive;\n        public short LogonCount;\n        public short BadPasswordCount;\n        public int UserId;\n        public int PrimaryGroupId;\n        public int GroupCount;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_GROUP_MEMBERSHIP[]> GroupIds;\n        public int UserFlags;\n        public _USER_SESSION_KEY UserSessionKey;\n        public _RPC_UNICODE_STRING LogonServer;\n        public _RPC_UNICODE_STRING LogonDomainName;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_RPC_SID> LogonDomainId;\n        public int[] Reserved1;\n        public int UserAccountControl;\n        public int[] Reserved3;\n        public int SidCount;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_KERB_SID_AND_ATTRIBUTES[]> ExtraSids;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_RPC_SID> ResourceGroupDomainSid;\n        public int ResourceGroupCount;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_GROUP_MEMBERSHIP[]> ResourceGroupIds;\n        public static _KERB_VALIDATION_INFO CreateDefault() {\n            _KERB_VALIDATION_INFO ret = new _KERB_VALIDATION_INFO();\n            ret.Reserved1 = new int[2];\n            ret.Reserved3 = new int[7];\n            return ret;\n        }\n        public _KERB_VALIDATION_INFO(\n                    _FILETIME LogonTime,\n                    _FILETIME LogoffTime,\n                    _FILETIME KickOffTime,\n                    _FILETIME PasswordLastSet,\n                    _FILETIME PasswordCanChange,\n                    _FILETIME PasswordMustChange,\n                    _RPC_UNICODE_STRING EffectiveName,\n                    _RPC_UNICODE_STRING FullName,\n                    _RPC_UNICODE_STRING LogonScript,\n                    _RPC_UNICODE_STRING ProfilePath,\n                    _RPC_UNICODE_STRING HomeDirectory,\n                    _RPC_UNICODE_STRING HomeDirectoryDrive,\n                    short LogonCount,\n                    short BadPasswordCount,\n                    int UserId,\n                    int PrimaryGroupId,\n                    int GroupCount,\n                    _GROUP_MEMBERSHIP[] GroupIds,\n                    int UserFlags,\n                    _USER_SESSION_KEY UserSessionKey,\n                    _RPC_UNICODE_STRING LogonServer,\n                    _RPC_UNICODE_STRING LogonDomainName,\n                    System.Nullable<_RPC_SID> LogonDomainId,\n                    int[] Reserved1,\n                    int UserAccountControl,\n                    int[] Reserved3,\n                    int SidCount,\n                    _KERB_SID_AND_ATTRIBUTES[] ExtraSids,\n                    System.Nullable<_RPC_SID> ResourceGroupDomainSid,\n                    int ResourceGroupCount,\n                    _GROUP_MEMBERSHIP[] ResourceGroupIds) {\n            this.LogonTime = LogonTime;\n            this.LogoffTime = LogoffTime;\n            this.KickOffTime = KickOffTime;\n            this.PasswordLastSet = PasswordLastSet;\n            this.PasswordCanChange = PasswordCanChange;\n            this.PasswordMustChange = PasswordMustChange;\n            this.EffectiveName = EffectiveName;\n            this.FullName = FullName;\n            this.LogonScript = LogonScript;\n            this.ProfilePath = ProfilePath;\n            this.HomeDirectory = HomeDirectory;\n            this.HomeDirectoryDrive = HomeDirectoryDrive;\n            this.LogonCount = LogonCount;\n            this.BadPasswordCount = BadPasswordCount;\n            this.UserId = UserId;\n            this.PrimaryGroupId = PrimaryGroupId;\n            this.GroupCount = GroupCount;\n            this.GroupIds = GroupIds;\n            this.UserFlags = UserFlags;\n            this.UserSessionKey = UserSessionKey;\n            this.LogonServer = LogonServer;\n            this.LogonDomainName = LogonDomainName;\n            this.LogonDomainId = LogonDomainId;\n            this.Reserved1 = Reserved1;\n            this.UserAccountControl = UserAccountControl;\n            this.Reserved3 = Reserved3;\n            this.SidCount = SidCount;\n            this.ExtraSids = ExtraSids;\n            this.ResourceGroupDomainSid = ResourceGroupDomainSid;\n            this.ResourceGroupCount = ResourceGroupCount;\n            this.ResourceGroupIds = ResourceGroupIds;\n        }\n    }\n\n    public struct _RPC_UNICODE_STRING : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteInt16(Length);\n            m.WriteInt16(MaximumLength);\n            m.WriteEmbeddedPointer<char[], long, long>(Buffer, new System.Action<char[], long, long>(m.Write_32), (MaximumLength / 2), (Length / 2));\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            Length = u.ReadInt16();\n            MaximumLength = u.ReadInt16();\n            Buffer = u.ReadEmbeddedPointer<char[]>(new System.Func<char[]>(u.Read_32), false);\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public short Length;\n        public short MaximumLength;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<char[]> Buffer;\n        public static _RPC_UNICODE_STRING CreateDefault() {\n            return new _RPC_UNICODE_STRING();\n        }\n        public _RPC_UNICODE_STRING(short Length, short MaximumLength, char[] Buffer) {\n            this.Length = Length;\n            this.MaximumLength = MaximumLength;\n            this.Buffer = Buffer;\n        }\n\n        public _RPC_UNICODE_STRING(string value) {\n            this.Length = (short)(value.Length * 2);\n            if (value.Length > 0)\n            {\n                this.MaximumLength = (short)(this.Length + 2);\n                value = value + \'\\0\';\n            }\n            else\n            {\n                this.MaximumLength = this.Length;\n            }\n            this.Buffer = value.ToCharArray();\n        }\n\n        public override string ToString() {\n            if(Buffer != null && Buffer.GetValue() != null) {\n                return new string(Buffer.GetValue(), 0, Length/2);\n            } else {\n                return null;\n            }\n        }\n    }\n    public struct _USER_SESSION_KEY : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.Write_33(Rubeus.Win32.Rpc.RpcUtils.CheckNull(data, "data"));\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            data = u.Read_33();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 1;\n        }\n        public _CYPHER_BLOCK[] data;\n        public static _USER_SESSION_KEY CreateDefault() {\n            _USER_SESSION_KEY ret = new _USER_SESSION_KEY();\n            ret.data = new _CYPHER_BLOCK[2];\n            ret.data[0].data = new sbyte[8] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };\n            ret.data[1].data = new sbyte[8] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };\n            return ret;\n        }\n        public _USER_SESSION_KEY(_CYPHER_BLOCK[] data) {\n            this.data = data;\n        }\n    }\n    public struct _CYPHER_BLOCK : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.Write_34(Rubeus.Win32.Rpc.RpcUtils.CheckNull(data, "data"));\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            data = u.Read_34();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 1;\n        }\n        public sbyte[] data;\n        public static _CYPHER_BLOCK CreateDefault() {\n            _CYPHER_BLOCK ret = new _CYPHER_BLOCK();\n            ret.data = new sbyte[8];\n            return ret;\n        }\n        public _CYPHER_BLOCK(sbyte[] data) {\n            this.data = data;\n        }\n    }\n    public struct _PAC_INFO_BUFFER : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteInt32(ulType);\n            m.WriteInt32(cbBufferSize);\n            m.WriteInt64(Offset);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            ulType = u.ReadInt32();\n            cbBufferSize = u.ReadInt32();\n            Offset = u.ReadInt64();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 8;\n        }\n        public int ulType;\n        public int cbBufferSize;\n        public long Offset;\n        public static _PAC_INFO_BUFFER CreateDefault() {\n            return new _PAC_INFO_BUFFER();\n        }\n        public _PAC_INFO_BUFFER(int ulType, int cbBufferSize, long Offset) {\n            this.ulType = ulType;\n            this.cbBufferSize = cbBufferSize;\n            this.Offset = Offset;\n        }\n    }\n    public struct _NTLM_SUPPLEMENTAL_CREDENTIAL : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteInt32(Version);\n            m.WriteInt32(Flags);\n            m.Write_35(Rubeus.Win32.Rpc.RpcUtils.CheckNull(LmPassword, "LmPassword"));\n            m.Write_35(Rubeus.Win32.Rpc.RpcUtils.CheckNull(NtPassword, "NtPassword"));\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            Version = u.ReadInt32();\n            Flags = u.ReadInt32();\n            LmPassword = u.Read_35();\n            NtPassword = u.Read_35();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public int Version;\n        public int Flags;\n        public sbyte[] LmPassword;\n        public sbyte[] NtPassword;\n        public static _NTLM_SUPPLEMENTAL_CREDENTIAL CreateDefault() {\n            _NTLM_SUPPLEMENTAL_CREDENTIAL ret = new _NTLM_SUPPLEMENTAL_CREDENTIAL();\n            ret.LmPassword = new sbyte[16];\n            ret.NtPassword = new sbyte[16];\n            return ret;\n        }\n        public _NTLM_SUPPLEMENTAL_CREDENTIAL(int Version, int Flags, sbyte[] LmPassword, sbyte[] NtPassword) {\n            this.Version = Version;\n            this.Flags = Flags;\n            this.LmPassword = LmPassword;\n            this.NtPassword = NtPassword;\n        }\n    }\n    public struct _PAC_CLIENT_INFO : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.Write_3(ClientId);\n            m.WriteInt16(NameLength);\n            m.Write_36(Rubeus.Win32.Rpc.RpcUtils.CheckNull(Name, "Name"));\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            ClientId = u.Read_3();\n            NameLength = u.ReadInt16();\n            Name = u.Read_36();\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public _GROUP_MEMBERSHIP ClientId;\n        public short NameLength;\n        public string Name;\n        public static _PAC_CLIENT_INFO CreateDefault() {\n            _PAC_CLIENT_INFO ret = new _PAC_CLIENT_INFO();\n            ret.Name = new string(\'\\0\', 1);\n            return ret;\n        }\n        public _PAC_CLIENT_INFO(_GROUP_MEMBERSHIP ClientId, short NameLength, string Name) {\n            this.ClientId = ClientId;\n            this.NameLength = NameLength;\n            this.Name = Name;\n        }\n    }\n    public struct _S4U_DELEGATION_INFO : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.Write_10(S4U2proxyTarget);\n            m.WriteInt32(TransitedListSize);\n            m.WriteEmbeddedPointer<_RPC_UNICODE_STRING[], long>(S4UTransitedServices, new System.Action<_RPC_UNICODE_STRING[], long>(m.Write_37), TransitedListSize);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            S4U2proxyTarget = u.Read_10();\n            TransitedListSize = u.ReadInt32();\n            S4UTransitedServices = u.ReadEmbeddedPointer<_RPC_UNICODE_STRING[]>(new System.Func<_RPC_UNICODE_STRING[]>(u.Read_37), false);\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public _RPC_UNICODE_STRING S4U2proxyTarget;\n        public int TransitedListSize;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<_RPC_UNICODE_STRING[]> S4UTransitedServices;\n        public static _S4U_DELEGATION_INFO CreateDefault() {\n            return new _S4U_DELEGATION_INFO();\n        }\n        public _S4U_DELEGATION_INFO(_RPC_UNICODE_STRING S4U2proxyTarget, int TransitedListSize, _RPC_UNICODE_STRING[] S4UTransitedServices) {\n            this.S4U2proxyTarget = S4U2proxyTarget;\n            this.TransitedListSize = TransitedListSize;\n            this.S4UTransitedServices = S4UTransitedServices;\n        }\n    }\n    public struct _PAC_CREDENTIAL_DATA : Rubeus.Ndr.Marshal.INdrConformantStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.WriteInt32(CredentialCount);\n            m.Write_38(Rubeus.Win32.Rpc.RpcUtils.CheckNull(Credentials, "Credentials"), CredentialCount);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            CredentialCount = u.ReadInt32();\n            Credentials = u.Read_38();\n        }\n        int Rubeus.Ndr.Marshal.INdrConformantStructure.GetConformantDimensions() {\n            return 1;\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public int CredentialCount;\n        public _SECPKG_SUPPLEMENTAL_CRED[] Credentials;\n        public static _PAC_CREDENTIAL_DATA CreateDefault() {\n            _PAC_CREDENTIAL_DATA ret = new _PAC_CREDENTIAL_DATA();\n            ret.Credentials = new _SECPKG_SUPPLEMENTAL_CRED[0];\n            return ret;\n        }\n        public _PAC_CREDENTIAL_DATA(int CredentialCount, _SECPKG_SUPPLEMENTAL_CRED[] Credentials) {\n            this.CredentialCount = CredentialCount;\n            this.Credentials = Credentials;\n        }\n    }\n    public struct _SECPKG_SUPPLEMENTAL_CRED : Rubeus.Ndr.Marshal.INdrStructure {\n        void Rubeus.Ndr.Marshal.INdrStructure.Marshal(Rubeus.Ndr.Marshal.NdrMarshalBuffer m) {\n            Marshal(((_Marshal_Helper)(m)));\n        }\n        private void Marshal(_Marshal_Helper m) {\n            m.Write_10(PackageName);\n            m.WriteInt32(CredentialSize);\n            m.WriteEmbeddedPointer<sbyte[], long>(Credentials, new System.Action<sbyte[], long>(m.Write_39), CredentialSize);\n        }\n        void Rubeus.Ndr.Marshal.INdrStructure.Unmarshal(Rubeus.Ndr.Marshal.NdrUnmarshalBuffer u) {\n            Unmarshal(((_Unmarshal_Helper)(u)));\n        }\n        private void Unmarshal(_Unmarshal_Helper u) {\n            PackageName = u.Read_10();\n            CredentialSize = u.ReadInt32();\n            Credentials = u.ReadEmbeddedPointer<sbyte[]>(new System.Func<sbyte[]>(u.Read_39), false);\n        }\n        int Rubeus.Ndr.Marshal.INdrStructure.GetAlignment() {\n            return 4;\n        }\n        public _RPC_UNICODE_STRING PackageName;\n        public int CredentialSize;\n        public Rubeus.Ndr.Marshal.NdrEmbeddedPointer<sbyte[]> Credentials;\n        public static _SECPKG_SUPPLEMENTAL_CRED CreateDefault() {\n            return new _SECPKG_SUPPLEMENTAL_CRED();\n        }\n        public _SECPKG_SUPPLEMENTAL_CRED(_RPC_UNICODE_STRING PackageName, int CredentialSize, sbyte[] Credentials) {\n            this.PackageName = PackageName;\n            this.CredentialSize = CredentialSize;\n            this.Credentials = Credentials;\n        }\n    }\n    #endregion\n}\n\n'