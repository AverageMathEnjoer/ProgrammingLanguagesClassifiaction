b'package com.github.razir.progressbutton\n\nimport android.graphics.drawable.Drawable\nimport android.widget.TextView\nimport androidx.annotation.StringRes\n\n/**\n * Java back support class to show the drawable. If you use kotlin please consider to use extensions\n * @see TextView.showDrawable\n */\nclass DrawableButtonUtils {\n\n    companion object {\n\n        /**\n         *   Shows your animated drawable on the button with defined params.\n         *   Important: drawable bounds should be defined already (eg. drawable.setBounds)\n         *\n         *   If params are not defined uses the default one.\n         *\n         *   The example of usage:\n         *\n         *   DrawableButtonUtils.showDrawable(button,yourDrawable,new DrawableParams())\n         *\n         *   If you want to continue using your button after showing the progress,\n         *   please hide the progress and clean up resources by calling:\n         *   @see hideDrawable\n         *\n         *   @param view to show the drawable\n         *   @param drawable your animated drawable. Will be played automatically\n         *   @param params use to set the text,position and margin\n         */\n        @JvmStatic\n        fun showDrawable(\n            view: TextView,\n            drawable: Drawable,\n            params: DrawableParams\n        ) = view.showDrawable(drawable, params)\n\n        /**\n         * @return true if drawable is currently showing and false if not\n         */\n        @JvmStatic\n        fun isDrawableActive(textView: TextView) = textView.isDrawableActive()\n\n        /**\n         * Hides the progress and clean up internal references\n         * This method is required to call if you want to continue using your button\n         * @param newText String value to show after hiding the progress\n         */\n        @JvmStatic\n        fun hideDrawable(view: TextView, newText: String?) = view.hideDrawable(newText)\n\n        /**\n         * Hides the progress and clean up internal references\n         * This method is required to call if you want to continue using your button\n         * @param newTextRes String resource to show after hiding the progress\n         */\n        @JvmStatic\n        fun hideDrawable(view: TextView, @StringRes newTextRes: Int) = view.hideDrawable(newTextRes)\n    }\n}'