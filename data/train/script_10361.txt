b'#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp> \n#include <ext/pb_ds/tree_policy.hpp> \n#include <ext/pb_ds/detail/standard_policies.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef tree<int,null_type,greater<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;\ntypedef tree<pair<int, int>,null_type,less<pair<int, int>>,rb_tree_tag,tree_order_statistics_node_update> ordered_mset;\n//ENDS\n\nint t = 0;\n\nint main()\n{\n\t\n\tint x = 1;\n\tordered_mset me;\n\tme.insert({x, t++});\n\t// me.erase(me.lower_bound({x, 0}));\n\tcout << me.order_of_key({x, 0}) << "\\n";\n\n\n\tordered_set A;\n\tA.insert(1);\n\tA.insert(2);\n\tA.insert(10);\n\tA.insert(100);\n\t//how many numbers are smaller than it\n\tcout<<A.order_of_key(1)<<endl;\n\tcout<<A.order_of_key(2)<<endl;\n\t\n\t//find the ith number\t\n\tcout<<*A.find_by_order(1)<<endl;\n\tcout<<*A.find_by_order(2)<<endl;\n\t\n\n\treturn 0;\n} \n\n\n'