b'package org.sang.controller;\n\nimport org.apache.commons.io.IOUtils;\nimport org.sang.bean.Article;\nimport org.sang.bean.RespBean;\nimport org.sang.service.ArticleService;\nimport org.sang.utils.Util;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.*;\n\n/**\n * Created by sang on 2017/12/20.\n */\n@RestController\n@RequestMapping("/article")\npublic class ArticleController {\n\n    private SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");\n\n    @Autowired\n    ArticleService articleService;\n\n    @RequestMapping(value = "/", method = RequestMethod.POST)\n    public RespBean addNewArticle(Article article) {\n        int result = articleService.addNewArticle(article);\n        if (result == 1) {\n            return new RespBean("success", article.getId() + "");\n        } else {\n            return new RespBean("error", article.getState() == 0 ? "\xe6\x96\x87\xe7\xab\xa0\xe4\xbf\x9d\xe5\xad\x98\xe5\xa4\xb1\xe8\xb4\xa5!" : "\xe6\x96\x87\xe7\xab\xa0\xe5\x8f\x91\xe8\xa1\xa8\xe5\xa4\xb1\xe8\xb4\xa5!");\n        }\n    }\n\n    /**\n     * \xe4\xb8\x8a\xe4\xbc\xa0\xe5\x9b\xbe\xe7\x89\x87\n     *\n     * @return \xe8\xbf\x94\xe5\x9b\x9e\xe5\x80\xbc\xe4\xb8\xba\xe5\x9b\xbe\xe7\x89\x87\xe7\x9a\x84\xe5\x9c\xb0\xe5\x9d\x80\n     */\n    @RequestMapping(value = "/uploadimg", method = RequestMethod.POST)\n    public RespBean uploadImg(HttpServletRequest req, MultipartFile image) {\n        StringBuffer url = new StringBuffer();\n        String filePath = "/blogimg/" + sdf.format(new Date());\n        String imgFolderPath = req.getServletContext().getRealPath(filePath);\n        File imgFolder = new File(imgFolderPath);\n        if (!imgFolder.exists()) {\n            imgFolder.mkdirs();\n        }\n        url.append(req.getScheme())\n                .append("://")\n                .append(req.getServerName())\n                .append(":")\n                .append(req.getServerPort())\n                .append(req.getContextPath())\n                .append(filePath);\n        String imgName = UUID.randomUUID() + "_" + image.getOriginalFilename().replaceAll(" ", "");\n        try {\n            IOUtils.write(image.getBytes(), new FileOutputStream(new File(imgFolder, imgName)));\n            url.append("/").append(imgName);\n            return new RespBean("success", url.toString());\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return new RespBean("error", "\xe4\xb8\x8a\xe4\xbc\xa0\xe5\xa4\xb1\xe8\xb4\xa5!");\n    }\n\n    @RequestMapping(value = "/all", method = RequestMethod.GET)\n    public Map<String, Object> getArticleByState(@RequestParam(value = "state", defaultValue = "-1") Integer state, @RequestParam(value = "page", defaultValue = "1") Integer page, @RequestParam(value = "count", defaultValue = "6") Integer count,String keywords) {\n        int totalCount = articleService.getArticleCountByState(state, Util.getCurrentUser().getId(),keywords);\n        List<Article> articles = articleService.getArticleByState(state, page, count,keywords);\n        Map<String, Object> map = new HashMap<>();\n        map.put("totalCount", totalCount);\n        map.put("articles", articles);\n        return map;\n    }\n\n    @RequestMapping(value = "/{aid}", method = RequestMethod.GET)\n    public Article getArticleById(@PathVariable Long aid) {\n        return articleService.getArticleById(aid);\n    }\n\n    @RequestMapping(value = "/dustbin", method = RequestMethod.PUT)\n    public RespBean updateArticleState(Long[] aids, Integer state) {\n        if (articleService.updateArticleState(aids, state) == aids.length) {\n            return new RespBean("success", "\xe5\x88\xa0\xe9\x99\xa4\xe6\x88\x90\xe5\x8a\x9f!");\n        }\n        return new RespBean("error", "\xe5\x88\xa0\xe9\x99\xa4\xe5\xa4\xb1\xe8\xb4\xa5!");\n    }\n\n    @RequestMapping(value = "/restore", method = RequestMethod.PUT)\n    public RespBean restoreArticle(Integer articleId) {\n        if (articleService.restoreArticle(articleId) == 1) {\n            return new RespBean("success", "\xe8\xbf\x98\xe5\x8e\x9f\xe6\x88\x90\xe5\x8a\x9f!");\n        }\n        return new RespBean("error", "\xe8\xbf\x98\xe5\x8e\x9f\xe5\xa4\xb1\xe8\xb4\xa5!");\n    }\n\n    @RequestMapping("/dataStatistics")\n    public Map<String,Object> dataStatistics() {\n        Map<String, Object> map = new HashMap<>();\n        List<String> categories = articleService.getCategories();\n        List<Integer> dataStatistics = articleService.getDataStatistics();\n        map.put("categories", categories);\n        map.put("ds", dataStatistics);\n        return map;\n    }\n}\n'