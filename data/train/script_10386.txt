b'package com.rd.draw.data;\n\nimport androidx.annotation.NonNull;\nimport android.view.View;\nimport com.rd.animation.type.AnimationType;\n\npublic class Indicator {\n\n    public static final int DEFAULT_COUNT = 3;\n    public static final int MIN_COUNT = 1;\n    public static final int COUNT_NONE = -1;\n\n    public static final int DEFAULT_RADIUS_DP = 6;\n    public static final int DEFAULT_PADDING_DP = 8;\n    public static final int IDLE_ANIMATION_DURATION = 250;\n\n    private int height;\n    private int width;\n    private int radius;\n\n    private int padding;\n    private int paddingLeft;\n    private int paddingTop;\n    private int paddingRight;\n    private int paddingBottom;\n\n    private int stroke; //For "Fill" animation only\n    private float scaleFactor; //For "Scale" animation only\n\n    private int unselectedColor;\n    private int selectedColor;\n\n    private boolean interactiveAnimation;\n    private boolean autoVisibility;\n    private boolean dynamicCount;\n\n    private boolean fadeOnIdle;\n    private boolean isIdle;\n    private long idleDuration;\n\n    private long animationDuration;\n    private int count = DEFAULT_COUNT;\n\n    private int selectedPosition;\n    private int selectingPosition;\n    private int lastSelectedPosition;\n\n    private int viewPagerId = View.NO_ID;\n\n    private Orientation orientation;\n    private AnimationType animationType;\n    private RtlMode rtlMode;\n\n    public int getHeight() {\n        return height;\n    }\n\n    public void setHeight(int height) {\n        this.height = height;\n    }\n\n    public int getWidth() {\n        return width;\n    }\n\n    public void setWidth(int width) {\n        this.width = width;\n    }\n\n    public int getRadius() {\n        return radius;\n    }\n\n    public void setRadius(int radius) {\n        this.radius = radius;\n    }\n\n    public int getPadding() {\n        return padding;\n    }\n\n    public void setPadding(int padding) {\n        this.padding = padding;\n    }\n\n    public int getPaddingLeft() {\n        return paddingLeft;\n    }\n\n    public void setPaddingLeft(int paddingLeft) {\n        this.paddingLeft = paddingLeft;\n    }\n\n    public int getPaddingTop() {\n        return paddingTop;\n    }\n\n    public void setPaddingTop(int paddingTop) {\n        this.paddingTop = paddingTop;\n    }\n\n    public int getPaddingRight() {\n        return paddingRight;\n    }\n\n    public void setPaddingRight(int paddingRight) {\n        this.paddingRight = paddingRight;\n    }\n\n    public int getPaddingBottom() {\n        return paddingBottom;\n    }\n\n    public void setPaddingBottom(int paddingBottom) {\n        this.paddingBottom = paddingBottom;\n    }\n\n    public int getStroke() {\n        return stroke;\n    }\n\n    public void setStroke(int stroke) {\n        this.stroke = stroke;\n    }\n\n    public float getScaleFactor() {\n        return scaleFactor;\n    }\n\n    public void setScaleFactor(float scaleFactor) {\n        this.scaleFactor = scaleFactor;\n    }\n\n    public int getUnselectedColor() {\n        return unselectedColor;\n    }\n\n    public void setUnselectedColor(int unselectedColor) {\n        this.unselectedColor = unselectedColor;\n    }\n\n    public int getSelectedColor() {\n        return selectedColor;\n    }\n\n    public void setSelectedColor(int selectedColor) {\n        this.selectedColor = selectedColor;\n    }\n\n    public boolean isInteractiveAnimation() {\n        return interactiveAnimation;\n    }\n\n    public void setInteractiveAnimation(boolean interactiveAnimation) {\n        this.interactiveAnimation = interactiveAnimation;\n    }\n\n    public boolean isAutoVisibility() {\n        return autoVisibility;\n    }\n\n    public void setAutoVisibility(boolean autoVisibility) {\n        this.autoVisibility = autoVisibility;\n    }\n\n    public boolean isDynamicCount() {\n        return dynamicCount;\n    }\n\n    public void setDynamicCount(boolean dynamicCount) {\n        this.dynamicCount = dynamicCount;\n    }\n\n    public boolean isFadeOnIdle() {\n        return fadeOnIdle;\n    }\n\n    public void setFadeOnIdle(boolean fadeOnIdle) {\n        this.fadeOnIdle = fadeOnIdle;\n    }\n\n    public boolean isIdle() {\n        return isIdle;\n    }\n\n    public void setIdle(boolean idle) {\n        isIdle = idle;\n    }\n\n    public long getIdleDuration() {\n        return idleDuration;\n    }\n\n    public void setIdleDuration(long idleDuration) {\n        this.idleDuration = idleDuration;\n    }\n\n    public long getAnimationDuration() {\n        return animationDuration;\n    }\n\n    public void setAnimationDuration(long animationDuration) {\n        this.animationDuration = animationDuration;\n    }\n\n    public int getCount() {\n        return count;\n    }\n\n    public void setCount(int count) {\n        this.count = count;\n    }\n\n    public int getSelectedPosition() {\n        return selectedPosition;\n    }\n\n    public void setSelectedPosition(int selectedPosition) {\n        this.selectedPosition = selectedPosition;\n    }\n\n    public int getSelectingPosition() {\n        return selectingPosition;\n    }\n\n    public void setSelectingPosition(int selectingPosition) {\n        this.selectingPosition = selectingPosition;\n    }\n\n    public int getLastSelectedPosition() {\n        return lastSelectedPosition;\n    }\n\n    public void setLastSelectedPosition(int lastSelectedPosition) {\n        this.lastSelectedPosition = lastSelectedPosition;\n    }\n\n    public int getViewPagerId() {\n        return viewPagerId;\n    }\n\n    public void setViewPagerId(int viewPagerId) {\n        this.viewPagerId = viewPagerId;\n    }\n\n    @NonNull\n    public Orientation getOrientation() {\n        if (orientation == null) {\n            orientation = Orientation.HORIZONTAL;\n        }\n        return orientation;\n    }\n\n    public void setOrientation(Orientation orientation) {\n        this.orientation = orientation;\n    }\n\n    @NonNull\n    public AnimationType getAnimationType() {\n        if (animationType == null) {\n            animationType = AnimationType.NONE;\n        }\n        return animationType;\n    }\n\n    public void setAnimationType(AnimationType animationType) {\n        this.animationType = animationType;\n    }\n\n    @NonNull\n    public RtlMode getRtlMode() {\n        if (rtlMode == null) {\n            rtlMode = RtlMode.Off;\n        }\n        return rtlMode;\n    }\n\n    public void setRtlMode(RtlMode rtlMode) {\n        this.rtlMode = rtlMode;\n    }\n}\n'