b'{-# LANGUAGE\n    DeriveDataTypeable\n  , DeriveGeneric\n  #-}\nmodule Type.UserComment where\n\nimport Data.Aeson\nimport Data.JSON.Schema\nimport Data.Text (Text)\nimport Data.Typeable\nimport GHC.Generics\nimport Generics.Generic.Aeson\nimport Generics.XmlPickler\nimport Text.XML.HXT.Arrow.Pickle\n\nimport Type.User (User)\n\ndata UserComment = UserComment\n  { user    :: User\n  , comment :: Text\n  } deriving (Eq, Generic, Ord, Show, Typeable)\n\ninstance XmlPickler UserComment where xpickle   = gxpickle\ninstance JSONSchema UserComment where schema    = gSchema\ninstance FromJSON   UserComment where parseJSON = gparseJson\ninstance ToJSON     UserComment where toJSON    = gtoJson\n'