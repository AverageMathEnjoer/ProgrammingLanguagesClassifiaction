b'using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace Asn1 {\n\npublic class AsnOID {\n\n\tstatic Dictionary<string, string> OIDToName =\n\t\tnew Dictionary<string, string>();\n\tstatic Dictionary<string, string> NameToOID =\n\t\tnew Dictionary<string, string>();\n\n\tstatic AsnOID()\n\t{\n\t\t/*\n\t\t * From RFC 5280, PKIX1Explicit88 module.\n\t\t */\n\t\tReg("1.3.6.1.5.5.7", "id-pkix");\n\t\tReg("1.3.6.1.5.5.7.1", "id-pe");\n\t\tReg("1.3.6.1.5.5.7.2", "id-qt");\n\t\tReg("1.3.6.1.5.5.7.3", "id-kp");\n\t\tReg("1.3.6.1.5.5.7.48", "id-ad");\n\t\tReg("1.3.6.1.5.5.7.2.1", "id-qt-cps");\n\t\tReg("1.3.6.1.5.5.7.2.2", "id-qt-unotice");\n\t\tReg("1.3.6.1.5.5.7.48.1", "id-ad-ocsp");\n\t\tReg("1.3.6.1.5.5.7.48.2", "id-ad-caIssuers");\n\t\tReg("1.3.6.1.5.5.7.48.3", "id-ad-timeStamping");\n\t\tReg("1.3.6.1.5.5.7.48.5", "id-ad-caRepository");\n\n\t\tReg("2.5.4", "id-at");\n\t\tReg("2.5.4.41", "id-at-name");\n\t\tReg("2.5.4.4", "id-at-surname");\n\t\tReg("2.5.4.42", "id-at-givenName");\n\t\tReg("2.5.4.43", "id-at-initials");\n\t\tReg("2.5.4.44", "id-at-generationQualifier");\n\t\tReg("2.5.4.3", "id-at-commonName");\n\t\tReg("2.5.4.7", "id-at-localityName");\n\t\tReg("2.5.4.8", "id-at-stateOrProvinceName");\n\t\tReg("2.5.4.10", "id-at-organizationName");\n\t\tReg("2.5.4.11", "id-at-organizationalUnitName");\n\t\tReg("2.5.4.12", "id-at-title");\n\t\tReg("2.5.4.46", "id-at-dnQualifier");\n\t\tReg("2.5.4.6", "id-at-countryName");\n\t\tReg("2.5.4.5", "id-at-serialNumber");\n\t\tReg("2.5.4.65", "id-at-pseudonym");\n\t\tReg("0.9.2342.19200300.100.1.25", "id-domainComponent");\n\n\t\tReg("1.2.840.113549.1.9", "pkcs-9");\n\t\tReg("1.2.840.113549.1.9.1", "id-emailAddress");\n\n\t\t/*\n\t\t * From RFC 5280, PKIX1Implicit88 module.\n\t\t */\n\t\tReg("2.5.29", "id-ce");\n\t\tReg("2.5.29.35", "id-ce-authorityKeyIdentifier");\n\t\tReg("2.5.29.14", "id-ce-subjectKeyIdentifier");\n\t\tReg("2.5.29.15", "id-ce-keyUsage");\n\t\tReg("2.5.29.16", "id-ce-privateKeyUsagePeriod");\n\t\tReg("2.5.29.32", "id-ce-certificatePolicies");\n\t\tReg("2.5.29.33", "id-ce-policyMappings");\n\t\tReg("2.5.29.17", "id-ce-subjectAltName");\n\t\tReg("2.5.29.18", "id-ce-issuerAltName");\n\t\tReg("2.5.29.9", "id-ce-subjectDirectoryAttributes");\n\t\tReg("2.5.29.19", "id-ce-basicConstraints");\n\t\tReg("2.5.29.30", "id-ce-nameConstraints");\n\t\tReg("2.5.29.36", "id-ce-policyConstraints");\n\t\tReg("2.5.29.31", "id-ce-cRLDistributionPoints");\n\t\tReg("2.5.29.37", "id-ce-extKeyUsage");\n\n\t\tReg("2.5.29.37.0", "anyExtendedKeyUsage");\n\t\tReg("1.3.6.1.5.5.7.3.1", "id-kp-serverAuth");\n\t\tReg("1.3.6.1.5.5.7.3.2", "id-kp-clientAuth");\n\t\tReg("1.3.6.1.5.5.7.3.3", "id-kp-codeSigning");\n\t\tReg("1.3.6.1.5.5.7.3.4", "id-kp-emailProtection");\n\t\tReg("1.3.6.1.5.5.7.3.8", "id-kp-timeStamping");\n\t\tReg("1.3.6.1.5.5.7.3.9", "id-kp-OCSPSigning");\n\n\t\tReg("2.5.29.54", "id-ce-inhibitAnyPolicy");\n\t\tReg("2.5.29.46", "id-ce-freshestCRL");\n\t\tReg("1.3.6.1.5.5.7.1.1", "id-pe-authorityInfoAccess");\n\t\tReg("1.3.6.1.5.5.7.1.11", "id-pe-subjectInfoAccess");\n\t\tReg("2.5.29.20", "id-ce-cRLNumber");\n\t\tReg("2.5.29.28", "id-ce-issuingDistributionPoint");\n\t\tReg("2.5.29.27", "id-ce-deltaCRLIndicator");\n\t\tReg("2.5.29.21", "id-ce-cRLReasons");\n\t\tReg("2.5.29.29", "id-ce-certificateIssuer");\n\t\tReg("2.5.29.23", "id-ce-holdInstructionCode");\n\t\tReg("2.2.840.10040.2", "WRONG-holdInstruction");\n\t\tReg("2.2.840.10040.2.1", "WRONG-id-holdinstruction-none");\n\t\tReg("2.2.840.10040.2.2", "WRONG-id-holdinstruction-callissuer");\n\t\tReg("2.2.840.10040.2.3", "WRONG-id-holdinstruction-reject");\n\t\tReg("2.5.29.24", "id-ce-invalidityDate");\n\n\t\t/*\n\t\t * These are the "right" OID. RFC 5280 mistakenly defines\n\t\t * the first OID element as "2".\n\t\t */\n\t\tReg("1.2.840.10040.2", "holdInstruction");\n\t\tReg("1.2.840.10040.2.1", "id-holdinstruction-none");\n\t\tReg("1.2.840.10040.2.2", "id-holdinstruction-callissuer");\n\t\tReg("1.2.840.10040.2.3", "id-holdinstruction-reject");\n\n\t\t/*\n\t\t * From PKCS#1.\n\t\t */\n\t\tReg("1.2.840.113549.1.1", "pkcs-1");\n\t\tReg("1.2.840.113549.1.1.1", "rsaEncryption");\n\t\tReg("1.2.840.113549.1.1.7", "id-RSAES-OAEP");\n\t\tReg("1.2.840.113549.1.1.9", "id-pSpecified");\n\t\tReg("1.2.840.113549.1.1.10", "id-RSASSA-PSS");\n\t\tReg("1.2.840.113549.1.1.2", "md2WithRSAEncryption");\n\t\tReg("1.2.840.113549.1.1.4", "md5WithRSAEncryption");\n\t\tReg("1.2.840.113549.1.1.5", "sha1WithRSAEncryption");\n\t\tReg("1.2.840.113549.1.1.11", "sha256WithRSAEncryption");\n\t\tReg("1.2.840.113549.1.1.12", "sha384WithRSAEncryption");\n\t\tReg("1.2.840.113549.1.1.13", "sha512WithRSAEncryption");\n\t\tReg("1.3.14.3.2.26", "id-sha1");\n\t\tReg("1.2.840.113549.2.2", "id-md2");\n\t\tReg("1.2.840.113549.2.5", "id-md5");\n\t\tReg("1.2.840.113549.1.1.8", "id-mgf1");\n\n\t\t/*\n\t\t * From NIST: http://csrc.nist.gov/groups/ST/crypto_apps_infra/csor/algorithms.html\n\t\t */\n\t\tReg("2.16.840.1.101.3", "csor");\n\t\tReg("2.16.840.1.101.3.4", "nistAlgorithms");\n\t\tReg("2.16.840.1.101.3.4.0", "csorModules");\n\t\tReg("2.16.840.1.101.3.4.0.1", "aesModule1");\n\n\t\tReg("2.16.840.1.101.3.4.1", "aes");\n\t\tReg("2.16.840.1.101.3.4.1.1", "id-aes128-ECB");\n\t\tReg("2.16.840.1.101.3.4.1.2", "id-aes128-CBC");\n\t\tReg("2.16.840.1.101.3.4.1.3", "id-aes128-OFB");\n\t\tReg("2.16.840.1.101.3.4.1.4", "id-aes128-CFB");\n\t\tReg("2.16.840.1.101.3.4.1.5", "id-aes128-wrap");\n\t\tReg("2.16.840.1.101.3.4.1.6", "id-aes128-GCM");\n\t\tReg("2.16.840.1.101.3.4.1.7", "id-aes128-CCM");\n\t\tReg("2.16.840.1.101.3.4.1.8", "id-aes128-wrap-pad");\n\t\tReg("2.16.840.1.101.3.4.1.21", "id-aes192-ECB");\n\t\tReg("2.16.840.1.101.3.4.1.22", "id-aes192-CBC");\n\t\tReg("2.16.840.1.101.3.4.1.23", "id-aes192-OFB");\n\t\tReg("2.16.840.1.101.3.4.1.24", "id-aes192-CFB");\n\t\tReg("2.16.840.1.101.3.4.1.25", "id-aes192-wrap");\n\t\tReg("2.16.840.1.101.3.4.1.26", "id-aes192-GCM");\n\t\tReg("2.16.840.1.101.3.4.1.27", "id-aes192-CCM");\n\t\tReg("2.16.840.1.101.3.4.1.28", "id-aes192-wrap-pad");\n\t\tReg("2.16.840.1.101.3.4.1.41", "id-aes256-ECB");\n\t\tReg("2.16.840.1.101.3.4.1.42", "id-aes256-CBC");\n\t\tReg("2.16.840.1.101.3.4.1.43", "id-aes256-OFB");\n\t\tReg("2.16.840.1.101.3.4.1.44", "id-aes256-CFB");\n\t\tReg("2.16.840.1.101.3.4.1.45", "id-aes256-wrap");\n\t\tReg("2.16.840.1.101.3.4.1.46", "id-aes256-GCM");\n\t\tReg("2.16.840.1.101.3.4.1.47", "id-aes256-CCM");\n\t\tReg("2.16.840.1.101.3.4.1.48", "id-aes256-wrap-pad");\n\n\t\tReg("2.16.840.1.101.3.4.2", "hashAlgs");\n\t\tReg("2.16.840.1.101.3.4.2.1", "id-sha256");\n\t\tReg("2.16.840.1.101.3.4.2.2", "id-sha384");\n\t\tReg("2.16.840.1.101.3.4.2.3", "id-sha512");\n\t\tReg("2.16.840.1.101.3.4.2.4", "id-sha224");\n\t\tReg("2.16.840.1.101.3.4.2.5", "id-sha512-224");\n\t\tReg("2.16.840.1.101.3.4.2.6", "id-sha512-256");\n\n\t\tReg("2.16.840.1.101.3.4.3", "sigAlgs");\n\t\tReg("2.16.840.1.101.3.4.3.1", "id-dsa-with-sha224");\n\t\tReg("2.16.840.1.101.3.4.3.2", "id-dsa-with-sha256");\n\n\t\tReg("1.2.840.113549", "rsadsi");\n\t\tReg("1.2.840.113549.2", "digestAlgorithm");\n\t\tReg("1.2.840.113549.2.7", "id-hmacWithSHA1");\n\t\tReg("1.2.840.113549.2.8", "id-hmacWithSHA224");\n\t\tReg("1.2.840.113549.2.9", "id-hmacWithSHA256");\n\t\tReg("1.2.840.113549.2.10", "id-hmacWithSHA384");\n\t\tReg("1.2.840.113549.2.11", "id-hmacWithSHA512");\n\n\t\t/*\n\t\t * From X9.57: http://oid-info.com/get/1.2.840.10040.4\n\t\t */\n\t\tReg("1.2.840.10040.4", "x9algorithm");\n\t\tReg("1.2.840.10040.4", "x9cm");\n\t\tReg("1.2.840.10040.4.1", "dsa");\n\t\tReg("1.2.840.10040.4.3", "dsa-with-sha1");\n\n\t\t/*\n\t\t * From SEC: http://oid-info.com/get/1.3.14.3.2\n\t\t */\n\t\tReg("1.3.14.3.2.2", "md4WithRSA");\n\t\tReg("1.3.14.3.2.3", "md5WithRSA");\n\t\tReg("1.3.14.3.2.4", "md4WithRSAEncryption");\n\t\tReg("1.3.14.3.2.12", "dsaSEC");\n\t\tReg("1.3.14.3.2.13", "dsaWithSHASEC");\n\t\tReg("1.3.14.3.2.27", "dsaWithSHA1SEC");\n\n\t\t/*\n\t\t * From Microsoft: http://oid-info.com/get/1.3.6.1.4.1.311.20.2\n\t\t */\n\t\tReg("1.3.6.1.4.1.311.20.2", "ms-certType");\n\t\tReg("1.3.6.1.4.1.311.20.2.2", "ms-smartcardLogon");\n\t\tReg("1.3.6.1.4.1.311.20.2.3", "ms-UserPrincipalName");\n\t\tReg("1.3.6.1.4.1.311.20.2.3", "ms-UPN");\n\t}\n\n\tstatic void Reg(string oid, string name)\n\t{\n\t\tif (!OIDToName.ContainsKey(oid)) {\n\t\t\tOIDToName.Add(oid, name);\n\t\t}\n\t\tstring nn = Normalize(name);\n\t\tif (NameToOID.ContainsKey(nn)) {\n\t\t\tthrow new Exception("OID name collision: " + nn);\n\t\t}\n\t\tNameToOID.Add(nn, oid);\n\n\t\t/*\n\t\t * Many names start with \'id-??-\' and we want to support\n\t\t * the short names (without that prefix) as aliases. But\n\t\t * we must take care of some collisions on short names.\n\t\t */\n\t\tif (name.StartsWith("id-")\n\t\t\t&& name.Length >= 7 && name[5] == \'-\')\n\t\t{\n\t\t\tif (name.StartsWith("id-ad-")) {\n\t\t\t\tReg(oid, name.Substring(6) + "-IA");\n\t\t\t} else if (name.StartsWith("id-kp-")) {\n\t\t\t\tReg(oid, name.Substring(6) + "-EKU");\n\t\t\t} else {\n\t\t\t\tReg(oid, name.Substring(6));\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic string Normalize(string name)\n\t{\n\t\tStringBuilder sb = new StringBuilder();\n\t\tforeach (char c in name) {\n\t\t\tint d = (int)c;\n\t\t\tif (d <= 32 || d == \'-\') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (d >= \'A\' && d <= \'Z\') {\n\t\t\t\td += \'a\' - \'A\';\n\t\t\t}\n\t\t\tsb.Append((char)c);\n\t\t}\n\t\treturn sb.ToString();\n\t}\n\n\tpublic static string ToName(string oid)\n\t{\n\t\treturn OIDToName.ContainsKey(oid) ? OIDToName[oid] : oid;\n\t}\n\n\tpublic static string ToOID(string name)\n\t{\n\t\tif (IsNumericOID(name)) {\n\t\t\treturn name;\n\t\t}\n\t\tstring nn = Normalize(name);\n\t\tif (!NameToOID.ContainsKey(nn)) {\n\t\t\tthrow new AsnException(\n\t\t\t\t"unrecognized OID name: " + name);\n\t\t}\n\t\treturn NameToOID[nn];\n\t}\n\n\tpublic static bool IsNumericOID(string oid)\n\t{\n\t\t/*\n\t\t * An OID is in numeric format if:\n\t\t * -- it contains only digits and dots\n\t\t * -- it does not start or end with a dot\n\t\t * -- it does not contain two consecutive dots\n\t\t * -- it contains at least one dot\n\t\t */\n\t\tforeach (char c in oid) {\n\t\t\tif (!(c >= \'0\' && c <= \'9\') && c != \'.\') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (oid.StartsWith(".") || oid.EndsWith(".")) {\n\t\t\treturn false;\n\t\t}\n\t\tif (oid.IndexOf("..") >= 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (oid.IndexOf(\'.\') < 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\n}\n'