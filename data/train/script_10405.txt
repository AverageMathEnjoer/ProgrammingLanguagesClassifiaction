b'package com.codeest.geeknews.ui.zhihu.activity;\n\nimport android.app.ActivityOptions;\nimport android.content.Intent;\nimport android.support.design.widget.AppBarLayout;\nimport android.support.v4.widget.SwipeRefreshLayout;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.Toolbar;\nimport android.view.View;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport com.bumptech.glide.Glide;\nimport com.codeest.geeknews.R;\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.base.RootActivity;\nimport com.codeest.geeknews.base.contract.zhihu.ThemeChildContract;\nimport com.codeest.geeknews.component.ImageLoader;\nimport com.codeest.geeknews.model.bean.ThemeChildListBean;\nimport com.codeest.geeknews.presenter.zhihu.ThemeChildPresenter;\nimport com.codeest.geeknews.ui.zhihu.adapter.ThemeChildAdapter;\nimport com.codeest.geeknews.util.SystemUtil;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport butterknife.BindView;\nimport jp.wasabeef.glide.transformations.BlurTransformation;\n\n/**\n * Created by codeest on 16/8/24.\n */\n\npublic class ThemeActivity extends RootActivity<ThemeChildPresenter> implements ThemeChildContract.View {\n\n    @BindView(R.id.view_main)\n    RecyclerView rvThemeChildList;\n    @BindView(R.id.swipe_refresh)\n    SwipeRefreshLayout swipeRefresh;\n    @BindView(R.id.tool_bar)\n    Toolbar mToolBar;\n    @BindView(R.id.iv_theme_child_blur)\n    ImageView ivBlur;\n    @BindView(R.id.iv_theme_child_origin)\n    ImageView ivOrigin;\n    @BindView(R.id.tv_theme_child_des)\n    TextView tvDes;\n    @BindView(R.id.theme_child_appbar)\n    AppBarLayout appbar;\n\n    ThemeChildAdapter mAdapter;\n    List<ThemeChildListBean.StoriesBean> mList;\n\n    @Override\n    protected void initInject() {\n        getActivityComponent().inject(this);\n    }\n\n    @Override\n    protected int getLayout() {\n        return R.layout.activity_theme;\n    }\n\n    @Override\n    protected void initEventAndData() {\n        super.initEventAndData();\n        Intent intent = getIntent();\n        final int id = intent.getExtras().getInt(Constants.IT_ZHIHU_THEME_ID);\n        mList = new ArrayList<>();\n        mAdapter = new ThemeChildAdapter(mContext, mList);\n        rvThemeChildList.setLayoutManager(new LinearLayoutManager(mContext));\n        rvThemeChildList.setAdapter(mAdapter);\n        stateLoading();\n        mPresenter.getThemeChildData(id);\n        mAdapter.setOnItemClickListener(new ThemeChildAdapter.OnItemClickListener() {\n            @Override\n            public void onItemClick(int position, View shareView) {\n                mPresenter.insertReadToDB(mList.get(position).getId());\n                mAdapter.setReadState(position, true);\n                mAdapter.notifyItemChanged(position);\n                Intent intent = new Intent();\n                intent.setClass(mContext, ZhihuDetailActivity.class);\n                intent.putExtra(Constants.IT_ZHIHU_DETAIL_ID, mList.get(position).getId());\n                if (shareView != null) {\n                    mContext.startActivity(intent, ActivityOptions.makeSceneTransitionAnimation(mContext, shareView, "shareView").toBundle());\n                } else {\n                    startActivity(intent, ActivityOptions.makeSceneTransitionAnimation(mContext).toBundle());\n                }\n            }\n        });\n        appbar.addOnOffsetChangedListener(new AppBarLayout.OnOffsetChangedListener() {\n            @Override\n            public void onOffsetChanged(AppBarLayout appBarLayout, int verticalOffset) {\n                if (verticalOffset >= 0) {\n                    swipeRefresh.setEnabled(true);\n                } else {\n                    swipeRefresh.setEnabled(false);\n                    float rate = (float)(SystemUtil.dp2px(mContext, 256) + verticalOffset * 2) / SystemUtil.dp2px(mContext, 256);\n                    if (rate >= 0)\n                        ivOrigin.setAlpha(rate);\n                }\n            }\n        });\n        swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n            @Override\n            public void onRefresh() {\n                mPresenter.getThemeChildData(id);\n            }\n        });\n    }\n\n    @Override\n    public void stateError() {\n        super.stateError();\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n    }\n\n    @Override\n    public void showContent(ThemeChildListBean themeChildListBean) {\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n        stateMain();\n        setToolBar(mToolBar,themeChildListBean.getName());\n        mList.clear();\n        mList.addAll(themeChildListBean.getStories());\n        mAdapter.notifyDataSetChanged();\n        ImageLoader.load(mContext, themeChildListBean.getBackground(), ivOrigin);\n        Glide.with(mContext).load(themeChildListBean.getBackground()).bitmapTransform(new BlurTransformation(mContext)).into(ivBlur);\n        tvDes.setText(themeChildListBean.getDescription());\n    }\n}\n'