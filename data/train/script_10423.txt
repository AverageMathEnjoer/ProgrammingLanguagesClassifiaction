b'// Copyright (c) 2022 Manuel Schneider\n\n#include "albert/util/standarditem.h"\nusing namespace albert;\n\nStandardItem::StandardItem(QString id,\n                           QString text,\n                           QString subtext,\n                           QString input_action_text,\n                           QStringList icon_urls,\n                           Actions actions) :\n        id_(std::move(id)),\n        text_(std::move(text)),\n        subtext_(std::move(subtext)),\n        input_action_text_(std::move(input_action_text)),\n        icon_urls_(std::move(std::move(icon_urls))),\n        actions_(std::move(actions)) {}\n\nvoid StandardItem::setId(QString id) { id_ = std::move(id); }\nvoid StandardItem::setText(QString text) { text_ = std::move(text); }\nvoid StandardItem::setSubtext(QString subtext) { subtext_ = std::move(subtext); }\nvoid StandardItem::setInputActionText(QString input_action_text) { input_action_text_ = std::move(input_action_text); }\nvoid StandardItem::setIconUrls(QStringList icon_urls) { icon_urls_ = std::move(icon_urls); }\nvoid StandardItem::setActions(Actions actions) { actions_ = std::move(actions); }\n\nQString StandardItem::id() const { return id_; }\nQString StandardItem::text() const { return text_; }\nQString StandardItem::subtext() const { return subtext_; }\nQString StandardItem::inputActionText() const { return input_action_text_; }\nQStringList StandardItem::iconUrls() const { return icon_urls_; }\nbool StandardItem::hasActions() const { return !actions_.empty(); }\nstd::vector<Action> StandardItem::actions() const { return actions_; }\n\n\nstd::shared_ptr<StandardItem> StandardItem::make(QString id,\n                                                 QString text,\n                                                 QString subtext,\n                                                 QString input_action_text,\n                                                 QStringList icon_urls,\n                                                 Actions actions)\n{\n    return std::make_shared<StandardItem>(std::move(id),\n                                          std::move(text),\n                                          std::move(subtext),\n                                          std::move(input_action_text),\n                                          std::move(std::move(icon_urls)),\n                                          std::move(actions));\n}\n\nstd::shared_ptr<StandardItem> StandardItem::make(QString id,\n                                                 QString text,\n                                                 QString subtext,\n                                                 QStringList icon_urls,\n                                                 Actions actions)\n{\n    return std::make_shared<StandardItem>(std::move(id),\n                                          std::move(text),\n                                          std::move(subtext),\n                                          QString(),\n                                          std::move(std::move(icon_urls)),\n                                          std::move(actions));\n}\n'