b'/*\n * Display.c\n *\n *  Created on: 14.08.2017\n *      Author: darek\n */\n#include <driver/i2c.h>\n#include <esp_log.h>\n#include <esp_err.h>\n#include <freertos/FreeRTOS.h>\n#include <freertos/task.h>\n#include "MPU6050.h"\n#include "MPU6050_6Axis_MotionApps20.h"\n#include "sdkconfig.h"\n\n#define PIN_SDA 21\n#define PIN_CLK 22\n\nQuaternion q;           // [w, x, y, z]         quaternion container\nVectorFloat gravity;    // [x, y, z]            gravity vector\nfloat ypr[3];           // [yaw, pitch, roll]   yaw/pitch/roll container and gravity vector\nuint16_t packetSize = 42;    // expected DMP packet size (default is 42 bytes)\nuint16_t fifoCount;     // count of all bytes currently in FIFO\nuint8_t fifoBuffer[64]; // FIFO storage buffer\nuint8_t mpuIntStatus;   // holds actual interrupt status byte from MPU\n\nvoid task_initI2C(void *ignore) {\n\ti2c_config_t conf;\n\tconf.mode = I2C_MODE_MASTER;\n\tconf.sda_io_num = (gpio_num_t)PIN_SDA;\n\tconf.scl_io_num = (gpio_num_t)PIN_CLK;\n\tconf.sda_pullup_en = GPIO_PULLUP_ENABLE;\n\tconf.scl_pullup_en = GPIO_PULLUP_ENABLE;\n\tconf.master.clk_speed = 400000;\n\tESP_ERROR_CHECK(i2c_param_config(I2C_NUM_0, &conf));\n\tESP_ERROR_CHECK(i2c_driver_install(I2C_NUM_0, I2C_MODE_MASTER, 0, 0, 0));\n\tvTaskDelete(NULL);\n}\n\nvoid task_display(void*){\n\tMPU6050 mpu = MPU6050();\n\tmpu.initialize();\n\tmpu.dmpInitialize();\n\n\t// This need to be setup individually\n\t// mpu.setXGyroOffset(220);\n\t// mpu.setYGyroOffset(76);\n\t// mpu.setZGyroOffset(-85);\n\t// mpu.setZAccelOffset(1788);\n    mpu.CalibrateAccel(6);\n    mpu.CalibrateGyro(6);\n\n\tmpu.setDMPEnabled(true);\n\n\twhile(1){\n\t    mpuIntStatus = mpu.getIntStatus();\n\t\t// get current FIFO count\n\t\tfifoCount = mpu.getFIFOCount();\n\n\t    if ((mpuIntStatus & 0x10) || fifoCount == 1024) {\n\t        // reset so we can continue cleanly\n\t        mpu.resetFIFO();\n\n\t    // otherwise, check for DMP data ready interrupt frequently)\n\t    } else if (mpuIntStatus & 0x02) {\n\t        // wait for correct available data length, should be a VERY short wait\n\t        while (fifoCount < packetSize) fifoCount = mpu.getFIFOCount();\n\n\t        // read a packet from FIFO\n\n\t        mpu.getFIFOBytes(fifoBuffer, packetSize);\n\t \t\tmpu.dmpGetQuaternion(&q, fifoBuffer);\n\t\t\tmpu.dmpGetGravity(&gravity, &q);\n\t\t\tmpu.dmpGetYawPitchRoll(ypr, &q, &gravity);\n\t\t\tprintf("YAW: %3.1f, ", ypr[0] * 180/M_PI);\n\t\t\tprintf("PITCH: %3.1f, ", ypr[1] * 180/M_PI);\n\t\t\tprintf("ROLL: %3.1f \\n", ypr[2] * 180/M_PI);\n\t    }\n\n\t    //Best result is to match with DMP refresh rate\n\t    // Its last value in components/MPU6050/MPU6050_6Axis_MotionApps20.h file line 310\n\t    // Now its 0x13, which means DMP is refreshed with 10Hz rate\n\t\t// vTaskDelay(5/portTICK_PERIOD_MS);\n\t}\n\n\tvTaskDelete(NULL);\n}\n'