b'/* \n * Fast QR Code generator library\n * \n * Copyright (c) Project Nayuki. (MIT License)\n * https://www.nayuki.io/page/fast-qr-code-generator-library\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the "Software"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided "as is", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n */\n\npackage io.nayuki.fastqrcodegen;\n\n\n/**\n * Thrown when the supplied data does not fit any QR Code version. Ways to handle this exception include:\n * <ul>\n *   <li><p>Decrease the error correction level if it was greater than {@code Ecc.LOW}.</p></li>\n *   <li><p>If the advanced {@code encodeSegments()} function with 6 arguments or the\n *     {@code makeSegmentsOptimally()} function was called, then increase the maxVersion argument\n *     if it was less than {@link QrCode#MAX_VERSION}. (This advice does not apply to the other\n *     factory functions because they search all versions up to {@code QrCode.MAX_VERSION}.)</p></li>\n *   <li><p>Split the text data into better or optimal segments in order to reduce the number of\n *     bits required. (See {@link QrSegmentAdvanced#makeSegmentsOptimally(String,QrCode.Ecc,int,int)\n *     QrSegmentAdvanced.makeSegmentsOptimally()}.)</p></li>\n *   <li><p>Change the text or binary data to be shorter.</p></li>\n *   <li><p>Change the text to fit the character set of a particular segment mode (e.g. alphanumeric).</p></li>\n *   <li><p>Propagate the error upward to the caller/user.</p></li>\n * </ul>\n * @see QrCode#encodeText(String, QrCode.Ecc)\n * @see QrCode#encodeBinary(byte[], QrCode.Ecc)\n * @see QrCode#encodeSegments(java.util.List, QrCode.Ecc)\n * @see QrCode#encodeSegments(java.util.List, QrCode.Ecc, int, int, int, boolean)\n * @see QrSegmentAdvanced#makeSegmentsOptimally(String, QrCode.Ecc, int, int)\n */\npublic class DataTooLongException extends IllegalArgumentException {\n\t\n\tpublic DataTooLongException() {}\n\t\n\t\n\tpublic DataTooLongException(String msg) {\n\t\tsuper(msg);\n\t}\n\t\n}\n'