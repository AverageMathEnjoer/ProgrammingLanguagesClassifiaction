b'// Video Explanation at https://www.youtube.com/watch?v=-F7cHQ-gWS4\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n\nll f(ll &x, ll &y, ll &z) {\n    return (x&z) * (y&z);\n}\n\nclass Bit{\n    ll x;\n    int _bits; // we need only these many bits, in this case 40\n    \n    #define mask(b) (1LL<<(_bits-b)) // remember 0th bit is actually 39th bit\npublic:\n    Bit() {}\n    \n    Bit(ll &y, int bits=40) { \n        init(y, bits);\n    }\n\n    void init(ll &y, int bits=40) {\n        x = y;\n        _bits = bits-1;\n    }\n    \n    bool get(int &b) {\n        return (x & mask(b)) != 0;\n    }\n\n    void set(int &b) {\n        x |= mask(b);\n    }\n\n    void reset(int &b) {\n        if(get(b))\n            x ^= mask(b);\n    }\n\n    void set(int &b,int k) {\n        if(k == 1) {\n            set(b);\n        }\n        else {\n            reset(b);\n        }\n    }\n\n    ll toInt() {\n        return x;\n    }\n} bitX, bitY;\n\nvector<ll> getValidZValues(ll &L, ll &R) {\n    vector<ll> Zcandidates = {L, R}; // L and R are always valid Z values we should handle\n    Bit bitL(L);\n    Bit bitR(R);\n    int k = 0;\n    while(k<40 and bitL.get(k) == bitR.get(k)) k++;\n\n    for(int l = k+1; l < 40; l++) {\n        if(bitL.get(l) != 0) continue;\n        Bit z(L);\n        z.set(l);\n        for(int i=l+1; i<40; i++) {\n            if(bitX.get(i) == 0 and bitY.get(i) == 0) {\n                z.set(i, 0); // minimize Z\n            }\n            else {\n                z.set(i, 1); // maximize F(X,Y,Z)\n            }\n        }\n        Zcandidates.push_back(z.toInt());\n    }\n    for(int r = k+1; r < 40; r++) {\n        if(bitR.get(r) != 1) continue;\n        Bit z(R);\n        z.reset(r);\n        for(int i=r+1; i<40; i++) {\n            if(bitX.get(i) == 0 and bitY.get(i) == 0) {\n                z.set(i, 0);\n            }\n            else {\n                z.set(i, 1);\n            }\n        }\n        Zcandidates.push_back(z.toInt());\n    }\n\n    sort(Zcandidates.begin(), Zcandidates.end());\n    return Zcandidates;\n}\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    int t;\n    cin >> t;\n\n    while(t--) {\n        ll x, y, l, r;\n        cin >> x >> y >> l >> r;\n\n        bitX.init(x);\n        bitY.init(y);\n\n        vector<ll> Zcandidates = getValidZValues(l, r);\n\n        ll mx = -1, ans = r;\n        for(ll z: Zcandidates) {\n            ll currentF = f(x, y, z);\n            if(currentF > mx) {\n                mx = currentF;\n                ans = z;\n            }\n        }\n\n        cout << ans << endl;\n    }\n    \n    return 0;\n}\n'