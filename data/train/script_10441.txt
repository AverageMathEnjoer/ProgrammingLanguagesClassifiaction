b'package com.bennyhuo.kotlin.scheduledtask\n\nimport com.bennyhuo.kotlin.api.Config\nimport com.bennyhuo.kotlin.api.updateApi\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport java.util.*\n\nclass TimerUpdateTask : UpdateTask {\n\n    private var timer: Timer? = null\n\n    override fun scheduleUpdate(interval: Long) {\n        cancel()\n\n        val timer = Timer()\n        timer.schedule(object : TimerTask() {\n            override fun run() {\n                updateApi.getConfig().enqueue(object : Callback<List<Config>> {\n                    override fun onResponse(\n                        call: Call<List<Config>>,\n                        response: Response<List<Config>>\n                    ) {\n                        println(response.body())\n                    }\n\n                    override fun onFailure(call: Call<List<Config>>, t: Throwable) {\n                        t.printStackTrace()\n                    }\n                })\n            }\n        }, 0L, interval)\n\n        this.timer = timer\n    }\n\n    override fun cancel() {\n        timer?.cancel()\n        timer = null\n    }\n}'