b'/*Copyright \xc2\xa9  2017 Lyons. All rights reserved. */\npackage lyons.common.controller.user;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport lyons.common.exception.user.NonuniquenessException;\nimport lyons.common.exception.user.NullValueException;\nimport lyons.common.exception.user.RepeatException;\nimport lyons.common.model.user.UUser;\nimport lyons.common.utils.ResultUtil;\nimport lyons.common.utils.VisitorUtil;\nimport lyons.common.utils.enums.AccountStaEnum;\nimport lyons.core.shiro.token.ShiroDbRealm;\n\n/**\n * @Description: \xe7\x94\xa8\xe6\x88\xb7\xe4\xbf\xa1\xe6\x81\xaf\xe7\xbb\xb4\xe6\x8a\xa4\n * @ClassName: UserController\n * @author: lyons<zhanglei>\n * @date: 2017\xe5\xb9\xb42\xe6\x9c\x8810\xe6\x97\xa5 \xe4\xb8\x8b\xe5\x8d\x889:27:19\n * @version: [1.0]\n */\n@Controller\npublic class UserController\n{\n    private static Logger log = LoggerFactory.getLogger(UserController.class);\n    \n    @Autowired\n    private ShiroDbRealm shiroDbRealm;\n    \n    @RequestMapping(value="/admin/register")\n    public String register()\n    {\n        return "admin/register";\n    }\n    \n    /**\n     * @Title: registerSucess\n     * @Description: \xe6\xb3\xa8\xe5\x86\x8c\xe6\x88\x90\xe5\x8a\x9f\n     * @return: String\n     */\n    @RequestMapping(value="/registerSucess")\n    public String registerSucess()\n    {\n        return "success/200";\n    }\n    \n    /**\n     * @Title: loginPost\n     * @Description: \xe7\x94\xa8\xe6\x88\xb7\xe6\xb3\xa8\xe5\x86\x8c\n     * @param uuser\n     * @param request\n     * @return: String\n     */\n    @RequestMapping(value="/admin/register", method = RequestMethod.POST,\n        produces = {"application/json;charset=UTF-8"})\n    @ResponseBody\n    public String registerPost(UUser uuser,HttpServletRequest request)\n    {\n        try\n        {\n            /* \xe5\xae\x89\xe5\x85\xa8\xe6\xa3\x80\xe6\x9f\xa5\xe3\x80\x81\xe6\xad\xa3\xe5\xbc\x8f\xe6\xb3\xa8\xe5\x86\x8c  \xe6\x9c\xaa\xe8\xbf\x9b\xe8\xa1\x8c\xe9\x82\xae\xe7\xae\xb1\xe5\xae\x89\xe5\x85\xa8\xe6\xa3\x80\xe6\x9f\xa5 */\n             if (VisitorUtil.isSecurity(uuser))\n             {\n                 /* \xe6\xad\xa3\xe5\x9c\xa8\xe6\xb3\xa8\xe5\x86\x8c */\n                 shiroDbRealm.registering(uuser);\n             }\n            \n            log.info("\\n\\n "+VisitorUtil.getIpAddress(request)+" *====\xe6\xb3\xa8\xe5\x86\x8c\xe6\x88\x90\xe5\x8a\x9f====* \\n");\n            return ResultUtil.getUrlJson(request);\n        }catch(NullValueException e){\n            log.error("\\n\\n ==> \xe6\xb3\xa8\xe5\x86\x8c\xe7\xa9\xba\xe5\x80\xbc:"+e+" <==\\n"); \n            return ResultUtil.getJson(e.getMessage());\n        } catch (RepeatException e)\n        {\n            log.info("\\n\\n ==> \xe8\xb4\xa6\xe5\x8f\xb7\xe5\xb7\xb2\xe6\xb3\xa8\xe5\x86\x8c <== \\n");\n            return  ResultUtil.getJson(e.getMessage());\n        }catch (NonuniquenessException e) {\n            log.info("\\n\\n ==> \xe9\x82\xae\xe7\xae\xb1\xe5\xb7\xb2\xe6\xb3\xa8\xe5\x86\x8c <== \\n");\n            return  ResultUtil.getJson(e.getMessage());\n        }catch (Exception e) {\n           log.error("\\n\\n ==> \xe6\xb3\xa8\xe5\x86\x8c\xe5\xa4\xb1\xe8\xb4\xa5:"+e+" <==\\n"); \n           return ResultUtil.getJson(AccountStaEnum.registerFailed.getInfo());\n        }\n        \n    }\n}\n'