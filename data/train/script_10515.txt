b'context("LRT")\ntest_that("test=\'LRT\' gives correct errors", {\n  dds <- makeExampleDESeqDataSet(n=100, m=4)\n  dds$group <- factor(c(1,2,1,2))\n  design(dds) <- ~ condition\n  expect_error(DESeq(dds, test="LRT", reduced=~group))\n  expect_error(DESeq(dds, test="LRT", reduced=~1, modelMatrixType="expanded"))\n  expect_error(DESeq(dds,test="LRT",reduced=~group, betaPrior=TRUE))\n  dds <- estimateSizeFactors(dds)\n  dds <- estimateDispersions(dds)\n  expect_error(nbinomLRT(dds))\n})\n\ntest_that("glmGamPoi works", {\n\n  dds <- makeExampleDESeqDataSet(n=100, m=20)\n  dds$group <- factor(rep(1:2, times=10))\n  design(dds) <- ~group + condition\n  dds <- DESeq(dds, test="LRT", reduced=~1, fitType="glmGamPoi")\n\n  # test outlier\n  counts(dds)[1,1] <- 10000L\n  design(dds) <- ~condition\n  dds <- DESeq(dds, test="LRT", reduced=~1, fitType="glmGamPoi")\n  \n  # Michael Schubert\'s test\n  dds <- makeExampleDESeqDataSet(n=100, m=8)\n  nm = matrix(2, nrow=nrow(dds), ncol=ncol(dds))\n  dds$group <- factor(rep(1:2,times=4))\n  design(dds) <- ~group + condition\n  dds <- estimateSizeFactors(dds, normMatrix=nm)\n  dds <- estimateDispersions(dds, fitType="glmGamPoi")\n  dds <- nbinomLRT(dds, reduced=~1, type="glmGamPoi")\n  \n})\n\ntest_that("test=\'LRT\' with quasi-likelihood estimates gives correct errors", {\n  \n  dds <- makeExampleDESeqDataSet(n=100, m=4)\n  dds$group <- factor(c(1,2,1,2))\n  design(dds) <- ~ condition + group\n  expect_warning(DESeq(dds, test = "Wald", fitType = "glmGamPoi"))\n  dds <- estimateSizeFactors(dds)\n  dds_gp <- estimateDispersions(dds)\n  expect_error(nbinomLRT(dds_gp, reduced = ~ condition, type = "glmGamPoi"))\n    \n})\n'