b'package com.kyleduo.switchbutton.demo;\n\nimport android.animation.Animator;\nimport android.animation.ObjectAnimator;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.CompoundButton;\nimport android.widget.LinearLayout;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.kyleduo.switchbutton.SwitchButton;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class UseActivity extends AppCompatActivity implements View.OnClickListener {\n\n\tprivate SwitchButton mListenerSb, mListenerDistinguishSb, mLongSb, mToggleSb, mCheckedSb, mDelaySb, mForceOpenSb, mForceOpenControlSb;\n\tprivate ProgressBar mPb;\n\tprivate Button mStartBt;\n\tprivate TextView mListenerFinish;\n\tprivate TextView mTriggerTv;\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_use);\n\n\t\tfindView();\n\n\t\tLinearLayout toggleWrapper = (LinearLayout) findViewById(R.id.toggle_wrapper);\n\t\tfor (int i = 0; i < toggleWrapper.getChildCount(); i++) {\n\t\t\ttoggleWrapper.getChildAt(i).setOnClickListener(this);\n\t\t}\n\n\t\tLinearLayout checkWrapper = (LinearLayout) findViewById(R.id.check_wrapper);\n\t\tfor (int i = 0; i < checkWrapper.getChildCount(); i++) {\n\t\t\tcheckWrapper.getChildAt(i).setOnClickListener(this);\n\t\t}\n\n\n\t\t// work with listener\n\t\tmListenerSb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\tmListenerFinish.setVisibility(isChecked ? View.VISIBLE : View.INVISIBLE);\n\t\t\t\tif (mListenerDistinguishSb.isChecked() != isChecked) {\n\t\t\t\t\tmListenerDistinguishSb.setChecked(isChecked);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// listener with distinguish\n\t\tmListenerDistinguishSb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\t\t\t@Override\n\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\tmTriggerTv.setVisibility(isChecked ? View.VISIBLE : View.GONE);\n\t\t\t\tif (isChecked) {\n\t\t\t\t\tmTriggerTv.setText(buttonView.isPressed() ? R.string.use_trigger_manually : R.string.use_trigger_by_code);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// work with delay\n\t\tmDelaySb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\t\t\t@Override\n\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\tmDelaySb.setEnabled(false);\n\t\t\t\tmDelaySb.postDelayed(new Runnable() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tmDelaySb.setEnabled(true);\n\t\t\t\t\t}\n\t\t\t\t}, 1500);\n\t\t\t}\n\t\t});\n\n\t\t// work with stuff takes long\n\t\tmStartBt.setOnClickListener(new View.OnClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tObjectAnimator animator = ObjectAnimator.ofInt(mPb, "progress", 0, 1000);\n\t\t\t\tanimator.setDuration(1000);\n\t\t\t\tanimator.addListener(new Animator.AnimatorListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onAnimationStart(Animator animation) {\n\t\t\t\t\t\tmStartBt.setEnabled(false);\n\t\t\t\t\t\tmLongSb.setChecked(false);\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onAnimationEnd(Animator animation) {\n\t\t\t\t\t\tmStartBt.setEnabled(true);\n\t\t\t\t\t\tmLongSb.setChecked(true);\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onAnimationCancel(Animator animation) {\n\t\t\t\t\t\tmStartBt.setEnabled(true);\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onAnimationRepeat(Animator animation) {\n\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tanimator.start();\n\t\t\t}\n\t\t});\n\n\t\t// check in check\n\t\tmForceOpenSb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\t\t\t@Override\n\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\tif (mForceOpenControlSb.isChecked()) {\n\t\t\t\t\ttoast("Call mForceOpenSb.setChecked(true); in on CheckedChanged");\n\t\t\t\t\tmForceOpenSb.setChecked(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate void findView() {\n\t\tmListenerSb = (SwitchButton) findViewById(R.id.sb_use_listener);\n\t\tmListenerDistinguishSb = (SwitchButton) findViewById(R.id.sb_listener_distinguish);\n\t\tmLongSb = (SwitchButton) findViewById(R.id.sb_use_long);\n\t\tmToggleSb = (SwitchButton) findViewById(R.id.sb_use_toggle);\n\t\tmCheckedSb = (SwitchButton) findViewById(R.id.sb_use_checked);\n\t\tmDelaySb = (SwitchButton) findViewById(R.id.sb_use_delay);\n\n\t\tmPb = (ProgressBar) findViewById(R.id.pb);\n\t\tmPb.setProgress(0);\n\t\tmPb.setMax(1000);\n\n\t\tmStartBt = (Button) findViewById(R.id.long_start);\n\n\t\tmListenerFinish = (TextView) findViewById(R.id.listener_finish);\n\t\tmListenerFinish.setVisibility(mListenerSb.isChecked() ? View.VISIBLE : View.INVISIBLE);\n\t\tmTriggerTv = (TextView) findViewById(R.id.listener_trigger);\n\n\t\tmForceOpenSb = (SwitchButton) findViewById(R.id.use_focus_open);\n\t\tmForceOpenControlSb = (SwitchButton) findViewById(R.id.use_focus_open_control);\n\n\t\tmToggleSb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\t\t\t@Override\n\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\ttoast("Toggle SwitchButton new check state: " + (isChecked ? "Checked" : "Unchecked"));\n\t\t\t}\n\t\t});\n\n\t\tmCheckedSb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\t\t\t@Override\n\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\ttoast("Check SwitchButton new check state: " + (isChecked ? "Checked" : "Unchecked"));\n\t\t\t}\n\t\t});\n\t}\n\n\t@Override\n\tpublic void onClick(View v) {\n\t\tint id = v.getId();\n\t\tswitch (id) {\n\t\t\tcase R.id.toggle_ani:\n\t\t\t\tmToggleSb.toggle();\n\t\t\t\tbreak;\n\t\t\tcase R.id.toggle_ani_no_event:\n\t\t\t\tmToggleSb.toggleNoEvent();\n\t\t\t\tbreak;\n\t\t\tcase R.id.toggle_not_ani:\n\t\t\t\tmToggleSb.toggleImmediately();\n\t\t\t\tbreak;\n\t\t\tcase R.id.toggle_not_ani_no_event:\n\t\t\t\tmToggleSb.toggleImmediatelyNoEvent();\n\t\t\t\tbreak;\n\t\t\tcase R.id.checked_ani:\n\t\t\t\tmCheckedSb.setChecked(!mCheckedSb.isChecked());\n\t\t\t\tbreak;\n\t\t\tcase R.id.checked_ani_no_event:\n\t\t\t\tmCheckedSb.setCheckedNoEvent(!mCheckedSb.isChecked());\n\t\t\t\tbreak;\n\t\t\tcase R.id.checked_not_ani:\n\t\t\t\tmCheckedSb.setCheckedImmediately(!mCheckedSb.isChecked());\n\t\t\t\tbreak;\n\t\t\tcase R.id.checked_not_ani_no_event:\n\t\t\t\tmCheckedSb.setCheckedImmediatelyNoEvent(!mCheckedSb.isChecked());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate void toast(String text) {\n\t\tToast.makeText(UseActivity.this, text, Toast.LENGTH_SHORT).show();\n\t}\n}\n'