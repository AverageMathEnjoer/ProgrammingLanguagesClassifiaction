b'package com.github.eprendre.sources_by_eprendre\n\nimport com.github.eprendre.tingshu.extensions.config\nimport com.github.eprendre.tingshu.extensions.splitQuery\nimport com.github.eprendre.tingshu.sources.*\nimport com.github.eprendre.tingshu.utils.*\nimport com.github.kittinunf.fuel.Fuel\nimport com.github.kittinunf.fuel.json.responseJson\nimport org.jsoup.Jsoup\nimport java.net.URL\nimport java.net.URLEncoder\n\nobject LibriVox : TingShu() {\n    override fun getSourceId(): String {\n        return "b722b6d38f1a4a25b453e8f84e5e331a"\n    }\n\n    override fun getUrl(): String {\n        return "https://librivox.org"\n    }\n\n    override fun getName(): String {\n        return "LibriVox \xe6\xb5\x8b\xe8\xaf\x95"\n    }\n\n    override fun getDesc(): String {\n        return "\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe4\xbd\x8d\xe4\xba\x8e: \xe7\xbe\x8e\xe5\x9b\xbd\\n\xe9\x9c\x80\xe8\xa6\x81\xe7\xa7\x91\xe5\xad\xa6\xe4\xb8\x8a\xe7\xbd\x91\xe6\x89\x8d\xe8\x83\xbd\xe6\xad\xa3\xe5\xb8\xb8\xe6\x89\x93\xe5\xbc\x80\xe5\xb0\x81\xe9\x9d\xa2\xe5\x92\x8c\xe6\x92\xad\xe6\x94\xbe\xe3\x80\x82\\n\xe5\xbd\x93\xe4\xb9\x8b\xe6\x97\xa0\xe6\x84\xa7\xe7\x9a\x84\xe5\x85\xa8\xe4\xb8\x96\xe7\x95\x8c\xe6\x9c\x80\xe5\xa4\xa7\xe7\x9a\x84\xe8\x87\xaa\xe5\x88\xb6\xe6\x9c\x89\xe5\xa3\xb0\xe4\xb9\xa6\xe7\xa4\xbe\xe5\x8c\xba\xef\xbc\x8c\xe9\x83\xbd\xe6\x98\xaf\xe5\xbf\x97\xe6\x84\xbf\xe8\x80\x85\xe5\xbd\x95\xe5\x88\xb6\xe7\x9a\x84\xe5\x85\xac\xe5\x85\xb1\xe7\x89\x88\xe6\x9d\x83\xe7\x9a\x84\xe8\x8b\xb1\xe8\xaf\xad\xe6\x9c\x89\xe5\xa3\xb0\xe4\xb9\xa6\xe3\x80\x82\xe4\xbc\x98\xe7\x82\xb9\xe6\x98\xaf\xe5\x9f\xba\xe6\x9c\xac\xe4\xb8\x8a\xe5\x87\xba\xe5\x90\x8d\xe7\x9a\x84\xe4\xb9\xa6\xe9\x83\xbd\xe6\x9c\x89\xe6\x9c\x89\xe5\xa3\xb0\xe4\xb9\xa6\xe7\x89\x88\xe6\x9c\xac\xef\xbc\x8c\xe5\x8c\x85\xe6\x8b\xac\xe9\x9d\x9e\xe5\xb8\xb8\xe5\xb0\x91\xe6\x9c\x89\xe6\x9c\x89\xe5\xa3\xb0\xe7\x89\x88\xe6\x9c\xac\xe7\x9a\x84\xe6\x96\x87\xe5\x8f\xb2\xe5\x93\xb2\xe4\xb9\xa6\xe7\xb1\x8d\xe3\x80\x82\xe5\xad\xa6\xe7\x94\x9f\xe5\x85\x9a\xe5\xa6\x82\xe6\x9e\x9c\xe8\xa6\x81\xe5\xad\xa6\xe4\xb9\xa0\xe6\x9c\xac\xe5\xad\xa6\xe7\xa7\x91\xe4\xb8\x93\xe4\xb8\x9a\xe8\x91\x97\xe4\xbd\x9c\xef\xbc\x8c\xe5\xa4\xa7\xe5\x8f\xaf\xe4\xbb\xa5\xe4\xb8\x8b\xe8\xbd\xbd\xe5\xaf\xb9\xe5\xba\x94\xe5\x90\x8d\xe8\x91\x97\xef\xbc\x8c\xe8\xbe\xb9\xe5\x90\xac\xe8\xbe\xb9\xe8\xaf\xbb\xef\xbc\x8c\xe4\xb8\x80\xe6\x9d\xa1\xe7\xbd\x91\xe7\xba\xbf\xe5\x8d\xb3\xe5\xba\xa7\xe4\xb8\x8e\xe5\x93\x88\xe4\xbd\x9b\xe7\x89\x9b\xe6\xb4\xa5\xe5\xad\xa6\xe7\x94\x9f\xe5\x90\x8c\xe7\xaa\x97\xe3\x80\x82"\n    }\n\n    override fun isWebViewNotRequired(): Boolean {\n        return true\n    }\n\n    override fun search(keywords: String, page: Int): Pair<List<Book>, Int> {\n        val encodedKeywords = URLEncoder.encode(keywords, "utf-8")\n        val url = "https://librivox.org/advanced_search?title=&author=&reader=&keywords=&genre_id=0&status=all&project_type=either&recorded_language=&sort_order=alpha&search_page=$page&search_form=advanced&q=$encodedKeywords"\n        val result = Fuel.get(url)\n            .header("X-Requested-With" to "XMLHttpRequest")\n            .responseJson()\n        val jsonObject = result.third.get().obj()\n        val paginationJson = jsonObject.getString("pagination")\n        var totalPage = 1\n        if (!paginationJson.isNullOrEmpty()) {\n            val pagination = Jsoup.parse(paginationJson)\n            totalPage = pagination.selectFirst(".last").attr("data-page_number").toInt()\n        }\n\n        val doc = Jsoup.parse(jsonObject.getString("results"))\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select(".catalog-result")\n        elementList.forEach { element ->\n            try {\n                val coverUrl = element.selectFirst(".book-cover > img").absUrl("src")\n                val bookUrl = element.selectFirst(".result-data > h3 > a").absUrl("href")\n                val title = element.selectFirst(".result-data > h3 > a").text()\n                val author = element.select(".book-author > a").text()\n                val infos = element.select(".book-meta").text().split("|")\n                val status = infos[0].trim()\n                val artist = infos[1].trim()\n                val intro = infos[2].trim()\n                if (!bookUrl.startsWith("https://forum.librivox.org")) {\n                    list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                        this.intro = intro\n                        this.status = status\n                        this.sourceId = getSourceId()\n                    })\n                }\n            } catch (e: Exception) {\n                e.printStackTrace()\n            }\n        }\n\n        return Pair(list, totalPage)\n    }\n\n    override fun getBookDetailInfo(bookUrl: String, loadEpisodes: Boolean, loadFullPages: Boolean): BookDetail {\n        val doc = Jsoup.connect(bookUrl).config(true).get()\n\n        val episodes = doc.select(".chapter-download > tbody > tr > td > .chapter-name").map {\n            Episode(it.text(), it.absUrl("href"))\n        }\n        val intro = doc.selectFirst(".description")?.text()\n        return BookDetail(episodes, intro)\n    }\n\n    override fun getAudioUrlExtractor(): AudioUrlExtractor {\n        return AudioUrlDirectExtractor\n    }\n\n    override fun getCategoryMenus(): List<CategoryMenu> {\n        val menu1 = CategoryMenu(\n            "Children", listOf(\n                CategoryTab("Children\'s Fiction", "https://librivox.org/search/get_results?primary_key=1&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Action & Adventure", "https://librivox.org/search/get_results?primary_key=37&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Animals & Nature", "https://librivox.org/search/get_results?primary_key=38&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Myths, Legends & Fairy Tales", "https://librivox.org/search/get_results?primary_key=39&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Family", "https://librivox.org/search/get_results?primary_key=40&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("General", "https://librivox.org/search/get_results?primary_key=41&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Historical", "https://librivox.org/search/get_results?primary_key=42&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Poetry", "https://librivox.org/search/get_results?primary_key=43&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Religion", "https://librivox.org/search/get_results?primary_key=44&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("School", "https://librivox.org/search/get_results?primary_key=45&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Short works", "https://librivox.org/search/get_results?primary_key=46&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Non-fiction", "https://librivox.org/search/get_results?primary_key=2&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Non-fiction > Arts", "https://librivox.org/search/get_results?primary_key=47&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Non-fiction > General", "https://librivox.org/search/get_results?primary_key=48&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Non-fiction > Reference", "https://librivox.org/search/get_results?primary_key=49&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Non-fiction > Religion", "https://librivox.org/search/get_results?primary_key=50&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Non-fiction > Science", "https://librivox.org/search/get_results?primary_key=51&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either")\n            )\n        )\n        val menu2 = CategoryMenu(\n            "Fantastic", listOf(\n                CategoryTab("Fantastic Fiction", "https://librivox.org/search/get_results?primary_key=13&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Myths, Legends & Fairy Tales", "https://librivox.org/search/get_results?primary_key=11&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Horror & Supernatural Fiction", "https://librivox.org/search/get_results?primary_key=16&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Gothic Fiction", "https://librivox.org/search/get_results?primary_key=17&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Science Fiction", "https://librivox.org/search/get_results?primary_key=30&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Fantasy Fiction", "https://librivox.org/search/get_results?primary_key=55&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either")\n            )\n        )\n        val menu3 = CategoryMenu(\n            "Fiction", listOf(\n                CategoryTab("General Fiction", "https://librivox.org/search/get_results?primary_key=15&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("General Fiction > Published before 1800", "https://librivox.org/search/get_results?primary_key=52&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("General Fiction > Published 1800-1900", "https://librivox.org/search/get_results?primary_key=53&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("General Fiction > Published 1900 onward", "https://librivox.org/search/get_results?primary_key=54&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Historical Fiction", "https://librivox.org/search/get_results?primary_key=18&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Humorous Fiction", "https://librivox.org/search/get_results?primary_key=19&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Literary Fiction", "https://librivox.org/search/get_results?primary_key=20&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Nature & Animal Fiction", "https://librivox.org/search/get_results?primary_key=21&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Nautical & Marine Fiction", "https://librivox.org/search/get_results?primary_key=23&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either")\n            )\n        )\n        val menu4 = CategoryMenu(\n            "Nonfiction", listOf(\n                CategoryTab("Non-fiction", "https://librivox.org/search/get_results?primary_key=36&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("War & Military", "https://librivox.org/search/get_results?primary_key=73&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Animals", "https://librivox.org/search/get_results?primary_key=77&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Art, Design & Architecture", "https://librivox.org/search/get_results?primary_key=78&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Bibles", "https://librivox.org/search/get_results?primary_key=79&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Biography & Autobiography", "https://librivox.org/search/get_results?primary_key=80&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Biography & Autobiography > Memoirs", "https://librivox.org/search/get_results?primary_key=111&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Business & Economics", "https://librivox.org/search/get_results?primary_key=81&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Education", "https://librivox.org/search/get_results?primary_key=83&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Essays & Short Works", "https://librivox.org/search/get_results?primary_key=84&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("History", "https://librivox.org/search/get_results?primary_key=87&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("History > Antiquity", "https://librivox.org/search/get_results?primary_key=113&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("History > Middle Ages/Middle History", "https://librivox.org/search/get_results?primary_key=114&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("History > Early Modern", "https://librivox.org/search/get_results?primary_key=115&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("History > Modern (19th C)", "https://librivox.org/search/get_results?primary_key=116&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Modern (20th C)", "https://librivox.org/search/get_results?primary_key=117&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Nature", "https://librivox.org/search/get_results?primary_key=96&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Philosophy", "https://librivox.org/search/get_results?primary_key=98&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Political Science", "https://librivox.org/search/get_results?primary_key=99&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Psychology", "https://librivox.org/search/get_results?primary_key=100&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Religion", "https://librivox.org/search/get_results?primary_key=102&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Science", "https://librivox.org/search/get_results?primary_key=103&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Self-Help", "https://librivox.org/search/get_results?primary_key=104&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Social Science (Culture & Anthropology)", "https://librivox.org/search/get_results?primary_key=105&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Travel & Geography", "https://librivox.org/search/get_results?primary_key=108&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either")\n            )\n        )\n        val menu5 = CategoryMenu(\n            "Others", listOf(\n                CategoryTab("Action & Adventure Fiction", "https://librivox.org/search/get_results?primary_key=3&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Crime & Mystery Fiction", "https://librivox.org/search/get_results?primary_key=5&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Crime & Mystery Fiction > Detective Fiction", "https://librivox.org/search/get_results?primary_key=22&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Plays", "https://librivox.org/search/get_results?primary_key=24&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Poetry", "https://librivox.org/search/get_results?primary_key=25&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Romance", "https://librivox.org/search/get_results?primary_key=27&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Satire", "https://librivox.org/search/get_results?primary_key=29&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Short Stories", "https://librivox.org/search/get_results?primary_key=31&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Short Stories > Anthologies", "https://librivox.org/search/get_results?primary_key=75&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Short Stories > Single Author Collections", "https://librivox.org/search/get_results?primary_key=76&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("War & Military Fiction", "https://librivox.org/search/get_results?primary_key=34&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either"),\n                CategoryTab("Westerns", "https://librivox.org/search/get_results?primary_key=35&search_category=genre&sub_category=&search_page=1&search_order=catalog_date&project_type=either")\n            )\n        )\n        return listOf(menu1, menu2, menu3, menu4, menu5)\n    }\n\n    override fun getCategoryList(url: String): Category {\n        val result = Fuel.get(url)\n            .header("X-Requested-With" to "XMLHttpRequest")\n            .responseJson()\n        val jsonObject = result.third.get().obj()\n        val currentPage = jsonObject.getJSONObject("input").getInt("search_page")\n        val pagination = Jsoup.parse(jsonObject.getString("pagination"))\n        val totalPage = pagination.selectFirst(".last").attr("data-page_number").toInt()\n        val queryMap = splitQuery(URL(url))\n        queryMap["search_page"] = (currentPage + 1).toString()\n        val nextUrl = "https://librivox.org/search/get_results?" + queryMap.map { "${it.key}=${it.value}" }.joinToString("&")\n\n        val doc = Jsoup.parse(jsonObject.getString("results"))\n\n        val list = ArrayList<Book>()\n        val elementList = doc.select(".catalog-result")\n        elementList.forEach { element ->\n            val coverUrl = element.selectFirst(".book-cover > img").absUrl("src")\n            val bookUrl = element.selectFirst(".result-data > h3 > a").absUrl("href")\n            val title = element.selectFirst(".result-data > h3 > a").text()\n            val author = element.select(".book-author > a").text()\n            val infos = element.select(".book-meta").text().split("|")\n            val status = infos[0].trim()\n            val artist = infos[1].trim()\n            val intro = infos[2].trim()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.intro = intro\n                this.status = status\n                this.sourceId = getSourceId()\n            })\n        }\n        return Category(list, currentPage, totalPage, url, nextUrl)\n    }\n}'