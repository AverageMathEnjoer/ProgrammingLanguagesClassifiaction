b'#\' Query and set summarytools global options\n#\'\n#\' To list all \\code{summarytools} global options, call without arguments. To\n#\' display the value of one or several options, enter the name(s) of the\n#\' option(s) in a character vector as sole argument. To \\strong{reset} all \n#\' options, use single unnamed argument \\sQuote{reset} or \\code{0}.\n#\'\n#\' @param option option(s) name(s) to query (optional). Can be a single string\n#\'   or a vector of strings to query multiple values.\n#\' @param value The value you wish to assign to the option specified in the\n#\'   first argument. This is for backward-compatibility, as all options can now \n#\'   be set via their own parameter. That is, instead of \n#\'   \\code{st_options(\'plain.ascii\', FALSE))}, use\n#\'   \\code{st_options(plain.ascii = FALSE)}.\n#\' @param style Character. One of \\dQuote{simple} (default), \\dQuote{rmarkdown},\n#\'   or \\dQuote{grid}. Does not apply to \\code{\\link{dfSummary}}.\n#\' @param plain.ascii Logical. \\code{\\link[pander]{pander}} argument; when\n#\'   \\code{TRUE}, no markup characters will be used (useful when printing to\n#\'   console). \\code{TRUE} by default, but when \\code{style = \'rmarkdown\'},\n#\'   it is automatically set to \\code{FALSE}. To override this behavior,\n#\'   \\code{plain.ascii = TRUE} must be specified in the function call.\n#\' @param round.digits Numeric. Defaults to \\code{2}.\n#\' @param headings Logical. Set to \\code{FALSE} to remove all headings from\n#\'   outputs. Only the tables will be printed out, except when \\code{\\link{by}}\n#\'   or \\code{\\link{lapply}} are used. In that case, the variable or the group\n#\'   will still appear before each table. \\code{TRUE} by default.\n#\' @param footnote Character. When the default value \\dQuote{default} is used,\n#\'   the package name & version, as well as the R version number are displayed\n#\'   below \\emph{html} outputs. Set no \\code{NA} to omit the footnote, or \n#\'   provide a custom string. Applies only to \\emph{html} outputs.\n#\' @param display.labels Logical. \\code{TRUE} by default. Set to \\code{FALSE} to\n#\'   omit data frame and variable labels in the headings section.\n#\' @param bootstrap.css Logical. Specifies whether to include \n#\'   \\emph{Bootstrap css} in \\emph{html} reports\' \\emph{head} section.\n#\'   Defaults to \\code{TRUE}. Set to \\code{FALSE} when using the \\dQuote{render}\n#\'   method inside a \\code{shiny} app to avoid interacting with the app\'s \n#\'   layout.\n#\' @param custom.css Character. Path to an additional, user-provided, CSS file.\n#\'   \\code{NA} by default.\n#\' @param escape.pipe Logical. Set to \\code{TRUE} if Pandoc conversion is your\n#\'   goal and you have unsatisfying results with grid or multiline tables.\n#\'   \\code{FALSE} by default.\n#\' @param char.split Numeric. Maximum number of characters allowed in a column\n#\'   heading for \\code{\\link{descr}} and \\code{\\link{ctable}} \\emph{html} \n#\'   outputs. Any variable name having more than this number of characters\n#\'   will be split on two or more lines. Defaults to 12.\n#\' @param freq.cumul Logical. Corresponds to the \\code{cumul} parameter of\n#\'   \\code{\\link{freq}}. \\code{TRUE} by default.\n#\' @param freq.totals Logical. Corresponds to the \\code{totals} parameter of\n#\'   \\code{\\link{freq}}. \\code{TRUE} by default.\n#\' @param freq.report.nas Logical. Corresponds to the \\code{display.nas}\n#\'   parameter of \\code{\\link{freq}}. \\code{TRUE} by default.\n#\' @param freq.ignore.threshold Numeric. Number of distinct values above which\n#\'   numerical variables are ignored when calling \\code{\\link{freq}} with a\n#\'   whole data frame as main argument. Defaults to \\code{25}.\n#\' @param freq.silent Logical. Hide console messages. \\code{FALSE} by default.\n#\' @param ctable.prop Character. Corresponds to the \\code{prop} parameter of\n#\'   \\code{\\link{ctable}}. Defaults to \\dQuote{r} (\\emph{r}ow).\n#\' @param ctable.totals Logical. Corresponds to the \\code{totals} parameter of\n#\'   \\code{\\link{ctable}}. \\code{TRUE} by default.\n#\' @param ctable.round.digits Numeric. Defaults to \\code{1}.\n#\' @param descr.stats Character. Corresponds to the \\code{stats} parameter of\n#\'   \\code{\\link{descr}}. Defaults to \\dQuote{all}.\n#\' @param descr.transpose Logical. Corresponds to the \\code{transpose} parameter\n#\'   of \\code{\\link{descr}}. \\code{FALSE} by default.\n#\' @param descr.silent Logical. Hide console messages. \\code{FALSE} by default.\n#\' @param dfSummary.style Character. \\dQuote{multiline} by default. Set to \n#\'   \\dQuote{grid} for \\emph{R Markdown} documents.\n#\' @param dfSummary.varnumbers Logical. In \\code{\\link{dfSummary}}, display\n#\'   variable numbers in the first column. Defaults to \\code{TRUE}.\n#\' @param dfSummary.labels.col Logical. In \\code{\\link{dfSummary}}, display\n#\'   variable labels Defaults to \\code{TRUE}.\n#\' @param dfSummary.valid.col Logical. In \\code{\\link{dfSummary}}, include\n#\'   column indicating count and proportion of valid (non-missing). \\code{TRUE}\n#\'   by default.\n#\' @param dfSummary.na.col Logical. In \\code{\\link{dfSummary}}, include column\n#\'   indicating count and proportion of missing (NA) values. \\code{TRUE} by\n#\'   default.\n#\' @param dfSummary.graph.col Logical. Display barplots / histograms column in\n#\'   \\code{\\link{dfSummary}} \\emph{html} reports. \\code{TRUE} by default.\n#\' @param dfSummary.graph.magnif Numeric. Magnification factor, useful if\n#\'   \\code{\\link{dfSummary}} graphs show up too large (then use a value between\n#\'   0 and 1) or too small (use a value > 1). Must be positive. Default to\n#\'   \\code{1}.\n#\' @param dfSummary.silent Logical. Hide console messages. \\code{FALSE} by \n#\'   default.\n#\' @param dfSummary.custom.1 Expression. First of two optional expressions\n#\'   which once evaluated will populate lines 3+ of the `Stats / Values` \n#\'   cell when column data is numerical and has more distinct values than \n#\'   allowed by the \\code{max.distinct.values} parameter. By default, it\n#\'   contains the expression which generates the `IQR (CV) : ...` line. To reset it back to\n#\'   this default value, use \\code{st_options(dfSummary.custom.1 = "default")}.\n#\'   See \\emph{Details} and \\emph{Examples} sections for more.\n#\' @param dfSummary.custom.2 Expression. Second the two optional expressions\n#\'   which once evaluated will populate lines 3+ of the `Stats / Values` \n#\'   cell when the column data is numerical and has more distinct values than \n#\'   allowed by the `max.distinct.values` parameter. \\code{NA} by default.\n#\'   See \\emph{Details} and \\emph{Examples} sections for more.\n#\' @param tmp.img.dir Character. Directory used to store temporary images. See\n#\'   \\emph{Details} section of \\code{\\link{dfSummary}}. \\code{NA} by default.\n#\' @param subtitle.emphasis Logical. Controls the formatting of the \n#\'  \\dQuote{subtitle} (the \\emph{data frame} or \\emph{variable} name, depending \n#\'  on context. When \\code{TRUE} (default), \\dQuote{h4} is used, while with\n#\'  \\code{FALSE}, \\dQuote{bold} / \\dQuote{strong} is used. Hence the default\n#\'  value gives it stronger emphasis.\n#\' @param lang Character. A 2-letter code for the language to use in the\n#\'   produced outputs. Currently available languages are: \\sQuote{en}, \n#\'   \\sQuote{es}, \\sQuote{fr}, \\sQuote{pt}, \\sQuote{ru}, and \\sQuote{tr}.\n#\' @param use.x11 Logical. TRUE by default. In console-only environments,\n#\'   setting this to \\code{FALSE} will prevent errors occurring when\n#\'   \\code{\\link{dfSummary}}  tries to generate \\emph{html} \n#\'   \\dQuote{Base64-encoded} graphs.\n#\' \n#\' @details The \\code{dfSummary.custom.1} and \\code{dfSummary.custom.2} options\n#\'   must be defined as expressions. In the expression, use the\n#\'   \\code{culumn_data} variable name to refer to data. Assume the type to be\n#\'   numerical (real or integer). The expression must paste together both the\n#\'   labels (short name for the statistic(s) being displayed) and the \n#\'   statistics themselves. Although \\code{\\link[base]{round}} can be used, a\n#\'   better alternative is to call the internal \\code{\\link{format_number}},\n#\'   which uses \\code{\\link[base]{format}} to apply all relevant formatting\n#\'   that is active within the call to \\code{\\link{dfSummary}}. For keywords\n#\'   having a translated term, the \\code{trs()} internal function can be\n#\'   used (see \\emph{Examples}). \n#\'   \n#\' @examples\n#\' \n#\' # show all summarytools global options\n#\' st_options()\n#\' \n#\' # show a specific option\n#\' st_options("round.digits")\n#\' \n#\' # show two (or more) options\n#\' st_options(c("plain.ascii", "style", "footnote"))\n#\' \n#\' \\dontrun{\n#\' # set one option\n#\' st_options(plain.ascii = FALSE)\n#\' \n#\' # set one options, legacy way\n#\' st_options("plain.ascii", FALSE)\n#\' \n#\' # set several options\n#\' st_options(plain.ascii = FALSE,\n#\'            style       = "rmarkdown",\n#\'            footnote    = NA)\n#\'\n#\' # reset all\n#\' st_options(\'reset\')\n#\' # ... or\n#\' st_options(0)\n#\' \n#\' # Define custom dfSummary stats\n#\' st_options(dfSummary.custom.1 = expression(\n#\'   paste(\n#\'     "Q1 - Q3 :",\n#\'     format_number(\n#\'       quantile(column_data, probs = .25, type = 2, \n#\'                names = FALSE, na.rm = TRUE), round.digits\n#\'     ),\n#\'     "-",\n#\'     format_number(\n#\'       quantile(column_data, probs = .75, type = 2, \n#\'                names = FALSE, na.rm = TRUE), round.digits\n#\'     ),\n#\'     collapse = ""\n#\'   )\n#\' ))\n#\' \n#\' dfSummary(iris)\n#\' \n#\' # Set back to default value\n#\' st_options(dfSummary.custom.1 = "default")\n#\' }\n#\'  \n#\' @note \n#\' To learn more about summarytools options, see\n#\' \\code{vignette("introduction", "summarytools")}.\n#\' \n#\' @keywords utilities\n#\' \n#\' \n#\' @export\nst_options <- function(option                 = NULL,\n                       value                  = NULL,\n                       style                  = "simple",\n                       plain.ascii            = TRUE,\n                       round.digits           = 2,\n                       headings               = TRUE,\n                       footnote               = "default",\n                       display.labels         = TRUE,\n                       bootstrap.css          = TRUE,\n                       custom.css             = NA_character_,\n                       escape.pipe            = FALSE,\n                       char.split             = 12,\n                       freq.cumul             = TRUE,\n                       freq.totals            = TRUE,\n                       freq.report.nas        = TRUE,\n                       freq.ignore.threshold  = 25,\n                       freq.silent            = FALSE,\n                       ctable.prop            = "r",\n                       ctable.totals          = TRUE,\n                       ctable.round.digits    = 1,\n                       descr.stats            = "all",\n                       descr.transpose        = FALSE,\n                       descr.silent           = FALSE,\n                       dfSummary.style        = "multiline",\n                       dfSummary.varnumbers   = TRUE,\n                       dfSummary.labels.col   = TRUE,\n                       dfSummary.valid.col    = TRUE,\n                       dfSummary.na.col       = TRUE,\n                       dfSummary.graph.col    = TRUE,\n                       dfSummary.graph.magnif = 1,\n                       dfSummary.silent       = FALSE,\n                       dfSummary.custom.1     = \n                         expression(\n                           paste(\n                             paste0(\n                               trs("iqr"), " (", trs("cv"), ") : "\n                             ),\n                             format_number(\n                               IQR(column_data, na.rm = TRUE), round.digits\n                             ),\n                             " (",\n                             format_number(\n                               sd(column_data, na.rm = TRUE) /\n                                 mean(column_data, na.rm = TRUE), round.digits\n                             ),\n                             ")",\n                             collapse = "", sep = ""\n                           )\n                         ),\n                       dfSummary.custom.2     = NA,\n                       tmp.img.dir            = NA_character_,\n                       subtitle.emphasis      = TRUE,\n                       lang                   = "en",\n                       use.x11                = TRUE) {\n  \n  allOpts <- getOption("summarytools")\n  \n  # Validate arguments\n  mc <- match.call()\n  errmsg <- check_args_st_options(mc = mc)\n  \n  if (length(errmsg) > 0) {\n    stop(paste(errmsg, collapse = "\\n  "), "\\n No options have been modified")\n  }\n\n  # Querying all\n  if (is.null(names(mc))) {\n    return(allOpts)\n  }\n  \n  # Querying one or several\n  if (length(mc) == 2 && "option" %in% names(mc) && \n      !identical(option, "reset") && !identical(option, 0)\n      && !identical(option, 0L)) {\n    # Check that option is among the existing ones\n    for (o in option) {\n      if (!o %in% c(names(allOpts), 0)) {\n        stop("Option ", o, " not recognized / not available")\n      }\n    }\n    \n    if (length(option) == 1) {\n      return(allOpts[[option]])\n    } else {\n      return(allOpts[option])\n    }\n  }\n\n  if (isTRUE(option == "reset" || option == 0)) {\n    if (length(mc) > 2) {\n      stop("Cannot reset options and set them at the same time")\n    }\n    \n    options("summarytools" = \n              list("style"                  = "simple",\n                   "plain.ascii"            = TRUE,\n                   "round.digits"           = 2,\n                   "headings"               = TRUE,\n                   "footnote"               = "default",\n                   "display.labels"         = TRUE,\n                   "bootstrap.css"          = TRUE,\n                   "custom.css"             = NA_character_,\n                   "escape.pipe"            = FALSE,\n                   "char.split"             = 12,\n                   "freq.cumul"             = TRUE,\n                   "freq.totals"            = TRUE,\n                   "freq.report.nas"        = TRUE,\n                   "freq.ignore.threshold"  = 25,\n                   "freq.silent"            = FALSE,\n                   "ctable.prop"            = "r",\n                   "ctable.totals"          = TRUE,\n                   "ctable.round.digits"    = 1,\n                   "descr.stats"            = "all",\n                   "descr.transpose"        = FALSE,\n                   "descr.silent"           = FALSE,\n                   "dfSummary.style"        = "multiline",\n                   "dfSummary.varnumbers"   = TRUE,\n                   "dfSummary.labels.col"   = TRUE,\n                   "dfSummary.graph.col"    = TRUE,\n                   "dfSummary.valid.col"    = TRUE,\n                   "dfSummary.na.col"       = TRUE,\n                   "dfSummary.graph.magnif" = 1,\n                   "dfSummary.silent"       = FALSE,\n                   "dfSummary.custom.1"     = \n                     expression(\n                       paste(\n                         paste0(\n                           trs("iqr"), " (", trs("cv"), ") : "\n                         ),\n                         format_number(\n                           IQR(column_data, na.rm = TRUE), round.digits\n                         ),\n                         " (",\n                         format_number(\n                           sd(column_data, na.rm = TRUE) /\n                             mean(column_data, na.rm = TRUE), round.digits\n                         ),\n                         ")",\n                         collapse = "", sep = ""\n                       )\n                     ),\n                   "dfSummary.custom.2"     = NA,\n                   "tmp.img.dir"            = NA_character_,\n                   "subtitle.emphasis"      = TRUE,\n                   "lang"                   = "en",\n                   "use.x11"                = TRUE))\n    \n    message("summarytools options have been reset")\n    return(invisible())\n  }\n\n  # Legacy way of setting of options\n  if (length(names(mc)) == 3 && \n      identical(sort(names(mc)), c("", "option", "value"))) {\n    if (length(option) > 1) {\n      stop("Cannot set more than one option at a time in the legacy way; ",\n           "Use separate arguments for each option instead")\n    }\n    if (!option %in% names(allOpts)) {\n      stop("Option ", option, "not recognized / not available")\n    } else {\n      allOpts[[option]] <- value\n    }\n    options("summarytools" = allOpts)\n    return(invisible())\n  }\n  \n  # Regular way of setting options    \n  for (o in setdiff(names(mc), c("", "option", "value",\n                                 "dfSummary.custom.1", "dfSummary.custom.2"))) {\n    allOpts[[o]] <- get(o)\n  }\n  \n  if ("dfSummary.custom.1" %in% names(mc)) {\n    val <- get("dfSummary.custom.1")\n    if (is.expression(val) || is.na(val)) {\n      allOpts[["dfSummary.custom.1"]] <- val\n    } else if (val %in% c("default", "reset")) {\n      allOpts[["dfSummary.custom.1"]] <-\n        expression(\n          paste(\n            paste0(\n              trs("iqr"), " (", trs("cv"), ") : "\n            ),\n            format_number(\n              IQR(column_data, na.rm = TRUE), round.digits\n            ),\n            " (",\n            format_number(\n              sd(column_data, na.rm = TRUE) /\n                mean(column_data, na.rm = TRUE), round.digits\n            ),\n            ")",\n            collapse = "", sep = ""\n          )\n        )\n    }\n  }\n    \n  if ("dfSummary.custom.2" %in% names(mc)) {\n    val <- get("dfSummary.custom.2")\n    if (is.expression(val) || is.na(val)) {\n      allOpts[["dfSummary.custom.2"]] <- val\n    }\n  }\n  \n  options("summarytools" = allOpts)\n  \n  return(invisible())\n}\n'