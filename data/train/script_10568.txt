b'package com.droidcba.kedditbysteps\n\nimport kotlinx.coroutines.experimental.CancellableContinuation\nimport kotlinx.coroutines.experimental.CoroutineDispatcher\nimport kotlinx.coroutines.experimental.Delay\nimport java.util.concurrent.TimeUnit\nimport kotlin.coroutines.experimental.CoroutineContext\n\n/**\n * I found this useful implementation in the JetBrain Forum:\n * https://discuss.kotlinlang.org/t/unit-testing-coroutines/6453/5\n */\nclass TestDirectContext : CoroutineDispatcher(), Delay {\n    override fun scheduleResumeAfterDelay(time: Long, unit: TimeUnit, continuation: CancellableContinuation<Unit>) {\n        continuation.resume(Unit)\n    }\n\n    override fun dispatch(context: CoroutineContext, block: Runnable) {\n        block.run()\n    }\n}'