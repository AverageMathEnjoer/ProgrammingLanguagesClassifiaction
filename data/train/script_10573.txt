b"-- |\n-- Copyright  : (c) Ivan Perez, 2017\n-- License    : BSD3\n-- Maintainer : ivan.perez@keera.co.uk\n--\n-- Debug FRP networks by inspecting their behaviour inside.\nmodule FRP.Dunai.Debug where\n\n-- External imports\nimport Data.MonadicStreamFunction hiding (trace)\nimport Debug.Trace                (trace)\n\n-- ** Debugging\n\n-- | Monadic Stream Function that prints the value passing through using\n-- 'trace'.\ntraceMSF :: Monad m\n         => Show a\n         => MSF m a a\ntraceMSF = traceMSFWith show\n\n-- | Monadic Stream Function that prints the value passing through using\n-- 'trace', and a customizable 'show' function.\ntraceMSFWith :: Monad m\n             => (a -> String)\n             -> MSF m a a\ntraceMSFWith f = arr (\\x -> trace (f x) x)\n\n-- | Execute an IO action at every step, and ignore the result.\ntraceMSFWithIO :: (a -> IO b)\n               -> MSF IO a a\ntraceMSFWithIO f = arrM (\\x -> f x >> return x)\n"