b'/*Copyright \xc2\xa9  2017 Lyons. All rights reserved. */\npackage lyons.common.utils;\n\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.apache.shiro.SecurityUtils;\nimport org.apache.shiro.web.util.SavedRequest;\nimport org.apache.shiro.web.util.WebUtils;\n\nimport lyons.common.exception.user.NullValueException;\nimport lyons.common.exception.user.RepeatException;\nimport lyons.common.exception.user.UserException;\nimport lyons.common.model.user.UUser;\nimport lyons.common.utils.enums.AccountStaEnum;\n\n/**\n * @Description: \xe8\x8e\xb7\xe5\x8f\x96ip\xe5\x9c\xb0\xe5\x9d\x80\n * @ClassName: GetAccessIp\n * @author: lyons<zhanglei>\n * @date: 2017\xe5\xb9\xb41\xe6\x9c\x8817\xe6\x97\xa5 \xe4\xb8\x8b\xe5\x8d\x883:53:29\n * @version: [1.0]\n */\npublic class VisitorUtil\n{\n    \n    public static String getIp4()\n    {\n//        Inet4Address ip4 = Inet4Address.\n        return "";\n    }\n    \n    /**\n     * \n     * @Title: getSaveURL\n     * @Description: \xe8\x8e\xb7\xe5\x8f\x96\xe7\x99\xbb\xe5\xbd\x95\xe4\xb9\x8b\xe5\x89\x8d\xe7\x9a\x84URL,\xe5\xa6\x82\xe6\x9e\x9c\xe6\xb2\xa1\xe6\x9c\x89\xe8\xbf\x94\xe5\x9b\x9e /index \n     * @param request\n     * @return: String(URL)\n     */\n    public static String getSaveURL(HttpServletRequest request)\n    {\n        SavedRequest  savedRequest = WebUtils.getSavedRequest(request);\n        \n        return savedRequest == null ? "/index" : savedRequest.getRequestUrl();\n        \n    }\n    \n    /**\n     * @param uuser \n     * @Title: isSecurity\n     * @Description: \xe6\x98\xaf\xe5\x90\xa6\xe5\xae\x89\xe5\x85\xa8\n     * @return: boolean\n     */\n    public static boolean isSecurity(UUser uuser) throws UserException\n    {\n        String security = securityCheck(uuser);\n        if (security != null)\n        {\n            throw new NullValueException(security);\n        }\n        return true;\n    } \n    \n    /**\n     * @Title: securityCheck\n     * @Description: \xe5\xb8\xb8\xe8\xa7\x84\xe5\xae\x89\xe5\x85\xa8\xe6\xa3\x80\xe6\x9f\xa5\n     * @param uuser\n     * @return: String\n     */\n    public static String securityCheck(UUser uuser) throws RepeatException\n    {\n        if (StringUtils.isBlank(uuser.getuName()))\n        {\n            return AccountStaEnum.nameNull.getInfo();\n        }\n        if (StringUtils.isBlank(uuser.getuPassword()))\n        {\n            return AccountStaEnum.pswdNull.getInfo();\n        }\n\n        /*\n         * \xe9\x87\x8d\xe5\xa4\x8d\xe7\x99\xbb\xe5\xbd\x95\xe6\xa3\x80\xe6\x9f\xa5\n         *  1.\xe4\xbb\x8e realm \xe8\x8e\xb7\xe5\x8f\x96 \xe5\xbd\x93\xe5\x89\x8d\xe7\x94\xa8\xe6\x88\xb7\xe8\xba\xab\xe4\xbb\xbd\n         *  2.\xe5\xbc\xba\xe5\x88\xb6\xe7\xb1\xbb\xe5\x9e\x8b\xe8\xbd\xac\xe6\x8d\xa2\xe5\x90\x8e\xe8\x8e\xb7\xe5\x8f\x96\xe5\xb1\x9e\xe6\x80\xa7\xe5\x80\xbc\n         */\n        if (isLogin())\n        {\n            throw new RepeatException(((UUser)SecurityUtils.getSubject().getPrincipal()).getuName()\n                +AccountStaEnum.repeat.getInfo());\n        }\n        \n        return null;\n    }\n    \n\n    /**\n     * \n     * @Title: isLogin\n     * @Description: \xe6\x98\xaf\xe5\x90\xa6\xe5\xb7\xb2\xe7\x99\xbb\xe5\xbd\x95\n     * @return: boolean\n     */\n    public static boolean isLogin()\n    {\n       return  SecurityUtils.getSubject().isAuthenticated();\n    }\n    \n    \n    /* \n     * \xe8\x8e\xb7\xe5\x8f\x96\xe7\x94\xa8\xe6\x88\xb7\xe7\x9c\x9f\xe5\xae\x9eIP\xe5\x9c\xb0\xe5\x9d\x80\xef\xbc\x8c\xe4\xb8\x8d\xe4\xbd\xbf\xe7\x94\xa8request.getRemoteAddr();\xe7\x9a\x84\xe5\x8e\x9f\xe5\x9b\xa0\xe6\x98\xaf\xe6\x9c\x89\xe5\x8f\xaf\xe8\x83\xbd\xe7\x94\xa8\xe6\x88\xb7\xe4\xbd\xbf\xe7\x94\xa8\xe4\xba\x86\xe4\xbb\xa3\xe7\x90\x86\xe8\xbd\xaf\xe4\xbb\xb6\xe6\x96\xb9\xe5\xbc\x8f\xe9\x81\xbf\xe5\x85\x8d\xe7\x9c\x9f\xe5\xae\x9eIP\xe5\x9c\xb0\xe5\x9d\x80, \n     * \xe5\x8f\x82\xe8\x80\x83\xe6\x96\x87\xe7\xab\xa0\xef\xbc\x9a http://developer.51cto.com/art/201111/305181.htm \n     *  \n     * \xe5\x8f\xaf\xe6\x98\xaf\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe9\x80\x9a\xe8\xbf\x87\xe4\xba\x86\xe5\xa4\x9a\xe7\xba\xa7\xe5\x8f\x8d\xe5\x90\x91\xe4\xbb\xa3\xe7\x90\x86\xe7\x9a\x84\xe8\xaf\x9d\xef\xbc\x8cX-Forwarded-For\xe7\x9a\x84\xe5\x80\xbc\xe5\xb9\xb6\xe4\xb8\x8d\xe6\xad\xa2\xe4\xb8\x80\xe4\xb8\xaa\xef\xbc\x8c\xe8\x80\x8c\xe6\x98\xaf\xe4\xb8\x80\xe4\xb8\xb2IP\xe5\x80\xbc\xef\xbc\x8c\xe7\xa9\xb6\xe7\xab\x9f\xe5\x93\xaa\xe4\xb8\xaa\xe6\x89\x8d\xe6\x98\xaf\xe7\x9c\x9f\xe6\xad\xa3\xe7\x9a\x84\xe7\x94\xa8\xe6\x88\xb7\xe7\xab\xaf\xe7\x9a\x84\xe7\x9c\x9f\xe5\xae\x9eIP\xe5\x91\xa2\xef\xbc\x9f \n     * \xe7\xad\x94\xe6\xa1\x88\xe6\x98\xaf\xe5\x8f\x96X-Forwarded-For\xe4\xb8\xad\xe7\xac\xac\xe4\xb8\x80\xe4\xb8\xaa\xe9\x9d\x9eunknown\xe7\x9a\x84\xe6\x9c\x89\xe6\x95\x88IP\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\xe3\x80\x82 \n     *  \n     * \xe5\xa6\x82\xef\xbc\x9aX-Forwarded-For\xef\xbc\x9a192.168.1.110, 192.168.1.120, 192.168.1.130, \n     * 192.168.1.100 \n     *  \n     * \xe7\x94\xa8\xe6\x88\xb7\xe7\x9c\x9f\xe5\xae\x9eIP\xe4\xb8\xba\xef\xbc\x9a 192.168.1.110 \n     *  \n     * @param request \n     * @return \n     */  \n    public static String getIpAddress(HttpServletRequest request) {  \n        \n        String ip = request.getHeader("x-forwarded-for"); \n        \n        if (StringUtils.isBlank(ip) && "unknown".equalsIgnoreCase(ip)) {  \n            ip = request.getHeader("Proxy-Client-IP");  \n            ip = request.getHeader("WL-Proxy-Client-IP");  \n            ip = request.getHeader("HTTP_CLIENT_IP");  \n            ip = request.getHeader("HTTP_X_FORWARDED_FOR");  \n            ip = request.getRemoteAddr();  \n        }  \n        \n        return ip;  \n    }\n    \n}\n'