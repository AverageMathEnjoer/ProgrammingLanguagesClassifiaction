b'package com.db.williamchart.renderer.executor\n\nimport com.db.williamchart.data.AxisType\nimport org.junit.Assert\nimport org.junit.Test\n\nclass MeasureHorizontalBarChartPaddingsTest {\n\n    private val measureHorizontalBarChartPaddings by lazy {\n        MeasureHorizontalBarChartPaddings()\n    }\n\n    @Test\n    fun `no paddings when no axis is displayed at all`() {\n        // Act\n        val paddings = measureHorizontalBarChartPaddings.invoke(\n            axisType = AxisType.NONE,\n            labelsHeight = 1f,\n            xLastLabelWidth = 1f,\n            yLongestLabelWidth = 1f,\n            labelsPaddingToInnerChart = 1f\n        )\n\n        // Assert\n        Assert.assertEquals(0f, paddings.left)\n        Assert.assertEquals(0f, paddings.top)\n        Assert.assertEquals(0f, paddings.right)\n        Assert.assertEquals(0f, paddings.bottom)\n    }\n\n    @Test\n    fun `paddings take into account label height`() {\n        // Arrange\n        val labelsHeight = 999f\n\n        // Act\n        val paddings = measureHorizontalBarChartPaddings.invoke(\n            axisType = AxisType.XY,\n            labelsHeight = labelsHeight,\n            xLastLabelWidth = 0f,\n            yLongestLabelWidth = 0f,\n            labelsPaddingToInnerChart = 0f\n        )\n\n        // Assert\n        Assert.assertEquals(0f, paddings.left)\n        Assert.assertEquals(0f, paddings.top)\n        Assert.assertEquals(0f, paddings.right)\n        Assert.assertEquals(labelsHeight, paddings.bottom)\n    }\n\n    @Test\n    fun `consider last label width placed at the end of the scale`() {\n        // Arrange\n        val xLastLabelWidth = 999f\n        val xLastLabelHalfWidth = xLastLabelWidth / 2\n\n        // Act\n        val paddings = measureHorizontalBarChartPaddings.invoke(\n            axisType = AxisType.XY,\n            labelsHeight = 0f,\n            xLastLabelWidth = xLastLabelWidth,\n            yLongestLabelWidth = 0f,\n            labelsPaddingToInnerChart = 0f\n\n        )\n\n        // Assert\n        Assert.assertEquals(0f, paddings.left)\n        Assert.assertEquals(0f, paddings.top)\n        Assert.assertEquals(xLastLabelHalfWidth, paddings.right)\n        Assert.assertEquals(0f, paddings.bottom)\n    }\n}\n'