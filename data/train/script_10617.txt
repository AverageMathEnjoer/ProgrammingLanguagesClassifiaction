b"{-# LANGUAGE UndecidableInstances #-}\nmodule Database.Beam.Migrate.Generics.Types where\n\nimport           Database.Beam.Migrate.Types\n\nimport           Data.Proxy\nimport qualified Data.Text as T\n\nimport           GHC.Generics\n\nclass GAutoMigratableDb be x where\n  defaultMigratableDbSettings' :: Proxy be -> x ()\n\ninstance GAutoMigratableDb be x => GAutoMigratableDb be (D1 f x) where\n  defaultMigratableDbSettings' be = M1 $ defaultMigratableDbSettings' be\n\ninstance GAutoMigratableDb be x => GAutoMigratableDb be (C1 f x) where\n  defaultMigratableDbSettings' be = M1 $ defaultMigratableDbSettings' be\n\ninstance (GAutoMigratableDb be x, GAutoMigratableDb be y) =>\n  GAutoMigratableDb be (x :*: y) where\n  defaultMigratableDbSettings' be = defaultMigratableDbSettings' be :*: defaultMigratableDbSettings' be\n\ninstance ( Selector f, IsCheckedDatabaseEntity be x\n         , CheckedDatabaseEntityDefaultRequirements be x ) =>\n  GAutoMigratableDb be (S1 f (Rec0 (CheckedDatabaseEntity be db x))) where\n\n  defaultMigratableDbSettings' _ = M1 (K1 (CheckedDatabaseEntity (checkedDbEntityAuto name) []))\n    where name = T.pack (selName (undefined :: S1 f (Rec0 (CheckedDatabaseEntity be db x)) ()))\n"