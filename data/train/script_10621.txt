b'class Solution {\npublic:\n    int findJudge(int n, vector<vector<int>>& trust) {\n        vector<int> followers(n+1, 0); // 1 based indexing\n        vector<int> does_follow(n+1, 0);\n        \n        map<int, int> followers, does_follow; // O(logN)\n        \n        for(auto edge: trust) {\n            int u = edge[0], v = edge[1];\n            // person u trusts v\n            followers[v]++; // O(1) v/s in maps O(logN) --> O(1)\n            does_follow[u] = 1;\n        }\n        \n        vector<int> final_candidates = {};\n        for(int i = 1; i <= n; i++) {\n            if(followers[i] == n-1 && does_follow[i] == 0) {\n                final_candidates.push_back(i);\n            }\n        }\n        \n        if(final_candidates.size() != 1) return -1;\n        return final_candidates[0];\n    }\n};\n'