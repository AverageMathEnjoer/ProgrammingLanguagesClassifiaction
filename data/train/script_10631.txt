b'/*\n * Copyright (C) 2015 Naman Dwivedi\n *\n * Licensed under the GNU General Public License v3\n *\n * This is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n */\n\npackage com.naman14.timber.adapters;\n\nimport android.app.Activity;\nimport androidx.cardview.widget.CardView;\nimport androidx.recyclerview.widget.RecyclerView;\nimport android.util.Pair;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport com.naman14.timber.R;\nimport com.naman14.timber.models.Album;\nimport com.naman14.timber.utils.ImageUtils;\nimport com.naman14.timber.utils.NavigationUtils;\nimport com.naman14.timber.utils.TimberUtils;\n\nimport java.util.List;\n\npublic class ArtistAlbumAdapter extends RecyclerView.Adapter<ArtistAlbumAdapter.ItemHolder> {\n\n    private List<Album> arraylist;\n    private Activity mContext;\n\n    public ArtistAlbumAdapter(Activity context, List<Album> arraylist) {\n        this.arraylist = arraylist;\n        this.mContext = context;\n\n    }\n\n    @Override\n    public ItemHolder onCreateViewHolder(ViewGroup viewGroup, int i) {\n        View v = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.item_artist_album, null);\n        ItemHolder ml = new ItemHolder(v);\n        return ml;\n    }\n\n    @Override\n    public void onBindViewHolder(ItemHolder itemHolder, int i) {\n\n        Album localItem = arraylist.get(i);\n\n        itemHolder.title.setText(localItem.title);\n        String songCount = TimberUtils.makeLabel(mContext, R.plurals.Nsongs, localItem.songCount);\n        itemHolder.details.setText(songCount);\n\n        ImageUtils.loadAlbumArtIntoView(localItem.id, itemHolder.albumArt);\n\n        if (TimberUtils.isLollipop())\n            itemHolder.albumArt.setTransitionName("transition_album_art" + i);\n\n    }\n\n    @Override\n    public int getItemCount() {\n        return (null != arraylist ? arraylist.size() : 0);\n    }\n\n\n    public class ItemHolder extends RecyclerView.ViewHolder implements View.OnClickListener {\n        protected TextView title, details;\n        protected ImageView albumArt;\n        protected CardView rootView;\n\n        public ItemHolder(View view) {\n            super(view);\n            this.rootView = (CardView) view.findViewById(R.id.root_view);\n            this.title = (TextView) view.findViewById(R.id.album_title);\n            this.details = (TextView) view.findViewById(R.id.album_details);\n            this.albumArt = (ImageView) view.findViewById(R.id.album_art);\n            view.setOnClickListener(this);\n        }\n\n        @Override\n        public void onClick(View v) {\n            NavigationUtils.navigateToAlbum(mContext, arraylist.get(getAdapterPosition()).id,\n                    new Pair<View, String>(albumArt, "transition_album_art" + getAdapterPosition()));\n        }\n\n    }\n}\n\n\n\n\n'