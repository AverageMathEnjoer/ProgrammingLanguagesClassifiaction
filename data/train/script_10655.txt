b'package com.naman14.timber.adapters;\n\nimport android.app.Activity;\n\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport com.google.android.gms.cast.framework.CastSession;\nimport com.naman14.timber.MusicPlayer;\nimport com.naman14.timber.activities.BaseActivity;\nimport com.naman14.timber.cast.TimberCastHelper;\nimport com.naman14.timber.models.Song;\nimport com.naman14.timber.utils.NavigationUtils;\nimport com.naman14.timber.utils.TimberUtils;\n\nimport java.util.List;\n\n/**\n * Created by naman on 7/12/17.\n */\n\npublic class BaseSongAdapter<V extends RecyclerView.ViewHolder> extends RecyclerView.Adapter<V> {\n\n    @Override\n    public V onCreateViewHolder(ViewGroup parent, int viewType) {\n        return null;\n    }\n\n    @Override\n    public void onBindViewHolder(V holder, int position) {\n\n    }\n\n    @Override\n    public int getItemCount() {\n        return 0;\n    }\n\n    @Override\n    public int getItemViewType(int position) {\n        return super.getItemViewType(position);\n    }\n\n    public class ItemHolder extends RecyclerView.ViewHolder {\n\n        public ItemHolder(View view) {\n            super(view);\n        }\n\n    }\n\n    public void playAll(final Activity context, final long[] list, int position,\n                        final long sourceId, final TimberUtils.IdType sourceType,\n                        final boolean forceShuffle, final Song currentSong, boolean navigateNowPlaying) {\n\n        if (context instanceof BaseActivity) {\n            CastSession castSession = ((BaseActivity) context).getCastSession();\n            if (castSession != null) {\n                navigateNowPlaying = false;\n                TimberCastHelper.startCasting(castSession, currentSong);\n            } else {\n                MusicPlayer.playAll(context, list, position, -1, TimberUtils.IdType.NA, false);\n            }\n        } else {\n            MusicPlayer.playAll(context, list, position, -1, TimberUtils.IdType.NA, false);\n        }\n\n        if (navigateNowPlaying) {\n            NavigationUtils.navigateToNowplaying(context, true);\n        }\n\n\n    }\n    public void removeSongAt(int i){}\n    public void updateDataSet(List<Song> arraylist) {}\n\n}\n'