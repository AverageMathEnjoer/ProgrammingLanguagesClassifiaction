b'#======================================================================================================\n# Install data.table\n\n#======================================================================================================\n# Load data.table\n\n#======================================================================================================\n# Build data.table from scratch\n\n# TransactionID TransactionDate UserID ProductID Quantity\n# 1:             1      2010-08-21      7         2        1\n# 2:             2      2011-05-26      3         4        1\n# 3:             3      2011-06-16      3         3        1\n# 4:             4      2012-08-26      1         2        3\n# 5:             5      2013-06-06      2         4        1\n# 6:             6      2013-12-23      2         5        6\n# 7:             7      2013-12-30      3         4        1\n# 8:             8      2014-04-24     NA         2        3\n# 9:             9      2015-04-24      7         4        3\n# 10:            10      2016-05-08      3         4        4\n\n#======================================================================================================\n# Read data from a CSV file\n\n# Load transactions from https://raw.githubusercontent.com/ben519/DataWrangling/master/Data/transactions.csv\n\n#======================================================================================================\n# Meta info\n\n# Full summary\n\n# How many rows?\n\n# How many columns?\n\n# Get the row names\n\n# Get the column names\n\n# Change the name of column "Quantity" to "Quant"\n\n# Change the name of columns ProductID and UserID to PID and UID respectively\n\n#======================================================================================================\n# Ordering the rows of a data.table\n\n# Order the rows of transactions by TransactionID descending\n\n# Order the rows of transactions by Quantity ascending, TransactionDate descending\n\n#======================================================================================================\n# Ordering the columns of a data.table\n\n# Set the column order of transactions as ProductID, Quantity, TransactionDate, TransactionID, UserID\n\n# Make UserID the first column of transactions\n\n#======================================================================================================\n# Extracting vectors from a data.table\n\n# Get the 2nd column\n\n# Get the ProductID vector\n\n# Get the ProductID vector using a variable\n\n#======================================================================================================\n# Row subsetting\n\n# Subset rows 1, 3, and 6\n\n# Subset rows exlcuding 1, 3, and 6\n\n# Subset the first 3 rows\n\n# Subset rows excluding the first 3 rows\n\n# Subset the last 2 rows\n\n# Subset rows excluding the last 2 rows\n\n# Subset rows where Quantity > 1\n\n# Subset rows where UserID = 2\n\n# Subset rows where Quantity > 1 and UserID = 2\n\n# Subset rows where Quantity + UserID is > 3\n\n# Subset rows where an external vector, foo, is TRUE\n\n# Subset rows where an external vector, bar, is positive\n\n# Subset rows where foo is TRUE or bar is negative\n\n# Subset the rows where foo is not TRUE and bar is not negative\n\n#======================================================================================================\n# Column subsetting\n\n# Subset by columns 1 and 3\n\n# Subset by columns TransactionID and TransactionDate\n\n# Subset rows where TransactionID > 5 and subset columns by TransactionID and TransactionDate\n\n# Subset columns by a variable vector of columm names\ncols <- c("TransactionID", "UserID", "Quantity")\n\n# Subset columns excluding a variable vector of column names\ncols <- c("TransactionID", "UserID", "Quantity")\n\n#======================================================================================================\n# Inserting and updating values\n\n# Convert the TransactionDate column to type Date\n\n# Insert a new column, Foo = UserID + ProductID\n\n# Subset rows where TransactionID is even and set Foo = NA\n\n# Add 100 to each TransactionID\n\n# Insert a column indicating each row number\n\n# Insert columns indicating the rank of each Quantity, minimum Quantity and maximum Quantity\n\n# Remove column Foo\n\n# Remove multiple columns RowIdx, QuantityRk, and RowIdx\n\n#======================================================================================================\n# Grouping the rows of a data.table\n\n#--------------------------------------------------\n# Group By + Aggregate\n\n# Group the transations per user, measuring the number of transactions per user\n\n# Group the transactions per user, measuring the transactions and average quantity per user\n\n# Group the transactions per year of the transaction date, measuring the number of transactions per year\n\n# Group the transactions per (user, transaction-year) pair, measuring the number of transactions per group\n\n# Group the transactions per user, measuring the max quantity each user made for a single transaction and the date of that transaction\n\n# Group the transactions per (user, transaction-year), and then group by transaction-year to get the number of users who made a transaction each year\n\n#--------------------------------------------------\n# Group By + Update\n\n# Insert a column in transactions indicating the number of transactions per user\n\n# Insert columns in transactions indicating the first transaction date and last transaction date per user\n\n# For each transaction, get the date of the previous transaction made by the same user\n\n#======================================================================================================\n# Joining data.tables\n\n# Load datasets from CSV\n# https://raw.githubusercontent.com/ben519/DataWrangling/master/Data/users.csv\n# https://raw.githubusercontent.com/ben519/DataWrangling/master/Data/sessions.csv\n# https://raw.githubusercontent.com/ben519/DataWrangling/master/Data/products.csv")\n# https://raw.githubusercontent.com/ben519/DataWrangling/master/Data/transactions.csv\n\n# Convert all date columns to Date type\n\n#--------------------------------------------------\n# Basic Joins\n\n# Join users to transactions, keeping all rows from transactions and only matching rows from users (left join)\n\n# Which transactions have a UserID not in users? (anti join)\n\n# Join users to transactions, keeping only rows from transactions and users that match via UserID (inner join)\n\n# Join users to transactions, displaying all matching rows AND all non-matching rows (full outer join)\n\n# Determine which sessions occured on the same day each user registered\n\n# Build a dataset with every possible (UserID, ProductID) pair (cross join)\n\n# Determine how much quantity of each product was purchased by each user\n\n# For each user, get each possible pair of pair transactions (TransactionID1, TransactionID2)\n\n# Join each user to his/her first occuring transaction in the transactions table\n\n#--------------------------------------------------\n# Rolling Joins\n\n# Determine the ID of the last session which occured prior to (and including) the date of each transaction per user\n\n# Determine the ID of the first session which occured after (and including) the date of each transaction per user\n\n#--------------------------------------------------\n# Non-equi joins\n\n# Determine the first transaction that occured for each user prior to (and including) his/her Cancelled date\n\n# Get all transactions where TransactionDate is after the user\'s Cancellation Date\n\n#--------------------------------------------------\n# Join + Update\n\n# Insert the price of each product in the transactions dataset (join + update)\n\n# Insert the number of transactions each user made into the users dataset\n\n#--------------------------------------------------\n# Setting a key and secondary indexing\n\n# Set the key of Transactions as UserID\n\n# View the key of transactions\n\n# Set the key of users as UserID and join to transactions, matching rows only (inner join)\n\n# Set ProductID as the key of transactions and products without re-ordering the rows, then join matching rows only\n\n# Set each ID column as a secondary join index\n\n# View indices\n\n# Inner join between users, transactions, and products\n\n#======================================================================================================\n# Reshaping a data.table\n\n# Read datasets from CSV\n# https://raw.githubusercontent.com/ben519/DataWrangling/master/Data/users.csv\n# https://raw.githubusercontent.com/ben519/DataWrangling/master/Data/transactions.csv\n\n# Convert all date columns to Date type\n\n# Add column TransactionWeekday as a factor with levels Saturday through Friday\n\n#--------------------------------------------------\n# Convert data from tall format to wide format\n\n# One-hot encode Weekday (i.e. convert data from tall to wide, where each possible weekday is a column)\n\n#--------------------------------------------------\n# Convert data from wide format to tall format\n\n# Build a data.table with columns {UserID, ActionType, Date} where ActionType is either "Registered" or "Cancelled" and Date is the corresponding date value\n'