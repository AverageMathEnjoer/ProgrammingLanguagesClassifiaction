b'unravels :: [a] -> [[[a]]]\nunravels = foldr (concatMap . prefixes) [[]]\n\nprefixes x [ ] = [[[x]]]\nprefixes x (xs : xss) = [(x : xs) : xss] ++ map (xs :) (prefixes x xss)\n\nup :: Ord a => [a] -> Bool\nup [] = True\nup [x] = True\nup (x:y:xs) = x <= y && up (y:xs)\n\nminBy :: Ord b => (a -> b) -> [a] -> a\nminBy f = foldl1 (cmp f)\n\ncmp :: Ord b => (a -> b) -> a -> a -> a\ncmp f u v = if f u <= f v then u else v\n\nupravels :: Ord a => [a] -> [[[a]]]\nupravels = filter (all up) . unravels\n\nsupravel :: Ord a => [a] -> [[a]]\nsupravel = minBy length . upravels\n'