b'package com.codeest.geeknews.widget;\n\n/**\n * Created by codeest on 16/12/29.\n */\n\nimport android.content.Context;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\n\n/**\n    * \xe6\xb5\x81\xe5\xbc\x8f\xe5\xb8\x83\xe5\xb1\x80\n    * Created by zhangxutong on 2016/1/17.\n    */\npublic class FlowLayout extends ViewGroup {\n    private static final String TAG = "zxt/FlowViewGroup";\n\n    public FlowLayout(Context context) {\n        this(context, null);\n    }\n\n    public FlowLayout(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public FlowLayout(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    //\xe5\x9c\xa8onMeasure\xe9\x87\x8c\xef\xbc\x8c\xe6\xb5\x8b\xe9\x87\x8f\xe6\x89\x80\xe6\x9c\x89\xe5\xad\x90View\xe7\x9a\x84\xe5\xae\xbd\xe9\xab\x98\xef\xbc\x8c\xe4\xbb\xa5\xe5\x8f\x8a\xe7\xa1\xae\xe5\xae\x9aViewgroup\xe8\x87\xaa\xe5\xb7\xb1\xe7\x9a\x84\xe5\xae\xbd\xe9\xab\x98\xe3\x80\x82\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        //\xe8\x8e\xb7\xe5\x8f\x96\xe7\xb3\xbb\xe7\xbb\x9f\xe4\xbc\xa0\xe9\x80\x92\xe8\xbf\x87\xe6\x9d\xa5\xe6\xb5\x8b\xe9\x87\x8f\xe5\x87\xba\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6 \xe9\xab\x98\xe5\xba\xa6\xef\xbc\x8c\xe4\xbb\xa5\xe5\x8f\x8a\xe7\x9b\xb8\xe5\xba\x94\xe7\x9a\x84\xe6\xb5\x8b\xe9\x87\x8f\xe6\xa8\xa1\xe5\xbc\x8f\xe3\x80\x82\n        //\xe5\xa6\x82\xe6\x9e\x9c\xe6\xb5\x8b\xe9\x87\x8f\xe6\xa8\xa1\xe5\xbc\x8f\xe4\xb8\xba EXACTLY( \xe7\xa1\xae\xe5\xae\x9a\xe7\x9a\x84dp\xe5\x80\xbc\xef\xbc\x8cmatch_parent)\xef\xbc\x8c\xe5\x88\x99\xe5\x8f\xaf\xe4\xbb\xa5\xe8\xb0\x83\xe7\x94\xa8setMeasuredDimension()\xe8\xae\xbe\xe7\xbd\xae\xef\xbc\x8c\n        //\xe5\xa6\x82\xe6\x9e\x9c\xe6\xb5\x8b\xe9\x87\x8f\xe6\xa8\xa1\xe5\xbc\x8f\xe4\xb8\xba AT_MOST(wrap_content),\xe5\x88\x99\xe9\x9c\x80\xe8\xa6\x81\xe7\xbb\x8f\xe8\xbf\x87\xe8\xae\xa1\xe7\xae\x97\xe5\x86\x8d\xe5\x8e\xbb\xe8\xb0\x83\xe7\x94\xa8setMeasuredDimension()\xe8\xae\xbe\xe7\xbd\xae\n        int widthMeasure = MeasureSpec.getSize(widthMeasureSpec);\n        int widthMode = MeasureSpec.getMode(widthMeasureSpec);\n        int heightMeasure = MeasureSpec.getSize(heightMeasureSpec);\n        int heightMode = MeasureSpec.getMode(heightMeasureSpec);\n\n        //\xe8\xae\xa1\xe7\xae\x97\xe5\xae\xbd\xe5\xba\xa6 \xe9\xab\x98\xe5\xba\xa6 //wrap_content\xe6\xb5\x8b\xe9\x87\x8f\xe6\xa8\xa1\xe5\xbc\x8f\xe4\xb8\x8b\xe4\xbc\x9a\xe4\xbd\xbf\xe7\x94\xa8\xe5\x88\xb0:\n        //\xe5\xad\x98\xe5\x82\xa8\xe6\x9c\x80\xe5\x90\x8e\xe8\xae\xa1\xe7\xae\x97\xe5\x87\xba\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6\xef\xbc\x8c\n        int maxLineWidth = 0;\n        //\xe5\xad\x98\xe5\x82\xa8\xe6\x9c\x80\xe5\x90\x8e\xe8\xae\xa1\xe7\xae\x97\xe5\x87\xba\xe7\x9a\x84\xe9\xab\x98\xe5\xba\xa6\n        int totalHeight = 0;\n        //\xe5\xad\x98\xe5\x82\xa8\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6\n        int curLineWidth = 0;\n        //\xe5\xad\x98\xe5\x82\xa8\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe7\x9a\x84\xe9\xab\x98\xe5\xba\xa6\n        int curLineHeight = 0;\n\n        // \xe5\xbe\x97\xe5\x88\xb0\xe5\x86\x85\xe9\x83\xa8\xe5\x85\x83\xe7\xb4\xa0\xe7\x9a\x84\xe4\xb8\xaa\xe6\x95\xb0\n        int count = getChildCount();\n\n        //\xe5\xad\x98\xe5\x82\xa8\xe5\xad\x90View\n        View child =null;\n        //\xe5\xad\x98\xe5\x82\xa8\xe5\xad\x90View\xe7\x9a\x84LayoutParams\n        MarginLayoutParams params =null;\n        //\xe5\xad\x90View Layout\xe9\x9c\x80\xe8\xa6\x81\xe7\x9a\x84\xe5\xae\xbd\xe9\xab\x98(\xe5\x8c\x85\xe5\x90\xabmargin)\xef\xbc\x8c\xe7\x94\xa8\xe4\xba\x8e\xe8\xae\xa1\xe7\xae\x97\xe6\x98\xaf\xe5\x90\xa6\xe8\xb6\x8a\xe7\x95\x8c\n        int childWidth;\n        int childHeight;\n\n        //\xe9\x81\x8d\xe5\x8e\x86\xe5\xad\x90View \xe8\xae\xa1\xe7\xae\x97\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe5\xae\xbd\xe9\xab\x98\n        for (int i = 0; i < count; i++) {\n            child = getChildAt(i);\n            //\xe5\xa6\x82\xe6\x9e\x9cgone\xef\xbc\x8c\xe4\xb8\x8d\xe6\xb5\x8b\xe9\x87\x8f\xe4\xba\x86\n            if (View.GONE == child.getVisibility()) {\n                continue;\n            }\n            //\xe5\x85\x88\xe6\xb5\x8b\xe9\x87\x8f\xe5\xad\x90View\n            measureChild(child, widthMeasureSpec, heightMeasureSpec);\n\n            //\xe8\x8e\xb7\xe5\x8f\x96\xe5\xad\x90View\xe7\x9a\x84LayoutParams\xef\xbc\x8c(\xe5\xad\x90View\xe7\x9a\x84LayoutParams\xe7\x9a\x84\xe5\xaf\xb9\xe8\xb1\xa1\xe7\xb1\xbb\xe5\x9e\x8b\xef\xbc\x8c\xe5\x8f\x96\xe5\x86\xb3\xe4\xba\x8e\xe5\x85\xb6ViewGroup\xe7\x9a\x84generateLayoutParams()\xe6\x96\xb9\xe6\xb3\x95\xe7\x9a\x84\xe8\xbf\x94\xe5\x9b\x9e\xe7\x9a\x84\xe5\xaf\xb9\xe8\xb1\xa1\xe7\xb1\xbb\xe5\x9e\x8b\xef\xbc\x8c\xe8\xbf\x99\xe9\x87\x8c\xe8\xbf\x94\xe5\x9b\x9e\xe7\x9a\x84\xe6\x98\xafMarginLayoutParams)\n            if (child.getLayoutParams() instanceof MarginLayoutParams) {\n                params = (MarginLayoutParams) child.getLayoutParams();\n                //\xe5\xad\x90View\xe9\x9c\x80\xe8\xa6\x81\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6 \xe4\xb8\xba \xe5\xad\x90View \xe6\x9c\xac\xe8\xba\xab\xe5\xae\xbd\xe5\xba\xa6+marginLeft + marginRight\n                childWidth = child.getMeasuredWidth() + params.leftMargin + params.rightMargin;\n                childHeight = child.getMeasuredHeight() + params.topMargin + params.bottomMargin;\n            } else {\n                childWidth = child.getMeasuredWidth();\n                childHeight = child.getMeasuredHeight();\n            }\n            Log.i(TAG, "\xe5\xad\x90View Layout\xe9\x9c\x80\xe8\xa6\x81\xe7\x9a\x84\xe5\xae\xbd\xe9\xab\x98(\xe5\x8c\x85\xe5\x90\xabmargin)\xef\xbc\x9achildWidth:" + childWidth + "   ,childHeight:" + childHeight);\n\n            //\xe5\xa6\x82\xe6\x9e\x9c\xe5\xbd\x93\xe5\x89\x8d\xe7\x9a\x84\xe8\xa1\x8c\xe5\xae\xbd\xe5\xba\xa6\xe5\xa4\xa7\xe4\xba\x8e \xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe5\x85\x81\xe8\xae\xb8\xe7\x9a\x84\xe6\x9c\x80\xe5\xa4\xa7\xe5\xae\xbd\xe5\xba\xa6 \xe5\x88\x99\xe8\xa6\x81\xe6\x8d\xa2\xe8\xa1\x8c\n            //\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe5\x85\x81\xe8\xae\xb8\xe7\x9a\x84\xe6\x9c\x80\xe5\xa4\xa7\xe5\xae\xbd\xe5\xba\xa6 \xe5\xa6\x82\xe6\x9e\x9c\xe8\xa6\x81\xe9\x80\x82\xe9\x85\x8d padding \xe8\xbf\x99\xe9\x87\x8c\xe8\xa6\x81- getPaddingLeft() - getPaddingRight()\n            //\xe5\x8d\xb3\xe4\xb8\xba\xe6\xb5\x8b\xe9\x87\x8f\xe5\x87\xba\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6\xe5\x87\x8f\xe5\x8e\xbb\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe7\x9a\x84\xe5\xb7\xa6\xe5\x8f\xb3\xe8\xbe\xb9\xe8\xb7\x9d\n            if (curLineWidth + childWidth > widthMeasure - getPaddingLeft() - getPaddingRight()) {\n                //\xe9\x80\x9a\xe8\xbf\x87\xe6\xaf\x94\xe8\xbe\x83 \xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe5\xae\xbd \xe5\x92\x8c\xe4\xbb\xa5\xe5\x89\x8d\xe5\xad\x98\xe5\x82\xa8\xe7\x9a\x84\xe6\x9c\x80\xe5\xa4\xa7\xe8\xa1\x8c\xe5\xae\xbd,\xe5\xbe\x97\xe5\x88\xb0\xe6\x9c\x80\xe6\x96\xb0\xe7\x9a\x84\xe6\x9c\x80\xe5\xa4\xa7\xe8\xa1\x8c\xe5\xae\xbd,\xe7\x94\xa8\xe4\xba\x8e\xe8\xae\xbe\xe7\xbd\xae\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6\n                maxLineWidth = Math.max(maxLineWidth, curLineWidth);\n                //\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe7\x9a\x84\xe9\xab\x98\xe5\xba\xa6\xe5\xa2\x9e\xe5\x8a\xa0\xe4\xba\x86\xef\xbc\x8c\xe4\xb8\xba\xe5\xbd\x93\xe5\x89\x8d\xe9\xab\x98\xe5\xba\xa6+\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe7\x9a\x84\xe9\xab\x98\xe5\xba\xa6\n                totalHeight += curLineHeight;\n                //\xe6\x8d\xa2\xe8\xa1\x8c\xe5\x90\x8e \xe5\x88\xb7\xe6\x96\xb0 \xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c \xe5\xae\xbd\xe9\xab\x98\xe6\x95\xb0\xe6\x8d\xae\xef\xbc\x9a \xe5\x9b\xa0\xe4\xb8\xba\xe6\x96\xb0\xe7\x9a\x84\xe4\xb8\x80\xe8\xa1\x8c\xe5\xb0\xb1\xe8\xbf\x99\xe4\xb8\x80\xe4\xb8\xaaView\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe4\xb8\xba\xe5\xbd\x93\xe5\x89\x8d\xe8\xbf\x99\xe4\xb8\xaaview\xe5\x8d\xa0\xe7\x94\xa8\xe7\x9a\x84\xe5\xae\xbd\xe9\xab\x98(\xe8\xa6\x81\xe5\x8a\xa0\xe4\xb8\x8aView \xe7\x9a\x84 margin)\n                curLineWidth = childWidth;\n                curLineHeight = childHeight;\n            } else {\n                //\xe4\xb8\x8d\xe6\x8d\xa2\xe8\xa1\x8c\xef\xbc\x9a\xe5\x8f\xa0\xe5\x8a\xa0\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe5\xae\xbd \xe5\x92\x8c \xe6\xaf\x94\xe8\xbe\x83\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe9\xab\x98:\n                curLineWidth += childWidth;\n                curLineHeight = Math.max(curLineHeight, childHeight);\n            }\n            //\xe5\xa6\x82\xe6\x9e\x9c\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x98\xaf\xe6\x9c\x80\xe5\x90\x8e\xe4\xb8\x80\xe4\xb8\xaaView,\xe8\xa6\x81\xe6\xaf\x94\xe8\xbe\x83\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe7\x9a\x84 \xe5\xae\xbd\xe5\xba\xa6\xe5\x92\x8c\xe6\x9c\x80\xe5\xa4\xa7\xe5\xae\xbd\xe5\xba\xa6\xef\xbc\x8c\xe5\x8f\xa0\xe5\x8a\xa0\xe4\xb8\x80\xe5\x85\xb1\xe7\x9a\x84\xe9\xab\x98\xe5\xba\xa6\n            if (i == count - 1) {\n                maxLineWidth = Math.max(maxLineWidth, curLineWidth);\n                totalHeight += childHeight;\n            }\n        }\n\n        Log.i(TAG, "\xe7\xb3\xbb\xe7\xbb\x9f\xe6\xb5\x8b\xe9\x87\x8f\xe5\x85\x81\xe8\xae\xb8\xe7\x9a\x84\xe5\xb0\xba\xe5\xaf\xb8\xe6\x9c\x80\xe5\xa4\xa7\xe5\x80\xbc\xef\xbc\x9awidthMeasure:" + widthMeasure + "   ,heightMeasure:" + heightMeasure);\n        Log.i(TAG, "\xe7\xbb\x8f\xe8\xbf\x87\xe6\x88\x91\xe4\xbb\xac\xe6\xb5\x8b\xe9\x87\x8f\xe5\xae\x9e\xe9\x99\x85\xe7\x9a\x84\xe5\xb0\xba\xe5\xaf\xb8(\xe4\xb8\x8d\xe5\x8c\x85\xe6\x8b\xac\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe7\x9a\x84padding)\xef\xbc\x9amaxLineWidth:" + maxLineWidth + "   ,totalHeight:" + totalHeight);\n        Log.i(TAG, "heightMode == MeasureSpec.AT_MOST:" +(heightMode == MeasureSpec.AT_MOST));\n        Log.i(TAG, "heightMode == MeasureSpec.EXACTLY:" +(heightMode == MeasureSpec.EXACTLY));\n        Log.i(TAG, "heightMode == MeasureSpec.UNSPECIFIED:" +(heightMode == MeasureSpec.UNSPECIFIED));\n\n        //\xe9\x80\x82\xe9\x85\x8dpadding,\xe5\xa6\x82\xe6\x9e\x9c\xe6\x98\xafwrap_content,\xe5\x88\x99\xe9\x99\xa4\xe4\xba\x86\xe5\xad\x90\xe6\x8e\xa7\xe4\xbb\xb6\xe6\x9c\xac\xe8\xba\xab\xe5\x8d\xa0\xe6\x8d\xae\xe7\x9a\x84\xe6\x8e\xa7\xe4\xbb\xb6\xef\xbc\x8c\xe8\xbf\x98\xe8\xa6\x81\xe5\x9c\xa8\xe5\x8a\xa0\xe4\xb8\x8a\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe7\x9a\x84padding\n        setMeasuredDimension(\n                widthMode != MeasureSpec.EXACTLY ? maxLineWidth + getPaddingLeft() + getPaddingRight() : widthMeasure,\n                heightMode != MeasureSpec.EXACTLY ? totalHeight + getPaddingTop() + getPaddingBottom() : heightMeasure);//fix by zhangxutong \xe6\x9c\x89\xe4\xba\x9b\xe9\xa1\xb5\xe9\x9d\xa2\xe5\xa4\xaa\xe9\x95\xbf\xe4\xba\x86\n    }\n\n    //\xe5\xb8\x83\xe5\xb1\x80\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe4\xbd\x8d\xe7\xbd\xae\xe4\xbb\xa5\xe5\x8f\x8a\xe5\xad\x90\xe6\x8e\xa7\xe4\xbb\xb6\xe7\x9a\x84\xe4\xbd\x8d\xe7\xbd\xae\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        Log.i(TAG, "changed:" + changed + "   ,l:" + l + "  t:" + t + "  r:" + r + "  b:" + b);\n        //\xe5\xad\x90\xe6\x8e\xa7\xe4\xbb\xb6\xe7\x9a\x84\xe4\xb8\xaa\xe6\x95\xb0\n        int count = getChildCount();\n        //ViewParent\xe5\xae\xbd\xe5\xba\xa6(\xe5\x8c\x85\xe5\x90\xabpadding)\n        int width = getWidth();\n        //ViewParent \xe7\x9a\x84\xe5\x8f\xb3\xe8\xbe\xb9x\xe7\x9a\x84\xe5\xb8\x83\xe5\xb1\x80\xe9\x99\x90\xe5\x88\xb6\xe5\x80\xbc\n        int rightLimit =  width - getPaddingRight();\n\n        //\xe5\xad\x98\xe5\x82\xa8\xe5\x9f\xba\xe5\x87\x86\xe7\x9a\x84left top (\xe5\xad\x90\xe7\xb1\xbb.layout(),\xe9\x87\x8c\xe7\x9a\x84\xe5\x9d\x90\xe6\xa0\x87\xe6\x98\xaf\xe5\x9f\xba\xe4\xba\x8e\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe7\x9a\x84\xe5\x9d\x90\xe6\xa0\x87\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5 x\xe5\xba\x94\xe8\xaf\xa5\xe6\x98\xaf\xe4\xbb\x8e0+\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe5\xb7\xa6\xe5\x86\x85\xe8\xbe\xb9\xe8\xb7\x9d\xe5\xbc\x80\xe5\xa7\x8b\xef\xbc\x8cy\xe4\xbb\x8e0+\xe7\x88\xb6\xe6\x8e\xa7\xe4\xbb\xb6\xe4\xb8\x8a\xe5\x86\x85\xe8\xbe\xb9\xe8\xb7\x9d\xe5\xbc\x80\xe5\xa7\x8b)\n        int baseLeft = 0 + getPaddingLeft();\n        int baseTop = 0 + getPaddingTop();\n        //\xe5\xad\x98\xe5\x82\xa8\xe7\x8e\xb0\xe5\x9c\xa8\xe7\x9a\x84left top\n        int curLeft = baseLeft;\n        int curTop = baseTop;\n\n        //\xe5\xad\x90View\n        View child = null;\n        //\xe5\xad\x90view\xe7\x94\xa8\xe4\xba\x8elayout\xe7\x9a\x84 l t r b\n        int viewL,viewT,viewR,viewB;\n        //\xe5\xad\x90View\xe7\x9a\x84LayoutParams\n        MarginLayoutParams params = null;\n        //\xe5\xad\x90View Layout\xe9\x9c\x80\xe8\xa6\x81\xe7\x9a\x84\xe5\xae\xbd\xe9\xab\x98(\xe5\x8c\x85\xe5\x90\xabmargin)\xef\xbc\x8c\xe7\x94\xa8\xe4\xba\x8e\xe8\xae\xa1\xe7\xae\x97\xe6\x98\xaf\xe5\x90\xa6\xe8\xb6\x8a\xe7\x95\x8c\n        int childWidth;\n        int childHeight;\n        //\xe5\xad\x90View \xe6\x9c\xac\xe8\xba\xab\xe7\x9a\x84\xe5\xae\xbd\xe9\xab\x98\n        int childW,childH;\n\n        //\xe4\xb8\xb4\xe6\x97\xb6\xe5\xa2\x9e\xe5\x8a\xa0\xe4\xb8\x80\xe4\xb8\xaatemp \xe5\xad\x98\xe5\x82\xa8\xe4\xb8\x8a\xe4\xb8\x80\xe4\xb8\xaaView\xe7\x9a\x84\xe9\xab\x98\xe5\xba\xa6 \xe8\xa7\xa3\xe5\x86\xb3\xe8\xbf\x87\xe9\x95\xbf\xe7\x9a\x84\xe4\xb8\xa4\xe8\xa1\x8cView\xe5\xaf\xbc\xe8\x87\xb4\xe6\x98\xbe\xe7\xa4\xba\xe4\xb8\x8d\xe6\xad\xa3\xe7\xa1\xae\xe7\x9a\x84bug\n        int lastChildHeight =0;\n        //\n        for (int i = 0; i < count; i++) {\n            child = getChildAt(i);\n            //\xe5\xa6\x82\xe6\x9e\x9cgone\xef\xbc\x8c\xe4\xb8\x8d\xe5\xb8\x83\xe5\xb1\x80\xe4\xba\x86\n            if (View.GONE == child.getVisibility()) {\n                continue;\n            }\n            //\xe8\x8e\xb7\xe5\x8f\x96\xe5\xad\x90View\xe6\x9c\xac\xe8\xba\xab\xe7\x9a\x84\xe5\xae\xbd\xe9\xab\x98:\n            childW = child.getMeasuredWidth();\n            childH = child.getMeasuredHeight();\n            if (child.getLayoutParams() instanceof MarginLayoutParams) {\n                params = (MarginLayoutParams) child.getLayoutParams();\n                //\xe5\xad\x90View\xe9\x9c\x80\xe8\xa6\x81\xe7\x9a\x84\xe5\xae\xbd\xe5\xba\xa6 \xe4\xb8\xba \xe5\xad\x90View \xe6\x9c\xac\xe8\xba\xab\xe5\xae\xbd\xe5\xba\xa6+marginLeft + marginRight\n                childWidth = childW + params.leftMargin + params.rightMargin;\n                childHeight = childH + params.topMargin + params.bottomMargin;\n            } else {\n                childWidth = childW;\n                childHeight = childH;\n            }\n\n            //\xe8\xbf\x99\xe9\x87\x8c\xe8\xa6\x81\xe8\x80\x83\xe8\x99\x91padding\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe5\x8f\xb3\xe8\xbe\xb9\xe7\x95\x8c\xe4\xb8\xba ViewParent\xe5\xae\xbd\xe5\xba\xa6(\xe5\x8c\x85\xe5\x90\xabpadding) -ViewParent\xe5\x8f\xb3\xe5\x86\x85\xe8\xbe\xb9\xe8\xb7\x9d\n            if (curLeft + childWidth > rightLimit ) {\n                //\xe5\xa6\x82\xe6\x9e\x9c\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x94\xbe\xe4\xb8\x8d\xe4\xb8\x8b\xe8\xaf\xa5\xe5\xad\x90View\xe4\xba\x86 \xe9\x9c\x80\xe8\xa6\x81\xe6\x8d\xa2\xe8\xa1\x8c\xe6\x94\xbe\xe7\xbd\xae\xef\xbc\x9a\n                //\xe5\x9c\xa8\xe6\x96\xb0\xe7\x9a\x84\xe4\xb8\x80\xe8\xa1\x8c\xe5\xb8\x83\xe5\xb1\x80\xe5\xad\x90View\xef\xbc\x8c\xe5\xb7\xa6x\xe5\xb0\xb1\xe6\x98\xafbaseLeft\xef\xbc\x8c\xe4\xb8\x8ay\xe6\x98\xaf top +\xe5\x89\x8d\xe4\xb8\x80\xe8\xa1\x8c\xe9\xab\x98(\xe8\xbf\x99\xe9\x87\x8c\xe5\x81\x87\xe8\xae\xbe\xe7\x9a\x84\xe6\x98\xaf\xe6\xaf\x8f\xe4\xb8\x80\xe8\xa1\x8c\xe8\xa1\x8c\xe9\xab\x98\xe4\xb8\x80\xe6\xa0\xb7)\xef\xbc\x8c\n                curTop = curTop + lastChildHeight;\n                //layout\xe6\x97\xb6\xe8\xa6\x81\xe8\x80\x83\xe8\x99\x91margin\n                if (params != null) {\n                    viewL = baseLeft +params.leftMargin;\n                    viewT = curTop + params.topMargin;\n                } else {\n                    viewL = baseLeft;\n                    viewT = curTop;\n                }\n                viewR = viewL + childW;\n                viewB = viewT + childH;\n                //child.layout(baseLeft + params.leftMargin, curTop + params.topMargin, baseLeft + params.leftMargin + child.getMeasuredWidth(), curTop + params.topMargin + child.getMeasuredHeight());\n                //Log.i(TAG,"\xe6\x96\xb0\xe7\x9a\x84\xe4\xb8\x80\xe8\xa1\x8c:" +"   ,baseLeft:"+baseLeft +"  curTop:"+curTop+"  baseLeft+childWidth:"+(baseLeft+childWidth)+"  curTop+childHeight:"+ ( curTop+childHeight));\n                curLeft = baseLeft + childWidth;\n\n            } else {\n                //\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x94\xbe\xe4\xb8\x8b\xe5\xad\x90View:\n                if (params != null) {\n                    viewL = curLeft +params.leftMargin;\n                    viewT = curTop + params.topMargin;\n                } else {\n                    viewL = curLeft;\n                    viewT = curTop;\n                }\n\n                viewR = viewL + childW;\n                viewB = viewT + childH;\n\n                //child.layout(curLeft + params.leftMargin, curTop + params.topMargin, curLeft + params.leftMargin + child.getMeasuredWidth(), curTop + params.topMargin + child.getMeasuredHeight());\n                //Log.i(TAG,"\xe5\xbd\x93\xe5\x89\x8d\xe8\xa1\x8c:"+changed +"   ,curLeft:"+curLeft +"  curTop:"+curTop+"  curLeft+childWidth:"+(curLeft+childWidth)+"  curTop+childHeight:"+(curTop+childHeight));\n                curLeft = curLeft + childWidth;\n            }\n            lastChildHeight = childHeight;\n            //\xe5\xb8\x83\xe5\xb1\x80\xe5\xad\x90View\n            child.layout(viewL,viewT,viewR,viewB);\n        }\n    }\n    /**\n     * @return \xe5\xbd\x93\xe5\x89\x8dViewGroup\xe8\xbf\x94\xe5\x9b\x9e\xe7\x9a\x84Params\xe7\x9a\x84\xe7\xb1\xbb\xe5\x9e\x8b\n     */\n    @Override\n    public ViewGroup.LayoutParams generateLayoutParams(AttributeSet attrs) {\n        return new MarginLayoutParams(getContext(), attrs);\n    }\n}'