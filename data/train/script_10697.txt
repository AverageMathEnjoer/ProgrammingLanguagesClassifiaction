b'/*\n * Copyright (C) 2015 Naman Dwivedi\n *\n * Licensed under the GNU General Public License v3\n *\n * This is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n */\n\npackage com.naman14.timber.fragments;\n\nimport android.os.Bundle;\nimport android.preference.PreferenceManager;\nimport com.google.android.material.tabs.TabLayout;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentPagerAdapter;\nimport androidx.viewpager.widget.ViewPager;\nimport androidx.appcompat.app.ActionBar;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport com.afollestad.appthemeengine.ATE;\nimport com.afollestad.appthemeengine.Config;\nimport com.naman14.timber.R;\nimport com.naman14.timber.utils.ATEUtils;\nimport com.naman14.timber.utils.Helpers;\nimport com.naman14.timber.utils.PreferencesUtility;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class MainFragment extends Fragment {\n\n    private PreferencesUtility mPreferences;\n    private ViewPager viewPager;\n\n    @Override\n    public void onCreate(final Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        mPreferences = PreferencesUtility.getInstance(getActivity());\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View rootView = inflater.inflate(\n                R.layout.fragment_main, container, false);\n\n        Toolbar toolbar = (Toolbar) rootView.findViewById(R.id.toolbar);\n        ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);\n\n        final ActionBar ab = ((AppCompatActivity) getActivity()).getSupportActionBar();\n        ab.setHomeAsUpIndicator(R.drawable.ic_menu);\n        ab.setDisplayHomeAsUpEnabled(true);\n\n\n        viewPager = (ViewPager) rootView.findViewById(R.id.viewpager);\n        if (viewPager != null) {\n            setupViewPager(viewPager);\n            viewPager.setOffscreenPageLimit(2);\n        }\n\n        TabLayout tabLayout = (TabLayout) rootView.findViewById(R.id.tabs);\n        tabLayout.setupWithViewPager(viewPager);\n\n        return rootView;\n\n    }\n\n    @Override\n    public void onViewCreated(View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        if (PreferenceManager.getDefaultSharedPreferences(getActivity()).getBoolean("dark_theme", false)) {\n            ATE.apply(this, "dark_theme");\n        } else {\n            ATE.apply(this, "light_theme");\n        }\n        viewPager.setCurrentItem(mPreferences.getStartPageIndex());\n    }\n\n    private void setupViewPager(ViewPager viewPager) {\n        Adapter adapter = new Adapter(getChildFragmentManager());\n        adapter.addFragment(new SongsFragment(), this.getString(R.string.songs));\n        adapter.addFragment(new AlbumFragment(), this.getString(R.string.albums));\n        adapter.addFragment(new ArtistFragment(), this.getString(R.string.artists));\n        viewPager.setAdapter(adapter);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        if (mPreferences.lastOpenedIsStartPagePreference()) {\n            mPreferences.setStartPageIndex(viewPager.getCurrentItem());\n        }\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        String ateKey = Helpers.getATEKey(getActivity());\n        ATEUtils.setStatusBarColor(getActivity(), ateKey, Config.primaryColor(getActivity(), ateKey));\n\n    }\n\n    @Override\n    public void onStart() {\n        super.onStart();\n    }\n\n    static class Adapter extends FragmentPagerAdapter {\n        private final List<Fragment> mFragments = new ArrayList<>();\n        private final List<String> mFragmentTitles = new ArrayList<>();\n\n        public Adapter(FragmentManager fm) {\n            super(fm);\n        }\n\n        public void addFragment(Fragment fragment, String title) {\n            mFragments.add(fragment);\n            mFragmentTitles.add(title);\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            return mFragments.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return mFragments.size();\n        }\n\n        @Override\n        public CharSequence getPageTitle(int position) {\n            return mFragmentTitles.get(position);\n        }\n    }\n}\n'