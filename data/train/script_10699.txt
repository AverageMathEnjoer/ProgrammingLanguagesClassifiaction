b'package com.loper7.datepicker\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.util.Log\nimport com.google.android.material.bottomsheet.BottomSheetDialog\nimport com.loper7.date_time_picker.DateTimeConfig\nimport com.loper7.date_time_picker.dialog.CardDatePickerDialog\nimport com.loper7.date_time_picker.dialog.CardWeekPickerDialog\nimport kotlinx.android.synthetic.main.activity_date_picker_example.*\n\nclass DatePickerExampleActivity : AppCompatActivity() {\n\n\n    private var maxDate: Long = 0\n    private var minDate: Long = 0\n    private var defaultDate: Long = 0\n\n    private lateinit var context: Context\n\n    @SuppressLint("SetTextI18n")\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_date_picker_example)\n        context = this\n\n\n        tvMaxDate.setOnClickListener {\n            CardDatePickerDialog.builder(this)\n                .setTitle("SET MAX DATE")\n                .setDefaultTime(maxDate)\n                .setOnChoose {\n                    maxDate = it\n                    tvMaxDate.text = StringUtils.conversionTime(it, "yyyy-MM-dd HH:mm:ss")\n                }.build().show()\n        }\n\n\n        btnClearMax.setOnClickListener {\n            maxDate = 0L\n            tvMaxDate.text = ""\n        }\n\n        tvMinDate.setOnClickListener {\n            CardDatePickerDialog.builder(this)\n                .setTitle("SET MIN DATE")\n                .setDefaultTime(minDate)\n                .setOnChoose {\n                    minDate = it\n                    tvMinDate.text = StringUtils.conversionTime(it, "yyyy-MM-dd HH:mm:ss")\n                }.build().show()\n        }\n\n        btnClearMin.setOnClickListener {\n            minDate = 0L\n            tvMinDate.text = ""\n        }\n\n        tvDefaultDate.setOnClickListener {\n            CardDatePickerDialog.builder(this)\n                .setTitle("SET DEFAULT DATE")\n                .setDefaultTime(defaultDate)\n                .setOnChoose {\n                    defaultDate = it\n                    tvDefaultDate.text =\n                        StringUtils.conversionTime(it, "yyyy-MM-dd HH:mm:ss")\n                }.build().show()\n        }\n\n        btnClearDefault.setOnClickListener {\n            defaultDate = 0L\n            tvDefaultDate.text = ""\n        }\n\n        rgPickerLayout.setOnCheckedChangeListener { group, checkedId ->\n            //\xe8\x87\xaa\xe5\xae\x9a\xe4\xb9\x89\xe5\xb8\x83\xe5\xb1\x80\xe4\xb8\x8b\xe9\x98\xb2\xe6\xad\xa2\xe9\xa1\xb5\xe9\x9d\xa2\xe5\x87\xba\xe7\x8e\xb0\xe4\xb8\x8d\xe5\xbf\x85\xe8\xa6\x81\xe6\x98\xbe\xe7\xa4\xba\xe5\xbc\x82\xe5\xb8\xb8\xef\xbc\x8c\xe7\xa6\x81\xe6\xad\xa2\xe5\x8f\x98\xe6\x9b\xb4\xe6\x98\xbe\xe7\xa4\xba\xe9\x80\x89\xe6\x8b\xa9\xe9\xa1\xb9\n            checkYear.isEnabled = checkedId == R.id.radioPickerDefault\n            checkMonth.isEnabled = checkedId == R.id.radioPickerDefault\n            checkDay.isEnabled = checkedId == R.id.radioPickerDefault\n            checkHour.isEnabled = checkedId == R.id.radioPickerDefault\n            checkMin.isEnabled = checkedId == R.id.radioPickerDefault\n            checkSecond.isEnabled = checkedId == R.id.radioPickerDefault\n        }\n\n        btnCardDialogShow.setOnClickListener {\n            var displayList: MutableList<Int>? = mutableListOf()\n            if (checkYear.isChecked)\n                displayList?.add(DateTimeConfig.YEAR)\n            if (checkMonth.isChecked)\n                displayList?.add(DateTimeConfig.MONTH)\n            if (checkDay.isChecked)\n                displayList?.add(DateTimeConfig.DAY)\n            if (checkHour.isChecked)\n                displayList?.add(DateTimeConfig.HOUR)\n            if (checkMin.isChecked)\n                displayList?.add(DateTimeConfig.MIN)\n            if (checkSecond.isChecked)\n                displayList?.add(DateTimeConfig.SECOND)\n\n\n            var model = CardDatePickerDialog.CARD\n            if (radioModelCard.isChecked)\n                model = CardDatePickerDialog.CARD\n            if (radioModelCube.isChecked)\n                model = CardDatePickerDialog.CUBE\n            if (radioModelStack.isChecked)\n                model = CardDatePickerDialog.STACK\n            if (radioModelCustom.isChecked)\n                model = R.drawable.shape_bg_dialog_custom\n\n            var pickerLayout = 0\n            if (radioPickerDefault.isChecked)\n                pickerLayout = 0\n            if (radioPickerSegmentation.isChecked) {\n                displayList = null\n                pickerLayout = R.layout.layout_date_picker_segmentation\n            }\n            if (radioPickerGrid.isChecked) {\n                displayList = null\n                pickerLayout = R.layout.layout_date_picker_grid\n            }\n\n\n            var dialog = CardDatePickerDialog.builder(context)\n                .setTitle("DATE&TIME PICKER")\n                .setDisplayType(displayList)\n                .setBackGroundModel(model)\n//                .setBackGroundModel(if(isDark) R.drawable.shape_bg_dialog_dark else R.drawable.shape_bg_dialog_light)\n                .showBackNow(checkBackNow.isChecked)\n                .setMaxTime(maxDate)\n                .setPickerLayout(pickerLayout)\n                .setMinTime(minDate)\n                .setDefaultTime(defaultDate)\n                .setTouchHideable(true)\n                .setChooseDateModel(DateTimeConfig.DATE_LUNAR)\n                .setWrapSelectorWheel(false)\n                .setThemeColor(if (model == R.drawable.shape_bg_dialog_custom) Color.parseColor("#FF8000") else 0)\n//                .setAssistColor(Color.parseColor("#DDFFFFFF"))\n//                .setDividerColor(Color.parseColor("#222222"))\n                .showDateLabel(checkUnitLabel.isChecked)\n                .showFocusDateInfo(checkDateInfo.isChecked)\n                .setOnChoose("\xe9\x80\x89\xe6\x8b\xa9") {\n                    btnCardDialogShow.text = "${\n                        StringUtils.conversionTime(\n                            it,\n                            "yyyy-MM-dd HH:mm:ss"\n                        )\n                    }    ${StringUtils.getWeek(it)}"\n                }\n                .setOnCancel("\xe5\x85\xb3\xe9\x97\xad") {\n                }.build()\n            dialog.show()\n            //\xe9\x87\x8d\xe7\x82\xb9 \xe9\x9c\x80\xe8\xa6\x81\xe5\x9c\xa8dialog show \xe6\x96\xb9\xe6\xb3\x95\xe5\x90\x8e\n            //\xe5\xbe\x97\xe5\x88\xb0 BottomSheetDialog \xe5\xae\x9e\xe4\xbd\x93\xef\xbc\x8c\xe8\xae\xbe\xe7\xbd\xae\xe5\x85\xb6 isHideable \xe4\xb8\xba fasle\n            (dialog as BottomSheetDialog).behavior.isHideable = false\n        }\n    }\n}\n'