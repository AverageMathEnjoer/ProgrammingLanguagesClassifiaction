b'package effectivejava.chapter6.item39.annotationwithparameter;\n\nimport effectivejava.chapter6.item39.markerannotation.Test;\nimport java.lang.reflect.*;\n\n// Program to process marker annotations and annotations with a parameter (Page 184)\npublic class RunTests {\n    public static void main(String[] args) throws Exception {\n        int tests = 0;\n        int passed = 0;\n        Class<?> testClass = Class.forName(args[0]);\n        for (Method m : testClass.getDeclaredMethods()) {\n            if (m.isAnnotationPresent(Test.class)) {\n                tests++;\n                try {\n                    m.invoke(null);\n                    passed++;\n                } catch (InvocationTargetException wrappedExc) {\n                    Throwable exc = wrappedExc.getCause();\n                    System.out.println(m + " failed: " + exc);\n                } catch (Exception exc) {\n                    System.out.println("Invalid @Test: " + m);\n                }\n            }\n\n            if (m.isAnnotationPresent(ExceptionTest.class)) {\n                tests++;\n                try {\n                    m.invoke(null);\n                    System.out.printf("Test %s failed: no exception%n", m);\n                } catch (InvocationTargetException wrappedEx) {\n                    Throwable exc = wrappedEx.getCause();\n                    Class<? extends Throwable> excType =\n                            m.getAnnotation(ExceptionTest.class).value();\n                    if (excType.isInstance(exc)) {\n                        passed++;\n                    } else {\n                        System.out.printf(\n                                "Test %s failed: expected %s, got %s%n",\n                                m, excType.getName(), exc);\n                    }\n                } catch (Exception exc) {\n                    System.out.println("Invalid @ExceptionTest: " + m);\n                }\n            }\n        }\n\n        System.out.printf("Passed: %d, Failed: %d%n",\n                passed, tests - passed);\n    }\n}\n'