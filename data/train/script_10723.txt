b'#include "convert.h"\n#define WIN32_LEAN_AND_MEAN\n#define NOMINMAX\n#include <Windows.h>\n\nconst char *_ConvertCPP_EmptyCHAR = "";\nconst wchar_t *_ConvertCPP_EmptyWCHAR = L"";\nchar *_WideToMultiByte(const wchar_t *wi, size_t &len)\n{\n\tif (!wi)\n\t\treturn nullptr;\n\tint wcLen = (int)(wcslen(wi) & 0x7FFFFFFF);\n\tint mbLen = WideCharToMultiByte(CP_UTF8, 0, wi, wcLen, NULL, 0, NULL, NULL);\n\tchar *ret = new char[mbLen + 1];\n\tWideCharToMultiByte(CP_UTF8, 0, wi, wcLen, ret, mbLen, NULL, NULL);\n\tret[mbLen] = 0;\n\tlen = (size_t)mbLen;\n\treturn ret;\n}\nwchar_t *_MultiByteToWide(const char *mb, size_t &len)\n{\n\tif (!mb)\n\t\treturn nullptr;\n\tint mbLen = (int)(strlen(mb) & 0x7FFFFFFF);\n\tint wcLen = MultiByteToWideChar(CP_UTF8, 0, mb, mbLen, NULL, 0);\n\twchar_t *ret = new wchar_t[wcLen + 1];\n\tMultiByteToWideChar(CP_UTF8, 0, mb, mbLen, ret, wcLen);\n\tret[wcLen] = 0;\n\tlen = (size_t)wcLen;\n\treturn ret;\n}\nwchar_t *_WideToWide(const wchar_t *wi, size_t &len)\n{\n\tif (!wi)\n\t\treturn nullptr;\n\tlen = wcslen(wi);\n\twchar_t *ret = new wchar_t[len + 1];\n\twcscpy(ret, wi);\n\treturn ret;\n}\nchar *_MultiByteToMultiByte(const char *mb, size_t &len)\n{\n\tif (!mb)\n\t\treturn nullptr;\n\tlen = strlen(mb);\n\tchar *ret = new char[len + 1];\n\tstrcpy(ret, mb);\n\treturn ret;\n}\nvoid _FreeCHAR(char *c)\n{\n\tif (c != nullptr)\n\t\tdelete[] c;\n}\nvoid _FreeWCHAR(WCHAR *c)\n{\n\tif (c != nullptr)\n\t\tdelete[] c;\n}\n'