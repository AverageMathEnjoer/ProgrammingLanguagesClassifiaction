b"\xef\xbb\xbfusing System;\nusing Asn1;\nusing System.Collections.Generic;\nusing System.Text;\n\nnamespace Rubeus\n{\n    public class KRB_ERROR\n    {\n        //KRB-ERROR       ::= [APPLICATION 30] SEQUENCE {\n        //        pvno            [0] INTEGER (5),\n        //        msg-type        [1] INTEGER (30),\n        //        ctime           [2] KerberosTime OPTIONAL,\n        //        cusec           [3] Microseconds OPTIONAL,\n        //        stime           [4] KerberosTime,\n        //        susec           [5] Microseconds,\n        //        error-code      [6] Int32,\n        //        crealm          [7] Realm OPTIONAL,\n        //        cname           [8] PrincipalName OPTIONAL,\n        //        realm           [9] Realm -- service realm --,\n        //        sname           [10] PrincipalName -- service name --,\n        //        e-text          [11] KerberosString OPTIONAL,\n        //        e-data          [12] OCTET STRING OPTIONAL\n        //}\n\n        public KRB_ERROR(byte[] errorBytes)\n        {\n            \n        }\n\n        public KRB_ERROR(AsnElt body)\n        {\n            foreach (AsnElt s in body.Sub)\n            {\n                switch (s.TagValue)\n                {\n                    case 0:\n                        pvno = Convert.ToUInt32(s.Sub[0].GetInteger());\n                        break;\n                    case 1:\n                        msg_type = Convert.ToUInt32(s.Sub[0].GetInteger());\n                        break;\n                    case 2:\n                        ctime = s.Sub[0].GetTime();\n                        break;\n                    case 3:\n                        cusec = Convert.ToUInt32(s.Sub[0].GetInteger());\n                        break;\n                    case 4:\n                        stime = s.Sub[0].GetTime();\n                        break;\n                    case 5:\n                        susec = Convert.ToUInt32(s.Sub[0].GetInteger());\n                        break;\n                    case 6:\n                        error_code = Convert.ToUInt32(s.Sub[0].GetInteger());\n                        break;\n                    case 7:\n                        crealm = Encoding.ASCII.GetString(s.Sub[0].GetOctetString());\n                        break;\n                    case 8:\n                        cname = new PrincipalName(s.Sub[0]);\n                        break;\n                    case 9:\n                        realm = Encoding.ASCII.GetString(s.Sub[0].GetOctetString());\n                        break;\n                    case 10:\n                        sname = new PrincipalName(s.Sub[0]);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n\n        // don't ever really need to create a KRB_ERROR structure manually, so no Encode()\n\n        public long pvno { get; set; }\n\n        public long msg_type { get; set; }\n\n        public DateTime ctime { get; set; }\n\n        public long cusec { get; set; }\n\n        public DateTime stime { get; set; }\n\n        public long susec { get; set; }\n\n        public long error_code { get; set; }\n\n        public string crealm { get; set; }\n\n        public PrincipalName cname { get; set; }\n\n        public string realm { get; set; }\n\n        public PrincipalName sname { get; set; }\n\n        // skipping these two for now\n        // e_text\n        // e_data\n\n\n        //public Ticket[] tickets { get; set; }\n        public List<Ticket> tickets { get; set; }\n\n        public EncKrbCredPart enc_part { get; set; }\n    }\n}"