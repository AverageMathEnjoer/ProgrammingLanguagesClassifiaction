b'import Data.List\nimport Data.List.Ordered\nimport Data.Array\n\nxs = [7, 3, 1, 9, 5]\nys = [40, 20, 30, 60, 50]\n\ncmp :: Ord a => Num a => (a, (Int, Int)) -> (a, (Int, Int)) -> Ordering\ncmp x y = compare x y\n\nsortsums :: Ord a => Num a => [a] -> [a] -> [a]\nsortsums xs ys = map fst (sortsubs xs (map negate ys))\n\nsortsubs :: Ord a => Num a => [a] -> [a] -> [(a, (Int, Int))]\nsortsubs xs ys = sortBy cmp (subs xs ys)\n\nsubs :: Ord a => Num a => [a] -> [a] -> [(a, (Int, Int))]\nsubs xs ys = [ (x - y, (i, j)) | (x, i) <- zip xs [1..], (y, j) <- zip ys [1..]]\n\nmain = putStrLn $ show $ sortsums xs ys \n\n'