b'{-# LANGUAGE CPP #-}\nmodule Database.Beam.Postgres.Test where\n\n#if MIN_VERSION_base(4,12,0)\nimport           Prelude hiding (fail)\n#endif\n\nimport qualified Database.PostgreSQL.Simple as Pg\n\nimport           Control.Exception (bracket)\n\nimport           Control.Monad (void)\n\nimport           Data.ByteString (ByteString)\nimport           Data.String\n\n#if MIN_VERSION_base(4,12,0)\n#if !MIN_VERSION_hedgehog(1,0,0)\nimport           Control.Monad.Fail (MonadFail(..))\nimport qualified Hedgehog\n-- TODO orphan instances are bad\n-- Would be easier to say \'build-depends: hedgehog >= 1.0\',\n-- but it\'s difficult to propagate to older Stackage snapshots\ninstance Monad m => MonadFail (Hedgehog.PropertyT m) where\n    fail _ = Hedgehog.failure\n#endif\n#endif\n\nwithTestPostgres :: String -> IO ByteString -> (Pg.Connection -> IO a) -> IO a\nwithTestPostgres dbName getConnStr action = do\n  connStr <- getConnStr\n\n  let connStrTemplate1 = connStr <> " dbname=template1"\n      connStrDb = connStr <> " dbname=" <> fromString dbName\n\n      withTemplate1 :: (Pg.Connection -> IO b) -> IO b\n      withTemplate1 = bracket (Pg.connectPostgreSQL connStrTemplate1) Pg.close\n\n      createDatabase = withTemplate1 $ \\c -> do\n                         void $ Pg.execute_ c (fromString ("CREATE DATABASE " <> dbName))\n\n                         Pg.connectPostgreSQL connStrDb\n      dropDatabase c = do\n        Pg.close c\n        withTemplate1 $ \\c\' -> void $\n          Pg.execute_ c\' (fromString ("DROP DATABASE " <> dbName))\n\n  bracket createDatabase dropDatabase action\n'