b'package co.joebirch.composeplayground\n\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.material.*\nimport androidx.compose.material.ButtonDefaults.buttonColors\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.rememberCoroutineScope\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.RectangleShape\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport kotlinx.coroutines.launch\n\nobject BackdropScaffoldView : ComposableLayout {\n\n    @ExperimentalMaterialApi\n    @Composable\n    override fun build() {\n        val coroutineScope = rememberCoroutineScope()\n        val backdropState = rememberBackdropScaffoldState(BackdropValue.Concealed)\n        BackdropScaffold(\n            frontLayerScrimColor = Color.Black,\n            appBar = {\n            TopAppBar {\n                Box(\n                    contentAlignment = Alignment.Center\n                ) {\n                    Text(\n                        text = "Backdrop Scaffold",\n                        modifier = Modifier.padding(16.dp),\n                        fontWeight = FontWeight.Bold,\n                        textAlign = TextAlign.Center,\n                        fontSize = 18.sp\n                    )\n                }\n            }\n        }, backLayerContent = {\n            Box(\n                modifier = Modifier.fillMaxSize(),\n                contentAlignment = Alignment.Center\n            ) {\n                Button(\n                    onClick = {\n                        coroutineScope.launch {\n                            backdropState.conceal()\n                        }\n                    },\n                    colors = buttonColors(\n                        contentColor = MaterialTheme.colors.primary,\n                        backgroundColor = Color.White\n                    )\n                ) {\n                    Text(text = "Back Content")\n                }\n            }\n        },\n            scaffoldState = backdropState,\n            frontLayerContent = {\n                Box(\n                    modifier = Modifier.fillMaxSize(),\n                    contentAlignment = Alignment.Center\n                ) {\n                    Button(onClick = {\n                        coroutineScope.launch {\n                            backdropState.reveal()\n                        }\n                    }) {\n                        Text(text = "Front Content")\n                    }\n                }\n            }\n        )\n    }\n\n    @ExperimentalMaterialApi\n    @Composable\n    fun Props() {\n        val coroutineScope = rememberCoroutineScope()\n        val backdropState = rememberBackdropScaffoldState(BackdropValue.Concealed)\n        BackdropScaffold(\n            frontLayerShape = RectangleShape,\n            frontLayerElevation = 12.dp,\n            frontLayerContentColor = Color.DarkGray,\n            frontLayerBackgroundColor = Color.LightGray,\n            appBar = {\n                TopAppBar {\n                    Box(\n                        contentAlignment = Alignment.Center\n                    ) {\n                        Text(\n                            text = "Backdrop Scaffold",\n                            modifier = Modifier.padding(16.dp),\n                            fontWeight = FontWeight.Bold,\n                            textAlign = TextAlign.Center,\n                            fontSize = 18.sp\n                        )\n                    }\n                }\n            }, backLayerContent = {\n                Box(\n                    modifier = Modifier.fillMaxSize(),\n                    contentAlignment = Alignment.Center\n                ) {\n                    Button(\n                        onClick = {\n                            coroutineScope.launch {\n                                backdropState.conceal()\n                            }\n                        },\n                        colors = buttonColors(\n                            contentColor = MaterialTheme.colors.primary,\n                            backgroundColor = Color.White\n                        )\n                    ) {\n                        Text(text = "Back Content")\n                    }\n                }\n            },\n            scaffoldState = backdropState,\n            frontLayerContent = {\n                Box(\n                    modifier = Modifier.fillMaxSize(),\n                    contentAlignment = Alignment.Center\n                ) {\n                    Button(onClick = {\n                        coroutineScope.launch {\n                            backdropState.reveal()\n                        }\n                    }) {\n                        Text(text = "Front Content")\n                    }\n                }\n            }\n        )\n    }\n}'