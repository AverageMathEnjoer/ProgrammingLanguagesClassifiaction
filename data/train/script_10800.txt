b'{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# LANGUAGE TypeFamilies #-}\n\n-- | [Fitbit Authorization developer guide](https://dev.fitbit.com/build/reference/web-api/developer-guide/authorization/)\nmodule Network.OAuth2.Provider.Fitbit where\n\nimport Control.Monad (mzero)\nimport Data.Aeson\nimport Data.Map.Strict qualified as Map\nimport Data.Set qualified as Set\nimport Data.Text.Lazy (Text)\nimport Network.OAuth.OAuth2\nimport Network.OAuth2.Experiment\nimport URI.ByteString.QQ\n\ndata Fitbit = Fitbit deriving (Eq, Show)\n\ntype instance IdpUserInfo Fitbit = FitbitUser\n\ndefaultFitbitApp :: IdpApplication \'AuthorizationCode Fitbit\ndefaultFitbitApp =\n  AuthorizationCodeIdpApplication\n    { idpAppClientId = ""\n    , idpAppClientSecret = ""\n    , idpAppScope = Set.empty\n    , idpAppAuthorizeExtraParams = Map.empty\n    , idpAppAuthorizeState = "CHANGE_ME"\n    , idpAppRedirectUri = [uri|http://localhost|]\n    , idpAppName = "default-fitbit-App"\n    , idpAppTokenRequestAuthenticationMethod = ClientSecretBasic\n    , idp = defaultFitbitIdp\n    }\n\ndefaultFitbitIdp :: Idp Fitbit\ndefaultFitbitIdp =\n  Idp\n    { idpFetchUserInfo = authGetJSON @(IdpUserInfo Fitbit)\n    , idpUserInfoEndpoint = [uri|https://api.fitbit.com/1/user/-/profile.json|]\n    , idpAuthorizeEndpoint = [uri|https://www.fitbit.com/oauth2/authorize|]\n    , idpTokenEndpoint = [uri|https://api.fitbit.com/oauth2/token|]\n    }\n\ndata FitbitUser = FitbitUser\n  { userId :: Text\n  , userName :: Text\n  , userAge :: Int\n  }\n  deriving (Show, Eq)\n\ninstance FromJSON FitbitUser where\n  parseJSON (Object o) =\n    FitbitUser\n      <$> ((o .: "user") >>= (.: "encodedId"))\n      <*> ((o .: "user") >>= (.: "fullName"))\n      <*> ((o .: "user") >>= (.: "age"))\n  parseJSON _ = mzero\n'