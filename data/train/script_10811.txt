b'#\' Plot matching patterns of the EM object by posterior probability of match\n#\'\n#\' \\code{plot.fastLink()} plots the matching patterns of the EM object,\n#\' ordering the matching patterns by the posterior probability of the match.\n#\'\n#\' @usage \\method{plot}{fastLink}(x, posterior.range, ...)\n#\' @param x Either a \\code{fastLink} or \\code{fastLink.EM} object to be plotted.\n#\' @param posterior.range The range of posterior probabilities to display.\n#\' Default is c(0.85, 1).\n#\' @param ... Further arguments to be passed to \\code{plot.fastLink()}.\n#\'\n#\' @export\n#\' @method plot fastLink\n#\' @importFrom plotrix staxlab\n#\' @importFrom grDevices colorRampPalette\n#\' @importFrom graphics axis legend plot polygon\nplot.fastLink <- function(x, posterior.range = c(.85, 1), ...){\n    \n    ## Extract EM object\n    if(inherits(x, "fastLink.EM")){\n        em <- x\n    }else{\n        em <- x$EM\n    }\n\n    if(min(posterior.range) < 0 | max(posterior.range) > 1){\n        stop("Please make sure that posterior.range is between 0 and 1.")\n    }\n    if(length(posterior.range) == 1){\n        posterior.range <- c(posterior.range, 1)\n    }\n\n    em.ins <- em\n    em.ins <- data.frame(em.ins$patterns.w)\n    em.ins$zeta.j <- em$zeta.j\n    em.ins <- em.ins[order(em.ins[, "zeta.j"]), ]\n    inds.gamma <- grep("gamma.[[:digit:]]", colnames(em.ins))\n\n    ## Subset to the neighborhood around threshold\n    min <- which.min(abs(em.ins$zeta.j - posterior.range[1]))\n    max <- which.min(abs(em.ins$zeta.j - posterior.range[2]))\n    em.ins <- em.ins[min:max,]\n    colfunc <- colorRampPalette(c("darkred", "white"))\n    cols <- colfunc(3)\n    if(is.null(em$varnames)){\n        varnames <- paste0("gamma.", 1:max(inds.gamma))\n    }else{\n        varnames <- em$varnames\n    }\n    ylabs <- seq(min(posterior.range), max(posterior.range), by = .05)\n    yinds <- sapply(ylabs, function(x){which.min(abs(em.ins$zeta.j - x))})\n\n    ## Plot polygons\n    extra.x <- ceiling(length(inds.gamma)/3)\n    plot(1,\n         type = "n",\n         xlim = c(0, length(inds.gamma) + extra.x),\n         ylim = c(0, nrow(em.ins)),\n         xaxt = "n", xlab = "",\n         yaxt = "n", ylab = "Posterior Probability of a Match",\n         bty = "n",\n         main = "Matching Patterns Ordered by Posterior Probability of Match"\n         )\n    staxlab(1, 1:length(inds.gamma)-.5, varnames,\n            srt = 45, top.line = 0)\n    axis(2, yinds-.5, ylabs)\n    for(i in 1:nrow(em.ins)){\n\n        for(j in 1:length(inds.gamma)){\n            val <- em.ins[i,j]\n            c.val <- ifelse(is.na(val), "grey",\n                     ifelse(val == 0, cols[3],\n                     ifelse(val == 1, cols[2],\n                            cols[1])))\n            polygon(c(j-1, j, j, j-1),\n                    c(i-1, i-1, i, i),\n                    col = c.val)\n        }  \n        \n    }\n    legend("topright",\n           c("Match", "Partial Match", "Non-Match", "NA"),\n           pch = rep(22, 4), col = rep("black", 4),\n           pt.bg = c(cols[1], cols[2], cols[3], "grey"),\n           bty = "n")\n\n}\n\n'