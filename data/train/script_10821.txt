b'package com.naman14.timber.cast;\n\nimport android.net.Uri;\nimport android.util.Log;\n\nimport com.google.android.gms.cast.MediaInfo;\nimport com.google.android.gms.cast.MediaMetadata;\nimport com.google.android.gms.cast.TextTrackStyle;\nimport com.google.android.gms.cast.framework.CastSession;\nimport com.google.android.gms.cast.framework.media.RemoteMediaClient;\nimport com.google.android.gms.common.images.WebImage;\nimport com.naman14.timber.models.Song;\nimport com.naman14.timber.utils.Constants;\nimport com.naman14.timber.utils.TimberUtils;\n\nimport java.net.MalformedURLException;\nimport java.net.URL;\n\n/**\n * Created by naman on 2/12/17.\n */\n\npublic class TimberCastHelper  {\n\n    public static void startCasting(CastSession castSession, Song song) {\n\n        String ipAddress = TimberUtils.getIPAddress(true);\n        URL baseUrl;\n        try {\n            baseUrl = new URL("http", ipAddress, Constants.CAST_SERVER_PORT, "" );\n        } catch (MalformedURLException e) {\n            e.printStackTrace();\n            return;\n        }\n\n        String songUrl = baseUrl.toString() + "/song?id=" + song.id;\n        String albumArtUrl = baseUrl.toString() + "/albumart?id=" + song.albumId;\n\n        MediaMetadata musicMetadata = new MediaMetadata(MediaMetadata.MEDIA_TYPE_MUSIC_TRACK);\n\n        musicMetadata.putString(MediaMetadata.KEY_TITLE, song.title);\n        musicMetadata.putString(MediaMetadata.KEY_ARTIST, song.artistName);\n        musicMetadata.putString(MediaMetadata.KEY_ALBUM_TITLE, song.albumName);\n        musicMetadata.putInt(MediaMetadata.KEY_TRACK_NUMBER, song.trackNumber);\n        musicMetadata.addImage(new WebImage(Uri.parse(albumArtUrl)));\n\n        try {\n            MediaInfo mediaInfo = new MediaInfo.Builder(songUrl)\n                    .setStreamType(MediaInfo.STREAM_TYPE_BUFFERED)\n                    .setContentType("audio/mpeg")\n                    .setMetadata(musicMetadata)\n                    .setStreamDuration(song.duration)\n                    .build();\n            RemoteMediaClient remoteMediaClient = castSession.getRemoteMediaClient();\n            remoteMediaClient.load(mediaInfo, true, 0);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n'