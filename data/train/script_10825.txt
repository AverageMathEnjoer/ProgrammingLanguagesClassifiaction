b'package effectivejava.chapter6.item39.markerannotation;\n\n// Program to process marker annotations (Page 182)\n\nimport java.lang.reflect.*;\n\npublic class RunTests {\n    public static void main(String[] args) throws Exception {\n        int tests = 0;\n        int passed = 0;\n        Class<?> testClass = Class.forName(args[0]);\n        for (Method m : testClass.getDeclaredMethods()) {\n            if (m.isAnnotationPresent(Test.class)) {\n                tests++;\n                try {\n                    m.invoke(null);\n                    passed++;\n                } catch (InvocationTargetException wrappedExc) {\n                    Throwable exc = wrappedExc.getCause();\n                    System.out.println(m + " failed: " + exc);\n                } catch (Exception exc) {\n                    System.out.println("Invalid @Test: " + m);\n                }\n            }\n        }\n        System.out.printf("Passed: %d, Failed: %d%n",\n                passed, tests - passed);\n    }\n}\n'