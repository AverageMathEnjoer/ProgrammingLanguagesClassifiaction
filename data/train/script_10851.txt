b'package com.codeest.geeknews.model.db;\n\nimport com.codeest.geeknews.model.bean.GoldManagerBean;\nimport com.codeest.geeknews.model.bean.ReadStateBean;\nimport com.codeest.geeknews.model.bean.RealmLikeBean;\n\nimport java.util.List;\n\nimport javax.inject.Inject;\n\nimport io.realm.Realm;\nimport io.realm.RealmConfiguration;\nimport io.realm.RealmResults;\n\n/**\n * Created by codeest on 16/8/16.\n */\n\npublic class RealmHelper implements DBHelper {\n\n    private static final String DB_NAME = "myRealm.realm";\n\n    private Realm mRealm;\n\n    @Inject\n    public RealmHelper() {\n        mRealm = Realm.getInstance(new RealmConfiguration.Builder()\n                .deleteRealmIfMigrationNeeded()\n                .name(DB_NAME)\n                .build());\n    }\n\n    /**\n     * \xe5\xa2\x9e\xe5\x8a\xa0 \xe9\x98\x85\xe8\xaf\xbb\xe8\xae\xb0\xe5\xbd\x95\n     * @param id\n     * \xe4\xbd\xbf\xe7\x94\xa8@PrimaryKey\xe6\xb3\xa8\xe8\xa7\xa3\xe5\x90\x8ecopyToRealm\xe9\x9c\x80\xe8\xa6\x81\xe6\x9b\xbf\xe6\x8d\xa2\xe4\xb8\xbacopyToRealmOrUpdate\n     */\n    @Override\n    public void insertNewsId(int id) {\n        ReadStateBean bean = new ReadStateBean();\n        bean.setId(id);\n        mRealm.beginTransaction();\n        mRealm.copyToRealmOrUpdate(bean);\n        mRealm.commitTransaction();\n    }\n\n    /**\n     * \xe6\x9f\xa5\xe8\xaf\xa2 \xe9\x98\x85\xe8\xaf\xbb\xe8\xae\xb0\xe5\xbd\x95\n     * @param id\n     * @return\n     */\n    @Override\n    public boolean queryNewsId(int id) {\n        RealmResults<ReadStateBean> results = mRealm.where(ReadStateBean.class).findAll();\n        for(ReadStateBean item : results) {\n            if(item.getId() == id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * \xe5\xa2\x9e\xe5\x8a\xa0 \xe6\x94\xb6\xe8\x97\x8f\xe8\xae\xb0\xe5\xbd\x95\n     * @param bean\n     */\n    @Override\n    public void insertLikeBean(RealmLikeBean bean) {\n        mRealm.beginTransaction();\n        mRealm.copyToRealmOrUpdate(bean);\n        mRealm.commitTransaction();\n    }\n\n    /**\n     * \xe5\x88\xa0\xe9\x99\xa4 \xe6\x94\xb6\xe8\x97\x8f\xe8\xae\xb0\xe5\xbd\x95\n     * @param id\n     */\n    @Override\n    public void deleteLikeBean(String id) {\n        RealmLikeBean data = mRealm.where(RealmLikeBean.class).equalTo("id",id).findFirst();\n        mRealm.beginTransaction();\n        if (data != null) {\n            data.deleteFromRealm();\n        }\n        mRealm.commitTransaction();\n    }\n\n    /**\n     * \xe6\x9f\xa5\xe8\xaf\xa2 \xe6\x94\xb6\xe8\x97\x8f\xe8\xae\xb0\xe5\xbd\x95\n     * @param id\n     * @return\n     */\n    @Override\n    public boolean queryLikeId(String id) {\n        RealmResults<RealmLikeBean> results = mRealm.where(RealmLikeBean.class).findAll();\n        for(RealmLikeBean item : results) {\n            if(item.getId().equals(id)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    @Override\n    public List<RealmLikeBean> getLikeList() {\n        //\xe4\xbd\xbf\xe7\x94\xa8findAllSort ,\xe5\x85\x88findAll\xe5\x86\x8dresult.sort\xe6\x97\xa0\xe6\x95\x88\n        RealmResults<RealmLikeBean> results = mRealm.where(RealmLikeBean.class).findAllSorted("time");\n        return mRealm.copyFromRealm(results);\n    }\n\n    /**\n     * \xe4\xbf\xae\xe6\x94\xb9 \xe6\x94\xb6\xe8\x97\x8f\xe8\xae\xb0\xe5\xbd\x95 \xe6\x97\xb6\xe9\x97\xb4\xe6\x88\xb3\xe4\xbb\xa5\xe9\x87\x8d\xe6\x96\xb0\xe6\x8e\x92\xe5\xba\x8f\n     * @param id\n     * @param time\n     * @param isPlus\n     */\n    @Override\n    public void changeLikeTime(String id ,long time, boolean isPlus) {\n        RealmLikeBean bean = mRealm.where(RealmLikeBean.class).equalTo("id", id).findFirst();\n        mRealm.beginTransaction();\n        if (isPlus) {\n            bean.setTime(++time);\n        } else {\n            bean.setTime(--time);\n        }\n        mRealm.commitTransaction();\n    }\n\n    /**\n     * \xe6\x9b\xb4\xe6\x96\xb0 \xe6\x8e\x98\xe9\x87\x91\xe9\xa6\x96\xe9\xa1\xb5\xe7\xae\xa1\xe7\x90\x86\xe5\x88\x97\xe8\xa1\xa8\n     * @param bean\n     */\n    @Override\n    public void updateGoldManagerList(GoldManagerBean bean) {\n        GoldManagerBean data = mRealm.where(GoldManagerBean.class).findFirst();\n        mRealm.beginTransaction();\n        if (data != null) {\n            data.deleteFromRealm();\n        }\n        mRealm.copyToRealm(bean);\n        mRealm.commitTransaction();\n    }\n\n    /**\n     * \xe8\x8e\xb7\xe5\x8f\x96 \xe6\x8e\x98\xe9\x87\x91\xe9\xa6\x96\xe9\xa1\xb5\xe7\xae\xa1\xe7\x90\x86\xe5\x88\x97\xe8\xa1\xa8\n     * @return\n     */\n    @Override\n    public GoldManagerBean getGoldManagerList() {\n        GoldManagerBean bean = mRealm.where(GoldManagerBean.class).findFirst();\n        if (bean == null)\n            return null;\n        return mRealm.copyFromRealm(bean);\n    }\n}\n'