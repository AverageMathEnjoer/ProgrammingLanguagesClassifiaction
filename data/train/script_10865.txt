b'package icu.nullptr.twifucker.ui\n\nimport android.content.Context\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.ViewGroup.LayoutParams.MATCH_PARENT\nimport android.view.ViewGroup.LayoutParams.WRAP_CONTENT\n\n// Thanks Drakeet Xu\n\nabstract class CustomLayout(context: Context) : ViewGroup(context) {\n    protected fun View.autoMeasure() {\n        measure(\n            defaultWidthMeasureSpec(this@CustomLayout), defaultHeightMeasureSpec(this@CustomLayout)\n        )\n    }\n\n    protected fun View.layout(x: Int, y: Int, fromRight: Boolean = false) {\n        if (!fromRight) {\n            layout(x, y, x + measuredWidth, y + measuredHeight)\n        } else {\n            layout(this@CustomLayout.measuredWidth - x - measuredWidth, y)\n        }\n    }\n\n    protected val View.measuredWidthWithMargins get() = (measuredWidth + marginStart + marginEnd)\n\n    protected val View.measuredHeightWithMargins get() = (measuredHeight + marginTop + marginBottom)\n\n    protected fun View.defaultWidthMeasureSpec(parentView: ViewGroup): Int {\n        return when (layoutParams.width) {\n            MATCH_PARENT -> parentView.measuredWidth.toExactlyMeasureSpec()\n            WRAP_CONTENT -> WRAP_CONTENT.toAtMostMeasureSpec()\n            0 -> throw IllegalArgumentException("Need special treatment for $this")\n            else -> layoutParams.width.toExactlyMeasureSpec()\n        }\n    }\n\n    protected fun View.defaultHeightMeasureSpec(parentView: ViewGroup): Int {\n        return when (layoutParams.height) {\n            MATCH_PARENT -> parentView.measuredHeight.toExactlyMeasureSpec()\n            WRAP_CONTENT -> WRAP_CONTENT.toAtMostMeasureSpec()\n            0 -> throw IllegalArgumentException("Need special treatment for $this")\n            else -> layoutParams.height.toExactlyMeasureSpec()\n        }\n    }\n\n    protected fun Int.toExactlyMeasureSpec(): Int =\n        MeasureSpec.makeMeasureSpec(this, MeasureSpec.EXACTLY)\n\n    protected fun Int.toAtMostMeasureSpec(): Int =\n        MeasureSpec.makeMeasureSpec(this, MeasureSpec.AT_MOST)\n\n    protected val Int.dp: Int get() = (this * resources.displayMetrics.density * 0.5f).toInt()\n\n    protected class LayoutParams(width: Int, height: Int) : MarginLayoutParams(width, height)\n\n    // Taken from\n    // https://android.googlesource.com/platform/frameworks/support/+/android-room-release/core/ktx/src/main/java/androidx/core/view/View.kt\n\n    inline val View.marginStart: Int\n        get() = (layoutParams as? MarginLayoutParams)?.leftMargin ?: 0\n    inline val View.marginTop: Int\n        get() = (layoutParams as? MarginLayoutParams)?.topMargin ?: 0\n    inline val View.marginEnd: Int\n        get() = (layoutParams as? MarginLayoutParams)?.rightMargin ?: 0\n    inline val View.marginBottom: Int\n        get() = (layoutParams as? MarginLayoutParams)?.bottomMargin ?: 0\n\n    inline val View.isRTL: Boolean\n        get() = context.resources.configuration.layoutDirection == View.LAYOUT_DIRECTION_RTL\n}'