b'package com.rd.pageindicatorview.customize;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.graphics.PorterDuff;\nimport android.os.Bundle;\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport android.view.View;\nimport android.widget.*;\nimport com.rd.pageindicatorview.base.BaseActivity;\nimport com.rd.pageindicatorview.data.Customization;\nimport com.rd.pageindicatorview.data.CustomizationConverter;\nimport com.rd.pageindicatorview.sample.R;\n\npublic class CustomizeActivity extends BaseActivity implements AdapterView.OnItemSelectedListener, CompoundButton.OnCheckedChangeListener {\n\n    public static final String EXTRAS_CUSTOMIZATION = "EXTRAS_CUSTOMIZATION";\n    public static final int EXTRAS_CUSTOMIZATION_REQUEST_CODE = 1000;\n\n    private Customization customization;\n\n    public static void start(@NonNull Activity activity, @NonNull Customization customization) {\n        Intent intent = new Intent(activity, CustomizeActivity.class);\n        intent.putExtra(EXTRAS_CUSTOMIZATION, customization);\n        activity.startActivityForResult(intent, EXTRAS_CUSTOMIZATION_REQUEST_CODE);\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.ac_customize);\n\n        initToolbar();\n        displayBackButton(true);\n        initData();\n        initViews();\n    }\n\n    @Override\n    public void finish() {\n        Intent intent = new Intent();\n        intent.putExtra(EXTRAS_CUSTOMIZATION, customization);\n        setResult(Activity.RESULT_OK, intent);\n\n        super.finish();\n    }\n\n    @Override\n    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n        switch (parent.getId()) {\n            case R.id.spinnerAnimationType:\n                customization.setAnimationType(CustomizationConverter.getAnimationType(position));\n                break;\n\n            case R.id.spinnerOrientation:\n                customization.setOrientation(CustomizationConverter.getOrientation(position));\n                break;\n\n            case R.id.spinnerRtl:\n                customization.setRtlMode(CustomizationConverter.getRtlMode(position));\n                break;\n        }\n    }\n\n    @Override\n    public void onNothingSelected(AdapterView<?> parent) {/*empty*/}\n\n    @Override\n    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n        int id = buttonView.getId();\n        switch (id) {\n            case R.id.switchInteractiveAnimation:\n                customization.setInteractiveAnimation(isChecked);\n                break;\n\n            case R.id.switchAutoVisibility:\n                customization.setAutoVisibility(isChecked);\n                break;\n\n            case R.id.switchFadeOnIdle:\n                customization.setFadeOnIdle(isChecked);\n                break;\n        }\n    }\n\n    private void initData() {\n        Intent intent = getIntent();\n        if (intent != null) {\n            customization = intent.getParcelableExtra(EXTRAS_CUSTOMIZATION);\n        } else {\n            customization = new Customization();\n        }\n    }\n\n    private void initViews() {\n        Spinner spinnerAnimationType = findViewById(R.id.spinnerAnimationType);\n        setSpinnerAdapter(spinnerAnimationType, R.array.animation_type);\n        spinnerAnimationType.setOnItemSelectedListener(this);\n        spinnerAnimationType.setSelection(customization.getAnimationType().ordinal());\n\n        Spinner spinnerOrientation = findViewById(R.id.spinnerOrientation);\n        setSpinnerAdapter(spinnerOrientation, R.array.orientation);\n        spinnerOrientation.setOnItemSelectedListener(this);\n        spinnerOrientation.setSelection(customization.getOrientation().ordinal());\n\n        Spinner spinnerRtl = findViewById(R.id.spinnerRtl);\n        setSpinnerAdapter(spinnerRtl, R.array.rtl);\n        spinnerRtl.setOnItemSelectedListener(this);\n        spinnerRtl.setSelection(customization.getRtlMode().ordinal());\n\n        Switch switchInteractiveAnimation = findViewById(R.id.switchInteractiveAnimation);\n        switchInteractiveAnimation.setOnCheckedChangeListener(this);\n        switchInteractiveAnimation.setChecked(customization.isInteractiveAnimation());\n\n        Switch switchAutoVisibility = findViewById(R.id.switchAutoVisibility);\n        switchAutoVisibility.setOnCheckedChangeListener(this);\n        switchAutoVisibility.setChecked(customization.isAutoVisibility());\n\n        Switch switchFadeOnIdle = findViewById(R.id.switchFadeOnIdle);\n        switchFadeOnIdle.setOnCheckedChangeListener(this);\n        switchFadeOnIdle.setChecked(customization.isFadeOnIdle());\n\n    }\n\n    private void setSpinnerAdapter(@Nullable Spinner spinner, int textArrayId) {\n        if (spinner != null) {\n            ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, textArrayId, R.layout.item_spinner_selected);\n            adapter.setDropDownViewResource(R.layout.item_spinner_drop_down);\n            spinner.setAdapter(adapter);\n            spinner.getBackground().setColorFilter(getResources().getColor(R.color.gray_500), PorterDuff.Mode.SRC_ATOP);\n        }\n    }\n}\n'