b'module Util.Event\n  ( eventInfoToString,\n    eventInfoEnumMap,\n  )\nwhere\n\nimport GHC.RTS.Events (EventInfo (..))\n\neventInfoToString :: EventInfo -> String\neventInfoToString info =\n  case info of\n    EventBlock {} -> "EventBlock"\n    UnknownEvent {} -> "UnknownEvent"\n    Startup {} -> "Startup"\n    Shutdown {} -> "Shutdown"\n    CreateThread {} -> "CreateThread"\n    RunThread {} -> "RunThread"\n    StopThread {} -> "StopThread"\n    ThreadRunnable {} -> "ThreadRunnable"\n    MigrateThread {} -> "MigrateThread"\n    WakeupThread {} -> "WakeupThread"\n    ThreadLabel {} -> "ThreadLabel"\n    CreateSparkThread {} -> "CreateSparkThread"\n    SparkCounters {} -> "SparkCounters"\n    SparkCreate {} -> "SparkCreate"\n    SparkDud {} -> "SparkDud"\n    SparkOverflow {} -> "SparkOverflow"\n    SparkRun {} -> "SparkRun"\n    SparkSteal {} -> "SparkSteal"\n    SparkFizzle {} -> "SparkFizzle"\n    SparkGC {} -> "SparkGC"\n    TaskCreate {} -> "TaskCreate"\n    TaskMigrate {} -> "TaskMigrate"\n    TaskDelete {} -> "TaskDelete"\n    RequestSeqGC {} -> "RequestSeqGC"\n    RequestParGC {} -> "RequestParGC"\n    StartGC {} -> "StartGC"\n    GCWork {} -> "GCWork"\n    GCIdle {} -> "GCIdle"\n    GCDone {} -> "GCDone"\n    EndGC {} -> "EndGC"\n    GlobalSyncGC {} -> "GlobalSyncGC"\n    GCStatsGHC {} -> "GCStatsGHC"\n    MemReturn {} -> "MemReturn"\n    HeapAllocated {} -> "HeapAllocated"\n    HeapSize {} -> "HeapSize"\n    BlocksSize {} -> "BlocksSize"\n    HeapLive {} -> "HeapLive"\n    HeapInfoGHC {} -> "HeapInfoGHC"\n    CapCreate {} -> "CapCreate"\n    CapDelete {} -> "CapDelete"\n    CapDisable {} -> "CapDisable"\n    CapEnable {} -> "CapEnable"\n    CapsetCreate {} -> "CapsetCreate"\n    CapsetDelete {} -> "CapsetDelete"\n    CapsetAssignCap {} -> "CapsetAssignCap"\n    CapsetRemoveCap {} -> "CapsetRemoveCap"\n    RtsIdentifier {} -> "RtsIdentifier"\n    ProgramArgs {} -> "ProgramArgs"\n    ProgramEnv {} -> "ProgramEnv"\n    OsProcessPid {} -> "OsProcessPid"\n    OsProcessParentPid {} -> "OsProcessParentPid"\n    WallClockTime {} -> "WallClockTime"\n    Message {} -> "Message"\n    UserMessage {} -> "UserMessage"\n    UserMarker {} -> "UserMarker"\n    Version {} -> "Version"\n    ProgramInvocation {} -> "ProgramInvocation"\n    CreateMachine {} -> "CreateMachine"\n    KillMachine {} -> "KillMachine"\n    CreateProcess {} -> "CreateProcess"\n    KillProcess {} -> "KillProcess"\n    AssignThreadToProcess {} -> "AssignThreadToProcess"\n    EdenStartReceive {} -> "EdenStartReceive"\n    EdenEndReceive {} -> "EdenEndReceive"\n    SendMessage {} -> "SendMessage"\n    ReceiveMessage {} -> "ReceiveMessage"\n    SendReceiveLocalMessage {} -> "SendReceiveLocalMessage"\n    InternString {} -> "InternString"\n    MerStartParConjunction {} -> "MerStartParConjunction"\n    MerEndParConjunction {} -> "MerEndParConjunction"\n    MerEndParConjunct {} -> "MerEndParConjunct"\n    MerCreateSpark {} -> "MerCreateSpark"\n    MerFutureCreate {} -> "MerFutureCreate"\n    MerFutureWaitNosuspend {} -> "MerFutureWaitNosuspend"\n    MerFutureWaitSuspended {} -> "MerFutureWaitSuspended"\n    MerFutureSignal {} -> "MerFutureSignal"\n    MerLookingForGlobalThread {} -> "MerLookingForGlobalThread"\n    MerWorkStealing {} -> "MerWorkStealing"\n    MerLookingForLocalSpark {} -> "MerLookingForLocalSpark"\n    MerReleaseThread {} -> "MerReleaseThread"\n    MerCapSleeping {} -> "MerCapSleeping"\n    MerCallingMain {} -> "MerCallingMain"\n    PerfName {} -> "PerfName"\n    PerfCounter {} -> "PerfCounter"\n    PerfTracepoint {} -> "PerfTracepoint"\n    HeapProfBegin {} -> "HeapProfBegin"\n    HeapProfCostCentre {} -> "HeapProfCostCentre"\n    InfoTableProv {} -> "InfoTableProv"\n    HeapProfSampleBegin {} -> "HeapProfSampleBegin"\n    HeapProfSampleEnd {} -> "HeapProfSampleEnd"\n    HeapBioProfSampleBegin {} -> "HeapBioProfSampleBegin"\n    HeapProfSampleCostCentre {} -> "HeapBioProfSampleCostCentre"\n    HeapProfSampleString {} -> "HeapProfSampleString"\n    ProfSampleCostCentre {} -> "ProfSampleCostCentre"\n    ProfBegin {} -> "ProfBegin"\n    UserBinaryMessage {} -> "UserBinaryMessage"\n    ConcMarkBegin {} -> "ConcMarkBegin"\n    ConcMarkEnd {} -> "ConcMarkEnd"\n    ConcSyncBegin {} -> "ConcSyncBegin"\n    ConcSyncEnd {} -> "ConcSyncEnd"\n    ConcSweepBegin {} -> "ConcSweepBegin"\n    ConcSweepEnd {} -> "ConcSweepEnd"\n    ConcUpdRemSetFlush {} -> "ConcUpdRemSetFlush"\n    NonmovingHeapCensus {} -> "NonmovingHeapCensus"\n    TickyCounterDef {} -> "TickyCounterDef"\n    TickyCounterSample {} -> "TickyCounterSample"\n    TickyBeginSample {} -> "TickyBeginSample"\n\n-- TODO: this should be read off right from RTS def.\neventInfoEnumMap :: [(String, Int)]\neventInfoEnumMap =\n  [ ("EventBlock", 1),\n    ("UnknownEvent", 2),\n    ("Startup", 3),\n    ("Shutdown", 4),\n    ("CreateThread", 5),\n    ("RunThread", 6),\n    ("StopThread", 7),\n    ("ThreadRunnable", 8),\n    ("MigrateThread", 9),\n    ("WakeupThread", 10),\n    ("ThreadLabel", 11),\n    ("CreateSparkThread", 12),\n    ("SparkCounters", 13),\n    ("SparkCreate", 14),\n    ("SparkDud", 15),\n    ("SparkOverflow", 16),\n    ("SparkRun", 17),\n    ("SparkSteal", 18),\n    ("SparkFizzle", 19),\n    ("SparkGC", 20),\n    ("TaskCreate", 21),\n    ("TaskMigrate", 22),\n    ("TaskDelete", 23),\n    ("RequestSeqGC", 24),\n    ("RequestParGC", 25),\n    ("StartGC", 26),\n    ("GCWork", 27),\n    ("GCIdle", 28),\n    ("GCDone", 29),\n    ("EndGC", 30),\n    ("GlobalSyncGC", 31),\n    ("GCStatsGHC", 32),\n    ("MemReturn", 33),\n    ("HeapAllocated", 34),\n    ("HeapSize", 35),\n    ("BlocksSize", 36),\n    ("HeapLive", 37),\n    ("HeapInfoGHC", 38),\n    ("CapCreate", 39),\n    ("CapDelete", 40),\n    ("CapDisable", 41),\n    ("CapEnable", 42),\n    ("CapsetCreate", 43),\n    ("CapsetDelete", 44),\n    ("CapsetAssignCap", 45),\n    ("CapsetRemoveCap", 46),\n    ("RtsIdentifier", 47),\n    ("ProgramArgs", 48),\n    ("ProgramEnv", 49),\n    ("OsProcessPid", 50),\n    ("OsProcessParentPid", 51),\n    ("WallClockTime", 52),\n    ("Message", 53),\n    ("UserMessage", 54),\n    ("UserMarker", 55),\n    ("Version", 56),\n    ("ProgramInvocation", 57),\n    ("CreateMachine", 58),\n    ("KillMachine", 59),\n    ("CreateProcess", 60),\n    ("KillProcess", 61),\n    ("AssignThreadToProcess", 62),\n    ("EdenStartReceive", 63),\n    ("EdenEndReceive", 64),\n    ("SendMessage", 65),\n    ("ReceiveMessage", 66),\n    ("SendReceiveLocalMessage", 67),\n    ("InternString", 68),\n    ("MerStartParConjunction", 69),\n    ("MerEndParConjunction", 70),\n    ("MerEndParConjunct", 71),\n    ("MerCreateSpark", 72),\n    ("MerFutureCreate", 73),\n    ("MerFutureWaitNosuspend", 74),\n    ("MerFutureWaitSuspended", 75),\n    ("MerFutureSignal", 76),\n    ("MerLookingForGlobalThread", 77),\n    ("MerWorkStealing", 78),\n    ("MerLookingForLocalSpark", 79),\n    ("MerReleaseThread", 80),\n    ("MerCapSleeping", 81),\n    ("MerCallingMain", 82),\n    ("PerfName", 83),\n    ("PerfCounter", 84),\n    ("PerfTracepoint", 85),\n    ("HeapProfBegin", 86),\n    ("HeapProfCostCentre", 87),\n    ("InfoTableProv", 88),\n    ("HeapProfSampleBegin", 89),\n    ("HeapProfSampleEnd", 90),\n    ("HeapBioProfSampleBegin", 91),\n    ("HeapProfSampleCostCentre", 92),\n    ("HeapProfSampleString", 93),\n    ("ProfSampleCostCentre", 94),\n    ("ProfBegin", 95),\n    ("UserBinaryMessage", 96),\n    ("ConcMarkBegin", 97),\n    ("ConcMarkEnd", 98),\n    ("ConcSyncBegin", 99),\n    ("ConcSyncEnd", 100),\n    ("ConcSweepBegin", 101),\n    ("ConcSweepEnd", 102),\n    ("ConcUpdRemSetFlush", 103),\n    ("NonmovingHeapCensus", 104),\n    ("TickyCounterDef", 105),\n    ("TickyCounterSample", 106),\n    ("TickyBeginSample", 107)\n  ]\n'