b"{-# LANGUAGE ConstraintKinds #-}\n{-# LANGUAGE CPP #-}\n\n-- | Finally-tagless encoding of SQL92 DDL commands.\n--\n--  If you're writing a beam backend driver and you want to support migrations,\n--  making an instance of your command syntax for 'IsSql92DdlCommandSyntax' and\n--  making it satisfy 'Sql92SaneDdlCommandSyntax'.\nmodule Database.Beam.Migrate.SQL.SQL92 where\n\nimport Database.Beam.Backend.SQL.SQL92\n\nimport Data.Aeson (Value)\nimport Data.Hashable\nimport Data.Text (Text)\nimport Data.Typeable\n#if ! MIN_VERSION_base(4,11,0)\nimport Data.Semigroup\n#endif\n\n-- * Convenience type synonyms\n\n-- | Syntax equalities that any reasonable DDL syntax would follow,\n-- including equalities between beam-migrate and beam-core types.\ntype Sql92SaneDdlCommandSyntax cmd =\n  ( Sql92SaneDdlCommandSyntaxMigrateOnly cmd\n  , Sql92ExpressionCastTargetSyntax (Sql92ExpressionSyntax cmd) ~\n      Sql92DdlCommandDataTypeSyntax cmd\n  , Sql92ColumnSchemaExpressionSyntax (Sql92DdlCommandColumnSchemaSyntax cmd) ~\n      Sql92ExpressionSyntax cmd )\n\n-- | Syntax equalities for any reasonable DDL syntax, only including\n-- types defined here.\ntype Sql92SaneDdlCommandSyntaxMigrateOnly cmd =\n  ( IsSql92DdlCommandSyntax cmd\n  , Sql92SerializableDataTypeSyntax (Sql92DdlCommandDataTypeSyntax cmd)\n  , Sql92SerializableConstraintDefinitionSyntax (Sql92DdlCommandConstraintDefinitionSyntax cmd)\n  , Typeable (Sql92DdlCommandColumnSchemaSyntax cmd)\n  , Sql92AlterTableColumnSchemaSyntax\n      (Sql92AlterTableAlterTableActionSyntax (Sql92DdlCommandAlterTableSyntax cmd)) ~\n      Sql92CreateTableColumnSchemaSyntax (Sql92DdlCommandCreateTableSyntax cmd)\n  )\n\ntype Sql92DdlCommandDataTypeSyntax syntax =\n  Sql92ColumnSchemaColumnTypeSyntax (Sql92DdlCommandColumnSchemaSyntax syntax)\ntype Sql92DdlCommandColumnSchemaSyntax syntax = Sql92CreateTableColumnSchemaSyntax (Sql92DdlCommandCreateTableSyntax syntax)\ntype Sql92DdlCommandConstraintDefinitionSyntax syntax =\n  Sql92ColumnSchemaColumnConstraintDefinitionSyntax (Sql92DdlCommandColumnSchemaSyntax syntax)\ntype Sql92DdlColumnSchemaConstraintSyntax syntax =\n  Sql92ColumnConstraintDefinitionConstraintSyntax (Sql92ColumnSchemaColumnConstraintDefinitionSyntax syntax)\ntype Sql92DdlCommandColumnConstraintSyntax syntax =\n  Sql92DdlColumnSchemaConstraintSyntax (Sql92DdlCommandColumnSchemaSyntax syntax)\ntype Sql92DdlCommandMatchTypeSyntax syntax =\n  Sql92ColumnConstraintMatchTypeSyntax (Sql92DdlCommandColumnConstraintSyntax syntax)\ntype Sql92DdlCommandReferentialActionSyntax syntax =\n  Sql92ColumnConstraintReferentialActionSyntax (Sql92DdlCommandColumnConstraintSyntax syntax)\ntype Sql92DdlCommandConstraintAttributesSyntax syntax =\n  Sql92ColumnConstraintDefinitionAttributesSyntax (Sql92DdlCommandConstraintDefinitionSyntax syntax)\ntype Sql92DdlCommandAlterTableActionSyntax syntax =\n  Sql92AlterTableAlterTableActionSyntax (Sql92DdlCommandAlterTableSyntax syntax)\n\nclass ( IsSql92CreateTableSyntax (Sql92DdlCommandCreateTableSyntax syntax)\n      , IsSql92DropTableSyntax (Sql92DdlCommandDropTableSyntax syntax)\n      , IsSql92AlterTableSyntax (Sql92DdlCommandAlterTableSyntax syntax)) =>\n  IsSql92DdlCommandSyntax syntax where\n  type Sql92DdlCommandCreateTableSyntax syntax :: *\n  type Sql92DdlCommandAlterTableSyntax syntax :: *\n  type Sql92DdlCommandDropTableSyntax syntax :: *\n\n  createTableCmd :: Sql92DdlCommandCreateTableSyntax syntax -> syntax\n  dropTableCmd   :: Sql92DdlCommandDropTableSyntax syntax -> syntax\n  alterTableCmd  :: Sql92DdlCommandAlterTableSyntax syntax -> syntax\n\nclass ( IsSql92TableConstraintSyntax (Sql92CreateTableTableConstraintSyntax syntax)\n      , IsSql92ColumnSchemaSyntax (Sql92CreateTableColumnSchemaSyntax syntax)\n      , IsSql92TableNameSyntax (Sql92CreateTableTableNameSyntax syntax) ) =>\n    IsSql92CreateTableSyntax syntax where\n\n  type Sql92CreateTableTableNameSyntax syntax :: *\n  type Sql92CreateTableColumnSchemaSyntax syntax :: *\n  type Sql92CreateTableTableConstraintSyntax syntax :: *\n  type Sql92CreateTableOptionsSyntax syntax :: *\n\n  createTableSyntax :: Maybe (Sql92CreateTableOptionsSyntax syntax)\n                    -> Sql92CreateTableTableNameSyntax syntax\n                    -> [ (Text, Sql92CreateTableColumnSchemaSyntax syntax) ]\n                    -> [ Sql92CreateTableTableConstraintSyntax syntax ]\n                    -> syntax\n\nclass IsSql92TableNameSyntax (Sql92DropTableTableNameSyntax syntax) =>\n  IsSql92DropTableSyntax syntax where\n\n  type Sql92DropTableTableNameSyntax syntax :: *\n  dropTableSyntax :: Sql92DropTableTableNameSyntax syntax -> syntax\n\nclass ( IsSql92TableNameSyntax (Sql92AlterTableTableNameSyntax syntax),\n        IsSql92AlterTableActionSyntax (Sql92AlterTableAlterTableActionSyntax syntax) ) =>\n  IsSql92AlterTableSyntax syntax where\n\n  type Sql92AlterTableTableNameSyntax syntax :: *\n  type Sql92AlterTableAlterTableActionSyntax syntax :: *\n\n  alterTableSyntax :: Sql92AlterTableTableNameSyntax syntax -> Sql92AlterTableAlterTableActionSyntax syntax\n                   -> syntax\n\nclass ( IsSql92ColumnSchemaSyntax (Sql92AlterTableColumnSchemaSyntax syntax)\n      , IsSql92AlterColumnActionSyntax (Sql92AlterTableAlterColumnActionSyntax syntax) ) =>\n  IsSql92AlterTableActionSyntax syntax where\n  type Sql92AlterTableAlterColumnActionSyntax syntax :: *\n  type Sql92AlterTableColumnSchemaSyntax syntax :: *\n  alterColumnSyntax :: Text -> Sql92AlterTableAlterColumnActionSyntax syntax\n                    -> syntax\n  addColumnSyntax :: Text -> Sql92AlterTableColumnSchemaSyntax syntax -> syntax\n  dropColumnSyntax :: Text -> syntax\n  renameTableToSyntax :: Text -> syntax\n  renameColumnToSyntax :: Text -> Text -> syntax\n\nclass IsSql92AlterColumnActionSyntax syntax where\n  setNotNullSyntax, setNullSyntax :: syntax\n\nclass ( IsSql92ColumnConstraintDefinitionSyntax (Sql92ColumnSchemaColumnConstraintDefinitionSyntax columnSchema)\n      , IsSql92DataTypeSyntax (Sql92ColumnSchemaColumnTypeSyntax columnSchema)\n      , Typeable (Sql92ColumnSchemaColumnTypeSyntax columnSchema)\n      , Sql92DisplaySyntax (Sql92ColumnSchemaColumnTypeSyntax columnSchema)\n      , Hashable (Sql92ColumnSchemaColumnTypeSyntax columnSchema)\n      , Eq (Sql92ColumnSchemaColumnTypeSyntax columnSchema)\n      , Sql92DisplaySyntax (Sql92ColumnSchemaColumnConstraintDefinitionSyntax columnSchema)\n      , Eq (Sql92ColumnSchemaColumnConstraintDefinitionSyntax columnSchema)\n      , Hashable (Sql92ColumnSchemaColumnConstraintDefinitionSyntax columnSchema)\n      , IsSql92ExpressionSyntax (Sql92ColumnSchemaExpressionSyntax columnSchema)\n      , Typeable columnSchema, Sql92DisplaySyntax columnSchema, Eq columnSchema, Hashable columnSchema ) =>\n  IsSql92ColumnSchemaSyntax columnSchema where\n  type Sql92ColumnSchemaColumnTypeSyntax columnSchema :: *\n  type Sql92ColumnSchemaExpressionSyntax columnSchema :: *\n  type Sql92ColumnSchemaColumnConstraintDefinitionSyntax columnSchema :: *\n\n  columnSchemaSyntax :: Sql92ColumnSchemaColumnTypeSyntax columnSchema {-^ Column type -}\n                     -> Maybe (Sql92ColumnSchemaExpressionSyntax columnSchema) {-^ Default value -}\n                     -> [ Sql92ColumnSchemaColumnConstraintDefinitionSyntax columnSchema ] {-^ Column constraints -}\n                     -> Maybe Text {-^ Default collation -}\n                     -> columnSchema\n\nclass Typeable constraint => IsSql92TableConstraintSyntax constraint where\n  primaryKeyConstraintSyntax :: [ Text ] -> constraint\n\nclass Typeable match => IsSql92MatchTypeSyntax match where\n  fullMatchSyntax :: match\n  partialMatchSyntax :: match\n\nclass Typeable refAction => IsSql92ReferentialActionSyntax refAction where\n  referentialActionCascadeSyntax :: refAction\n  referentialActionSetNullSyntax :: refAction\n  referentialActionSetDefaultSyntax :: refAction\n  referentialActionNoActionSyntax :: refAction\n\nclass ( IsSql92ColumnConstraintSyntax (Sql92ColumnConstraintDefinitionConstraintSyntax constraint)\n      , IsSql92ConstraintAttributesSyntax (Sql92ColumnConstraintDefinitionAttributesSyntax constraint)\n      , Typeable constraint ) =>\n      IsSql92ColumnConstraintDefinitionSyntax constraint where\n  type Sql92ColumnConstraintDefinitionConstraintSyntax constraint :: *\n  type Sql92ColumnConstraintDefinitionAttributesSyntax constraint :: *\n\n  constraintDefinitionSyntax :: Maybe Text -> Sql92ColumnConstraintDefinitionConstraintSyntax constraint\n                             -> Maybe (Sql92ColumnConstraintDefinitionAttributesSyntax constraint)\n                             -> constraint\n\nclass (Semigroup attrs, Monoid attrs, Typeable attrs) => IsSql92ConstraintAttributesSyntax attrs where\n  initiallyDeferredAttributeSyntax :: attrs\n  initiallyImmediateAttributeSyntax :: attrs\n  notDeferrableAttributeSyntax :: attrs\n  deferrableAttributeSyntax :: attrs\n\nclass ( IsSql92MatchTypeSyntax (Sql92ColumnConstraintMatchTypeSyntax constraint)\n      , IsSql92ReferentialActionSyntax (Sql92ColumnConstraintReferentialActionSyntax constraint)\n      , Typeable (Sql92ColumnConstraintExpressionSyntax constraint)\n      , Typeable constraint ) =>\n  IsSql92ColumnConstraintSyntax constraint where\n  type Sql92ColumnConstraintMatchTypeSyntax constraint :: *\n  type Sql92ColumnConstraintReferentialActionSyntax constraint :: *\n  type Sql92ColumnConstraintExpressionSyntax constraint :: *\n\n  notNullConstraintSyntax :: constraint\n  uniqueColumnConstraintSyntax :: constraint\n  primaryKeyColumnConstraintSyntax :: constraint\n  checkColumnConstraintSyntax :: Sql92ColumnConstraintExpressionSyntax constraint -> constraint\n  referencesConstraintSyntax :: Text -> [ Text ]\n                             -> Maybe (Sql92ColumnConstraintMatchTypeSyntax constraint)\n                             -> Maybe (Sql92ColumnConstraintReferentialActionSyntax constraint) {-^ On update -}\n                             -> Maybe (Sql92ColumnConstraintReferentialActionSyntax constraint) {-^ On delete -}\n                             -> constraint\n\n-- | 'IsSql92DataTypeSyntax'es that can be serialized to JSON\nclass Sql92SerializableDataTypeSyntax dataType where\n  serializeDataType :: dataType -> Value\n\n-- | 'IsSql92ColumnConstraintDefinitionSyntax'es that can be serialized to JSON\nclass Sql92SerializableConstraintDefinitionSyntax constraint where\n  serializeConstraint :: constraint -> Value\n"