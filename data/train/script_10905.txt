b'package com.github.razir.progressbutton\n\nimport android.widget.TextView\nimport androidx.annotation.StringRes\n\n/**\n * Java back support class to show the progress. If you use kotlin please consider to use extensions\n * @see TextView.showProgress\n */\nclass ProgressButtonUtils {\n\n    companion object {\n\n        /**\n         *   Shows your progress on the button with defined params.\n         *   If params are not defined uses the default one.\n         *\n         *   The example of usage:\n         *\n         *   ProgressButtonUtils.showProgress(button,new ProgressParams())\n         *\n         *   If you want to continue using your button after showing the progress,\n         *   please hide the progress and clean up resources by calling:\n         *   @see hideProgress\n         *\n         *   @param view to show the progress\n         *   @param drawable your animated drawable. Will be played automatically\n         *   @param params use to set the text,position and margin\n         */\n        @JvmStatic\n        fun showProgress(\n            textView: TextView,\n            progressParams: ProgressParams\n        ) = textView.showProgress(progressParams)\n\n        /**\n         * @return true if progress is currently showing and false if not\n         */\n        @JvmStatic\n        fun isProgressActive(textView: TextView) = textView.isProgressActive()\n\n        /**\n         * Hides the progress and clean up internal references\n         * This method is required to call if you want to continue using your button\n         * @param newText String value to show after hiding the progress\n         */\n        @JvmStatic\n        fun hideProgress(textView: TextView, newText: String?) = textView.hideProgress(newText)\n\n        /**\n         * Hides the progress and clean up internal references\n         * This method is required to call if you want to continue using your button\n         * @param newTextRes String resource to show after hiding the progress\n         */\n        @JvmStatic\n        fun hideProgress(textView: TextView, @StringRes newTextRes: Int) = textView.hideProgress(newTextRes)\n    }\n}'