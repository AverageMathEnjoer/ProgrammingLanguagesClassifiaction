b'{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# LANGUAGE TypeFamilies #-}\n\n-- | [StackExchange authentication guide](https://api.stackexchange.com/docs/authentication)\n--\n--    * [StackExchange Apps page](https://stackapps.com/apps/oauth)\nmodule Network.OAuth2.Provider.StackExchange where\n\nimport Data.Aeson\nimport Data.ByteString (ByteString)\nimport Data.Map.Strict qualified as Map\nimport Data.Set qualified as Set\nimport Data.Text.Lazy (Text)\nimport GHC.Generics\nimport Network.OAuth.OAuth2\nimport Network.OAuth2.Experiment\nimport URI.ByteString\nimport URI.ByteString.QQ\n\n-- fix key from your application edit page\n-- https://stackapps.com/apps/oauth\nstackexchangeAppKey :: ByteString\nstackexchangeAppKey = ""\n\ndata StackExchange = StackExchange deriving (Eq, Show)\n\ntype instance IdpUserInfo StackExchange = StackExchangeResp\n\ndefaultStackExchangeApp :: IdpApplication \'AuthorizationCode StackExchange\ndefaultStackExchangeApp =\n  AuthorizationCodeIdpApplication\n    { idpAppClientId = ""\n    , idpAppClientSecret = ""\n    , idpAppScope = Set.empty\n    , idpAppAuthorizeState = "CHANGE_ME"\n    , idpAppAuthorizeExtraParams = Map.empty\n    , idpAppRedirectUri = [uri|http://localhost|]\n    , idpAppName = "default-stackexchange-App"\n    , idpAppTokenRequestAuthenticationMethod = ClientSecretPost\n    , idp = defaultStackexchangeIdp\n    }\n\ndefaultStackexchangeIdp :: Idp StackExchange\ndefaultStackexchangeIdp =\n  Idp\n    { idpFetchUserInfo = authGetJSONWithAuthMethod @_ @(IdpUserInfo StackExchange) AuthInRequestQuery\n    , -- Only StackExchange has such specical app key which has to be append in userinfo uri.\n      -- I feel it\'s not worth to invent a way to read from config\n      -- file which would break the generic of Idp data type.\n      -- Until discover a easier way, hard code for now.\n      idpUserInfoEndpoint =\n        appendStackExchangeAppKey\n          [uri|https://api.stackexchange.com/2.2/me?site=stackoverflow|]\n          stackexchangeAppKey\n    , idpAuthorizeEndpoint = [uri|https://stackexchange.com/oauth|]\n    , idpTokenEndpoint = [uri|https://stackexchange.com/oauth/access_token|]\n    }\n\ndata StackExchangeResp = StackExchangeResp\n  { hasMore :: Bool\n  , quotaMax :: Integer\n  , quotaRemaining :: Integer\n  , items :: [StackExchangeUser]\n  }\n  deriving (Show, Generic)\n\ndata StackExchangeUser = StackExchangeUser\n  { userId :: Integer\n  , displayName :: Text\n  , profileImage :: Text\n  }\n  deriving (Show, Generic)\n\ninstance FromJSON StackExchangeResp where\n  parseJSON = genericParseJSON defaultOptions {fieldLabelModifier = camelTo2 \'_\'}\n\ninstance FromJSON StackExchangeUser where\n  parseJSON = genericParseJSON defaultOptions {fieldLabelModifier = camelTo2 \'_\'}\n\nappendStackExchangeAppKey :: URI -> ByteString -> URI\nappendStackExchangeAppKey useruri k = appendQueryParams [("key", k)] useruri\n'