b'package effectivejava.chapter3.item10;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Objects;\n\n// Broken - violates symmetry!  (Page 39)\npublic final class CaseInsensitiveString {\n    private final String s;\n\n    public CaseInsensitiveString(String s) {\n        this.s = Objects.requireNonNull(s);\n    }\n\n    // Broken - violates symmetry!\n    @Override public boolean equals(Object o) {\n        if (o instanceof CaseInsensitiveString)\n            return s.equalsIgnoreCase(\n                    ((CaseInsensitiveString) o).s);\n        if (o instanceof String)  // One-way interoperability!\n            return s.equalsIgnoreCase((String) o);\n        return false;\n    }\n\n    // Demonstration of the problem (Page 40)\n    public static void main(String[] args) {\n        CaseInsensitiveString cis = new CaseInsensitiveString("Polish");\n        String s = "polish";\n\n        List<CaseInsensitiveString> list = new ArrayList<>();\n        list.add(cis);\n\n        System.out.println(list.contains(s));\n    }\n\n//    // Fixed equals method (Page 40)\n//    @Override public boolean equals(Object o) {\n//        return o instanceof CaseInsensitiveString &&\n//                ((CaseInsensitiveString) o).s.equalsIgnoreCase(s);\n//    }\n}\n'