b'/*\n    SPDX-FileCopyrightText: 2014-2017 Milian Wolff <mail@milianw.de>\n\n    SPDX-License-Identifier: LGPL-2.1-or-later\n*/\n\n#include <cstdio>\n#include <cstdlib>\n#include <unistd.h>\n\n#include "util/config.h"\n\n#if defined(_ISOC11_SOURCE)\n#define HAVE_ALIGNED_ALLOC 1\n#else\n#define HAVE_ALIGNED_ALLOC 0\n#endif\n\nstruct Foo\n{\n    Foo()\n        : i(new int)\n    {\n    }\n    ~Foo()\n    {\n        delete i;\n    }\n    int* i;\n};\n\nvoid asdf()\n{\n    int* i = new int;\n    printf("i in asdf: %p\\n", (void*)i);\n}\n\nvoid bar()\n{\n    asdf();\n}\n\nvoid laaa()\n{\n    bar();\n}\n\nvoid split()\n{\n    Foo f;\n    asdf();\n    bar();\n    laaa();\n}\n\nstatic Foo foo;\n\nint main()\n{\n    Foo* f = new Foo;\n    printf("new Foo: %p\\n", (void*)f);\n    delete f;\n\n    char* c = new char[1000];\n    printf("new char[]: %p\\n", (void*)c);\n    delete[] c;\n\n    void* buf = malloc(100);\n    printf("malloc: %p\\n", buf);\n    buf = realloc(buf, 200);\n    printf("realloc: %p\\n", buf);\n    free(buf);\n\n    buf = calloc(5, 5);\n    printf("calloc: %p\\n", buf);\n#if HAVE_CFREE\n    cfree(buf);\n#else\n    free(buf);\n#endif\n\n#if HAVE_ALIGNED_ALLOC\n    buf = aligned_alloc(16, 160);\n    printf("aligned_alloc: %p\\n", buf);\n    free(buf);\n#endif\n\n    buf = valloc(32);\n    printf("valloc: %p\\n", buf);\n    free(buf);\n\n    int ret = posix_memalign(&buf, 16, 64);\n    printf("posix_memalign: %d %p\\n", ret, buf);\n    free(buf);\n\n    for (int i = 0; i < 10; ++i) {\n        laaa();\n    }\n    laaa();\n\n    split();\n\n    return 0;\n}\n'