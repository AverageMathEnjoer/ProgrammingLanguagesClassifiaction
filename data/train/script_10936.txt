b"module Network.Server.Common.Accept where\n\nimport Network.Server.Common.Lens\nimport Network.Server.Common.HandleLens(HandleLens(..))\nimport Network.Server.Common.Ref(Ref(..))\nimport Network(HostName, Socket, PortNumber, accept)\n\ndata Accept =\n  Accept\n    Ref\n    HostName\n    PortNumber\n  deriving (Eq, Ord, Show)\n\nrefL ::\n  Lens Accept Ref\nrefL =\n  Lens\n    (\\(Accept _ nam num) hd -> Accept hd nam num)\n    (\\(Accept hd _ _) -> hd)\n\nhostNameL ::\n  Lens Accept HostName\nhostNameL =\n  Lens\n    (\\(Accept hd _ num) nam -> Accept hd nam num)\n    (\\(Accept _ nam _) -> nam)\n\nportNumberL ::\n  Lens Accept PortNumber\nportNumberL =\n  Lens\n    (\\(Accept hd nam _) num -> Accept hd nam num)\n    (\\(Accept _ _ num) -> num)\n\ninstance HandleLens Accept where\n  handleL =\n    refL .@ handleL\n\naccept' ::\n  Socket\n  -> IO Accept\naccept' =\n  fmap (\\(hd, nam, num) -> Accept (Ref hd) nam num) . accept\n"