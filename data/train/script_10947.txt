b'\xef\xbb\xbfusing Asn1;\nusing System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Pkcs;\n\nnamespace Rubeus {\n    public class KrbDHRepInfo{\n        public byte[] ServerDHNonce { get; private set; }\n        public byte[] DHSignedData { get; private set; }\n        public KrbKDCDHKeyInfo KDCDHKeyInfo { get; private set; }\n\n        public KrbDHRepInfo(AsnElt asnElt) {\n\n            if(asnElt.TagValue != AsnElt.SEQUENCE) {\n                throw new ArgumentException("Expected SEQUENCE for type DHRepInfo");\n            }\n\n            foreach(AsnElt seq in asnElt.Sub) {\n                switch (seq.TagValue) {\n                    case 0: //dhSignedData\n                        DHSignedData = seq.GetOctetString();\n                        SignedCms cms = new SignedCms();\n                        cms.Decode(DHSignedData);\n\n                        try {\n                            cms.CheckSignature(true);\n                        } catch (CryptographicException) {\n                            Console.WriteLine("[!] DHRepInfo Signature Not Valid! - Do you even care?");\n                        }\n\n                        KDCDHKeyInfo = new KrbKDCDHKeyInfo(AsnElt.Decode(cms.ContentInfo.Content));\n                        break;\n\n                    case 1: //serverDHNonce\n                        ServerDHNonce = seq.GetOctetString();\n                        break;\n                }\n            }\n        }\n    }\n}\n'