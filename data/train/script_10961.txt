b'package com.codeest.geeknews.ui.gank.activity;\n\nimport android.Manifest;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.support.v7.widget.Toolbar;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.ImageView;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.animation.GlideAnimation;\nimport com.bumptech.glide.request.target.SimpleTarget;\nimport com.codeest.geeknews.R;\nimport com.codeest.geeknews.app.App;\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.base.SimpleActivity;\nimport com.codeest.geeknews.model.bean.RealmLikeBean;\nimport com.codeest.geeknews.model.db.RealmHelper;\nimport com.codeest.geeknews.util.ShareUtil;\nimport com.codeest.geeknews.util.SystemUtil;\nimport com.codeest.geeknews.util.ToastUtil;\nimport com.tbruyelle.rxpermissions2.RxPermissions;\n\nimport butterknife.BindView;\nimport io.reactivex.functions.Consumer;\nimport uk.co.senab.photoview.PhotoViewAttacher;\n\n/**\n * Created by codeest on 16/8/20.\n */\n\npublic class GirlDetailActivity extends SimpleActivity {\n\n    @BindView(R.id.tool_bar)\n    Toolbar toolBar;\n    @BindView(R.id.iv_girl_detail)\n    ImageView ivGirlDetail;\n\n    private static int ACTION_SAVE = 0x00;\n    private static int ACTION_SHARE = 0x01;\n\n    Bitmap bitmap;\n    RxPermissions rxPermissions;\n    RealmHelper mRealmHelper;\n    PhotoViewAttacher mAttacher;\n    MenuItem menuItem;\n\n    String url;\n    String id;\n\n    boolean isLiked;\n\n    @Override\n    protected int getLayout() {\n        return R.layout.activity_girl_detail;\n    }\n\n    @Override\n    protected void initEventAndData() {\n        setToolBar(toolBar,"");\n        mRealmHelper = App.getAppComponent().realmHelper();\n        Intent intent = getIntent();\n        url = intent.getExtras().getString(Constants.IT_GANK_GRIL_URL);\n        id = intent.getExtras().getString(Constants.IT_GANK_GRIL_ID);\n        if (url != null) {\n            Glide.with(mContext).load(url).asBitmap().into(new SimpleTarget<Bitmap>() {\n                @Override\n                public void onResourceReady(Bitmap resource, GlideAnimation<? super Bitmap> glideAnimation) {\n                    bitmap = resource;\n                    ivGirlDetail.setImageBitmap(resource);\n                    mAttacher = new PhotoViewAttacher(ivGirlDetail);\n                }\n            });\n        }\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.girl_menu,menu);\n        menuItem = menu.findItem(R.id.action_like);\n        setLikeState(mRealmHelper.queryLikeId(id));\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        int id = item.getItemId();\n        switch (id){\n            case R.id.action_like:\n                if(isLiked) {\n                    item.setIcon(R.mipmap.ic_toolbar_like_n);\n                    mRealmHelper.deleteLikeBean(this.id);\n                    isLiked = false;\n                } else {\n                    item.setIcon(R.mipmap.ic_toolbar_like_p);\n                    RealmLikeBean bean = new RealmLikeBean();\n                    bean.setId(this.id);\n                    bean.setImage(url);\n                    bean.setType(Constants.TYPE_GIRL);\n                    bean.setTime(System.currentTimeMillis());\n                    mRealmHelper.insertLikeBean(bean);\n                    isLiked = true;\n                }\n                break;\n            case R.id.action_save:\n                checkPermissionAndAction(ACTION_SAVE);\n                break;\n            case R.id.action_share:\n                checkPermissionAndAction(ACTION_SHARE);\n                break;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    private void setLikeState(boolean state) {\n        if(state) {\n            menuItem.setIcon(R.mipmap.ic_toolbar_like_p);\n            isLiked = true;\n        } else {\n            menuItem.setIcon(R.mipmap.ic_toolbar_like_n);\n            isLiked = false;\n        }\n    }\n\n    @Override\n    public void onBackPressedSupport() {\n        if (getSupportFragmentManager().getBackStackEntryCount() > 1) {\n            pop();\n        } else {\n            finishAfterTransition();\n        }\n    }\n\n    private void checkPermissionAndAction(final int action) {\n        if (rxPermissions == null) {\n            rxPermissions = new RxPermissions(this);\n        }\n        rxPermissions.request(Manifest.permission.WRITE_EXTERNAL_STORAGE)\n                .subscribe(new Consumer<Boolean>() {\n                    @Override\n                    public void accept(Boolean granted) {\n                        if (granted) {\n                            if (action == ACTION_SAVE) {\n                                SystemUtil.saveBitmapToFile(mContext, url, bitmap, ivGirlDetail, false);\n                            } else if (action == ACTION_SHARE) {\n                                ShareUtil.shareImage(mContext, SystemUtil.saveBitmapToFile(mContext, url, bitmap, ivGirlDetail, true), "\xe5\x88\x86\xe4\xba\xab\xe4\xb8\x80\xe5\x8f\xaa\xe5\xa6\xb9\xe7\xba\xb8");\n                            }\n                        } else {\n                            ToastUtil.shortShow("\xe8\x8e\xb7\xe5\x8f\x96\xe5\x86\x99\xe5\x85\xa5\xe6\x9d\x83\xe9\x99\x90\xe5\xa4\xb1\xe8\xb4\xa5");\n                        }\n                    }\n                });\n    }\n}\n'