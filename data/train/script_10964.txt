b"{-# LANGUAGE AllowAmbiguousTypes #-}\n\n-- | Support for creating checked databases from Haskell ADTs, using 'Generic's.\n--\n-- For more information, see\n-- <https://haskell-beam.github.io/beam/schema-guide/migrations/ the manual>\n\nmodule Database.Beam.Migrate.Generics\n ( -- * Default checked database settings\n   defaultMigratableDbSettings\n\n -- * Extending the defaulting sytem\n , HasDefaultSqlDataType(..)\n , HasNullableConstraint, NullableStatus\n ) where\n\nimport Database.Beam.Migrate.Types\nimport Database.Beam.Migrate.Generics.Tables\nimport Database.Beam.Migrate.Generics.Types\n\nimport Data.Proxy\n\nimport GHC.Generics\n\n-- | Produce a checked database for the given Haskell database type\n--\n-- See <https://haskell-beam.github.io/beam/schema-guide/migrations/ the manual>\n-- for more information on the defaults.\ndefaultMigratableDbSettings\n  :: forall be db.\n   ( Generic (CheckedDatabaseSettings be db)\n   , GAutoMigratableDb be (Rep (CheckedDatabaseSettings be db)) )\n  => CheckedDatabaseSettings be db\ndefaultMigratableDbSettings =\n  to (defaultMigratableDbSettings' (Proxy @be) :: Rep (CheckedDatabaseSettings be db) ())\n\n"