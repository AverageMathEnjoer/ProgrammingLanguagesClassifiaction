b'#\' view\n#\' \n#\' Visualize results in RStudio\'s Viewer or in Web Browser\n#\'\n#\' @usage\n#\' view(x, method = "viewer", file = "", append = FALSE,\n#\'   report.title = NA, table.classes = NA, \n#\'   bootstrap.css = st_options("bootstrap.css"), \n#\'   custom.css = st_options("custom.css"), silent = FALSE, \n#\'   footnote = st_options("footnote"),\n#\'   max.tbl.height = Inf,\n#\'   collapse = 0,\n#\'   escape.pipe = st_options("escape.pipe"), \\dots)\n#\'\n#\' @inheritParams print.summarytools\n#\' \n#\' @aliases view stview\n#\' \n#\' @details \n#\' Creates \\emph{html} outputs and displays them in \\emph{RStudio}\'s viewer, in\n#\' a browser, or renders the \\emph{html} code in \\emph{R markdown} documents. \n#\'\n#\' For objects of class \\dQuote{\\emph{summarytools}}, this function is simply\n#\' a wrapper around \\code{\\link{print.summarytools}} with\n#\' \\code{method = "viewer"}.\n#\'  \n#\' Objects of class \\dQuote{\\emph{by}}, \\dQuote{\\emph{stby}}, or \n#\' \\dQuote{\\emph{list}} are dispatched to the present function, as it can\n#\' manage multiple objects, whereas \\code{\\link{print.summarytools}} can only\n#\' manage one object at a time. \n#\'  \n#\' @export\nview <- function(x, \n                 method         = "viewer",\n                 file           = "",\n                 append         = FALSE, \n                 report.title   = NA, \n                 table.classes  = NA, \n                 bootstrap.css  = st_options("bootstrap.css"), \n                 custom.css     = st_options("custom.css"), \n                 silent         = FALSE, \n                 footnote       = st_options("footnote"), \n                 max.tbl.height = Inf,\n                 collapse       = 0,\n                 escape.pipe    = st_options("escape.pipe"),\n                 ...) {\n  \n  # Check that the appropriate method is chosen when a file name is given\n  if (grepl("\\\\.r?md$", file, ignore.case = TRUE, perl = TRUE) &&\n      method != "pander") {\n    message("Switching method to \'pander\'")\n    method <- "pander"\n  } else if (grepl("\\\\.html$", file, ignore.case = TRUE, perl = TRUE) &&\n      method == "pander") {\n    message("Switching method to \'browser\'")\n    method <- "browser"\n  }\n  \n  # Objects not created via by() / stby() / lapply() (not a list) --------------\n  if (inherits(x, "summarytools") && \n      (isTRUE(attr(x, "st_type") %in% \n              c("freq", "ctable", "descr", "dfSummary")))) {\n    \n    print.summarytools(x,\n                       method         = method,\n                       file           = file,\n                       append         = append,\n                       report.title   = report.title,\n                       table.classes  = table.classes,\n                       bootstrap.css  = bootstrap.css,\n                       custom.css     = custom.css,\n                       silent         = silent,\n                       footnote       = footnote,\n                       max.tbl.height = max.tbl.height,\n                       collapse       = collapse,\n                       escape.pipe    = escape.pipe,\n                       ...)\n\n    \n  } else if (inherits(x = x, what = c("stby","by")) &&\n             attr(x[[1]], "st_type") == "descr" &&\n             length(attr(x[[1]], "data_info")$by_var) == 1 &&\n             ((!attr(x[[1]], "data_info")$transposed && dim(x[[1]])[2] == 1) ||\n              (attr(x[[1]], "data_info")$transposed && dim(x[[1]])[1] == 1))) {\n\n    \n    # Special case: descr() + [by() | stby()]  objects with 1 variable --------\n    # A column will become created for every distinct value of the ------------\n    # grouping variable -------------------------------------------------------\n    if (attr(x[[1]], "data_info")$transposed) {\n      xx <- do.call(rbind, x)\n    } else {\n      # 1 Column several times - use cbind\n      xx <- do.call(cbind, x)\n      class(xx)     <- class(x[[1]])\n      colnames(xx)  <- names(x)\n    }\n    \n    attr(xx, "st_type")   <- "descr"\n    attr(xx, "date")      <- attr(x[[1]], "date")\n    attr(xx, "fn_call")   <- attr(x[[1]], "fn_call")\n    attr(xx, "stats")     <- attr(x[[1]], "stats")\n    attr(xx, "data_info") <- attr(x[[1]], "data_info")\n    \n    attr(xx, "data_info")$by_var_special <- \n      sub("^.*\\\\$(.+)", "\\\\1", attr(x[[1]], "data_info")$by_var)\n    attr(xx, "data_info")$Group    <- NULL\n    attr(xx, "data_info")$by_first <- NULL\n    attr(xx, "data_info")$by_last  <- NULL\n    attr(xx, "data_info")$N.Obs    <- attr(x[[1]], "data_info")$N.Obs\n    \n    # Remove NA items if any\n    attr(xx, "data_info") <- attr(xx,"data_info")[!is.na(attr(xx, "data_info"))]\n    \n    \n    attr(xx, "format_info") <- attr(x[[1]], "format_info")\n    attr(xx, "user_fmt")    <- attr(x[[1]], "user_fmt")\n    attr(xx, "lang")        <- attr(x[[1]], "lang")\n    \n    print.summarytools(xx,\n                       method        = method,\n                       file          = file,\n                       append        = append,\n                       report.title  = report.title,\n                       table.classes = table.classes,\n                       bootstrap.css = bootstrap.css,\n                       custom.css    = custom.css,\n                       silent        = silent,\n                       footnote      = footnote,\n                       collapse      = collapse,\n                       escape.pipe   = escape.pipe,\n                       ...)\n    \n  } else if (inherits(x = x, what = c("stby", "by", "array")) &&\n             attr(x[[1]], "st_type") %in% \n               c("freq", "ctable", "descr", "dfSummary")) {\n    \n    # html file is being created -- we fix method = "browser"\n    if (grepl("\\\\.html$", file, ignore.case = TRUE, perl = TRUE) &&\n        !grepl(pattern = tempdir(), x = file, fixed = TRUE) && \n        method == "pander") {\n      method <- "browser"\n      message("Switching method to \'browser\'")\n    }\n    \n    # Remove NULL objects from list\n    null_ind <- which(vapply(x, is.null, TRUE))\n    if (length(null_ind) > 0) {\n      x <- x[-null_ind]\n    }\n    \n    if (method %in% c("viewer", "browser")) {\n\n      # by object, viewer / browser --------------------------------------------\n            \n      file <- ifelse(file == "", paste0(tempfile(),".html"), file)\n      \n      footnote_safe <- footnote\n      \n      for (i in seq_along(x)) {\n\n        if (grepl(tempdir(), file, fixed = TRUE) && i == length(x)) {\n          open.doc <- TRUE\n        } else {\n          open.doc <- FALSE\n        }\n        \n        if (i == length(x)) {\n          footnote <- footnote_safe\n        } else {\n          footnote <- NA\n        }\n\n        if (i == 1) {\n          if (isTRUE(append) && !is.na(custom.css)) {\n            stop("Can\'t append existing html file with new custom.css")\n          }\n          if (isTRUE(append) && !is.na(report.title)) {\n            stop("Can\'t append existing html file with new report.title")\n          }\n\n          print.summarytools(x[[i]],\n                             method        = method,\n                             file          = file,\n                             append        = append,\n                             report.title  = report.title,\n                             table.classes = table.classes,\n                             bootstrap.css = bootstrap.css,\n                             custom.css    = custom.css,\n                             silent        = silent,\n                             footnote      = footnote,\n                             collapse      = collapse,\n                             escape.pipe   = escape.pipe,\n                             open.doc      = open.doc,\n                             ...)\n\n        } else if (i < length(x)) {\n          print.summarytools(x[[i]],\n                             method        = method,\n                             file          = file,\n                             append        = TRUE,\n                             table.classes = table.classes,\n                             silent        = TRUE,\n                             footnote      = footnote,\n                             collapse      = collapse,\n                             escape.pipe   = escape.pipe,\n                             group.only    = TRUE,\n                             open.doc      = open.doc,\n                             ...)\n        } else {\n          print.summarytools(x[[i]],\n                             method        = method,\n                             file          = file,\n                             append        = TRUE,\n                             escape.pipe   = escape.pipe,\n                             table.classes = table.classes,\n                             silent        = silent,\n                             footnote      = footnote,\n                             collapse      = collapse,\n                             group.only    = TRUE,\n                             open.doc      = open.doc,\n                             ...)\n        }\n      }\n      \n    } else if (method == "render") {\n      \n      # by object, render ------------------------------------------------------\n      \n      for (i in seq_along(x)) {\n\n        if (i == 1) {\n          html_content <- \n            list(print.summarytools(x[[i]],\n                                    method        = method,\n                                    table.classes = table.classes,\n                                    bootstrap.css = bootstrap.css,\n                                    custom.css    = custom.css,\n                                    silent        = silent,\n                                    footnote      = NA,\n                                    collapse      = collapse,\n                                    ...))\n          \n        } else if (i < length(x)) {\n          html_content[[i]] <- \n            print.summarytools(x[[i]],\n                               method        = method,\n                               table.classes = table.classes,\n                               silent        = silent,\n                               footnote      = NA,\n                               collapse      = collapse,\n                               group.only    = TRUE,\n                               ...)\n          \n          \n        } else {\n          html_content[[i]] <- \n            print.summarytools(x[[i]],\n                               method        = method,\n                               table.classes = table.classes,\n                               silent        = silent,\n                               footnote      = footnote,\n                               collapse      = collapse,\n                               group.only    = TRUE,\n                               ...)\n          \n        }\n      }\n      \n      return(tagList(html_content))\n      \n    } else if (method == "pander") {\n      \n      # by object, pander ------------------------------------------------------\n      \n      for (i in seq_along(x)) {\n        if (i == 1) {\n          print.summarytools(x[[1]],\n                             method      = "pander",\n                             silent      = silent,\n                             file        = file,\n                             append      = append,\n                             group.only  = FALSE,\n                             escape.pipe = escape.pipe,\n                             ...)\n        } else {\n          print.summarytools(x[[i]],\n                             method      = "pander",\n                             silent      = silent,\n                             file        = file,\n                             append      = ifelse(file == "", FALSE, TRUE),\n                             group.only  = TRUE,\n                             escape.pipe = escape.pipe,\n                             ...)\n        }\n      }\n    }\n    \n  } else if (inherits(x = x, what = "list") &&\n             inherits(x[[1]], "summarytools") && \n             attr(x[[1]], "st_type") == "freq") {\n\n    if ("ignored" %in% names(attributes(x))) {\n      message("Variable(s) ignored: ",\n              paste(attr(x, "ignored"), collapse = ", "))\n    }\n    \n    if (method %in% c("viewer", "browser")) {\n      \n      # list (lapply) object, viewer / browser ---------------------------------\n      \n      file <- ifelse(file == "", paste0(tempfile(),".html"), file)\n\n      if (grepl(tempdir(), file, fixed = TRUE)) {\n        open.doc <- TRUE\n      } else {\n        open.doc <- FALSE\n      }\n      \n      for (i in seq_along(x)) {\n        if (i == 1) {\n          print.summarytools(x[[1]],\n                             method        = method,\n                             file          = file,\n                             silent        = silent,\n                             footnote      = NA,\n                             collapse      = collapse,\n                             append        = FALSE,\n                             var.only      = FALSE,\n                             report.title  = report.title,\n                             escape.pipe   = escape.pipe,\n                             table.classes = table.classes,\n                             bootstrap.css = bootstrap.css,\n                             custom.css    = custom.css,\n                             ...)\n          \n        } else if (i < length(x)) {\n          print.summarytools(x[[i]],\n                             method        = method,\n                             file          = file,\n                             append        = TRUE,\n                             var.only      = TRUE,\n                             silent        = TRUE,\n                             footnote      = NA,\n                             collapse      = collapse,\n                             escape.pipe   = escape.pipe,\n                             table.classes = table.classes,\n                             ...)\n        } else {\n          print.summarytools(x[[i]],\n                             method        = method,\n                             file          = file,\n                             append        = TRUE,\n                             var.only      = TRUE,\n                             silent        = silent,\n                             footnote      = footnote,\n                             collapse      = collapse,\n                             escape.pipe   = escape.pipe,\n                             table.classes = table.classes,\n                             open.doc      = open.doc,\n                             ...)\n        }\n      }\n    } else if (method == "render") {\n      \n      # list (lapply) object, render -------------------------------------------\n      \n      for (i in seq_along(x)) {\n        if (i == 1) {\n          html_content <- \n            list(print.summarytools(x[[i]],\n                                    method        = method,\n                                    silent        = TRUE,\n                                    footnote      = NA,\n                                    collapse      = collapse,\n                                    table.classes = table.classes,\n                                    bootstrap.css = bootstrap.css,\n                                    custom.css    = custom.css,\n                                    var.only      = FALSE,\n                                    ...))\n          \n        } else if (i < length(x)) {\n          html_content[[i]] <-\n            print.summarytools(x[[i]],\n                             method        = method,\n                             var.only      = TRUE,\n                             silent        = TRUE,\n                             footnote      = NA,\n                             collapse      = collapse,\n                             table.classes = table.classes,\n                             bootstrap.css = FALSE,\n                             var.only      = TRUE,\n                             ...)\n        } else {\n          html_content[[i]] <- \n            print.summarytools(x[[i]],\n                               method        = method,\n                               var.only      = TRUE,\n                               silent        = silent,\n                               footnote      = footnote,\n                               collapse      = collapse,\n                               table.classes = table.classes,\n                               bootstrap.css = FALSE,\n                               var.only      = TRUE,\n                               ...)\n        }\n      }\n      \n      return(tagList(html_content))\n      \n    } else if (method == "pander") {\n      \n      # list (lapply) object, pander -------------------------------------------\n\n      var.only <- "headings" %in% names(list(...)) &&\n        !isTRUE(list(...)$headings)\n\n      for (i in seq_along(x)) {\n        if (i == 1) {\n          #if (isTRUE(var.only)) {\n            print.summarytools(x[[1]],\n                               method      = "pander",\n                               file        = file,\n                               silent      = silent,\n                               append      = append,\n                               escape.pipe = escape.pipe,\n                               var.only    = var.only,\n                               ...)\n        } else {\n          print.summarytools(x[[i]],\n                             method      = "pander",\n                             file        = file,\n                             silent      = silent,\n                             append      = ifelse(file == "", FALSE, TRUE),\n                             var.only    = TRUE,\n                             escape.pipe = escape.pipe,\n                             ...)\n        }\n      }\n    }\n    \n  } else {\n    \n    message(\n      paste(\n        "x must either be a summarytools object created with freq(), descr(),",\n        "or a list of summarytools objects created using by()"\n      )\n    )\n  }\n}\n\n#\' @export\nstview <- view\n\n'