b'{-# LANGUAGE CPP #-}\n#ifdef __GLASGOW_HASKELL__\n{-# LANGUAGE MagicHash #-}\n#endif\n\nmodule Utils.IsUnit (isUnit, isUnitSupported) where\n\n#ifdef __GLASGOW_HASKELL__\nimport GHC.Exts\n#endif\n\n-- | Check whether the argument is a fully evaluated unit `()`.\n--\n-- Always returns `False` is `isUnitSupported` returns `False`.\n--\n-- Uses `reallyUnsafePtrEquality#`.\nisUnit :: () -> Bool\n\n-- | Checks whether `isUnit` is supported by the Haskell implementation.\n--\n-- Currently returns `True` for ghc and `False` for all other implementations.\nisUnitSupported :: Bool\n\n#ifdef __GLASGOW_HASKELL__\n\n-- simplified from  Utils.Containers.Internal.PtrEquality\nptrEq :: a -> a -> Bool\nptrEq x y = case reallyUnsafePtrEquality# x y of\n    0# -> False\n    _  -> True\n\nisUnit = ptrEq ()\n\nisUnitSupported = True\n\n#else /* !__GLASGOW_HASKELL__ */\n\nisUnit = False\n\nisUnitSupported = False\n\n#endif\n'