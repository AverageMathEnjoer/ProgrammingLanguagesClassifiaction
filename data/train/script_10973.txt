b'\xef\xbb\xbfusing Rubeus.Ndr.Marshal;\nusing Rubeus.Ndr;\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\n\nnamespace Rubeus.Kerberos.PAC {\n    class PacCredentialInfo : PacInfoBuffer {\n\n        public int Version { get; set; }\n\n        public Interop.KERB_ETYPE EncryptionType { get; set; }\n\n        public _PAC_CREDENTIAL_DATA? CredentialInfo { get; set; }\n\n        new byte[] key;\n\n        public PacCredentialInfo(byte[] data, PacInfoBufferType type, byte[] key) :  base(data, type) {\n            this.key = key;\n            Decode(data);\n        }\n\n        public override byte[] Encode() {\n\n            BinaryWriter bw = new BinaryWriter(new MemoryStream());\n\n            bw.Write(Version);\n            bw.Write((int)EncryptionType);\n\n            _Marshal_Helper mh = new _Marshal_Helper();\n            mh.WriteReferent(CredentialInfo, new Action<_PAC_CREDENTIAL_DATA>(mh.WriteStruct));\n            byte[] plainText = mh.ToPickledType().ToArray();\n            var encData = Crypto.KerberosEncrypt(EncryptionType, Interop.KRB_KEY_USAGE_KRB_NON_KERB_SALT, key, plainText);\n            bw.Write(encData);\n\n            long alignment = ((bw.BaseStream.Position + 7) / 8) * 8;\n            bw.BaseStream.SetLength(alignment);\n\n            return ((MemoryStream)bw.BaseStream).ToArray();\n        }\n\n        protected override void Decode(byte[] data) {\n            Version = br.ReadInt32();\n            EncryptionType = (Interop.KERB_ETYPE)br.ReadInt32();\n\n            if(key == null) {\n                return;\n            }\n\n            var encCredData = br.ReadBytes((int)(br.BaseStream.Length - br.BaseStream.Position));\n            var plainCredData = Crypto.KerberosDecrypt(EncryptionType, Interop.KRB_KEY_USAGE_KRB_NON_KERB_SALT, key, encCredData);\n\n            NdrPickledType npt = new NdrPickledType(plainCredData);\n            _Unmarshal_Helper uh = new _Unmarshal_Helper(npt.Data);\n            CredentialInfo = uh.ReadReferentValue(uh.ReadStruct<_PAC_CREDENTIAL_DATA>,false);           \n        }\n    }\n}\n'