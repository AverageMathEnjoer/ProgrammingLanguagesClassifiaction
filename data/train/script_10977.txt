b'namespace CS_SQLite3\n{\n  public partial class CSSQLite\n  {\n    /*\n    ** 2006 June 7\n    **\n    ** The author disclaims copyright to this source code.  In place of\n    ** a legal notice, here is a blessing:\n    **\n    **    May you do good and not evil.\n    **    May you find forgiveness for yourself and forgive others.\n    **    May you share freely, never taking more than you give.\n    **\n    *************************************************************************\n    ** This header file defines the SQLite interface for use by\n    ** shared libraries that want to be imported as extensions into\n    ** an SQLite instance.  Shared libraries that intend to be loaded\n    ** as extensions by SQLite should #include this file instead of\n    ** sqlite3.h.\n    **\n    ** @(#) $Id: sqlite3ext.h,v 1.25 2008/10/12 00:27:54 shane Exp $\n    **\n    *************************************************************************\n    **  Included in SQLite3 port to C#-SQLite;  2008 Noah B Hart\n    **  C#-SQLite is an independent reimplementation of the SQLite software library\n    **\n    **  $Header$\n    *************************************************************************\n    */\n#if !_SQLITE3EXT_H_\n    //#define _SQLITE3EXT_H_\n    //#include "sqlite3.h"\n\n    //typedef struct sqlite3_api_routines sqlite3_api_routines;\n\n    /*\n    ** The following structure holds pointers to all of the SQLite API\n    ** routines.\n    **\n    ** WARNING:  In order to maintain backwards compatibility, add new\n    ** interfaces to the end of this structure only.  If you insert new\n    ** interfaces in the middle of this structure, then older different\n    ** versions of SQLite will not be able to load each others\' shared\n    ** libraries!\n    */\n    //struct sqlite3_api_routines {\n    //  void * (*aggregate_context)(sqlite3_context*,int nBytes);\n    //  int  (*aggregate_count)(sqlite3_context*);\n    //  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));\n    //  int  (*bind_double)(sqlite3_stmt*,int,double);\n    //  int  (*bind_int)(sqlite3_stmt*,int,int);\n    //  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);\n    //  int  (*bind_null)(sqlite3_stmt*,int);\n    //  int  (*bind_parameter_count)(sqlite3_stmt*);\n    //  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);\n    //  const char * (*bind_parameter_name)(sqlite3_stmt*,int);\n    //  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));\n    //  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));\n    //  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);\n    //  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);\n    //  int  (*busy_timeout)(sqlite3*,int ms);\n    //  int  (*changes)(sqlite3*);\n    //  int  (*close)(sqlite3*);\n    //  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const char*));\n    //  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,int eTextRep,const void*));\n    //  const void * (*column_blob)(sqlite3_stmt*,int iCol);\n    //  int  (*column_bytes)(sqlite3_stmt*,int iCol);\n    //  int  (*column_bytes16)(sqlite3_stmt*,int iCol);\n    //  int  (*column_count)(sqlite3_stmt*pStmt);\n    //  const char * (*column_database_name)(sqlite3_stmt*,int);\n    //  const void * (*column_database_name16)(sqlite3_stmt*,int);\n    //  const char * (*column_decltype)(sqlite3_stmt*,int i);\n    //  const void * (*column_decltype16)(sqlite3_stmt*,int);\n    //  double  (*column_double)(sqlite3_stmt*,int iCol);\n    //  int  (*column_int)(sqlite3_stmt*,int iCol);\n    //  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);\n    //  const char * (*column_name)(sqlite3_stmt*,int);\n    //  const void * (*column_name16)(sqlite3_stmt*,int);\n    //  const char * (*column_origin_name)(sqlite3_stmt*,int);\n    //  const void * (*column_origin_name16)(sqlite3_stmt*,int);\n    //  const char * (*column_table_name)(sqlite3_stmt*,int);\n    //  const void * (*column_table_name16)(sqlite3_stmt*,int);\n    //  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);\n    //  const void * (*column_text16)(sqlite3_stmt*,int iCol);\n    //  int  (*column_type)(sqlite3_stmt*,int iCol);\n    //  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);\n    //  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);\n    //  int  (*complete)(const char*sql);\n    //  int  (*complete16)(const void*sql);\n    //  int  (*create_collation)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*));\n    //    int  (*create_collation16)(sqlite3*,const void*,int,void*,int(*)(void*,int,const void*,int,const void*));\n    //  int  (*create_function)(sqlite3*,const char*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*));\n    //  int  (*create_function16)(sqlite3*,const void*,int,int,void*,void (*xFunc)(sqlite3_context*,int,sqlite3_value**),void (*xStep)(sqlite3_context*,int,sqlite3_value**),void (*xFinal)(sqlite3_context*));\n    //  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);\n    //  int  (*data_count)(sqlite3_stmt*pStmt);\n    //  sqlite3 * (*db_handle)(sqlite3_stmt*);\n    //  int (*declare_vtab)(sqlite3*,const char*);\n    //  int  (*enable_shared_cache)(int);\n    //  int  (*errcode)(sqlite3*db);\n    //  const char * (*errmsg)(sqlite3*);\n    //  const void * (*errmsg16)(sqlite3*);\n    //  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);\n    //  int  (*expired)(sqlite3_stmt*);\n    //  int  (*finalize)(sqlite3_stmt*pStmt);\n    //  void  (*free)(void*);\n    //  void  (*free_table)(char**result);\n    //  int  (*get_autocommit)(sqlite3*);\n    //  void * (*get_auxdata)(sqlite3_context*,int);\n    //  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);\n    //  int  (*global_recover)(void);\n    //  void  (*interruptx)(sqlite3*);\n    //  sqlite_int64  (*last_insert_rowid)(sqlite3*);\n    //  const char * (*libversion)(void);\n    //  int  (*libversion_number)(void);\n    //  void *(*malloc)(int);\n    //  char * (*mprintf)(const char*,...);\n    //  int  (*open)(const char*,sqlite3**);\n    //  int  (*open16)(const void*,sqlite3**);\n    //  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);\n    //  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);\n    //  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_u3264),void*);\n    //  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);\n    //  void *(*realloc)(void*,int);\n    //  int  (*reset)(sqlite3_stmt*pStmt);\n    //  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));\n    //  void  (*result_double)(sqlite3_context*,double);\n    //  void  (*result_error)(sqlite3_context*,const char*,int);\n    //  void  (*result_error16)(sqlite3_context*,const void*,int);\n    //  void  (*result_int)(sqlite3_context*,int);\n    //  void  (*result_int64)(sqlite3_context*,sqlite_int64);\n    //  void  (*result_null)(sqlite3_context*);\n    //  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));\n    //  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));\n    //  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));\n    //  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));\n    //  void  (*result_value)(sqlite3_context*,sqlite3_value*);\n    //  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);\n    //  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,const char*,const char*),void*);\n    //  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));\n    //  char * (*snprintf)(int,char*,const char*,...);\n    //  int  (*step)(sqlite3_stmt*);\n    //  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,char const**,char const**,int*,int*,int*);\n    //  void  (*thread_cleanup)(void);\n    //  int  (*total_changes)(sqlite3*);\n    //  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);\n    //  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);\n    //  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,sqlite_int64),void*);\n    //  void * (*user_data)(sqlite3_context*);\n    //  const void * (*value_blob)(sqlite3_value*);\n    //  int  (*value_bytes)(sqlite3_value*);\n    //  int  (*value_bytes16)(sqlite3_value*);\n    //  double  (*value_double)(sqlite3_value*);\n    //  int  (*value_int)(sqlite3_value*);\n    //  sqlite_int64  (*value_int64)(sqlite3_value*);\n    //  int  (*value_numeric_type)(sqlite3_value*);\n    //  const unsigned char * (*value_text)(sqlite3_value*);\n    //  const void * (*value_text16)(sqlite3_value*);\n    //  const void * (*value_text16be)(sqlite3_value*);\n    //  const void * (*value_text16le)(sqlite3_value*);\n    //  int  (*value_type)(sqlite3_value*);\n    //  char *(*vmprintf)(const char*,va_list);\n    //  /* Added ??? */\n    //  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);\n    //  /* Added by 3.3.13 */\n    //  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);\n    //  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);\n    //  int (*clear_bindings)(sqlite3_stmt*);\n    //  /* Added by 3.4.1 */\n    //  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,void (*xDestroy)(void *));\n    //  /* Added by 3.5.0 */\n    //  int (*bind_zeroblob)(sqlite3_stmt*,int,int);\n    //  int (*blob_bytes)(sqlite3_blob*);\n    //  int (*blob_close)(sqlite3_blob*);\n    //  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,int,sqlite3_blob**);\n    //  int (*blob_read)(sqlite3_blob*,void*,int,int);\n    //  int (*blob_write)(sqlite3_blob*,const void*,int,int);\n    //  int (*create_collation_v2)(sqlite3*,const char*,int,void*,int(*)(void*,int,const void*,int,const void*),void(*)(void*));\n    //  int (*file_control)(sqlite3*,const char*,int,void*);\n    //  sqlite3_int64 (*memory_highwater)(int);\n    //  sqlite3_int64 (*memory_used)(void);\n    //  sqlite3_mutex *(*mutex_alloc)(int);\n    //  void (*mutex_enter)(sqlite3_mutex*);\n    //  void (*mutex_free)(sqlite3_mutex*);\n    //  void (*mutex_leave)(sqlite3_mutex*);\n    //  int (*mutex_try)(sqlite3_mutex*);\n    //  int (*open_v2)(const char*,sqlite3**,int,const char*);\n    //  int (*release_memory)(int);\n    //  void (*result_error_nomem)(sqlite3_context*);\n    //  void (*result_error_toobig)(sqlite3_context*);\n    //  int (*sleep)(int);\n    //  void (*soft_heap_limit)(int);\n    //  sqlite3_vfs *(*vfs_find)(const char*);\n    //  int (*vfs_register)(sqlite3_vfs*,int);\n    //  int (*vfs_unregister)(sqlite3_vfs*);\n    //  int (*xthreadsafe)(void);\n    //  void (*result_zeroblob)(sqlite3_context*,int);\n    //  void (*result_error_code)(sqlite3_context*,int);\n    //  int (*test_control)(int, ...);\n    //  void (*randomness)(int,void*);\n    //  sqlite3 *(*context_db_handle)(sqlite3_context*);\n    //int (*extended_result_codes)(sqlite3*,int);\n    //int (*limit)(sqlite3*,int,int);\n    //sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);\n    //const char *(*sql)(sqlite3_stmt*);\n    //int (*status)(int,int*,int*,int);\n    //};\n    public class sqlite3_api_routines\n    {\n      public sqlite3 context_db_handle;\n    };\n\n    /*\n    ** The following macros redefine the API routines so that they are\n    ** redirected throught the global sqlite3_api structure.\n    **\n    ** This header file is also used by the loadext.c source file\n    ** (part of the main SQLite library - not an extension) so that\n    ** it can get access to the sqlite3_api_routines structure\n    ** definition.  But the main library does not want to redefine\n    ** the API.  So the redefinition macros are only valid if the\n    ** SQLITE_CORE macros is undefined.\n    */\n#if !SQLITE_CORE\n    //#define sqlite3_aggregate_context      sqlite3_api->aggregate_context\n#if !SQLITE_OMIT_DEPRECATED\n    /#define sqlite3_aggregate_count        sqlite3_api->aggregate_count\n#endif\n    //#define sqlite3_bind_blob              sqlite3_api->bind_blob\n    //#define sqlite3_bind_double            sqlite3_api->bind_double\n    //#define sqlite3_bind_int               sqlite3_api->bind_int\n    //#define sqlite3_bind_int64             sqlite3_api->bind_int64\n    //#define sqlite3_bind_null              sqlite3_api->bind_null\n    //#define sqlite3_bind_parameter_count   sqlite3_api->bind_parameter_count\n    //#define sqlite3_bind_parameter_index   sqlite3_api->bind_parameter_index\n    //#define sqlite3_bind_parameter_name    sqlite3_api->bind_parameter_name\n    //#define sqlite3_bind_text              sqlite3_api->bind_text\n    //#define sqlite3_bind_text16            sqlite3_api->bind_text16\n    //#define sqlite3_bind_value             sqlite3_api->bind_value\n    //#define sqlite3_busy_handler           sqlite3_api->busy_handler\n    //#define sqlite3_busy_timeout           sqlite3_api->busy_timeout\n    //#define sqlite3_changes                sqlite3_api->changes\n    //#define sqlite3_close                  sqlite3_api->close\n    //#define sqlite3_collation_needed       sqlite3_api->collation_needed\n    //#define sqlite3_collation_needed16     sqlite3_api->collation_needed16\n    //#define sqlite3_column_blob            sqlite3_api->column_blob\n    //#define sqlite3_column_bytes           sqlite3_api->column_bytes\n    //#define sqlite3_column_bytes16         sqlite3_api->column_bytes16\n    //#define sqlite3_column_count           sqlite3_api->column_count\n    //#define sqlite3_column_database_name   sqlite3_api->column_database_name\n    //#define sqlite3_column_database_name16 sqlite3_api->column_database_name16\n    //#define sqlite3_column_decltype        sqlite3_api->column_decltype\n    //#define sqlite3_column_decltype16      sqlite3_api->column_decltype16\n    //#define sqlite3_column_double          sqlite3_api->column_double\n    //#define sqlite3_column_int             sqlite3_api->column_int\n    //#define sqlite3_column_int64           sqlite3_api->column_int64\n    //#define sqlite3_column_name            sqlite3_api->column_name\n    //#define sqlite3_column_name16          sqlite3_api->column_name16\n    //#define sqlite3_column_origin_name     sqlite3_api->column_origin_name\n    //#define sqlite3_column_origin_name16   sqlite3_api->column_origin_name16\n    //#define sqlite3_column_table_name      sqlite3_api->column_table_name\n    //#define sqlite3_column_table_name16    sqlite3_api->column_table_name16\n    //#define sqlite3_column_text            sqlite3_api->column_text\n    //#define sqlite3_column_text16          sqlite3_api->column_text16\n    //#define sqlite3_column_type            sqlite3_api->column_type\n    //#define sqlite3_column_value           sqlite3_api->column_value\n    //#define sqlite3_commit_hook            sqlite3_api->commit_hook\n    //#define sqlite3_complete               sqlite3_api->complete\n    //#define sqlite3_complete16             sqlite3_api->complete16\n    //#define sqlite3_create_collation       sqlite3_api->create_collation\n    //#define sqlite3_create_collation16     sqlite3_api->create_collation16\n    //#define sqlite3_create_function        sqlite3_api->create_function\n    //#define sqlite3_create_function16      sqlite3_api->create_function16\n    //#define sqlite3_create_module          sqlite3_api->create_module\n    //#define sqlite3_create_module_v2       sqlite3_api->create_module_v2\n    //#define sqlite3_data_count             sqlite3_api->data_count\n    //#define sqlite3_db_handle              sqlite3_api->db_handle\n    //#define sqlite3_declare_vtab           sqlite3_api->declare_vtab\n    //#define sqlite3_enable_shared_cache    sqlite3_api->enable_shared_cache\n    //#define sqlite3_errcode                sqlite3_api->errcode\n    //#define sqlite3_errmsg                 sqlite3_api->errmsg\n    //#define sqlite3_errmsg16               sqlite3_api->errmsg16\n    //#define sqlite3_exec                   sqlite3_api->exec\n#if !SQLITE_OMIT_DEPRECATED\n    /#define sqlite3_expired                sqlite3_api->expired\n#endif\n    //#define sqlite3_finalize               sqlite3_api->finalize\n    //#define //sqlite3_free                   sqlite3_api->free\n    //#define //sqlite3_free_table             sqlite3_api->free_table\n    //#define sqlite3_get_autocommit         sqlite3_api->get_autocommit\n    //#define sqlite3_get_auxdata            sqlite3_api->get_auxdata\n    //#define sqlite3_get_table              sqlite3_api->get_table\n#if !SQLITE_OMIT_DEPRECATED\n    //#define sqlite3_global_recover         sqlite3_api->global_recover\n#endif\n    //#define sqlite3_interrupt              sqlite3_api->interruptx\n    //#define sqlite3_last_insert_rowid      sqlite3_api->last_insert_rowid\n    //#define sqlite3_libversion             sqlite3_api->libversion\n    //#define sqlite3_libversion_number      sqlite3_api->libversion_number\n    //#define sqlite3Malloc                 sqlite3_api->malloc\n    //#define sqlite3_mprintf                sqlite3_api->mprintf\n    //#define sqlite3_open                   sqlite3_api.open\n    //#define sqlite3_open16                 sqlite3_api.open16\n    //#define sqlite3_prepare                sqlite3_api.prepare\n    //#define sqlite3_prepare16              sqlite3_api.prepare16\n    //#define sqlite3_prepare_v2             sqlite3_api.prepare_v2\n    //#define sqlite3_prepare16_v2           sqlite3_api.prepare16_v2\n    //#define sqlite3_profile                sqlite3_api.profile\n    //#define sqlite3_progress_handler       sqlite3_api.progress_handler\n    //#define sqlite3_realloc                sqlite3_api->realloc\n    //#define sqlite3_reset                  sqlite3_api->reset\n    //#define sqlite3_result_blob            sqlite3_api->result_blob\n    //#define sqlite3_result_double          sqlite3_api->result_double\n    //#define sqlite3_result_error           sqlite3_api->result_error\n    //#define sqlite3_result_error16         sqlite3_api->result_error16\n    //#define sqlite3_result_int             sqlite3_api->result_int\n    //#define sqlite3_result_int64           sqlite3_api->result_int64\n    //#define sqlite3_result_null            sqlite3_api->result_null\n    //#define sqlite3_result_text            sqlite3_api->result_text\n    //#define sqlite3_result_text16          sqlite3_api->result_text16\n    //#define sqlite3_result_text16be        sqlite3_api->result_text16be\n    //#define sqlite3_result_text16le        sqlite3_api->result_text16le\n    //#define sqlite3_result_value           sqlite3_api->result_value\n    //#define sqlite3_rollback_hook          sqlite3_api->rollback_hook\n    //#define sqlite3_set_authorizer         sqlite3_api->set_authorizer\n    //#define sqlite3_set_auxdata            sqlite3_api->set_auxdata\n    //#define sqlite3_snprintf               sqlite3_api->snprintf\n    //#define sqlite3_step                   sqlite3_api->step\n    //#define sqlite3_table_column_metadata  sqlite3_api->table_column_metadata\n    //#define sqlite3_thread_cleanup         sqlite3_api->thread_cleanup\n    //#define sqlite3_total_changes          sqlite3_api->total_changes\n    //#define sqlite3_trace                  sqlite3_api->trace\n#if !SQLITE_OMIT_DEPRECATED\n    //#define sqlite3_transfer_bindings      sqlite3_api->transfer_bindings\n#endif\n    //#define sqlite3_update_hook            sqlite3_api->update_hook\n    //#define sqlite3_user_data              sqlite3_api->user_data\n    //#define sqlite3_value_blob             sqlite3_api->value_blob\n    //#define sqlite3_value_bytes            sqlite3_api->value_bytes\n    //#define sqlite3_value_bytes16          sqlite3_api->value_bytes16\n    //#define sqlite3_value_double           sqlite3_api->value_double\n    //#define sqlite3_value_int              sqlite3_api->value_int\n    //#define sqlite3_value_int64            sqlite3_api->value_int64\n    //#define sqlite3_value_numeric_type     sqlite3_api->value_numeric_type\n    //#define sqlite3_value_text             sqlite3_api->value_text\n    //#define sqlite3_value_text16           sqlite3_api->value_text16\n    //#define sqlite3_value_text16be         sqlite3_api->value_text16be\n    //#define sqlite3_value_text16le         sqlite3_api->value_text16le\n    //#define sqlite3_value_type             sqlite3_api->value_type\n    //#define sqlite3_vmprintf               sqlite3_api->vmprintf\n    //#define sqlite3_overload_function      sqlite3_api->overload_function\n    //#define sqlite3_prepare_v2             sqlite3_api.prepare_v2\n    //#define sqlite3_prepare16_v2           sqlite3_api.prepare16_v2\n    //#define sqlite3_clear_bindings         sqlite3_api->clear_bindings\n    //#define sqlite3_bind_zeroblob          sqlite3_api->bind_zeroblob\n    //#define sqlite3_blob_bytes             sqlite3_api->blob_bytes\n    //#define sqlite3_blob_close             sqlite3_api->blob_close\n    //#define sqlite3_blob_open              sqlite3_api->blob_open\n    //#define sqlite3_blob_read              sqlite3_api->blob_read\n    //#define sqlite3_blob_write             sqlite3_api->blob_write\n    //#define sqlite3_create_collation_v2    sqlite3_api->create_collation_v2\n    //#define sqlite3_file_control           sqlite3_api->file_control\n    //#define sqlite3_memory_highwater       sqlite3_api->memory_highwater\n    //#define sqlite3_memory_used            sqlite3_api->memory_used\n    //#define sqlite3MutexAlloc            sqlite3_api->mutex_alloc\n    //#define sqlite3_mutex_enter            sqlite3_api->mutex_enter\n    //#define sqlite3_mutex_free             sqlite3_api->mutex_free\n    //#define sqlite3_mutex_leave            sqlite3_api->mutex_leave\n    //#define sqlite3_mutex_try              sqlite3_api->mutex_try\n    //#define sqlite3_open_v2                sqlite3_api.open_v2\n    //#define sqlite3_release_memory         sqlite3_api->release_memory\n    //#define sqlite3_result_error_nomem     sqlite3_api->result_error_nomem\n    //#define sqlite3_result_error_toobig    sqlite3_api->result_error_toobig\n    //#define sqlite3_sleep                  sqlite3_api->sleep\n    //#define sqlite3_soft_heap_limit        sqlite3_api->soft_heap_limit\n    //#define sqlite3_vfs_find               sqlite3_api->vfs_find\n    //#define sqlite3_vfs_register           sqlite3_api->vfs_register\n    //#define sqlite3_vfs_unregister         sqlite3_api->vfs_unregister\n    //#define sqlite3_threadsafe             sqlite3_api->xthreadsafe\n    //#define sqlite3_result_zeroblob        sqlite3_api->result_zeroblob\n    //#define sqlite3_result_error_code      sqlite3_api->result_error_code\n    //#define sqlite3_test_control           sqlite3_api->test_control\n    //#define sqlite3_randomness             sqlite3_api->randomness\n    //#define sqlite3_context_db_handle      sqlite3_api->context_db_handle\n    //#define sqlite3_extended_result_codes  sqlite3_api->extended_result_codes\n    //#define sqlite3_limit                  sqlite3_api->limit\n    //#define sqlite3_next_stmt              sqlite3_api->next_stmt\n    //#define sqlite3_sql                    sqlite3_api->sql\n    //#define sqlite3_status                 sqlite3_api->status\n#endif //* SQLITE_CORE */\n\n    //#define SQLITE_EXTENSION_INIT1     const sqlite3_api_routines *sqlite3_api = 0;\n    //#define SQLITE_EXTENSION_INIT2(v)  sqlite3_api = v;\n\n#endif //* _SQLITE3EXT_H_ */\n  }\n}\n'