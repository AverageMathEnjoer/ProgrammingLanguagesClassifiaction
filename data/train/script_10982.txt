b'package com.naman14.timber.cast;\n\nimport android.content.Context;\nimport android.net.Uri;\n\nimport com.naman14.timber.utils.Constants;\nimport com.naman14.timber.utils.TimberUtils;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.InputStream;\nimport java.util.Map;\n\nimport fi.iki.elonen.NanoHTTPD;\n\npublic class WebServer extends NanoHTTPD {\n\n    private Context context;\n    private Uri songUri, albumArtUri;\n\n    public WebServer(Context context) {\n        super(Constants.CAST_SERVER_PORT);\n        this.context = context;\n    }\n\n    @Override\n    public Response serve(String uri, Method method,\n                          Map<String, String> header,\n                          Map<String, String> parameters,\n                          Map<String, String> files) {\n        if (uri.contains("albumart")) {\n            //serve the picture\n\n            String albumId = parameters.get("id");\n            this.albumArtUri = TimberUtils.getAlbumArtUri(Long.parseLong(albumId));\n\n            if (albumArtUri != null) {\n                String mediasend = "image/jpg";\n                InputStream fisAlbumArt = null;\n                try {\n                    fisAlbumArt = context.getContentResolver().openInputStream(albumArtUri);\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                }\n                Response.Status st = Response.Status.OK;\n\n                //serve the song\n                return newChunkedResponse(st, mediasend, fisAlbumArt);\n            }\n\n        } else if (uri.contains("song")) {\n\n            String songId = parameters.get("id");\n            this.songUri = TimberUtils.getSongUri(context, Long.parseLong(songId));\n\n            if (songUri != null) {\n                String mediasend = "audio/mp3";\n                FileInputStream fisSong = null;\n                File song = new File(songUri.getPath());\n                try {\n                    fisSong = new FileInputStream(song);\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                }\n                Response.Status st = Response.Status.OK;\n\n                //serve the song\n                return newFixedLengthResponse(st, mediasend, fisSong, song.length());\n            }\n\n        }\n        return newFixedLengthResponse("Error");\n    }\n\n}'