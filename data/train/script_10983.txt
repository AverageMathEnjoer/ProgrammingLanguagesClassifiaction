b'/*\n    SPDX-FileCopyrightText: 2016-2017 Milian Wolff <mail@milianw.de>\n\n    SPDX-License-Identifier: LGPL-2.1-or-later\n*/\n\n#include <iostream>\n#include <malloc.h>\n#include <unistd.h>\n\n#include <benchutil.h>\n\nusing namespace std;\n\nint main()\n{\n    const auto log2_max = 17;\n    const auto max_steps = log2_max * 2 + 1;\n    size_t cost[max_steps];\n    int sizes[max_steps];\n\n    const auto baseline = mallinfo2().uordblks;\n\n    for (int i = 1; i < max_steps; ++i) {\n        int size = 1 << i / 2;\n        if (i % 2) {\n            size += size / 2;\n        }\n        sizes[i] = size;\n        auto ptr = malloc(size);\n        escape(ptr); // prevent the compiler from optimizing the malloc away\n        cost[i] = mallinfo2().uordblks;\n        free(ptr);\n    }\n\n    cout << "requested\\t|\\tactual\\t|\\toverhead\\n";\n    for (int i = 1; i < max_steps; ++i) {\n        const auto actual = (cost[i] - baseline);\n        cout << sizes[i] << "\\t\\t|\\t" << actual << "\\t|\\t" << (actual - sizes[i]) << \'\\n\';\n    }\n    return 0;\n}\n'