b'package droidninja.filepicker.utils\n\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.FragmentTransaction\nimport androidx.appcompat.app.AppCompatActivity\n\nimport droidninja.filepicker.R\nimport droidninja.filepicker.fragments.BaseFragment\n\n\nobject FragmentUtil {\n\n    fun hadFragment(activity: AppCompatActivity): Boolean {\n        return activity.supportFragmentManager.backStackEntryCount != 0\n    }\n\n    fun replaceFragment(activity: AppCompatActivity, contentId: Int, fragment: BaseFragment) {\n        val transaction = activity.supportFragmentManager.beginTransaction()\n\n        transaction.setCustomAnimations(R.anim.slide_left_in, R.anim.slide_left_out)\n\n        transaction.replace(contentId, fragment, fragment.javaClass.simpleName)\n\n        transaction.addToBackStack(null)\n        transaction.commit()\n    }\n\n\n    fun addFragment(activity: AppCompatActivity, contentId: Int, fragment: BaseFragment) {\n        val transaction = activity.supportFragmentManager.beginTransaction()\n\n        transaction.setCustomAnimations(R.anim.slide_left_in, R.anim.slide_left_out)\n\n        transaction.add(contentId, fragment, fragment.javaClass.simpleName)\n\n        transaction.commit()\n    }\n\n    fun removeFragment(activity: AppCompatActivity, fragment: BaseFragment) {\n        activity.supportFragmentManager.beginTransaction()\n                .remove(fragment)\n                .commit()\n    }\n\n\n    fun showFragment(activity: AppCompatActivity, fragment: BaseFragment) {\n        activity.supportFragmentManager.beginTransaction()\n                .show(fragment)\n                .commit()\n    }\n\n    fun hideFragment(activity: AppCompatActivity, fragment: BaseFragment) {\n        activity.supportFragmentManager.beginTransaction()\n                .hide(fragment)\n                .commit()\n    }\n\n    fun attachFragment(activity: AppCompatActivity, fragment: BaseFragment) {\n        activity.supportFragmentManager.beginTransaction()\n                .attach(fragment)\n                .commit()\n    }\n\n    fun detachFragment(activity: AppCompatActivity, fragment: BaseFragment) {\n        activity.supportFragmentManager.beginTransaction()\n                .detach(fragment)\n                .commit()\n    }\n\n    fun getFragmentByTag(appCompatActivity: AppCompatActivity, tag: String): Fragment? {\n        return appCompatActivity.supportFragmentManager.findFragmentByTag(tag)\n    }\n\n}'