b'// Copyright (c) 2022 Manuel Schneider\n\n#include "albert/albert.h"\n#include "albert/extensions/frontend.h"\n#include "albert/util/standarditem.h"\n#include "app.h"\n#include <QHotkey>\nusing namespace albert;\nusing namespace std;\n\nApp::App(const QStringList &additional_plugin_paths) :\n    extension_registry(),\n    plugin_registry(extension_registry),\n    query_engine(extension_registry),\n    plugin_provider(extension_registry, additional_plugin_paths),\n    settings_window(nullptr){}\n\nApp::~App()\n{\n    delete settings_window.get();\n}\n\nvoid App::initialize()\n{\n    plugin_provider.loadFrontend();\n    plugin_provider.frontend()->setEngine(&query_engine);\n\n    extension_registry.add(this);\n    extension_registry.add(&plugin_registry);\n    extension_registry.add(&plugin_provider);  // loads plugins\n}\n\nQString App::id() const { return "albert"; }\n\nQString App::name() const { return "Albert"; }\n\nQString App::description() const { return "Control the app."; }\n\nvoid App::updateIndexItems()\n{\n    auto settings_item = StandardItem::make(\n            "albert-settings", "Settings", "Open the Albert settings window", {":app_icon"},\n            {{"albert-settings", "Open settings", [](){ showSettings(); }}}\n    );\n\n    auto quit_item = StandardItem::make(\n            "albert-quit", "Quit Albert", "Quit this application", {":app_icon"},\n            {{"albert-quit", "Quit Albert", [](){ quit(); }}}\n    );\n\n    auto restart_item = StandardItem::make(\n            "albert-restart", "Restart Albert", "Restart this application", {":app_icon"},\n            {{"albert-restart", "Restart Albert", [](){ restart(); }}}\n    );\n\n    vector<IndexItem> index_items;\n    index_items.emplace_back(settings_item, "settings");\n    index_items.emplace_back(settings_item, "preferences");\n    index_items.emplace_back(quit_item, "quit");\n    index_items.emplace_back(restart_item, "restart");\n    setIndexItems(::move(index_items));\n}\n'