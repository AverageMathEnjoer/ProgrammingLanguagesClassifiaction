b'package com.codeest.geeknews.ui.gold.adapter;\n\nimport android.content.Context;\nimport android.support.v7.widget.AppCompatButton;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.TextView;\n\nimport com.codeest.geeknews.R;\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.component.ImageLoader;\nimport com.codeest.geeknews.model.bean.GoldListBean;\nimport com.codeest.geeknews.ui.gank.activity.TechDetailActivity;\nimport com.codeest.geeknews.util.DateUtil;\nimport com.codeest.geeknews.widget.SquareImageView;\n\nimport java.util.List;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\n\n/**\n * Created by codeest on 16/11/27.\n */\n\npublic class GoldListAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {\n\n    private List<GoldListBean> mList;\n    private Context mContext;\n    private LayoutInflater inflater;\n\n    private String mType;\n    private boolean mHotFlag = true;\n    private OnHotCloseListener onHotCloseListener;\n\n    public enum ITEM_TYPE {\n        ITEM_TITLE,     //\xe6\xa0\x87\xe9\xa2\x98\n        ITEM_HOT,       //\xe7\x83\xad\xe9\x97\xa8\n        ITEM_CONTENT    //\xe5\x86\x85\xe5\xae\xb9\n    }\n\n    public GoldListAdapter(Context mContext, List<GoldListBean> mList, String typeStr) {\n        this.mList = mList;\n        this.mContext = mContext;\n        this.mType = typeStr;\n        inflater = LayoutInflater.from(mContext);\n    }\n\n    @Override\n    public int getItemViewType(int position) {\n        if (!mHotFlag) {\n            return ITEM_TYPE.ITEM_CONTENT.ordinal();\n        } else {\n            if(position == 0) {\n                return ITEM_TYPE.ITEM_TITLE.ordinal();\n            } else if (position > 0 && position <= 3){\n                return ITEM_TYPE.ITEM_HOT.ordinal();\n            } else {\n                return ITEM_TYPE.ITEM_CONTENT.ordinal();\n            }\n        }\n    }\n\n    @Override\n    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        if(viewType == ITEM_TYPE.ITEM_TITLE.ordinal()) {\n            return new TitleViewHolder(inflater.inflate(R.layout.item_gold_title, parent, false));\n        } else if(viewType == ITEM_TYPE.ITEM_HOT.ordinal()) {\n            return new HotViewHolder(inflater.inflate(R.layout.item_gold_hot, parent, false));\n        }\n        return new ContentViewHolder(inflater.inflate(R.layout.item_gold, parent, false));\n    }\n\n    @Override\n    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\n        GoldListBean bean = mList.get(0);\n        if (position > 0) {\n            bean = mList.get(position -1);\n        }\n        if (holder instanceof ContentViewHolder) {\n            if (bean.getScreenshot() != null && bean.getScreenshot().getUrl() != null) {\n                ImageLoader.load(mContext, bean.getScreenshot().getUrl(), ((ContentViewHolder) holder).ivImg);\n            } else {\n                ((ContentViewHolder) holder).ivImg.setImageResource(R.mipmap.ic_launcher);\n            }\n            ((ContentViewHolder) holder).tvTitle.setText(bean.getTitle());\n            ((ContentViewHolder) holder).tvInfo.setText(getItemInfoStr(bean.getCollectionCount(),\n                    bean.getCommentsCount(),\n                    bean.getUser().getUsername(),\n                    DateUtil.formatDate2String(DateUtil.subStandardTime(bean.getCreatedAt()))));\n            holder.itemView.setOnClickListener(new MyOnClickListener(--position));\n        } else if (holder instanceof HotViewHolder) {\n            if (bean.getScreenshot() != null && bean.getScreenshot().getUrl() != null) {\n                ImageLoader.load(mContext, bean.getScreenshot().getUrl(), ((HotViewHolder) holder).ivImg);\n            } else {\n                ((HotViewHolder) holder).ivImg.setImageResource(R.mipmap.ic_launcher);\n            }\n            ((HotViewHolder) holder).tvTitle.setText(bean.getTitle());\n            ((HotViewHolder) holder).tvLike.setText(String.valueOf(bean.getCollectionCount()));\n            ((HotViewHolder) holder).tvAuthor.setText(String.valueOf(bean.getUser().getUsername()));\n            ((HotViewHolder) holder).tvTime.setText(DateUtil.formatDate2String(DateUtil.subStandardTime(bean.getCreatedAt())));\n            holder.itemView.setOnClickListener(new MyOnClickListener(--position));\n        } else {\n            ((TitleViewHolder) holder).tvTitle.setText(String.format("%s \xe7\x83\xad\xe9\x97\xa8", mType));\n            ((TitleViewHolder) holder).btnClose.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View view) {\n                    mHotFlag = false;\n                    for (int i = 0; i< 4 ;i++) {\n                        mList.remove(0);\n                    }\n                    notifyItemRangeRemoved(0, 4);\n                    if (onHotCloseListener != null) {\n                        onHotCloseListener.onClose();\n                    }\n                }\n            });\n        }\n    }\n\n    @Override\n    public int getItemCount() {\n        return mList.size();\n    }\n\n    public static class ContentViewHolder extends RecyclerView.ViewHolder {\n\n        @BindView(R.id.tv_gold_item_title)\n        TextView tvTitle;\n        @BindView(R.id.tv_gold_item_info)\n        TextView tvInfo;\n        @BindView(R.id.iv_gold_item_img)\n        SquareImageView ivImg;\n\n        public ContentViewHolder(View itemView) {\n            super(itemView);\n            ButterKnife.bind(this,itemView);\n        }\n    }\n\n    public static class HotViewHolder extends RecyclerView.ViewHolder {\n\n        @BindView(R.id.tv_gold_item_title)\n        TextView tvTitle;\n        @BindView(R.id.tv_gold_item_like)\n        TextView tvLike;\n        @BindView(R.id.tv_gold_item_author)\n        TextView tvAuthor;\n        @BindView(R.id.tv_gold_item_time)\n        TextView tvTime;\n        @BindView(R.id.iv_gold_item_img)\n        SquareImageView ivImg;\n\n        public HotViewHolder(View itemView) {\n            super(itemView);\n            ButterKnife.bind(this,itemView);\n        }\n    }\n\n    public static class TitleViewHolder extends RecyclerView.ViewHolder {\n\n        @BindView(R.id.tv_gold_hot_title)\n        TextView tvTitle;\n        @BindView(R.id.btn_gold_hot_close)\n        AppCompatButton btnClose;\n\n        public TitleViewHolder(View itemView) {\n            super(itemView);\n            ButterKnife.bind(this,itemView);\n        }\n    }\n\n    private class MyOnClickListener implements View.OnClickListener {\n\n        private int position;\n\n        public MyOnClickListener(int position) {\n            this.position = position;\n            if (position < 0) {\n                this.position = 0;\n            }\n        }\n\n        @Override\n        public void onClick(View view) {\n            String imgUrl = null;\n            if (mList.get(position).getScreenshot() != null && mList.get(position).getScreenshot().getUrl() != null)\n                imgUrl = mList.get(position).getScreenshot().getUrl();\n            TechDetailActivity.launch(new TechDetailActivity.Builder()\n                    .setContext(mContext)\n                    .setId(mList.get(position).getObjectId())\n                    .setTitle(mList.get(position).getTitle())\n                    .setUrl(mList.get(position).getUrl())\n                    .setImgUrl(imgUrl)\n                    .setType(Constants.TYPE_GOLD));\n        }\n    }\n\n    private String getItemInfoStr(int likeNum, int cmtNum, String author, String time) {\n        StringBuilder sb = new StringBuilder(String.valueOf(likeNum));\n        sb.append("\xe4\xba\xba\xe6\x94\xb6\xe8\x97\x8f \xc2\xb7 ");\n        sb.append(cmtNum);\n        sb.append("\xe6\x9d\xa1\xe8\xaf\x84\xe8\xae\xba \xc2\xb7 ");\n        sb.append(author);\n        sb.append(" \xc2\xb7 ");\n        sb.append(time);\n        return sb.toString();\n    }\n\n    public void updateData(List<GoldListBean> list) {\n        mList = list;\n    }\n\n    public void setHotFlag(boolean hotFlag) {\n        this.mHotFlag = hotFlag;\n    }\n\n    public boolean getHotFlag() {\n        return mHotFlag;\n    }\n\n    public interface OnHotCloseListener {\n        void onClose();\n    }\n\n    public void setOnHotCloseListener(OnHotCloseListener onHotCloseListener) {\n        this.onHotCloseListener = onHotCloseListener;\n    }\n}\n'