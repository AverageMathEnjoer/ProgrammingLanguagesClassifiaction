b'module TreeSitter.Tree\n( Tree\n, withRootNode\n, ts_tree_delete\n, ts_tree_root_node_p\n) where\n\nimport Foreign\nimport TreeSitter.Node\n\n-- | This type is uninhabited and used only for type safety within \'Ptr\' values.\ndata Tree\n\nwithRootNode :: Ptr Tree -> (Ptr Node -> IO a) -> IO a\nwithRootNode tree action = alloca $ \\ ptr -> do\n  ts_tree_root_node_p tree ptr\n  action ptr\n\nforeign import ccall safe "ts_tree_delete" ts_tree_delete :: Ptr Tree -> IO ()\nforeign import ccall unsafe "src/bridge.c ts_tree_root_node_p" ts_tree_root_node_p :: Ptr Tree -> Ptr Node -> IO ()\n'