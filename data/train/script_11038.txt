b'package io.github.javiewer.activity;\n\nimport android.Manifest;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.content.pm.PackageManager;\nimport android.net.Uri;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.os.Looper;\nimport android.util.Log;\n\nimport com.karumi.dexter.Dexter;\nimport com.karumi.dexter.PermissionToken;\nimport com.karumi.dexter.listener.PermissionDeniedResponse;\nimport com.karumi.dexter.listener.PermissionGrantedResponse;\nimport com.karumi.dexter.listener.PermissionRequest;\nimport com.karumi.dexter.listener.single.PermissionListener;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.URI;\nimport java.net.URISyntaxException;\n\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.app.AppCompatActivity;\nimport io.github.javiewer.Configurations;\nimport io.github.javiewer.JAViewer;\nimport io.github.javiewer.Properties;\nimport io.github.javiewer.R;\nimport io.github.javiewer.adapter.item.DataSource;\nimport io.github.javiewer.util.IOUtils;\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.Request;\nimport okhttp3.Response;\n\npublic class StartActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_start);\n\n        checkPermissions(); //\xe6\xa3\x80\xe6\x9f\xa5\xe6\x9d\x83\xe9\x99\x90\xef\xbc\x8c\xe5\x88\x9b\xe5\xbb\xba\xe9\x85\x8d\xe7\xbd\xae\n    }\n\n    public void readProperties() {\n        Request request = new Request.Builder()\n                // todo: \xe6\xad\xa3\xe5\xbc\x8f\xe7\x89\x88\xe6\x94\xb9\xe6\x88\x90\xe5\xae\x98\xe6\x96\xb9\xe4\xbb\x93\xe5\xba\x93\xe7\x9a\x84\xe5\x9c\xb0\xe5\x9d\x80\n                .url("https://raw.githubusercontent.com/ipcjs/JAViewer/master/app/src/main/assets/properties.json?t=" + System.currentTimeMillis() / 1000)\n                .build();\n        JAViewer.HTTP_CLIENT.newCall(request).enqueue(new Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n                Log.w("StartActivity", "onFailure: " + e);\n                try (InputStream is = getAssets().open("properties.json")) {\n                    Properties properties = JAViewer.parseJson(Properties.class, IOUtils.readText(is, IOUtils.UTF_8));\n                    if (properties != null) {\n                        runOnUiThread(() -> handleProperties(properties));\n                    }\n                } catch (IOException ex) {\n                    ex.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                final Properties properties = JAViewer.parseJson(Properties.class, response.body().string());\n                if (properties != null) {\n                    new Handler(Looper.getMainLooper()).post(new Runnable() {\n                        @Override\n                        public void run() {\n                            handleProperties(properties);\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    public void handleProperties(Properties properties) {\n        JAViewer.DATA_SOURCES.clear();\n        JAViewer.DATA_SOURCES.addAll(properties.getDataSources());\n\n        JAViewer.hostReplacements.clear();\n        for (DataSource source : JAViewer.DATA_SOURCES) {\n            try {\n                String host = new URI(source.getLink()).getHost();\n                for (String h : source.legacies) {\n                    JAViewer.hostReplacements.put(h, host);\n                }\n            } catch (URISyntaxException e) {\n                e.printStackTrace();\n            }\n        }\n\n        int currentVersion;\n        try {\n            currentVersion = this.getPackageManager().getPackageInfo(this.getPackageName(), 0).versionCode;\n        } catch (PackageManager.NameNotFoundException e) {\n            throw new RuntimeException("Hacked???");\n        }\n\n        if (properties.getLatestVersionCode() > 0 && currentVersion < properties.getLatestVersionCode()) {\n\n            String message = "\xe6\x96\xb0\xe7\x89\x88\xe6\x9c\xac\xef\xbc\x9a" + properties.getLatestVersion();\n            if (properties.getChangelog() != null) {\n                message += "\\n\\n\xe6\x9b\xb4\xe6\x96\xb0\xe6\x97\xa5\xe5\xbf\x97\xef\xbc\x9a\\n\\n" + properties.getChangelog() + "\\n";\n            }\n\n            final AlertDialog dialog = new AlertDialog.Builder(this)\n                    .setTitle("\xe5\x8f\x91\xe7\x8e\xb0\xe6\x9b\xb4\xe6\x96\xb0")\n                    .setMessage(message)\n                    .setNegativeButton("\xe5\xbf\xbd\xe7\x95\xa5\xe6\x9b\xb4\xe6\x96\xb0", new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialogInterface, int i) {\n                            start();\n                        }\n                    })\n                    .setPositiveButton("\xe6\x9b\xb4\xe6\x96\xb0", new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialog, int which) {\n                            start();\n                            startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("https://github.com/SplashCodes/JAViewer/releases")));\n                        }\n                    })\n                    .create();\n            dialog.show();\n        } else {\n            start();\n        }\n\n    }\n\n    public void start() {\n        startActivity(new Intent(StartActivity.this, MainActivity.class));\n        finish();\n    }\n\n    private void checkPermissions() {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && this.checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n            Dexter.withActivity(this)\n                    .withPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)\n                    .withListener(new PermissionListener() {\n                        @Override\n                        public void onPermissionGranted(PermissionGrantedResponse response) {\n                            checkPermissions();\n                        }\n\n                        @Override\n                        public void onPermissionDenied(PermissionDeniedResponse response) {\n                            new AlertDialog.Builder(StartActivity.this)\n                                    .setTitle("\xe6\x9d\x83\xe9\x99\x90\xe7\x94\xb3\xe8\xaf\xb7")\n                                    .setCancelable(false)\n                                    .setMessage("JAViewer \xe9\x9c\x80\xe8\xa6\x81\xe5\x82\xa8\xe5\xad\x98\xe7\xa9\xba\xe9\x97\xb4\xe6\x9d\x83\xe9\x99\x90\xef\xbc\x8c\xe5\x82\xa8\xe5\xad\x98\xe7\x94\xa8\xe6\x88\xb7\xe9\x85\x8d\xe7\xbd\xae\xe3\x80\x82\xe8\xaf\xb7\xe6\x82\xa8\xe5\x85\x81\xe8\xae\xb8\xe3\x80\x82")\n                                    .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {\n                                        @Override\n                                        public void onClick(DialogInterface dialogInterface, int i) {\n                                            checkPermissions();\n                                        }\n                                    })\n                                    .show();\n                        }\n\n                        @Override\n                        public void onPermissionRationaleShouldBeShown(PermissionRequest permission, PermissionToken token) {\n                            token.continuePermissionRequest();\n                        }\n                    })\n                    .onSameThread()\n                    .check();\n            return;\n        }\n\n        File oldConfig = new File(StartActivity.this.getExternalFilesDir(null), "configurations.json");\n        File config = new File(JAViewer.getStorageDir(), "configurations.json");\n        if (oldConfig.exists()) {\n            oldConfig.renameTo(config);\n        }\n\n        File noMedia = new File(JAViewer.getStorageDir(), ".nomedia");\n        try {\n            noMedia.createNewFile();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        JAViewer.CONFIGURATIONS = Configurations.load(config);\n\n        readProperties();\n    }\n\n}\n'