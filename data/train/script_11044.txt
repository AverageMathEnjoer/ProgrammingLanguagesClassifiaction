b'module Main where\n\n-- transformers\nimport Control.Monad.Trans.Class (lift)\nimport Control.Monad.Trans.Maybe\nimport Control.Monad.Trans.Writer.Lazy\n\n-- dunai\nimport Control.Monad.Trans.MSF.Maybe\nimport Data.MonadicStreamFunction\n\n-- tasty\nimport Test.Tasty\nimport Test.Tasty.HUnit\n\nmain :: IO ()\nmain = defaultMain $ testGroup "listToMaybeS"\n    [ testCase "First emits all list elements before throwing exception" $\n        "Hello" @?= (execWriter $ runMaybeT $ flip embed [(1 :: Integer)..] $ listToMaybeS ["H", "el", "lo"] >>> arrM (tell >>> lift))\n    ]\n'