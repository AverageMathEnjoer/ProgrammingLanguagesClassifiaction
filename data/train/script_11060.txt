b'{-# LANGUAGE DeriveGeneric #-}\n-- | @since 1.0\n\nmodule Test.Tasty.Patterns.Types where\n\nimport GHC.Generics\n\n-- | @since 1.0\ndata Expr\n  = IntLit !Int\n  | NF -- ^ number of fields\n  | Add Expr Expr\n  | Sub Expr Expr\n  | Neg Expr\n  | Not Expr\n  | And Expr Expr\n  | LT Expr Expr\n  | GT Expr Expr\n  | LE Expr Expr\n  | GE Expr Expr\n  | EQ Expr Expr\n  | NE Expr Expr\n  | Or Expr Expr\n  | Concat Expr Expr\n  | Match Expr String\n  | NoMatch Expr String\n  | Field Expr -- ^ nth field of the path, where 1 is the outermost group name and 0 is the whole test name, using @.@ (dot) as a separator\n  | StringLit String\n  | If Expr Expr Expr\n  | ERE String -- ^ an ERE token by itself, like @/foo/@ but not like @$1 ~ /foo/@\n  | ToUpperFn Expr\n  | ToLowerFn Expr\n  | LengthFn (Maybe Expr)\n  | MatchFn Expr String\n  | SubstrFn Expr Expr (Maybe Expr)\n  deriving\n  ( Show\n  , Eq      -- ^ @since 1.1\n  , Generic -- ^ @since 1.4.2\n  )\n'