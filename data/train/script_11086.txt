b'package id.zelory.compressor.constraint\n\nimport android.graphics.Bitmap\nimport id.zelory.compressor.decodeSampledBitmapFromFile\nimport id.zelory.compressor.determineImageRotation\nimport id.zelory.compressor.overWrite\nimport java.io.File\n\n/**\n * Created on : January 25, 2020\n * Author     : zetbaitsu\n * Name       : Zetra\n * GitHub     : https://github.com/zetbaitsu\n */\nclass DefaultConstraint(\n        private val width: Int = 612,\n        private val height: Int = 816,\n        private val format: Bitmap.CompressFormat = Bitmap.CompressFormat.JPEG,\n        private val quality: Int = 80\n) : Constraint {\n    private var isResolved = false\n\n    override fun isSatisfied(imageFile: File): Boolean {\n        return isResolved\n    }\n\n    override fun satisfy(imageFile: File): File {\n        val result = decodeSampledBitmapFromFile(imageFile, width, height).run {\n            determineImageRotation(imageFile, this).run {\n                overWrite(imageFile, this, format, quality)\n            }\n        }\n        isResolved = true\n        return result\n    }\n}\n\nfun Compression.default(\n        width: Int = 612,\n        height: Int = 816,\n        format: Bitmap.CompressFormat = Bitmap.CompressFormat.JPEG,\n        quality: Int = 80\n) {\n    constraint(DefaultConstraint(width, height, format, quality))\n}'