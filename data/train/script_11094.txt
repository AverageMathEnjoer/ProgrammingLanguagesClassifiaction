b'#\' Modify the arguments of a call.\n#\'\n#\' @param call A call to modify. It is first standardised with\n#\'   \\code{\\link{standardise_call}}.\n#\' @param new_args A named list of expressions (constants, names or calls)\n#\'   used to modify the call. Use \\code{NULL} to remove arguments.\n#\' @export\n#\' @examples\n#\' call <- quote(mean(x, na.rm = TRUE))\n#\'\n#\' # Modify an existing argument\n#\' modify_call(call, list(na.rm = FALSE))\n#\' modify_call(call, list(x = quote(y)))\n#\'\n#\' # Remove an argument\n#\' modify_call(call, list(na.rm = NULL))\n#\'\n#\' # Add a new argument\n#\' modify_call(call, list(trim = 0.1))\n#\'\n#\' # Add an explicit missing argument\n#\' modify_call(call, list(na.rm = quote(expr = )))\nmodify_call <- function(call, new_args) {\n  stopifnot(is.call(call), is.list(new_args))\n\n  call <- standardise_call(call)\n\n  nms <- names(new_args) %||% rep("", length(new_args))\n  if (any(nms == "")) {\n    stop("All new arguments must be named", call. = FALSE)\n  }\n\n  for(nm in nms) {\n    call[[nm]] <- new_args[[nm]]\n  }\n  call\n}\n'