b'package io.github.javiewer.activity;\n\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.TextView;\n\nimport com.google.android.material.appbar.AppBarLayout;\nimport com.google.android.material.button.MaterialButton;\nimport com.google.android.material.navigation.NavigationView;\nimport com.mikepenz.materialdrawer.Drawer;\nimport com.mikepenz.materialdrawer.DrawerBuilder;\nimport com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem;\nimport com.mikepenz.materialdrawer.model.DividerDrawerItem;\nimport com.mikepenz.materialdrawer.model.PrimaryDrawerItem;\nimport com.mikepenz.materialdrawer.model.interfaces.IDrawerItem;\nimport com.mikepenz.materialize.util.UIUtils;\n\nimport java.io.UnsupportedEncodingException;\nimport java.net.URLEncoder;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport androidx.appcompat.app.AlertDialog;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.constraintlayout.widget.Guideline;\nimport androidx.core.view.GravityCompat;\nimport androidx.drawerlayout.widget.DrawerLayout;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport io.github.javiewer.JAViewer;\nimport io.github.javiewer.R;\nimport io.github.javiewer.adapter.item.DataSource;\nimport io.github.javiewer.fragment.ActressesFragment;\nimport io.github.javiewer.fragment.ExtendedAppBarFragment;\nimport io.github.javiewer.fragment.HomeFragment;\nimport io.github.javiewer.fragment.PopularFragment;\nimport io.github.javiewer.fragment.ReleasedFragment;\nimport io.github.javiewer.fragment.genre.GenreTabsFragment;\nimport io.github.javiewer.network.BasicService;\nimport io.github.javiewer.view.SimpleSearchView;\n\npublic class MainActivity extends SecureActivity {\n\n    public static final int ID_HOME = 1;\n    public static final int ID_FAV = 2;\n    public static final int ID_POPULAR = 3;\n    public static final int ID_RELEASED = 4;\n    public static final int ID_ACTRESSES = 5;\n    public static final int ID_GENRE = 6;\n    public static final int ID_GITHUB = 7;\n\n    public static final Map<Integer, Class<? extends Fragment>> FRAGMENTS = new HashMap<Integer, Class<? extends Fragment>>() {{\n        put(ID_HOME, HomeFragment.class);\n        put(ID_POPULAR, PopularFragment.class);\n        put(ID_RELEASED, ReleasedFragment.class);\n        put(ID_ACTRESSES, ActressesFragment.class);\n        put(ID_GENRE, GenreTabsFragment.class);\n    }};\n\n    public Fragment currentFragment;\n\n    @BindView(R.id.nav_view)\n    public NavigationView mNavigationView;\n\n    @BindView(R.id.app_bar)\n    public AppBarLayout mAppBarLayout;\n\n    @BindView(R.id.search_view)\n    public SimpleSearchView mSearchView;\n\n    @BindView(R.id.drawer_layout)\n    public DrawerLayout mDrawerLayout;\n\n    @BindView(R.id.toolbar)\n    public Toolbar mToolbar;\n\n\n    int idOfDrawerItem = ID_HOME;\n    private FragmentManager fragmentManager;\n    private Bundle savedInstanceState;\n\n    private Drawer mDrawer;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        setContentView(R.layout.activity_main);\n\n        ButterKnife.bind(this);\n\n        if (JAViewer.CONFIGURATIONS == null) {\n            startActivity(new Intent(this, StartActivity.class));\n            finish();\n            return;\n        }\n\n        JAViewer.recreateService();\n\n        this.savedInstanceState = savedInstanceState;\n\n        setSupportActionBar(mToolbar);\n\n        initFragments();\n\n        buildDrawer();\n\n    }\n\n    public void buildDrawer() {\n\n        Drawer result = new DrawerBuilder()\n                .withActivity(this)\n                .withToolbar(mToolbar)\n                .withHeader(R.layout.drawer_header)\n                .addDrawerItems(\n                        new PrimaryDrawerItem().withIdentifier(ID_HOME).withName("\xe4\xb8\xbb\xe9\xa1\xb5").withIcon(R.drawable.ic_menu_home).withIconTintingEnabled(true),\n                        new PrimaryDrawerItem().withIdentifier(ID_FAV).withName("\xe6\x94\xb6\xe8\x97\x8f\xe5\xa4\xb9").withTag("Fav").withIcon(R.drawable.ic_menu_star).withIconTintingEnabled(true).withSelectable(false),\n                        new DividerDrawerItem(),\n                        new PrimaryDrawerItem().withIdentifier(ID_RELEASED).withName("\xe5\xb7\xb2\xe5\x8f\x91\xe5\xb8\x83").withIcon(R.drawable.ic_menu_released).withIconTintingEnabled(true),\n                        new PrimaryDrawerItem().withIdentifier(ID_POPULAR).withName("\xe7\x83\xad\xe9\x97\xa8").withIcon(R.drawable.ic_menu_popular).withIconTintingEnabled(true),\n                        new PrimaryDrawerItem().withIdentifier(ID_ACTRESSES).withName("\xe5\xa5\xb3\xe4\xbc\x98").withIcon(R.drawable.ic_menu_actresses).withIconTintingEnabled(true),\n                        new PrimaryDrawerItem().withIdentifier(ID_GENRE).withName("\xe7\xb1\xbb\xe5\x88\xab").withIcon(R.drawable.ic_menu_genre).withIconTintingEnabled(true),\n                        new DividerDrawerItem(),\n                        new PrimaryDrawerItem().withIdentifier(ID_GITHUB).withName("GitHub").withTag("Github").withIcon(R.drawable.ic_menu_github).withIconTintingEnabled(true).withSelectable(false)\n                )\n                .withSelectedItem(ID_HOME)\n                .withOnDrawerItemClickListener(new Drawer.OnDrawerItemClickListener() {\n                    @Override\n                    public boolean onItemClick(View view, int position, IDrawerItem drawerItem) {\n                        idOfDrawerItem = (int) drawerItem.getIdentifier();\n\n                        switch ((int) drawerItem.getIdentifier()) {\n                            case ID_GITHUB: {\n                                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://github.com/SplashCodes/JAViewer/releases"));\n                                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                                startActivity(intent);\n                                break;\n                            }\n                            case ID_FAV: {\n                                Intent intent = new Intent(MainActivity.this, FavouriteActivity.class);\n                                startActivity(intent);\n                                break;\n                            }\n                            default:\n                                if (drawerItem instanceof AbstractBadgeableDrawerItem) {\n                                    setFragment(((int) drawerItem.getIdentifier()), ((AbstractBadgeableDrawerItem) drawerItem).getName().getText());\n                                }\n\n                                break;\n                        }\n                        return false;\n                    }\n                })\n                .build();\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n            Guideline guideline = result.getHeader().findViewById(R.id.guideline_status_bar);\n            guideline.setGuidelineBegin(UIUtils.getStatusBarHeight(this, true));\n        }\n\n        this.mDrawer = result;\n\n        TextView mTextSource = mDrawer.getHeader().findViewById(R.id.text_view_source);\n        mTextSource.setText(JAViewer.CONFIGURATIONS.getDataSource().toString());\n\n        MaterialButton mButtonSwitch = mDrawer.getHeader().findViewById(R.id.btn_switch_source);\n        mButtonSwitch.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                onSwitchSource();\n            }\n        });\n\n        if (this.savedInstanceState != null) {\n            mDrawer.setSelection(savedInstanceState.getInt("SelectedDrawerItemId", ID_HOME));\n        } else {\n            mDrawer.setSelection(ID_HOME);\n        }\n    }\n\n    public void initFragments() {\n        this.fragmentManager = getSupportFragmentManager();\n\n        if (this.savedInstanceState != null) {\n            String tag = this.savedInstanceState.getString("CurrentFragment");\n            this.currentFragment = fragmentManager.findFragmentByTag(tag);\n            return;\n        }\n\n        FragmentTransaction transaction = this.fragmentManager.beginTransaction();\n        for (Class<? extends Fragment> fragmentClass : FRAGMENTS.values()) {\n            try {\n                Fragment fragment = fragmentClass.getConstructor(new Class[0]).newInstance();\n                transaction.add(R.id.content, fragment, fragmentClass.getSimpleName()).hide(fragment);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        transaction.commit();\n        this.fragmentManager.executePendingTransactions();\n    }\n\n    @SuppressWarnings("ConstantConditions")\n    private void setFragment(Fragment fragment, CharSequence title) {\n        getSupportActionBar().setTitle(title);\n\n        Fragment old = this.currentFragment;\n\n        if (old == fragment) {\n            return;\n        }\n\n        FragmentTransaction transaction = fragmentManager.beginTransaction();\n        if (old != null) {\n            transaction.hide(old);\n        }\n        transaction.show(fragment);\n        transaction.commit();\n\n        this.currentFragment = fragment;\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            if (fragment instanceof ExtendedAppBarFragment) {\n                mAppBarLayout.setElevation(0);\n            } else {\n                mAppBarLayout.setElevation(4 * getResources().getDisplayMetrics().density);\n            }\n        }\n    }\n\n    private void setFragment(int id, CharSequence title) {\n        this.setFragment(fragmentManager.findFragmentByTag(FRAGMENTS.get(id).getSimpleName()), title);\n    }\n\n    @Override\n    protected void onSaveInstanceState(Bundle outState) {\n        outState.putString("CurrentFragment", this.currentFragment.getClass().getSimpleName());\n        outState.putInt("SelectedDrawerItemId", this.idOfDrawerItem);\n        super.onSaveInstanceState(outState);\n    }\n\n    @Override\n    public void onBackPressed() {\n        if (mDrawerLayout.isDrawerOpen(GravityCompat.START)) {\n            mDrawerLayout.closeDrawer(GravityCompat.START);\n            return;\n        }\n\n        if (mSearchView.isSearchOpen()) {\n            mSearchView.closeSearch();\n            return;\n        }\n\n        moveTaskToBack(false);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.main, menu);\n\n        MenuItem item = menu.findItem(R.id.action_search);\n        mSearchView.setMenuItem(item);\n        mSearchView.setOnQueryTextListener(new SimpleSearchView.OnQueryTextListener() {\n            @Override\n            public boolean onQueryTextSubmit(String query) {\n                try {\n                    startActivity(MovieListActivity.newIntent(MainActivity.this, query + " \xe7\x9a\x84\xe6\x90\x9c\xe7\xb4\xa2\xe7\xbb\x93\xe6\x9e\x9c", JAViewer.getDataSource().getLink() + BasicService.LANGUAGE_NODE + "/search/" + URLEncoder.encode(query, "UTF-8")));\n                } catch (UnsupportedEncodingException e) {\n                    return false;\n                }\n                return true;\n            }\n\n            @Override\n            public boolean onQueryTextChange(String newText) {\n                return false;\n            }\n        });\n\n        return true;\n    }\n\n    public void restart() {\n        Intent intent = getIntent();\n        finish();\n        startActivity(intent);\n    }\n\n    public void onSwitchSource() {\n        DataSource[] ds = JAViewer.DATA_SOURCES.toArray(new DataSource[0]);\n        String[] items = new String[ds.length];\n        for (int i = 0; i < ds.length; i++) {\n            items[i] = ds[i].toString();\n        }\n        AlertDialog dialog = new AlertDialog.Builder(this).setTitle("\xe9\x80\x89\xe6\x8b\xa9\xe6\x95\xb0\xe6\x8d\xae\xe6\xba\x90")\n                .setItems(items, new AlertDialog.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        DataSource newSource = JAViewer.DATA_SOURCES.get(which);\n                        if (newSource.equals(JAViewer.getDataSource())) {\n                            return;\n                        }\n\n                        JAViewer.CONFIGURATIONS.setDataSource(newSource);\n                        JAViewer.CONFIGURATIONS.save();\n                        restart();\n                    }\n                }).create();\n        dialog.show();\n\n    }\n\n}\n'