b'\xef\xbb\xbfusing System;\n\nnamespace Rubeus.Asn1 {\n    public static class Asn1Extensions {\n\n        public static byte[] DepadLeft(this byte[] data) {\n\n            int leadingZeros = 0;\n            for (var i = 0; i < data.Length; i++) {\n                if (data[i] == 0) {\n                    leadingZeros++;\n                } else {\n                    break;\n                }\n            }\n\n            byte[] result = new byte[data.Length - leadingZeros];\n            Array.Copy(data, leadingZeros, result, 0, data.Length - leadingZeros);\n            return result;\n        }\n\n        public static byte[] PadLeft(this byte[] data, int totalSize) {\n\n            if(data.Length == totalSize) {\n                return data;\n            }\n\n            if(totalSize < data.Length) {\n                throw new ArgumentException("data bigger than totalSize, cannot pad with 0\'s");\n            }\n\n            byte[] result = new byte[totalSize];\n            data.CopyTo(result, totalSize - data.Length);\n            return result;\n        }\n\n        public static byte[] PadRight(this byte[] data, int length) {\n            if (data.Length == length) {\n                return data;\n            }\n\n            var copy = new byte[length];\n            data.CopyTo(copy, length - data.Length);\n            return copy;\n        }\n    }\n}\n'