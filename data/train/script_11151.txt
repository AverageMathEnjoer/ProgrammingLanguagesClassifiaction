b'\xef\xbb\xbf// UVa297 Quadtrees\n// Rujia Liu\n// \xe9\xa2\x98\xe6\x84\x8f\xef\xbc\x9a\xe7\xbb\x99\xe4\xb8\xa4\xe6\xa3\xb5\xe5\x9b\x9b\xe5\x88\x86\xe6\xa0\x91\xe7\x9a\x84\xe5\x85\x88\xe5\xba\x8f\xe9\x81\x8d\xe5\x8e\x86\xef\xbc\x8c\xe6\xb1\x82\xe4\xba\x8c\xe8\x80\x85\xe5\x90\x88\xe5\xb9\xb6\xe4\xb9\x8b\xe5\x90\x8e\xef\xbc\x88\xe9\xbb\x91\xe8\x89\xb2\xe9\x83\xa8\xe5\x88\x86\xe5\x90\x88\xe5\xb9\xb6\xef\xbc\x89\xe9\xbb\x91\xe8\x89\xb2\xe5\x83\x8f\xe7\xb4\xa0\xe7\x9a\x84\xe4\xb8\xaa\xe6\x95\xb0\xe3\x80\x82p\xe8\xa1\xa8\xe7\xa4\xba\xe4\xb8\xad\xe9\x97\xb4\xe7\xbb\x93\xe7\x82\xb9\xef\xbc\x8cf\xe8\xa1\xa8\xe7\xa4\xba\xe9\xbb\x91\xe8\x89\xb2\xef\xbc\x88full\xef\xbc\x89\xef\xbc\x8ce\xe8\xa1\xa8\xe7\xa4\xba\xe7\x99\xbd\xe8\x89\xb2\xef\xbc\x88empty\xef\xbc\x89\n// \xe7\xae\x97\xe6\xb3\x95\xef\xbc\x9a\xe5\x85\x88\xe5\xbb\xba\xe6\xa0\x91\xef\xbc\x8c\xe7\x84\xb6\xe5\x90\x8e\xe7\xbb\x9f\xe8\xae\xa1\n#include<cstdio>\n#include<cstring>\n\nconst int len = 32;\nconst int maxn = 1024 + 10;\nchar s[maxn];\nint buf[len][len], cnt;\n\n// \xe6\x8a\x8a\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2s[p..]\xe5\xaf\xbc\xe5\x87\xba\xe5\x88\xb0\xe4\xbb\xa5(r,c)\xe4\xb8\xba\xe5\xb7\xa6\xe4\xb8\x8a\xe8\xa7\x92\xef\xbc\x8c\xe8\xbe\xb9\xe9\x95\xbf\xe4\xb8\xbaw\xe7\x9a\x84\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe4\xb8\xad\n// 2 1\n// 3 4\nvoid draw(const char* s, int& p, int r, int c, int w) {\n  char ch = s[p++];\n  if(ch == \'p\') {\n    draw(s, p, r,     c+w/2, w/2); // 1\n    draw(s, p, r,     c    , w/2); // 2\n    draw(s, p, r+w/2, c    , w/2); // 3\n    draw(s, p, r+w/2, c+w/2, w/2); // 4\n  } else if(ch == \'f\') { // \xe7\x94\xbb\xe9\xbb\x91\xe5\x83\x8f\xe7\xb4\xa0\xef\xbc\x88\xe7\x99\xbd\xe5\x83\x8f\xe7\xb4\xa0\xe4\xb8\x8d\xe7\x94\xbb\xef\xbc\x89\n    for(int i = r; i < r+w; i++)\n      for(int j = c; j < c+w; j++)\n       if(buf[i][j] == 0) { buf[i][j] = 1; cnt++; }\n  }\n}\n\nint main() {\n  int T;\n  scanf("%d", &T);\n  while(T--) {\n    memset(buf, 0, sizeof(buf));\n    cnt = 0;\n    for(int i = 0; i < 2; i++) {\n      scanf("%s", s);\n      int p = 0;\n      draw(s, p, 0, 0, len);\n    }\n    printf("There are %d black pixels.\\n", cnt);\n  }\n  return 0;\n}\n'