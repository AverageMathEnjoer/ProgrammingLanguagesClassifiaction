b'// UVa11134 Fabled Rooks\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\n#include <algorithm>\nusing namespace std;\n\n// solve 1-D problem: find c so that a[i] <= c[i] <= b[i] (0 <= i < n)\nbool solve(int *a, int *b, int *c, int n) {\n  fill(c, c+n, -1);\n  for(int col = 1; col <= n; col++) {\n    // find a rook with smalleset b that is not yet assigned\n    int rook = -1, minb = n+1;\n    for(int i = 0; i < n; i++)\n      if(c[i] < 0 && b[i] < minb && col >= a[i]) { rook = i; minb = b[i]; }\n    if(rook < 0 || col > minb) return false;\n    c[rook] = col;\n  }\n  return true;\n}\n\nconst int maxn = 5000 + 5;\nint n, x1[maxn], y1[maxn], x2[maxn], y2[maxn], x[maxn], y[maxn];\n\nint main() {\n  while(scanf("%d", &n) == 1 && n) {\n    for (int i = 0; i < n; i++)\n      scanf("%d%d%d%d", &x1[i], &y1[i], &x2[i], &y2[i]);\n    if(solve(x1, x2, x, n) && solve(y1, y2, y, n))\n      for (int i = 0; i < n; i++) printf("%d %d\\n", x[i], y[i]);\n    else\n      printf("IMPOSSIBLE\\n");\n  }\n  return 0;\n}\n'