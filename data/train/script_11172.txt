b'package co.joebirch.composeplayground.core\n\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.shadow\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.RectangleShape\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject ShadowView : ComposableLayout {\n\n    @Composable\n    override fun build() {\n        val showShadow = remember { mutableStateOf(false) }\n        Box(modifier = Modifier.size(200.dp)) {\n\n            clip()\n        }\n    }\n\n}\n\n@Preview\n@Composable\nprivate fun shadow() {\n    Box(\n        modifier = Modifier.size(100.dp, 100.dp)\n            .background(Color.White)\n            .padding(16.dp)\n            .shadow(elevation = 4.dp)\n    )\n}\n\n@Preview\n@Composable\nprivate fun shape() {\n    Box(\n        modifier = Modifier.size(100.dp, 100.dp)\n            .background(Color.Green)\n            .shadow(elevation = 4.dp, shape = RectangleShape)\n    )\n}\n\n@Preview\n@Composable\nprivate fun clip() {\n    Box(\n        modifier = Modifier.size(40.dp, 40.dp)\n            .background(Color.Green)\n            .padding(16.dp)\n            .shadow(elevation = 6.dp, shape = RectangleShape, clip = false)\n    )\n}'