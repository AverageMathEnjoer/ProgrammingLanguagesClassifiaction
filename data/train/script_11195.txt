b'\xef\xbb\xbf// UVa1592 Database\n// Rujia Liu\n// \xe6\x9c\xac\xe7\xa8\x8b\xe5\xba\x8f\xe5\x8f\xaa\xe6\x98\xaf\xe4\xb8\xba\xe4\xba\x86\xe6\xbc\x94\xe7\xa4\xbaSTL\xe5\x90\x84\xe7\xa7\x8d\xe7\x94\xa8\xe6\xb3\x95\xef\xbc\x8c\xe6\x95\x88\xe7\x8e\x87\xe8\xbe\x83\xe4\xbd\x8e\xe3\x80\x82\xe5\xae\x9e\xe8\xb7\xb5\xe4\xb8\xad\xe4\xb8\x80\xe8\x88\xac\xe7\x94\xa8C\xe5\xad\x97\xe7\xac\xa6\xe4\xb8\xb2\xe5\x92\x8c\xe5\x93\x88\xe5\xb8\x8c\xe8\xa1\xa8\xe6\x9d\xa5\xe5\xae\x9e\xe7\x8e\xb0\xe3\x80\x82\n\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<string>\n#include<map>\n#include<sstream>\nusing namespace std;\n\ntypedef pair<int,int> PII;\n\nconst int maxr = 10000 + 5;\nconst int maxc = 10 + 5;\n\nint m, n, db[maxr][maxc], cnt;\n\nmap<string, int> id;\nint ID(const string& s) {\n  if(!id.count(s)) {\n    id[s] = ++cnt;\n  }\n  return id[s];\n}\n\nvoid find() {\n  for(int c1 = 0; c1 < m; c1++)\n    for(int c2 = c1+1; c2 < m; c2++) {\n      map<PII, int> d;\n      for(int i = 0; i < n; i++) {\n        PII p = make_pair(db[i][c1], db[i][c2]);\n        if(d.count(p)) {\n          printf("NO\\n");\n          printf("%d %d\\n", d[p]+1, i+1);\n          printf("%d %d\\n", c1+1, c2+1);\n          return;\n        }\n        d[p] = i;\n      }\n    }\n  printf("YES\\n");\n}\n\n\nint main() {\n  string s;\n  while(getline(cin, s)) {\n    stringstream ss(s);\n    if(!(ss >> n >> m)) break;\n    cnt = 0;\n    id.clear();\n    for(int i = 0; i < n; i++) {\n      getline(cin, s);\n      int lastpos = -1;\n      for(int j = 0; j < m; j++) {\n        int p = s.find(\',\', lastpos+1);\n        if(p == string::npos) p = s.length();\n        db[i][j] = ID(s.substr(lastpos+1, p - lastpos - 1));\n        lastpos = p;\n      }\n    }\n    find();\n  }\n  return 0;\n}\n'