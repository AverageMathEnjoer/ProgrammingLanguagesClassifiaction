b'/*\n    SPDX-FileCopyrightText: 2019 Volodymyr Nikolaichuk <nikolaychuk.volodymyr@gmail.com>\n\n    SPDX-License-Identifier: LGPL-2.1-or-later\n*/\n\n/**\n * @brief A unwind-tables based backtrace.\n */\n\n#include "trace.h"\n\n#include <cstdint>\n#include <cstdio>\n#include <unwind.h>\n\nnamespace {\n\nstruct backtrace\n{\n    void** data = nullptr;\n    int ctr = 0;\n    int max_size = 0;\n};\n\n_Unwind_Reason_Code unwind_backtrace_callback(struct _Unwind_Context* context, void* arg)\n{\n    backtrace* trace = static_cast<backtrace*>(arg);\n\n    uintptr_t pc = _Unwind_GetIP(context);\n    if (pc && trace->ctr < trace->max_size - 1) {\n        trace->data[trace->ctr++] = (void*)(pc);\n    }\n\n    return _URC_NO_REASON;\n}\n\n}\n\nvoid Trace::setup()\n{\n}\n\nvoid Trace::print()\n{\n    Trace trace;\n    trace.fill(1);\n    for (auto ip : trace) {\n        fprintf(stderr, "%p\\n", ip);\n    }\n}\n\nint Trace::unwind(void** data)\n{\n    backtrace trace;\n    trace.data = data;\n    trace.max_size = MAX_SIZE;\n\n    _Unwind_Backtrace(unwind_backtrace_callback, &trace);\n    return trace.ctr;\n}\n'