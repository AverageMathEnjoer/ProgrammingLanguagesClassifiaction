b'#\' Tools for making promises explicit\n#\'\n#\' Deprecated: please use the lazyeval package instead.\n#\'\n#\' @param x expression to make explicit, or to evaluate.\n#\' @export\nexplicit <- function(x) {\n  .Deprecated("Please use the lazyeval package instead")\n\n  explicitPromise(substitute(x), parent.frame())\n}\n\n#\' @rdname explicit\n#\' @export\n#\' @param data Data in which to evaluate code\n#\' @param env Enclosing environment to use if data is a list or data frame.\neval2 <- function(x, data = NULL, env = parent.frame()) {\n  .Deprecated("Please use the lazyeval package instead")\n  if (is.formula(x)) {\n    env <- environment(x)\n    x <- x[[2]] # RHS of the formula\n  }\n\n  if (is.atomic(x)) return(x)\n  stopifnot(is.call(x) || is.name(x))\n\n  if (!is.null(data)) {\n    eval(x, data, env)\n  } else {\n    eval(x, env)\n  }\n}\n\nis.formula <- function(x) inherits(x, "formula")\n'