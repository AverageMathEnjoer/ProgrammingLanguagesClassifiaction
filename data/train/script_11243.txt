b'package com.codeest.geeknews.presenter.gold;\n\nimport com.codeest.geeknews.base.RxPresenter;\nimport com.codeest.geeknews.model.DataManager;\nimport com.codeest.geeknews.model.bean.GoldListBean;\nimport com.codeest.geeknews.model.http.response.GoldHttpResponse;\nimport com.codeest.geeknews.base.contract.gold.GoldContract;\nimport com.codeest.geeknews.util.RxUtil;\nimport com.codeest.geeknews.widget.CommonSubscriber;\n\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.List;\n\nimport javax.inject.Inject;\n\nimport io.reactivex.Flowable;\n\n/**\n * Created by codeest on 16/11/27.\n */\n\npublic class GoldPresenter extends RxPresenter<GoldContract.View> implements GoldContract.Presenter{\n\n    private static final int NUM_EACH_PAGE = 20;\n    private static final int NUM_HOT_LIMIT = 3;\n\n    private DataManager mDataManager;\n    private List<GoldListBean> totalList = new ArrayList<>();\n\n    private boolean isHotList = true;\n    private int currentPage = 0;\n    private String mType;\n\n    @Inject\n    public GoldPresenter(DataManager mDataManager) {\n        this.mDataManager = mDataManager;\n    }\n\n    @Override\n    public void getGoldData(String type) {\n        mType = type;\n        currentPage = 0;\n        totalList.clear();\n        Flowable<List<GoldListBean>> list = mDataManager.fetchGoldList(type, NUM_EACH_PAGE, currentPage++)\n                .compose(RxUtil.<GoldHttpResponse<List<GoldListBean>>>rxSchedulerHelper())\n                .compose(RxUtil.<List<GoldListBean>>handleGoldResult());\n\n        Calendar cal = Calendar.getInstance();\n        cal.add(Calendar.DATE, -3);\n\n        Flowable<List<GoldListBean>> hotList = mDataManager.fetchGoldHotList(type,\n                new SimpleDateFormat("yyyy-MM-dd").format(cal.getTime()), NUM_HOT_LIMIT)\n                .compose(RxUtil.<GoldHttpResponse<List<GoldListBean>>>rxSchedulerHelper())\n                .compose(RxUtil.<List<GoldListBean>>handleGoldResult());\n\n        addSubscribe(Flowable.concat(hotList, list)\n                .subscribeWith(new CommonSubscriber<List<GoldListBean>>(mView) {\n                    @Override\n                    public void onNext(List<GoldListBean> goldListBean) {\n                        if (isHotList) {\n                            isHotList = false;\n                            totalList.addAll(goldListBean);\n                        } else {\n                            isHotList = true;\n                            totalList.addAll(goldListBean);\n                            mView.showContent(totalList);\n                        }\n                    }\n                })\n        );\n    }\n\n    @Override\n    public void getMoreGoldData() {\n        addSubscribe(mDataManager.fetchGoldList(mType, NUM_EACH_PAGE, currentPage++)\n                .compose(RxUtil.<GoldHttpResponse<List<GoldListBean>>>rxSchedulerHelper())\n                .compose(RxUtil.<List<GoldListBean>>handleGoldResult())\n                .subscribeWith(new CommonSubscriber<List<GoldListBean>>(mView, false) {\n                    @Override\n                    public void onNext(List<GoldListBean> goldListBeen) {\n                        totalList.addAll(goldListBeen);\n                        mView.showMoreContent(totalList, totalList.size(), totalList.size() + NUM_EACH_PAGE);\n                    }\n                })\n        );\n    }\n}\n'