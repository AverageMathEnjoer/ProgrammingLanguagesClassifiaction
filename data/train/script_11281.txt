b'package com.loper7.datepicker\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.content.Intent\nimport android.graphics.Color\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.util.Log\nimport com.loper7.date_time_picker.DateTimeConfig\nimport com.loper7.date_time_picker.dialog.CardDatePickerDialog\nimport com.loper7.date_time_picker.dialog.CardWeekPickerDialog\nimport com.loper7.date_time_picker.number_picker.NumberPicker\nimport kotlinx.android.synthetic.main.activity_week_picker_example.*\n\nclass WeekPickerExampleActivity : AppCompatActivity() {\n\n\n    private var maxDate: Long = 0\n    private var minDate: Long = 0\n    private var defaultDate: Long = 0\n\n    private lateinit var context: Context\n\n    @SuppressLint("SetTextI18n")\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_week_picker_example)\n        context = this\n\n\n        tvMaxDate.setOnClickListener {\n            CardDatePickerDialog.builder(this)\n                .setTitle("SET MAX DATE")\n                .setDisplayType(DateTimeConfig.YEAR,DateTimeConfig.MONTH,DateTimeConfig.DAY)\n                .setDefaultTime(maxDate)\n                .setOnChoose {\n                    maxDate = it\n                    tvMaxDate.text = StringUtils.conversionTime(it, "yyyy-MM-dd")\n                }.build().show()\n\n        }\n\n\n        btnClearMax.setOnClickListener {\n            maxDate = 0L\n            tvMaxDate.text = ""\n        }\n\n        tvMinDate.setOnClickListener {\n            CardDatePickerDialog.builder(this)\n                .setTitle("SET MIN DATE")\n                .setDisplayType(DateTimeConfig.YEAR,DateTimeConfig.MONTH,DateTimeConfig.DAY)\n                .setDefaultTime(minDate)\n                .setOnChoose {\n                    minDate = it\n                    tvMinDate.text = StringUtils.conversionTime(it, "yyyy-MM-dd")\n                }.build().show()\n        }\n\n        btnClearMin.setOnClickListener {\n            minDate = 0L\n            tvMinDate.text = ""\n        }\n\n        tvDefaultDate.setOnClickListener {\n            CardDatePickerDialog.builder(this)\n                .setTitle("SET DEFAULT DATE")\n                .setDefaultTime(defaultDate)\n                .setDisplayType(DateTimeConfig.YEAR,DateTimeConfig.MONTH,DateTimeConfig.DAY)\n                .setOnChoose {\n                    defaultDate = it\n                    tvDefaultDate.text =\n                        StringUtils.conversionTime(it, "yyyy-MM-dd")\n                }.build().show()\n        }\n\n        btnClearDefault.setOnClickListener {\n            defaultDate = 0L\n            tvDefaultDate.text = ""\n        }\n\n        btnCardDialogShow.setOnClickListener {\n\n            var model = CardDatePickerDialog.CARD\n            if (radioModelCard.isChecked)\n                model = CardDatePickerDialog.CARD\n            if (radioModelCube.isChecked)\n                model = CardDatePickerDialog.CUBE\n            if (radioModelStack.isChecked)\n                model = CardDatePickerDialog.STACK\n            if (radioModelCustom.isChecked)\n                model = R.drawable.shape_bg_dialog_custom\n\n\n            CardWeekPickerDialog.builder(context)\n                .setTitle("WEEK PICKER")\n                .setBackGroundModel(model)\n                .setWrapSelectorWheel(false)\n                .setDefaultMillisecond(defaultDate)\n                .setStartMillisecond(minDate)\n                .setEndMillisecond(maxDate)\n                .setThemeColor(if (model == R.drawable.shape_bg_dialog_custom) Color.parseColor("#FF8000") else 0)\n//                .setBackGroundModel(R.drawable.shape_bg_dialog_dark)\n//                .setAssistColor(Color.parseColor("#DDFFFFFF"))\n//                .setDividerColor(Color.parseColor("#222222"))\n                .setFormatter {\n                    NumberPicker.Formatter { value: Int ->\n                        var weekData = it[value - 1].toFormatList("MM\xe6\x9c\x88dd\xe6\x97\xa5")\n                        var str = "\xe4\xbb\x8e${weekData.first()}  \xe5\xbc\x80\xe5\xa7\x8b\xe5\x88\xb0  ${weekData.last()}\xe7\xbb\x93\xe6\x9d\x9f"\n                        str\n                    }\n                }\n                .setOnChoose("\xe9\x80\x89\xe6\x8b\xa9") {weekData,formatValue ->\n                    btnCardDialogShow.text = formatValue\n                }\n                .setOnCancel("\xe5\x85\xb3\xe9\x97\xad") {\n                }.build().show()\n        }\n    }\n}\n\n/**\n * \xe5\xb0\x86\xe6\x97\xb6\xe9\x97\xb4\xe6\x88\xb3\xe9\x9b\x86\xe5\x90\x88\xe6\xa0\xbc\xe5\xbc\x8f\xe5\x8c\x96\xe4\xb8\xba\xe6\x8c\x87\xe5\xae\x9a\xe6\x97\xa5\xe6\x9c\x9f\xe6\xa0\xbc\xe5\xbc\x8f\xe7\x9a\x84\xe9\x9b\x86\xe5\x90\x88\n * @return MutableList<String> [2021-09-09,2021--09-10,...]\n */\ninternal fun MutableList<Long>.toFormatList(format: String = "yyyy-MM-dd"): MutableList<String> {\n    var formatList = mutableListOf<String>()\n    for (i in this) {\n        formatList.add(StringUtils.conversionTime(i, format))\n    }\n    return formatList\n}\n'