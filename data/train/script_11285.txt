b'package co.joebirch.composeplayground.foundation\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.Shadow\nimport androidx.compose.ui.text.TextStyle\nimport androidx.compose.ui.text.font.FontFamily\nimport androidx.compose.ui.text.font.FontStyle\nimport androidx.compose.ui.text.font.FontSynthesis\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.BaselineShift\nimport androidx.compose.ui.text.style.TextDecoration\nimport androidx.compose.ui.text.style.TextDirection\nimport androidx.compose.ui.text.style.TextIndent\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject TextStyleView: ComposableLayout {\n\n    @Composable\n    override fun build() {\n        Column(\n            modifier = Modifier.fillMaxSize().padding(32.dp),\n            verticalArrangement = Arrangement.SpaceEvenly,\n            horizontalAlignment = Alignment.CenterHorizontally\n        ) {\n            SimpleComponent()\n            FontWeightComponent()\n            FontStyleComponent()\n            LetterSpacingComponent()\n            FontSynthesisWeightComponent()\n            FontSynthesisStyleComponent()\n            FontSynthesisAllComponent()\n            BaselineShiftSubscriptComponent()\n            BaselineShiftSuperscriptComponent()\n        }\n    }\n\n}\n\n@Composable\nfun SimpleComponent() {\n    Text(\n        text = "Font size",\n        style = TextStyle(fontSize = 28.sp),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun TextWithShadowComponent() {\n    Text(\n        text = "Jetpack Compose",\n        style = TextStyle(shadow = Shadow(Color.Gray)),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun TextDirectionComponent() {\n    Text(\n        text = "Jetpack Compose",\n        style = TextStyle(textDirection = TextDirection.ContentOrRtl),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun TextDecorationComponent() {\n    Text(\n        text = "Jetpack Compose",\n        style = TextStyle(textDecoration = TextDecoration.combine(listOf(\n            TextDecoration.LineThrough, TextDecoration.Underline\n        ))),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun FontWeightComponent() {\n    Text(\n        text = "Font weight",\n        style = TextStyle(fontWeight = FontWeight.Bold),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun FontFamilyComponent() {\n    Text(\n        text = "Font weight",\n        style = TextStyle(fontFamily = FontFamily.SansSerif),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun FontStyleComponent() {\n    Text(\n        text = "Font style",\n        style = TextStyle(fontStyle = FontStyle.Italic),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun LetterSpacingComponent() {\n    Text(\n        text = "Letter Spacing",\n        style = TextStyle(letterSpacing = 12.sp),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun FontSynthesisWeightComponent() {\n    Text(\n        text = "Font Synthesis Weight",\n        style = TextStyle(fontSynthesis = FontSynthesis.Weight),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun FontSynthesisStyleComponent() {\n    Text(\n        text = "Font Synthesis Style",\n        style = TextStyle(fontSynthesis = FontSynthesis.Style),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun FontSynthesisAllComponent() {\n    Text(\n        text = "Font Synthesis All",\n        style = TextStyle(fontSynthesis = FontSynthesis.All),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun BaselineShiftSubscriptComponent() {\n    Text(\n        text = "Baseline Shift Subscript",\n        style = TextStyle(baselineShift = BaselineShift.Subscript),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun BaselineShiftSuperscriptComponent() {\n    Text(\n        text = "Baseline Shift Superscript",\n        style = TextStyle(baselineShift = BaselineShift.Superscript),\n        modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun LineHeightComponent() {\n    Text(\n            text = "This first line here will have a text indent. But the second line will have the indent set by restLine.",\n            style = TextStyle(lineHeight = 16.sp),\n            modifier = Modifier.padding(16.dp)\n    )\n}\n\n@Composable\nfun TextIndentComponent() {\n    Text(\n        text = "This first line here will have a text indent. But the second line will have the indent set by restLine.",\n        style = TextStyle(textIndent = TextIndent(firstLine = 16.sp, restLine = 8.sp)),\n        modifier = Modifier.padding(16.dp)\n    )\n}'