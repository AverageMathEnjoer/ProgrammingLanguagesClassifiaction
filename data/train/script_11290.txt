b'\xef\xbb\xbf//  Copyright 2018 Google Inc. All Rights Reserved.\n//\n//  Licensed under the Apache License, Version 2.0 (the "License");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//  http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an "AS IS" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\n\nusing System;\nusing System.IO;\nusing System.Runtime.InteropServices;\n\nnamespace Rubeus.Utilities.Memory\n{\n    internal interface IConvertToNative<T> where T : struct\n    {\n        T Convert();\n    }\n\n    [StructLayout(LayoutKind.Sequential)]\n    internal struct IntPtr32 : IConvertToNative<IntPtr>\n    {\n        public int value;\n\n        public IntPtr Convert()\n        {\n            return new IntPtr(value);\n        }\n    }\n\n    [StructLayout(LayoutKind.Sequential)]\n    internal struct UIntPtr32 : IConvertToNative<UIntPtr>\n    {\n        public uint value;\n\n        public UIntPtr Convert()\n        {\n            return new UIntPtr(value);\n        }\n    }\n\n    internal interface IMemoryReader\n    {\n        byte ReadByte(IntPtr address);\n        byte[] ReadBytes(IntPtr address, int length);\n        short ReadInt16(IntPtr address);\n        IntPtr ReadIntPtr(IntPtr address);\n        int ReadInt32(IntPtr address);\n        T ReadStruct<T>(IntPtr address) where T : struct;\n        T[] ReadArray<T>(IntPtr address, int count) where T : struct;\n        BinaryReader GetReader(IntPtr address);\n        bool InProcess { get; }\n        int PointerSize { get; }\n        string ReadAnsiStringZ(IntPtr address);\n    }\n}\n'