b'{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# LANGUAGE TypeFamilies #-}\n\n-- | [DropBox oauth guide](https://developers.dropbox.com/oauth-guide)\nmodule Network.OAuth2.Provider.Dropbox where\n\nimport Data.Aeson\nimport Data.Map.Strict qualified as Map\nimport Data.Set qualified as Set\nimport Data.Text.Lazy (Text)\nimport GHC.Generics\nimport Network.OAuth.OAuth2\nimport Network.OAuth2.Experiment\nimport URI.ByteString.QQ\n\ndata Dropbox = Dropbox deriving (Eq, Show)\n\ntype instance IdpUserInfo Dropbox = DropboxUser\n\ndefaultDropboxApp :: IdpApplication \'AuthorizationCode Dropbox\ndefaultDropboxApp =\n  AuthorizationCodeIdpApplication\n    { idpAppClientId = ""\n    , idpAppClientSecret = ""\n    , idpAppScope = Set.empty\n    , idpAppAuthorizeState = "CHANGE_ME"\n    , idpAppAuthorizeExtraParams = Map.empty\n    , idpAppRedirectUri = [uri|http://localhost|]\n    , idpAppName = "default-dropbox-App"\n    , idpAppTokenRequestAuthenticationMethod = ClientSecretBasic\n    , idp = defaultDropboxIdp\n    }\n\ndefaultDropboxIdp :: Idp Dropbox\ndefaultDropboxIdp =\n  Idp\n    { idpFetchUserInfo = \\mgr at url -> authPostJSON @(IdpUserInfo Dropbox) mgr at url []\n    , idpAuthorizeEndpoint = [uri|https://www.dropbox.com/1/oauth2/authorize|]\n    , idpTokenEndpoint = [uri|https://api.dropboxapi.com/oauth2/token|]\n    , idpUserInfoEndpoint = [uri|https://api.dropboxapi.com/2/users/get_current_account|]\n    }\n\nnewtype DropboxUserName = DropboxUserName {displayName :: Text}\n  deriving (Show, Generic)\n\ndata DropboxUser = DropboxUser\n  { email :: Text\n  , name :: DropboxUserName\n  }\n  deriving (Show, Generic)\n\ninstance FromJSON DropboxUserName where\n  parseJSON = genericParseJSON defaultOptions {fieldLabelModifier = camelTo2 \'_\'}\n\ninstance FromJSON DropboxUser\n'