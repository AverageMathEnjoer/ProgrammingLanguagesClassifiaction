b'package com.droidcba.kedditbysteps.features.news\n\nimport android.arch.lifecycle.MutableLiveData\nimport android.arch.lifecycle.ViewModel\nimport com.droidcba.kedditbysteps.api.NewsAPI\nimport com.droidcba.kedditbysteps.api.RedditNewsResponse\nimport com.droidcba.kedditbysteps.commons.RedditNews\nimport com.droidcba.kedditbysteps.commons.RedditNewsItem\nimport kotlinx.coroutines.experimental.launch\nimport javax.inject.Inject\nimport kotlin.coroutines.experimental.CoroutineContext\n\n/**\n * NewsViewModel allows you to request news from Reddit API.\n *\n * @author juancho\n */\nclass NewsViewModel @Inject constructor(\n        private val api: NewsAPI,\n        private val coroutineContext: CoroutineContext) : ViewModel() {\n\n    val newsState: MutableLiveData<NewsState> = MutableLiveData()\n\n    fun fetchNews(after: String, limit: String = "10") = launch(coroutineContext) {\n        try {\n            val result = api.getNews(after, limit).await()\n            val news = process(result)\n            newsState.postValue(NewsState.Success(news))\n        } catch (e: Throwable) {\n            newsState.postValue(NewsState.Error(e.message))\n        }\n    }\n\n    private fun process(response: RedditNewsResponse): RedditNews {\n        val dataResponse = response.data\n        val news = dataResponse.children.map {\n            val item = it.data\n            RedditNewsItem(item.author, item.title, item.num_comments,\n                    item.created, item.thumbnail, item.url)\n        }\n        return RedditNews(\n                dataResponse.after.orEmpty(),\n                dataResponse.before.orEmpty(),\n                news)\n    }\n}'