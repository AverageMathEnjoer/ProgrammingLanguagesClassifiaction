b'package com.codeest.geeknews.ui.vtex.activity;\n\nimport android.support.v4.widget.SwipeRefreshLayout;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.Toolbar;\n\nimport com.codeest.geeknews.R;\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.base.RootActivity;\nimport com.codeest.geeknews.model.bean.NodeBean;\nimport com.codeest.geeknews.model.bean.NodeListBean;\nimport com.codeest.geeknews.presenter.vtex.NodePresenter;\nimport com.codeest.geeknews.base.contract.vtex.NodeContract;\nimport com.codeest.geeknews.ui.vtex.adapter.NodeListAdapter;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport butterknife.BindView;\n\n/**\n * Created by codeest on 16/12/19.\n */\n\npublic class NodeListActivity extends RootActivity<NodePresenter> implements NodeContract.View {\n\n    @BindView(R.id.tool_bar)\n    Toolbar toolBar;\n    @BindView(R.id.view_main)\n    RecyclerView rvContent;\n    @BindView(R.id.swipe_refresh)\n    SwipeRefreshLayout swipeRefresh;\n\n    private NodeListAdapter mAdapter;\n    private String nodeName;\n\n    @Override\n    protected void initInject() {\n        getActivityComponent().inject(this);\n    }\n\n    @Override\n    protected int getLayout() {\n        return R.layout.activity_replies;\n    }\n\n    @Override\n    protected void initEventAndData() {\n        super.initEventAndData();\n        nodeName = getIntent().getStringExtra(Constants.IT_VTEX_NODE_NAME);\n        setToolBar(toolBar, nodeName);\n        mAdapter = new NodeListAdapter(mContext, new ArrayList<NodeListBean>());\n        rvContent.setLayoutManager(new LinearLayoutManager(mContext));\n        rvContent.setAdapter(mAdapter);\n        swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n            @Override\n            public void onRefresh() {\n                mPresenter.getContent(nodeName);\n            }\n        });\n        stateLoading();\n        mPresenter.getContent(nodeName);\n        mPresenter.getTopInfo(nodeName);\n    }\n\n    @Override\n    public void stateError() {\n        super.stateError();\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n    }\n\n    @Override\n    public void showContent(List<NodeListBean> mList) {\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n        stateMain();\n        mAdapter.setContentData(mList);\n    }\n\n    @Override\n    public void showTopInfo(NodeBean mTopInfo) {\n        mAdapter.setTopData(mTopInfo);\n    }\n}\n'