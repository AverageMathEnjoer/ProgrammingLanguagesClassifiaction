b'class Solution {\npublic:\n    vector<vector<int>> groupThePeople(vector<int>& groupSizes) {\n        int n = groupSizes.size();\n        unordered_map<int, vector<int>> peopleInGroupSize = {};\n        for(int i = 0; i < n; i++) {\n            int curSize = groupSizes[i];\n            peopleInGroupSize[curSize].push_back(i);\n        }\n        vector<vector<int>> ans = {};\n        for(auto [groupSize, people]: peopleInGroupSize) {\n            // start making groups of |groupSize|\n            vector<int> cur = {};\n            for(int i = 0; i < people.size(); i++) {\n                cur.push_back(people[i]);\n                if ( cur.size() == groupSize) {\n                    ans.push_back(cur);\n                    cur = {};\n                }\n            }\n        }\n        return ans;\n    }\n};\n/*\n[group_size] --> [ids of people in it]\n[3] --> [0,1,2,3,4,6]\n[1] --> [5]\n    */'