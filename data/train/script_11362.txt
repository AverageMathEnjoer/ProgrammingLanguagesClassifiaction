b'-- | Beam extensions are optional functionality that do not conform to any\n-- standard and may have wildly different interpretations across backends.\n--\n-- In spite of these drawbacks, these are provided for the purposes of\n-- pragmatism and convenience.\nmodule Database.Beam.Migrate.SQL.BeamExtensions where\n\nimport Database.Beam.Backend.SQL\nimport Database.Beam.Migrate.SQL.Types\nimport Database.Beam.Migrate.SQL.Tables\n\nimport Data.Text (Text)\n\n-- | Used to designate that a field should provide a default auto-incrementing value.\n--\n--   Usage:\n--\n-- @\n-- field "Key" genericSerial\n-- @\n--\n--   Then, when inserting into the table, you can use \'default_\' to request the\n--   database automatically assign a new value to the column. See\n--   \'runInsertReturning\' for another Beam extension that may help if you want\n--   to know which value was assigned.\n--\n--   Note that this is only provided for convenience. Backends often implement\n--   auto-incrementing keys wildly differently. Many have restrictions on where\n--   \'genericSerial\' may appear and may fail at run-time if these conditions\n--   aren\'t met. Please refer to the backend of your choice for more\n--   information.\nclass BeamMigrateSqlBackend be =>\n  BeamSqlBackendHasSerial be where\n  genericSerial :: FieldReturnType \'True \'False be (SqlSerial Int) a => Text -> a\n'