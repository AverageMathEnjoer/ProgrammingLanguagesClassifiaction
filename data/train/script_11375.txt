b'using System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\n\nusing sqlite3_int64 = System.Int64;\nusing System.Text;\n\nnamespace CS_SQLite3\n{\n  public partial class CSSQLite\n  {\n    /*\n    ** 2008 October 28\n    **\n    ** The author disclaims copyright to this source code.  In place of\n    ** a legal notice, here is a blessing:\n    **\n    **    May you do good and not evil.\n    **    May you find forgiveness for yourself and forgive others.\n    **    May you share freely, never taking more than you give.\n    **\n    *************************************************************************\n    **\n    ** This file contains a no-op memory allocation drivers for use when\n    ** SQLITE_ZERO_MALLOC is defined.  The allocation drivers implemented\n    ** here always fail.  SQLite will not operate with these drivers.  These\n    ** are merely placeholders.  Real drivers must be substituted using\n    ** sqlite3_config() before SQLite will operate.\n    **\n    ** $Id: mem0.c,v 1.1 2008/10/28 18:58:20 drh Exp $\n    **\n    *************************************************************************\n    **  Included in SQLite3 port to C#-SQLite;  2008 Noah B Hart\n    **  C#-SQLite is an independent reimplementation of the SQLite software library\n    **\n    **  $Header$\n    *************************************************************************\n    */\n    //#include "sqliteInt.h"\n\n    /*\n    ** This version of the memory allocator is the default.  It is\n    ** used when no other memory allocator is specified using compile-time\n    ** macros.\n    */\n#if SQLITE_ZERO_MALLOC\n\n/*\n** No-op versions of all memory allocation routines\n*/\nstatic void sqlite3MemMalloc(int nByte){ return 0; }\nstatic void sqlite3MemFree(object pPrior){ return; }\nstatic void sqlite3MemRealloc(object pPrior, int nByte){ return 0; }\nstatic int sqlite3MemSize(object pPrior){ return 0; }\nstatic int sqlite3MemRoundup(int n){ return n; }\nstatic int sqlite3MemInit(object NotUsed){ return SQLITE_OK; }\nstatic void sqlite3MemShutdown(object NotUsed){ return; }\n\n/*\n** This routine is the only routine in this file with external linkage.\n**\n** Populate the low-level memory allocation function pointers in\n** sqlite3GlobalConfig.m with pointers to the routines in this file.\n*/\nvoid sqlite3MemSetDefault(){\nstatic const sqlite3_mem_methods defaultMethods = {\nsqlite3MemMalloc,\nsqlite3MemFree,\nsqlite3MemRealloc,\nsqlite3MemSize,\nsqlite3MemRoundup,\nsqlite3MemInit,\nsqlite3MemShutdown,\n0\n};\nsqlite3_config(SQLITE_CONFIG_MALLOC, &defaultMethods);\n}\n\n#endif //* SQLITE_ZERO_MALLOC */\n  }\n}\n'