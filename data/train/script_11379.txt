b'// Copyright (c) 2023 Manuel Schneider\n\n#include "indexqueryhandlerprivate.h"\nusing namespace std;\nusing namespace albert;\n\nIndexQueryHandlerPrivate::IndexQueryHandlerPrivate(IndexQueryHandler *q_) : q(q_) {}\n\nIndexQueryHandlerPrivate::~IndexQueryHandlerPrivate() = default;\n\nvoid IndexQueryHandlerPrivate::setIndex(unique_ptr<Index> &&index)\n{\n    index_ = ::move(index);\n    q->updateIndexItems();\n}\n\nvoid IndexQueryHandlerPrivate::setIndexItems(std::vector<IndexItem> &&index_items)\n{\n    index_->setItems(::move(index_items));\n}\n\nstd::vector<RankItem>\nIndexQueryHandlerPrivate::handleGlobalQuery(const GlobalQueryHandler::GlobalQuery &query) const\n{\n    return index_->search(query.string(), query.isValid());\n}\n'