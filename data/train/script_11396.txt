b'package com.naman14.timber.widgets;\n\nimport android.animation.ValueAnimator;\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.graphics.Path;\nimport android.graphics.drawable.Drawable;\nimport android.os.Parcel;\nimport android.os.Parcelable;\nimport androidx.annotation.NonNull;\nimport android.util.AttributeSet;\nimport android.view.View;\n\npublic class PlayPauseButton extends View {\n\n    /**\n     * \xe2\x88\x9a3\n     */\n    private final static double SQRT_3 = Math.sqrt(3);\n\n    /**\n     * Animation\xe3\x81\xae\xe9\x80\x9f\xe5\xba\xa6\xe3\x81\xae\xe5\x80\x8d\xe7\x8e\x87\n     */\n    private final static int SPEED = 1;\n    /**\n     * \xe5\xba\xa7\xe6\xa8\x99\xe3\x81\xae\xe5\x9f\xba\xe6\xba\x96\xe3\x82\x92\n     * \xe3\x83\xbb\xe4\xb8\xad\xe5\xbf\x83\xe3\x82\x92(0,0)\n     * \xe3\x83\xbb\xe5\x8f\xb3\xe4\xb8\x8a(1,1) \xe5\x8f\xb3\xe4\xb8\x8b(1,\xe3\x83\xbc1) \xe5\xb7\xa6\xe4\xb8\x8a(\xe3\x83\xbc1,1) \xe5\xb7\xa6\xe4\xb8\x8b(\xe3\x83\xbc1,\xe3\x83\xbc1)\n     * \xe3\x81\xae\xe5\xba\xa7\xe6\xa8\x99\xe6\x99\x82\xe6\x9c\x9f\xe3\x81\xab\xe5\xa4\x89\xe6\x8f\x9b\xe3\x81\x99\xe3\x82\x8b\xe3\x81\x9f\xe3\x82\x81\xe3\x81\xaeClass\n     */\n    private final Point mPoint;\n    /**\n     * \xe6\x8f\x8f\xe7\x94\xbb\xe3\x81\x99\xe3\x82\x8bPaint\n     */\n    private Paint mPaint;\n    /**\n     * \xe5\xb7\xa6\xe5\x8d\x8a\xe5\x88\x86\xe3\x81\xaePath\n     */\n    private Path mLeftPath;\n    /**\n     * \xe5\x8f\xb3\xe5\x8d\x8a\xe5\x88\x86\xe3\x81\xaePath\n     */\n    private Path mRightPath;\n    /**\n     * \xe7\x9c\x9f\xe3\x82\x93\xe4\xb8\xad\xe3\x81\xaeAnimator\n     */\n    private ValueAnimator mCenterEdgeAnimator;\n    /**\n     * \xe4\xb8\x80\xe7\x95\xaa\xe5\xb7\xa6\xe5\x81\xb4\xe3\x81\xaeAnimator\n     */\n    private ValueAnimator mLeftEdgeAnimator;\n    /**\n     * \xe4\xb8\x80\xe7\x95\xaa\xe5\x8f\xb3\xe5\x81\xb4\xe3\x81\xaeAnimator\n     */\n    private ValueAnimator mRightEdgeAnimator;\n    /**\n     * \xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb3\xe3\x81\xae\xe7\x8a\xb6\xe6\xb3\x81\n     */\n    private boolean mPlayed;\n\n    /**\n     * \xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb3\xe3\x81\xae\xe8\x89\xb2\n     */\n    private int mBackgroundColor = Color.BLACK;\n\n    /**\n     * Animator\xe3\x81\xaeUpdateListener\n     */\n    private ValueAnimator.AnimatorUpdateListener mAnimatorUpdateListener =\n            new ValueAnimator.AnimatorUpdateListener() {\n                @Override\n                public void onAnimationUpdate(ValueAnimator valueAnimator) {\n                    invalidate();\n                }\n            };\n\n    private OnControlStatusChangeListener mListener;\n\n    /**\n     * \xe3\x82\xb3\xe3\x83\xb3\xe3\x82\xb9\xe3\x83\x88\xe3\x83\xa9\xe3\x82\xaf\xe3\x82\xbf\n     * {@inheritDoc}\n     */\n    public PlayPauseButton(Context context) {\n        this(context, null, 0);\n    }\n\n    /**\n     * \xe3\x82\xb3\xe3\x83\xb3\xe3\x82\xb9\xe3\x83\x88\xe3\x83\xa9\xe3\x82\xaf\xe3\x82\xbf\n     * {@inheritDoc}\n     */\n    public PlayPauseButton(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    /**\n     * \xe3\x82\xb3\xe3\x83\xb3\xe3\x82\xb9\xe3\x83\x88\xe3\x83\xa9\xe3\x82\xaf\xe3\x82\xbf\n     * android:background\xe3\x81\xae\xe3\x83\x87\xe3\x83\xbc\xe3\x82\xbf\xe3\x82\x92\xe5\x8f\x96\xe5\xbe\x97\xe3\x81\x97\xe3\x83\x9c\xe3\x82\xbf\xe3\x83\xb3\xe3\x81\xae\xe8\x89\xb2\xe3\x81\xa8\xe3\x81\x99\xe3\x82\x8b\n     * {@inheritDoc}\n     */\n    public PlayPauseButton(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n\n        mPoint = new Point();\n        initView();\n    }\n\n    /**\n     * View\xe3\x81\xae\xe5\x88\x9d\xe6\x9c\x9f\xe5\x8c\x96\n     */\n    private void initView() {\n        setUpPaint();\n        setUpPath();\n        setUpAnimator();\n    }\n\n    /**\n     * Animator\xe3\x81\xae\xe5\x88\x9d\xe6\x9c\x9f\xe5\x8c\x96\n     * \xe3\x81\x9d\xe3\x82\x8c\xe3\x81\x9e\xe3\x82\x8c\xe3\x81\xaeAnimator\xe3\x81\xab\xe5\x88\x9d\xe6\x9c\x9f\xe5\x80\xa4\xe3\x82\x92\xe3\x82\xbb\xe3\x83\x83\xe3\x83\x88\xe3\x81\x97\xef\xbd\xa4start\xe3\x81\x95\xe3\x81\x9b\xe3\x81\xa6\xe3\x81\x84\xe3\x82\x8b\n     */\n    private void setUpAnimator() {\n        if (mPlayed) {\n            mCenterEdgeAnimator = ValueAnimator.ofFloat(1.f, 1.f);\n            mLeftEdgeAnimator = ValueAnimator.ofFloat((float) (-0.2f * SQRT_3), (float) (-0.2f * SQRT_3));\n            mRightEdgeAnimator = ValueAnimator.ofFloat(1.f, 1.f);\n        } else {\n            mCenterEdgeAnimator = ValueAnimator.ofFloat(0.5f, 0.5f);\n            mLeftEdgeAnimator = ValueAnimator.ofFloat(0.f, 0.f);\n            mRightEdgeAnimator = ValueAnimator.ofFloat(0.f, 0.f);\n        }\n\n        mCenterEdgeAnimator.start();\n        mLeftEdgeAnimator.start();\n        mRightEdgeAnimator.start();\n    }\n\n    /**\n     * Paint\xe3\x81\xae\xe5\x88\x9d\xe6\x9c\x9f\xe5\x8c\x96\n     */\n    private void setUpPaint() {\n        mPaint = new Paint();\n        mPaint.setColor(mBackgroundColor);\n        mPaint.setAntiAlias(true);\n        mPaint.setStyle(Paint.Style.FILL);\n    }\n\n    /**\n     * Path\xe3\x81\xae\xe5\x88\x9d\xe6\x9c\x9f\xe5\x8c\x96\n     */\n    private void setUpPath() {\n        mLeftPath = new Path();\n        mRightPath = new Path();\n    }\n\n    /**\n     * \xe6\x8f\x8f\xe7\x94\xbb\xe5\x87\xa6\xe7\x90\x86\n     * {@inheritDoc}\n     */\n    @Override\n    protected void onDraw(Canvas canvas) {\n        mPoint.setHeight(canvas.getHeight());\n        mPoint.setWidth(canvas.getWidth());\n\n        mLeftPath.reset();\n        mRightPath.reset();\n\n        //\xe5\xb7\xa6\xe5\x8d\x8a\xe5\x88\x86Path\xe3\x81\xae\xe8\xa8\xad\xe5\xae\x9a\n        mLeftPath.moveTo(mPoint.getX(-0.5 * SQRT_3), mPoint.getY(1.f));\n        mLeftPath.lineTo(mPoint.getY((Float) mLeftEdgeAnimator.getAnimatedValue()) + 0.7f,\n                mPoint.getY((Float) mCenterEdgeAnimator.getAnimatedValue()));\n        mLeftPath.lineTo(mPoint.getY((Float) mLeftEdgeAnimator.getAnimatedValue()) + 0.7f,\n                mPoint.getY(-1 * (Float) mCenterEdgeAnimator.getAnimatedValue()));\n        mLeftPath.lineTo(mPoint.getX(-0.5 * SQRT_3), mPoint.getY(-1.f));\n\n        //\xe5\x8f\xb3\xe5\x8d\x8a\xe5\x88\x86Path\xe3\x81\xae\xe8\xa8\xad\xe5\xae\x9a\n        mRightPath.moveTo(mPoint.getY(-1 * (Float) mLeftEdgeAnimator.getAnimatedValue()),\n                mPoint.getY((Float) mCenterEdgeAnimator.getAnimatedValue()));\n        mRightPath.lineTo(mPoint.getX(0.5 * SQRT_3),\n                mPoint.getY((Float) mRightEdgeAnimator.getAnimatedValue()));\n        mRightPath.lineTo(mPoint.getX(0.5 * SQRT_3),\n                mPoint.getY(-1 * (Float) mRightEdgeAnimator.getAnimatedValue()));\n        mRightPath.lineTo(mPoint.getY(-1 * (Float) mLeftEdgeAnimator.getAnimatedValue()),\n                mPoint.getY(-1 * (Float) mCenterEdgeAnimator.getAnimatedValue()));\n\n        canvas.drawPath(mLeftPath, mPaint);\n        canvas.drawPath(mRightPath, mPaint);\n    }\n\n    /**\n     * \xe3\x82\xa2\xe3\x83\x8b\xe3\x83\xa1\xe3\x83\xbc\xe3\x82\xb7\xe3\x83\xa7\xe3\x83\xb3\xe3\x82\x92\xe9\x96\x8b\xe5\xa7\x8b\xe3\x81\x99\xe3\x82\x8b\n     */\n    public void startAnimation() {\n        mCenterEdgeAnimator = ValueAnimator.ofFloat(1.f, 0.5f);\n        mCenterEdgeAnimator.setDuration(100 * SPEED);\n        mCenterEdgeAnimator.addUpdateListener(mAnimatorUpdateListener);\n\n        mLeftEdgeAnimator = ValueAnimator.ofFloat((float) (-0.2 * SQRT_3), 0.f);\n        mLeftEdgeAnimator.setDuration(100 * SPEED);\n        mLeftEdgeAnimator.addUpdateListener(mAnimatorUpdateListener);\n\n        mRightEdgeAnimator = ValueAnimator.ofFloat(1.f, 0.f);\n        mRightEdgeAnimator.setDuration(150 * SPEED);\n        mRightEdgeAnimator.addUpdateListener(mAnimatorUpdateListener);\n\n        if (!mPlayed) {\n            mCenterEdgeAnimator.start();\n            mLeftEdgeAnimator.start();\n            mRightEdgeAnimator.start();\n        } else {\n            mCenterEdgeAnimator.reverse();\n            mLeftEdgeAnimator.reverse();\n            mRightEdgeAnimator.reverse();\n        }\n    }\n\n    public void setOnControlStatusChangeListener(OnControlStatusChangeListener listener) {\n        mListener = listener;\n    }\n\n//  /**\n//   * ACTION_DOWN\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe3\x82\x89\xe3\x82\xa2\xe3\x83\x8b\xe3\x83\xa1\xe3\x83\xbc\xe3\x82\xb7\xe3\x83\xa7\xe3\x83\xb3\xe3\x81\xae\xe3\x82\xb9\xe3\x82\xbf\xe3\x83\xbc\xe3\x83\x88\xe3\x81\xa8\xe3\x81\x8b\n//   * {@inheritDoc}\n//   */\n//  @Override public boolean onTouchEvent(@NonNull MotionEvent event) {\n//    switch (event.getAction()) {\n//      case MotionEvent.ACTION_DOWN:\n//        setPlayed(!mPlayed);\n//        startAnimation();\n//        if (mListener != null) {\n//          mListener.onStatusChange(this, mPlayed);\n//        }\n//        break;\n//    }\n//    return false;\n//  }\n\n    /**\n     * \xe5\x9b\x9e\xe8\xbb\xa2\xe7\x8a\xb6\xe6\xb3\x81\xe3\x82\x92 {@link PlayPauseButton.SavedState} \xe3\x81\xab\xe4\xbf\x9d\xe5\xad\x98\xe3\x81\x99\xe3\x82\x8b\n     * {@inheritDoc}\n     */\n    @Override\n    public Parcelable onSaveInstanceState() {\n        Parcelable superState = super.onSaveInstanceState();\n        SavedState savedState = new SavedState(superState);\n        savedState.played = isPlayed();\n        return savedState;\n    }\n\n    /**\n     * Restore\xe3\x81\x97\xe3\x81\xa6\xe3\x81\x8d\xe3\x81\x9f\xe3\x82\x84\xe3\x81\xa4\xe3\x81\x8b\xe3\x82\x89 {@link PlayPauseButton.SavedState}\n     * \xe3\x82\x92\xe5\x8f\x96\xe5\xbe\x97\xe3\x81\x97\xe7\x8a\xb6\xe6\xb3\x81\xe3\x82\x92\xe3\x82\xbb\xe3\x83\x83\xe3\x83\x88\xe3\x81\x99\xe3\x82\x8b\n     * {@inheritDoc}\n     */\n    @Override\n    public void onRestoreInstanceState(Parcelable state) {\n        SavedState savedState = (SavedState) state;\n        super.onRestoreInstanceState(savedState.getSuperState());\n        setPlayed(savedState.played);\n        setUpAnimator();\n        invalidate();\n    }\n\n    /**\n     * android:background \xe3\x81\xa7\xe8\xa6\xaa\xe3\x81\xae {@link View} \xe3\x81\x8c\xe8\x83\x8c\xe6\x99\xaf\xe3\x82\x92\xe3\x82\xbb\xe3\x83\x83\xe3\x83\x88\xe3\x81\x99\xe3\x82\x8b\xe3\x81\xae\xe3\x81\xa7\xe4\xb8\x8a\xe6\x9b\xb8\xe3\x81\x8d\n     * {@inheritDoc}\n     */\n    @Override\n    public void setBackground(Drawable background) {\n    }\n\n    /**\n     * {@link PlayPauseButton#mPlayed} \xe3\x82\x92\xe8\xbf\x94\xe3\x81\x99\n     *\n     * @return {@link PlayPauseButton#mPlayed}\n     */\n    public boolean isPlayed() {\n        return mPlayed;\n    }\n\n    /**\n     * {@link PlayPauseButton#mPlayed} \xe3\x82\x92\xe3\x82\xbb\xe3\x83\x83\xe3\x83\x88\xe3\x81\x99\xe3\x82\x8b\n     *\n     * @param played \xe7\x8a\xb6\xe6\xb3\x81\n     */\n    public void setPlayed(boolean played) {\n        if (mPlayed != played) {\n            mPlayed = played;\n            invalidate();\n        }\n    }\n\n    /**\n     * {@link PlayPauseButton#mBackgroundColor} \xe3\x82\x92\xe3\x82\xbb\xe3\x83\x83\xe3\x83\x88\xe3\x81\x97\xe3\x81\xa6\xe5\x86\x8d\xe6\x8f\x8f\xe7\x94\xbb\xe3\x81\x99\xe3\x82\x8b\n     *\n     * @param color \xe3\x82\xbb\xe3\x83\x83\xe3\x83\x88\xe3\x81\x99\xe3\x82\x8b\xe8\x89\xb2\n     */\n    public void setColor(int color) {\n        mBackgroundColor = color;\n        mPaint.setColor(mBackgroundColor);\n        invalidate();\n    }\n\n    public interface OnControlStatusChangeListener {\n        void onStatusChange(View view, boolean state);\n    }\n\n    /**\n     * \xe7\x94\xbb\xe9\x9d\xa2\xe9\x96\x8b\xe5\xba\x97\xe6\x99\x82\xe3\x81\xae\xe7\x8a\xb6\xe6\x85\x8b\xe3\x82\x92\xe4\xbf\x9d\xe5\xad\x98\xe3\x81\x97\xe3\x81\xa6\xe3\x81\x8a\xe3\x81\x8f\xe3\x82\x84\xe3\x81\xa4\n     */\n    static class SavedState extends BaseSavedState {\n\n        public static final Parcelable.Creator<SavedState> CREATOR =\n                new Parcelable.Creator<SavedState>() {\n                    public SavedState createFromParcel(Parcel in) {\n                        return new SavedState(in);\n                    }\n\n                    public SavedState[] newArray(int size) {\n                        return new SavedState[size];\n                    }\n                };\n        boolean played;\n\n        SavedState(Parcelable superState) {\n            super(superState);\n        }\n\n        private SavedState(Parcel in) {\n            super(in);\n            played = (Boolean) in.readValue(null);\n        }\n\n        @Override\n        public void writeToParcel(@NonNull Parcel out, int flags) {\n            super.writeToParcel(out, flags);\n            out.writeValue(played);\n        }\n    }\n\n    /**\n     * \xe5\xba\xa7\xe6\xa8\x99\xe3\x81\xae\xe5\x9f\xba\xe6\xba\x96\xe3\x82\x92\n     * \xe3\x83\xbb\xe4\xb8\xad\xe5\xbf\x83\xe3\x82\x92(0,0)\n     * \xe3\x83\xbb\xe5\x8f\xb3\xe4\xb8\x8a(1,1) \xe5\x8f\xb3\xe4\xb8\x8b(1,\xe3\x83\xbc1) \xe5\xb7\xa6\xe4\xb8\x8a(\xe3\x83\xbc1,1) \xe5\xb7\xa6\xe4\xb8\x8b(\xe3\x83\xbc1,\xe3\x83\xbc1)\n     * \xe3\x81\xae\xe5\xba\xa7\xe6\xa8\x99\xe6\x99\x82\xe6\x9c\x9f\xe3\x81\xab\xe5\xa4\x89\xe6\x8f\x9b\xe3\x81\x99\xe3\x82\x8b\xe3\x81\x9f\xe3\x82\x81\xe3\x81\xaeClass\n     */\n    static class Point {\n\n        private int width;\n\n        private int height;\n\n        public void setWidth(int width) {\n            this.width = width;\n        }\n\n        public void setHeight(int height) {\n            this.height = height;\n        }\n\n        public float getX(float x) {\n            return (width / 2) * (x + 1);\n        }\n\n        public float getY(float y) {\n            return (height / 2) * (y + 1);\n        }\n\n        public float getX(double x) {\n            return getX((float) x);\n        }\n\n        public float getY(double y) {\n            return getY((float) y);\n        }\n    }\n}'