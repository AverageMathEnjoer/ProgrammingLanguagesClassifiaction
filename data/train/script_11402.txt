b'// UVa12657 Boxes in a Line\n// Rujia Liu\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn = 100000 + 5;\nint n, left[maxn], right[maxn];\n\ninline void link(int L, int R) {\n  right[L] = R; left[R] = L;\n}\n\nint main() {\n  int m, kase = 0;\n  while(scanf("%d%d", &n, &m) == 2) {\n    for(int i = 1; i <= n; i++) {\n      left[i] = i-1;\n      right[i] = (i+1) % (n+1);\n    }\n    right[0] = 1; left[0] = n;\n    int op, X, Y, inv = 0;\n\n    while(m--) {\n      scanf("%d", &op);\n      if(op == 4) inv = !inv;\n      else {\n        scanf("%d%d", &X, &Y);\n        if(op == 3 && right[Y] == X) swap(X, Y);\n        if(op != 3 && inv) op = 3 - op;\n        if(op == 1 && X == left[Y]) continue;\n        if(op == 2 && X == right[Y]) continue;\n\n        int LX = left[X], RX = right[X], LY = left[Y], RY = right[Y];\n        if(op == 1) {\n          link(LX, RX); link(LY, X); link(X, Y);\n        }\n        else if(op == 2) {\n          link(LX, RX); link(Y, X); link(X, RY);\n        }\n        else if(op == 3) {\n          if(right[X] == Y) { link(LX, Y); link(Y, X); link(X, RY); }\n          else { link(LX, Y); link(Y, RX); link(LY, X); link(X, RY); }\n        }\n      }\n    }\n\n    int b = 0;\n    long long ans = 0;\n    for(int i = 1; i <= n; i++) {\n      b = right[b];\n      if(i % 2 == 1) ans += b;\n    }\n    if(inv && n % 2 == 0) ans = (long long)n*(n+1)/2 - ans;\n    printf("Case %d: %lld\\n", ++kase, ans);\n  }\n  return 0;\n}\n'