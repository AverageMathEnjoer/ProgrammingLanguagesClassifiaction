b'module Cachix.Types.NarFileName\n  ( NarFileName (..),\n  )\nwhere\n\nimport Data.Swagger (ToParamSchema (..))\nimport qualified Data.Text as T\nimport Protolude\nimport Servant.API\n\n-- | <hash>.nar.<extension> file\ndata NarFileName = NarFileName\n  { contentHash :: Text,\n    extension :: Text\n  }\n  deriving (Generic)\n\ninstance FromHttpApiData NarFileName where\n  parseUrlPiece s =\n    case T.splitOn "." s of\n      [filename, "nar", ext] ->\n        Right $ NarFileName filename ext\n      _ -> Left $ "Wrong nar filename: " <> s\n\ninstance ToHttpApiData NarFileName where\n  toUrlPiece narfilename = contentHash narfilename <> ".nar." <> extension narfilename\n\ninstance ToParamSchema NarFileName where\n  toParamSchema _ = toParamSchema (Proxy :: Proxy Text)\n'