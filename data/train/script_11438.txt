b'package co.joebirch.composeplayground.animation\n\nimport androidx.compose.animation.animateColorAsState\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.unit.dp\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject SingleAnimationColorView : ComposableLayout {\n\n    @Composable\n    override fun build() {\n        Column(\n            modifier = Modifier.fillMaxSize().padding(32.dp),\n            verticalArrangement = Arrangement.SpaceEvenly,\n            horizontalAlignment = Alignment.CenterHorizontally\n        ) {\n            SingleValueAnimationColor()\n        }\n    }\n\n    @Composable\n    fun SingleValueAnimationColor() {\n        val enabled = remember { mutableStateOf(true) }\n        Box {\n            Box(\n                Modifier.fillMaxSize().clickable(onClick = {\n                    enabled.value = !enabled.value\n                }).background(animateColorAsState(if (enabled.value) Color.Green else Color.Red).value),\n            )\n            Text(\n                text = "Click me to change color!",\n                modifier = Modifier.align(Alignment.Center)\n            )\n        }\n    }\n}'