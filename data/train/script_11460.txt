b'\xef\xbb\xbfusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Linq;\nusing System.Management;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Data;\nusing System.Windows.Documents;\nusing System.Windows.Input;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\nusing System.Windows.Navigation;\nusing System.Windows.Shapes;\nusing MaterialDesignColors;\nusing MaterialDesignThemes.Wpf;\n\nusing static YourAV.ManagementHelper;\n\nnamespace YourAV\n{\n    /// <summary>\n    /// MainWindow.xaml \xe7\x9a\x84\xe4\xba\xa4\xe4\xba\x92\xe9\x80\xbb\xe8\xbe\x91\n    /// </summary>\n    public partial class MainWindow : Window, INotifyPropertyChanged\n    {\n        public string AVName { get; set; } = "YourAV";\n        public string AVGuid { get; set; } = Guid.NewGuid().ToString();\n        public PackIconKind IconKind\n            => IsAntivirusInstalled() ? PackIconKind.CheckboxMarkedCircleOutline : PackIconKind.AlertCircleOutline;\n        public string ButtonContent\n            => IsAntivirusInstalled() ? "\xe5\x85\xb3\xe9\x97\xad" : "\xe5\xbc\x80\xe5\x90\xaf";\n        public MainWindow()\n        {\n            InitializeComponent();\n            DataContext = this;\n        }\n\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        private void Card_MouseDown(object sender, MouseButtonEventArgs e)\n        {\n            if (e.ChangedButton == MouseButton.Left)\n                DragMove();\n        }\n\n        private void Button_Click(object sender, RoutedEventArgs e)\n        {\n            if (IsAntivirusInstalled())\n            {\n                RemoveAllAntivirus();\n                //RemoveAllAntivirus2();\n            }\n            else\n            {\n                AddAntivirus(AVName, AVGuid);\n                //AddAntivirus2(AVName, AVGuid);\n            }\n            RestartService("Windows Management Instrumentation");\n            App.ChangeTheme();\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(IconKind)));\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(ButtonContent)));\n        }\n\n        private void Button_Click_1(object sender, RoutedEventArgs e)\n        {\n            AVGuid = Guid.NewGuid().ToString();\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(AVGuid)));\n        }\n\n        private void Button_Click_2(object sender, RoutedEventArgs e)\n        {\n            Close();\n        }\n    }\n}\n'