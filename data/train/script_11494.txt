b'\xef\xbb\xbf// UVa10375 Choose and divide\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<vector>\n#include<iostream>\nusing namespace std;\n\nconst int maxn = 10000;\nvector<int> primes;\nint e[maxn];\n\n// \xe4\xb9\x98\xe4\xbb\xa5\xe6\x88\x96\xe9\x99\xa4\xe4\xbb\xa5n. d=0\xe8\xa1\xa8\xe7\xa4\xba\xe4\xb9\x98\xef\xbc\x8cd=-1\xe8\xa1\xa8\xe7\xa4\xba\xe9\x99\xa4\nvoid add_integer(int n, int d) {\n  for(int i = 0; i < primes.size(); i++) {\n    while(n % primes[i] == 0) {\n      n /= primes[i];\n      e[i] += d;\n    }\n    if(n == 1) break; // \xe6\x8f\x90\xe5\x89\x8d\xe7\xbb\x88\xe6\xad\xa2\xe5\xbe\xaa\xe7\x8e\xaf\xef\xbc\x8c\xe8\x8a\x82\xe7\xba\xa6\xe6\x97\xb6\xe9\x97\xb4\n  }\n}\n\nvoid add_factorial(int n, int d) {\n  for(int i = 1; i <= n; i++)\n    add_integer(i, d);\n}\n\nbool is_prime(int n) {\n  int m = floor(sqrt(n) + 0.5);\n  for(int a = 2; a <= m; a++)\n    if(n % a == 0) return false;\n  return true;\n}\n\nint main() {\n  for(int i = 2; i <= 10000; i++)\n    if(is_prime(i)) primes.push_back(i);\n  int p, q, r, s;\n  while(cin >> p >> q >> r >> s) {\n    memset(e, 0, sizeof(e));\n    add_factorial(p, 1);\n    add_factorial(q, -1);\n    add_factorial(p-q, -1);\n    add_factorial(r, -1);\n    add_factorial(s, 1);\n    add_factorial(r-s, 1);\n    double ans = 1;\n    for(int i = 0; i < primes.size(); i++)\n      ans *= pow(primes[i], e[i]);\n    printf("%.5lf\\n", ans);\n  }\n  return 0;\n}\n'