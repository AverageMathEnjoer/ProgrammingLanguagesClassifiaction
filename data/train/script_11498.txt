b'package droidninja.filepicker.utils\n\nimport android.content.ContentResolver\nimport android.content.Context\nimport android.content.Intent\nimport android.database.ContentObserver\nimport android.net.Uri\nimport android.os.Handler\nimport android.text.TextUtils\nimport android.webkit.MimeTypeMap\nimport java.io.File\n\n/**\n * Created by droidNinja on 29/07/16.\n */\nobject FilePickerUtils {\n\n    fun getFileExtension(file: File): String {\n        val name = file.name\n        try {\n            return name.substring(name.lastIndexOf(".") + 1)\n        } catch (e: Exception) {\n            return ""\n        }\n\n    }\n\n    fun contains(types: Array<String>, mimeType: String?): Boolean {\n        for (type in types) {\n            if(MimeTypeMap.getSingleton().getMimeTypeFromExtension(type) == mimeType){\n                return true\n            }\n        }\n        return false\n    }\n}\n\nfun ContentResolver.registerObserver(\n        uri: Uri,\n        observer: (selfChange: Boolean) -> Unit\n): ContentObserver {\n    val contentObserver = object : ContentObserver(Handler()) {\n        override fun onChange(selfChange: Boolean) {\n            observer(selfChange)\n        }\n    }\n    registerContentObserver(uri, true, contentObserver)\n    return contentObserver\n}\n'