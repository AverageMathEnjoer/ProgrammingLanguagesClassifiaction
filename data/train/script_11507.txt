b'// -----------------------------------------------------------------------\n// Licensed to The .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// -----------------------------------------------------------------------\n\nusing System;\nusing Asn1;\nusing Rubeus.Asn1;\n\nnamespace Kerberos.NET.Crypto\n{\n    public enum AsymmetricKeyType {\n        Public,\n        Private\n    }\n\n    public class DiffieHellmanKey : IExchangeKey\n    {\n        public AsymmetricKeyType Type { get; set; }\n\n        public KeyAgreementAlgorithm Algorithm { get; set; }\n\n        public DateTimeOffset? CacheExpiry { get; set; }\n\n        public int KeyLength { get; set; }\n\n        public byte[] Modulus { get; set; }\n\n        public byte[] Generator { get; set; }\n\n        public byte[] Factor { get; set; }\n\n        public byte[] PublicComponent { get; set; }\n\n        public byte[] PrivateComponent { get; set; }\n\n        public byte[] EncodePublicKey()            \n        {\n            return AsnElt.MakeInteger(this.PublicComponent).Encode();\n        }\n\n        public static DiffieHellmanKey ParsePublicKey(byte[] data, int keyLength)\n        {\n            AsnElt publicKeyAsn = AsnElt.Decode(data); \n            \n            if(publicKeyAsn.TagValue != AsnElt.INTEGER) {\n                throw new ArgumentException("data doesn\'t appear to be an ASN.1 encoded INTERGER");\n            }\n\n            return new DiffieHellmanKey { PublicComponent = publicKeyAsn.GetOctetString().DepadLeft().PadRight(keyLength) };\n        }\n    }\n}'