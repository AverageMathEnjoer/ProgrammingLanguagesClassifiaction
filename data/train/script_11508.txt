b'-- The Haskell prototype of stirling.c, derived from the spreadsheet prototype http://i.solidfiles.net/c44b894db1.png\n\ndata KGen = KGen Int [Integer] deriving Show\n\nnextgen :: KGen -> KGen\nnextgen (KGen n prevgen) =\n  let nextgen = zipWith3 (\\i k k_1 -> i*k + k_1) [0..] prevgen (0:prevgen)\n  in  KGen (n+1) nextgen\n\n\nstirling n k =\n  case iterate nextgen (KGen 0 (1:replicate (k) 0)) !! n of\n    KGen _ gen -> last gen\n \n'