b'/**\n * Copyright (C) 2020 Fernando Cejas Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.fernandocejas.sample.features.movies\n\nimport com.fernandocejas.sample.AndroidTest\nimport com.fernandocejas.sample.core.functional.Either.Right\nimport io.mockk.coEvery\nimport io.mockk.impl.annotations.MockK\nimport kotlinx.coroutines.runBlocking\nimport org.amshove.kluent.shouldEqualTo\nimport org.junit.Before\nimport org.junit.Test\n\nclass MovieDetailsViewModelTest : AndroidTest() {\n\n    private lateinit var movieDetailsViewModel: MovieDetailsViewModel\n\n    @MockK private lateinit var getMovieDetails: GetMovieDetails\n    @MockK private lateinit var playMovie: PlayMovie\n\n    @Before\n    fun setUp() {\n        movieDetailsViewModel = MovieDetailsViewModel(getMovieDetails, playMovie)\n    }\n\n    @Test fun `loading movie details should update live data`() {\n        val movieDetails = MovieDetails(0, "IronMan", "poster", "summary",\n                "cast", "director", 2018, "trailer")\n        coEvery { getMovieDetails.run(any()) } returns Right(movieDetails)\n\n        movieDetailsViewModel.movieDetails.observeForever {\n            with(it!!) {\n                id shouldEqualTo 0\n                title shouldEqualTo "IronMan"\n                poster shouldEqualTo "poster"\n                summary shouldEqualTo "summary"\n                cast shouldEqualTo "cast"\n                director shouldEqualTo "director"\n                year shouldEqualTo 2018\n                trailer shouldEqualTo "trailer"\n            }\n        }\n\n        runBlocking { movieDetailsViewModel.loadMovieDetails(0) }\n    }\n}'