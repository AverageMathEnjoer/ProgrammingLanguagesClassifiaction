b'module InstallationModeSpec where\n\nimport Cachix.Client.InstallationMode\nimport qualified Cachix.Client.NixConf as NixConf\nimport Protolude\nimport Test.Hspec\n\ndefautUseOptions :: UseOptions\ndefautUseOptions =\n  UseOptions\n    { useMode = Nothing,\n      useOutputDirectory = Nothing,\n      useNixOSFolder = "/etc/nixos"\n    }\n\nspec :: Spec\nspec = describe "getInstallationMode" $ do\n  it "NixOS with root prints configuration" $\n    let nixenv =\n          NixEnv\n            { isTrusted = True, -- any\n              isRoot = True,\n              isNixOS = True\n            }\n     in getInstallationMode nixenv defautUseOptions `shouldBe` WriteNixOS\n  it "NixOS without trust prints steps to follow" $\n    let nixenv =\n          NixEnv\n            { isTrusted = False,\n              isRoot = False,\n              isNixOS = True\n            }\n     in getInstallationMode nixenv defautUseOptions `shouldBe` UntrustedNixOS\n  it "NixOS without trust prints steps to follow" $\n    let nixenv =\n          NixEnv\n            { isTrusted = False,\n              isRoot = False,\n              isNixOS = True\n            }\n     in getInstallationMode nixenv defautUseOptions `shouldBe` UntrustedNixOS\n  it "NixOS non-root trusted results into local install" $\n    let nixenv =\n          NixEnv\n            { isTrusted = True,\n              isRoot = False,\n              isNixOS = True\n            }\n     in getInstallationMode nixenv defautUseOptions `shouldBe` Install NixConf.Local\n  it "non-NixOS root results into global install" $\n    let nixenv =\n          NixEnv\n            { isTrusted = True,\n              isRoot = True,\n              isNixOS = False\n            }\n     in getInstallationMode nixenv defautUseOptions `shouldBe` Install NixConf.Global\n  it "non-NixOS with Nix 1.X root results into global install" $\n    let nixenv =\n          NixEnv\n            { isTrusted = True,\n              isRoot = True,\n              isNixOS = False -- any\n            }\n     in getInstallationMode nixenv defautUseOptions `shouldBe` Install NixConf.Global\n  it "non-NixOS non-root trusted results into local install" $\n    let nixenv =\n          NixEnv\n            { isTrusted = True,\n              isRoot = False,\n              isNixOS = False\n            }\n     in getInstallationMode nixenv defautUseOptions `shouldBe` Install NixConf.Local\n  it "non-NixOS non-root non-trusted results into required sudo" $\n    let nixenv =\n          NixEnv\n            { isTrusted = False,\n              isRoot = False,\n              isNixOS = False\n            }\n     in getInstallationMode nixenv defautUseOptions `shouldBe` UntrustedRequiresSudo\n'