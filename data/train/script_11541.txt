b'package com.github.eprendre.sources_by_eprendre\n\nimport com.github.eprendre.tingshu.extensions.config\nimport com.github.eprendre.tingshu.sources.AudioUrlExtractor\nimport com.github.eprendre.tingshu.sources.AudioUrlWebViewExtractor\nimport com.github.eprendre.tingshu.sources.TingShu\nimport com.github.eprendre.tingshu.utils.*\nimport org.jsoup.Jsoup\nimport java.net.URLEncoder\n\nobject M56TingShu : TingShu() {\n    override fun getSourceId(): String {\n        return "0ea16a8a11fb4d1b93550d059b5f1b5a"\n    }\n\n    override fun getUrl(): String {\n        return "http://m.ting56.com"\n    }\n\n    override fun getName(): String {\n        return "56\xe5\x90\xac\xe4\xb9\xa6\xe7\xbd\x91"\n    }\n\n    override fun getDesc(): String {\n        return "\xe6\x8e\xa8\xe8\x8d\x90\xe6\x8c\x87\xe6\x95\xb0:2\xe6\x98\x9f \xe2\xad\x90\xe2\xad\x90\\n\xe6\x90\x9c\xe7\xb4\xa2\xe5\xb7\xb2\xe5\xa4\xb1\xe6\x95\x88\xef\xbc\x8c\xe8\x80\x8c\xe4\xb8\x94\xe6\x89\x93\xe5\xbc\x80\xe9\x80\x9f\xe5\xba\xa6\xe6\x9e\x81\xe6\x85\xa2\xe7\xa7\x91\xe5\xad\xa6\xe4\xb8\x8a\xe7\xbd\x91\xe5\x8f\xaf\xe6\x8f\x90\xe9\xab\x98\xe9\x80\x9f\xe5\xba\xa6\xe3\x80\x82"\n    }\n\n    override fun getCategoryMenus(): List<CategoryMenu> {\n        val menu1 = CategoryMenu("\xe6\x9c\x89\xe5\xa3\xb0\xe5\xb0\x8f\xe8\xaf\xb4", listOf(\n            CategoryTab("\xe7\x8e\x84\xe5\xb9\xbb\xe6\xad\xa6\xe4\xbe\xa0", "http://m.ting56.com/book/1.html"),\n            CategoryTab("\xe9\x83\xbd\xe5\xb8\x82\xe8\xa8\x80\xe6\x83\x85", "http://m.ting56.com/book/2.html"),\n            CategoryTab("\xe6\x81\x90\xe6\x80\x96\xe6\x82\xac\xe7\x96\x91", "http://m.ting56.com/book/3.html"),\n            CategoryTab("\xe7\xbb\xbc\xe8\x89\xba\xe5\xa8\xb1\xe4\xb9\x90", "http://m.ting56.com/book/45.html"),\n            CategoryTab("\xe7\xbd\x91\xe6\xb8\xb8\xe7\xab\x9e\xe6\x8a\x80", "http://m.ting56.com/book/4.html"),\n            CategoryTab("\xe5\x86\x9b\xe4\xba\x8b\xe5\x8e\x86\xe5\x8f\xb2", "http://m.ting56.com/book/6.html"),\n            CategoryTab("\xe5\x88\x91\xe4\xbe\xa6\xe6\x8e\xa8\xe7\x90\x86", "http://m.ting56.com/book/41.html")\n        )\n        )\n        val menu2 = CategoryMenu("\xe8\xaf\x84\xe4\xb9\xa6", listOf(\n            CategoryTab("\xe5\x8d\x95\xe7\x94\xb0\xe8\x8a\xb3", "http://m.ting56.com/byy/shantianfang.html"),\n            CategoryTab("\xe5\x88\x98\xe5\x85\xb0\xe8\x8a\xb3", "http://m.ting56.com/byy/liulanfang.html"),\n            CategoryTab("\xe8\xa2\x81\xe9\x98\x94\xe6\x88\x90", "http://m.ting56.com/byy/yuankuocheng.html"),\n            CategoryTab("\xe7\x94\xb0\xe8\xbf\x9e\xe5\x85\x83", "http://m.ting56.com/byy/tianlianyuan.html"),\n            CategoryTab("\xe8\xbf\x9e\xe4\xb8\xbd\xe5\xa6\x82", "http://m.ting56.com/byy/lianliru.html"),\n            CategoryTab("\xe7\x8e\x8b\xe7\x8e\xa5\xe6\xb3\xa2", "http://m.ting56.com/byy/wangyuebo.html"),\n            CategoryTab("\xe5\xad\x99\xe4\xb8\x80", "http://m.ting56.com/byy/sunyi.html"),\n            CategoryTab("\xe6\x9b\xb4\xe5\xa4\x9a", "http://m.ting56.com/book/9.html")\n        )\n        )\n        val menu3 = CategoryMenu("\xe5\x85\xb6\xe5\xae\x83", listOf(\n            CategoryTab("\xe8\x81\x8c\xe5\x9c\xba\xe5\x95\x86\xe6\x88\x98", "http://m.ting56.com/book/7.html"),\n            CategoryTab("\xe7\x99\xbe\xe5\xae\xb6\xe8\xae\xb2\xe5\x9d\x9b", "http://m.ting56.com/book/10.html"),\n            CategoryTab("\xe5\xb9\xbf\xe6\x92\xad\xe5\x89\xa7", "http://m.ting56.com/book/40.html"),\n            CategoryTab("\xe5\xb9\xbd\xe9\xbb\x98\xe7\xac\x91\xe8\xaf\x9d", "http://m.ting56.com/book/44.html"),\n            CategoryTab("\xe7\x9b\xb8\xe5\xa3\xb0", "http://m.ting56.com/book/43.html"),\n            CategoryTab("\xe5\x84\xbf\xe7\xab\xa5\xe8\xaf\xbb\xe7\x89\xa9", "http://m.ting56.com/book/11.html")\n        )\n        )\n        return listOf(menu1, menu2, menu3)\n    }\n\n    override fun getAudioUrlExtractor(): AudioUrlExtractor {\n        AudioUrlWebViewExtractor.setUp { html ->\n            val doc = Jsoup.parse(html)\n            val audioElement = doc.getElementById("jp_audio_0")\n            var audioUrl = audioElement?.attr("src") ?: ""\n            if (audioUrl.contains("tingchinakey.php?url=")) {\n                audioUrl = audioUrl.split("tingchinakey.php?url=")[1]\n            }\n            return@setUp audioUrl\n        }\n        return AudioUrlWebViewExtractor\n    }\n\n    override fun getBookDetailInfo(bookUrl: String, loadEpisodes: Boolean, loadFullPages: Boolean): BookDetail {\n        val doc = Jsoup.connect(bookUrl).config().get()\n//            val book = doc.getElementsByClass("list-ov-tw").first()\n//            val cover = book.getElementsByTag("img").first().attr("src")\n        //\xe8\x8e\xb7\xe5\x8f\x96\xe4\xb9\xa6\xe6\x9c\xac\xe4\xbf\xa1\xe6\x81\xaf\n//            val bookInfos = book.getElementsByTag("span").map { it.text() }\n//            Prefs.currentBookName = bookInfos[0]\n//            Prefs.author = bookInfos[2]\n//            Prefs.artist = bookInfos[3]\n\n        //\xe8\x8e\xb7\xe5\x8f\x96\xe7\xab\xa0\xe8\x8a\x82\xe5\x88\x97\xe8\xa1\xa8\n        val episodes = doc.getElementById("playlist")\n            .getElementsByTag("a")\n            .map {\n                Episode(it.text(), it.attr("abs:href"))\n            }\n        val currentIntro = doc.selectFirst(".book_intro").ownText()\n\n        return BookDetail(episodes, currentIntro)\n    }\n\n    override fun getCategoryList(url: String): Category {\n        var currentPage = 1\n        var totalPage = 1\n\n        val list = ArrayList<Book>()\n        val doc = Jsoup.connect(url).config().get()\n        doc.getElementById("page_num1")?.text()?.split("/")?.let {\n            currentPage = it[0].toInt()\n            totalPage = it[1].toInt()\n        }\n        val nextUrl = doc.getElementById("page_next1")?.attr("abs:href") ?: ""\n        val elementList = doc.getElementsByClass("list-ov-tw")\n        elementList.forEach { item ->\n            var coverUrl = item.selectFirst(".list-ov-t a img").attr("original")\n            if (coverUrl.startsWith("/")) {//\xe6\x9c\x89\xe4\xba\x9b\xe7\xbd\x91\xe5\x9d\x80\xe5\xb7\xb2\xe6\x8b\xbc\xe6\x8e\xa5\xe5\xa5\xbd\xef\xbc\x8c\xe6\x9c\x89\xe4\xba\x9b\xe6\xb2\xa1\xe6\x9c\x89\xe6\x8b\xbc\xe6\x8e\xa5\n                //\xe8\xbf\x99\xe9\x87\x8c\xe7\x94\xa8\xe4\xb8\xbb\xe7\xab\x99\xe5\x8e\xbb\xe6\x8b\xbc\xe6\x8e\xa5\xef\xbc\x8c\xe5\x9b\xa0\xe4\xb8\xba\xe7\x94\xa8http://m.ting56.com/\xe6\x8b\xbc\xe6\x8e\xa5\xe6\x97\xb6\xe7\xbb\x8f\xe5\xb8\xb8\xe5\xb0\x81\xe9\x9d\xa2\xe6\x8a\xa5\xe9\x94\x99\n                coverUrl = "http://www.ting56.com$coverUrl"\n            }\n            val ov = item.selectFirst(".list-ov-w")\n            val bookUrl = ov.selectFirst(".bt a").attr("abs:href")\n            val title = ov.selectFirst(".bt a").text()\n            val (author, artist) = ov.select(".zz").let { element ->\n                Pair(element[0].text(), element[1].text())\n            }\n            val intro = ov.selectFirst(".nr").text()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.intro = intro\n                this.sourceId = getSourceId()\n            })\n        }\n\n        return Category(list, currentPage, totalPage, url, nextUrl)\n    }\n\n    override fun search(keywords: String, page: Int): Pair<List<Book>, Int> {\n        //            var currentPage: Int\n        var totalPage: Int\n        val url = "http://m.ting56.com/search.asp?searchword=${URLEncoder.encode(keywords, "gb2312")}&page=$page"\n        val list = ArrayList<Book>()\n        val doc = Jsoup.connect(url).config().get()\n        val container = doc.selectFirst(".xsdz")\n        container.getElementById("page_num1").text().split("/").let {\n            //                currentPage = it[0].toInt()\n            totalPage = it[1].toInt()\n        }\n        val elementList = container.getElementsByClass("list-ov-tw")\n        elementList.forEach { item ->\n            val coverUrl = item.selectFirst(".list-ov-t a img").attr("original")\n            val ov = item.selectFirst(".list-ov-w")\n            val bookUrl = ov.selectFirst(".bt a").attr("abs:href")\n            val title = ov.selectFirst(".bt a").text()\n            val (author, artist) = ov.select(".zz").let { element ->\n                Pair(element[0].text(), element[1].text())\n            }\n            val intro = ov.selectFirst(".nr").text()\n            list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                this.intro = intro\n                this.sourceId = getSourceId()\n            })\n        }\n        return Pair(list, totalPage)\n    }\n}\n'