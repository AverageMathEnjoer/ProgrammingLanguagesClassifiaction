b'\xef\xbb\xbfusing System.Collections.Concurrent;\nusing System.ComponentModel;\nusing System.Diagnostics;\nusing System.Text.Json;\nusing System.Text.RegularExpressions;\n\nnamespace XboxDownload\n{\n    public partial class FormCompare : Form\n    {\n        private readonly string productId;\n        private readonly ConcurrentDictionary<String, DataGridViewRow> dicDgvr = new();\n        private bool discount_ListPrice_1 = false, discount_ListPrice_2 = false, discount_WholesalePrice_1 = false, discount_WholesalePrice_2 = false;\n        private string? member = null;\n\n        public FormCompare(object js, int index)\n        {\n            InitializeComponent();\n\n            if (Form1.dpixRatio > 1)\n            {\n                dataGridView1.RowHeadersWidth = (int)(dataGridView1.RowHeadersWidth * Form1.dpixRatio);\n                foreach (DataGridViewColumn col in dataGridView1.Columns)\n                    col.Width = (int)(col.Width * Form1.dpixRatio);\n            }\n\n            var json = (ClassGame.Game)js;\n            var product = json.Products[index];\n            this.productId = product.ProductId;\n\n            int cbWidth = (int)(135 * Form1.dpixRatio), cbHeight = (int)(17 * Form1.dpixRatio);\n            List<Market> lsMarket = new();\n            lsMarket.AddRange(new List<Market>\n            {\n                new Market("Algeria", "\xe9\x98\xbf\xe5\xb0\x94\xe5\x8f\x8a\xe5\x88\xa9\xe4\xba\x9a", "DZ", "ar-DZ"),\n                new Market("Oman", "\xe9\x98\xbf\xe6\x9b\xbc", "OM", "ar-OM"),\n                new Market("Egypt", "\xe5\x9f\x83\xe5\x8f\x8a", "EG", "ar-EG"),\n                new Market("Pakistan", "\xe5\xb7\xb4\xe5\x9f\xba\xe6\x96\xaf\xe5\x9d\xa6", "PK", "en-PK"),\n                new Market("Bahrain", "\xe5\xb7\xb4\xe6\x9e\x97", "BH", "ar-BH"),\n                new Market("Bulgaria", "\xe4\xbf\x9d\xe5\x8a\xa0\xe5\x88\xa9\xe4\xba\x9a", "BG", "bg-BG"),\n                new Market("Iceland", "\xe5\x86\xb0\xe5\xb2\x9b","IS",  "is-IS"),\n                new Market("Philippines", "\xe8\x8f\xb2\xe5\xbe\x8b\xe5\xae\xbe", "PH", "en-PH"),\n                new Market("Costa Rica", "\xe5\x93\xa5\xe6\x96\xaf\xe8\xbe\xbe\xe9\xbb\x8e\xe5\x8a\xa0", "CR", "es-CR"),\n                new Market("Kazakhstan", "\xe5\x93\x88\xe8\x90\xa8\xe5\x85\x8b\xe6\x96\xaf\xe5\x9d\xa6", "KZ", "ru-KZ"),\n                new Market("Qatar", "\xe5\x8d\xa1\xe5\xa1\x94\xe5\xb0\x94", "QA", "en-QA"),\n                new Market("Kuwait", "\xe7\xa7\x91\xe5\xa8\x81\xe7\x89\xb9", "KW", "ar-KW"),\n                new Market("Kenya", "\xe8\x82\xaf\xe5\xb0\xbc\xe4\xba\x9a", "KE", "en-KE"),\n                new Market("Lebanon", "\xe9\xbb\x8e\xe5\xb7\xb4\xe5\xab\xa9", "LB", "ar-LB"),\n                new Market("Liechtenstein", "\xe5\x88\x97\xe6\x94\xaf\xe6\x95\xa6\xe5\xa3\xab\xe7\x99\xbb", "LI", "de-LI"),\n                new Market("Romania", "\xe7\xbd\x97\xe9\xa9\xac\xe5\xb0\xbc\xe4\xba\x9a", "RO", "ro-RO"),\n                new Market("Malaysia", "\xe9\xa9\xac\xe6\x9d\xa5\xe8\xa5\xbf\xe4\xba\x9a", "MY", "en-MY"),\n                new Market("Mauritania", "\xe6\xaf\x9b\xe9\x87\x8c\xe5\xa1\x94\xe5\xb0\xbc\xe4\xba\x9a\xe4\xb9\x8c\xe5\x90\x89\xe4\xba\x9a", "MR", "ar-MR"),\n                new Market("Bengal", "\xe5\xad\x9f\xe5\x8a\xa0\xe6\x8b\x89", "BD", "en-BD"),\n                new Market("Peru", "\xe7\xa7\x98\xe9\xb2\x81", "PE", "es-PE"),\n                new Market("Nigeria", "\xe5\xb0\xbc\xe6\x97\xa5\xe5\x88\xa9\xe4\xba\x9a", "NG", "en-NG"),\n                new Market("Serbia", "\xe5\xa1\x9e\xe5\xb0\x94\xe7\xbb\xb4\xe4\xba\x9a", "RS", "en-RS"),\n                new Market("Thailand", "\xe6\xb3\xb0\xe5\x9b\xbd", "TH", "th-TH"),\n                new Market("Trinidad and Tobago", "\xe7\x89\xb9\xe7\xab\x8b\xe5\xb0\xbc\xe8\xbe\xbe\xe5\x92\x8c\xe5\xa4\x9a\xe5\xb7\xb4\xe5\x93\xa5", "TT", "en-TT"),\n                new Market("Tunisia", "\xe7\xaa\x81\xe5\xb0\xbc\xe6\x96\xaf", "TN", "ar-TN"),\n                new Market("Guatemala", "\xe5\x8d\xb1\xe5\x9c\xb0\xe9\xa9\xac\xe6\x8b\x89", "GT", "es-GT"),\n                new Market("Ukraine", "\xe4\xb9\x8c\xe5\x85\x8b\xe5\x85\xb0", "UA", "uk-UA"),\n                new Market("Iraq", "\xe4\xbc\x8a\xe6\x8b\x89\xe5\x85\x8b", "IQ", "ar-IQ"),\n                new Market("Indonesia", "\xe5\x8d\xb0\xe5\xba\xa6\xe5\xb0\xbc\xe8\xa5\xbf\xe4\xba\x9a", "ID", "id-ID"),\n                new Market("Jordan", "\xe7\xba\xa6\xe6\x97\xa6", "JO", "ar-JO"),\n                new Market("Vietnam", "\xe8\xb6\x8a\xe5\x8d\x97", "VN", "vi-VN")\n            }.ToArray());\n\n            List<Market> ls = Form1.lsMarket.Union(lsMarket).ToList<Market>();\n            ls.Sort((x, y) => string.Compare(x.cname, y.cname));\n            foreach (Market market in ls)\n            {\n                string code = market.code;\n                string name = market.cname;\n                string lang = market.language;\n                switch (code)\n                {\n                    case "DE":\n                    case "NL":\n                    case "FR":\n                    case "SK":\n                    case "PT":\n                    case "FI":\n                    case "IE":\n                    case "AT":\n                    case "IT":\n                    case "BE":\n                    case "GR":\n                    case "ES":\n                        code = "DE";\n                        name = "\xe6\xac\xa7\xe5\x85\x83\xe5\x8c\xba";\n                        lang = "de-DE";\n                        break;\n                }\n                if (dicDgvr.ContainsKey(code)) continue;\n                CheckBox cb = new()\n                {\n                    Text = name,\n                    Size = new Size(cbWidth, cbHeight),\n                    Parent = this.flowLayoutPanel1\n                };\n                cb.CheckedChanged += new EventHandler(CheckBox_CheckedChanged);\n                DataGridViewRow dgvr = new();\n                dgvr.CreateCells(dataGridView1);\n                dgvr.Resizable = DataGridViewTriState.False;\n                dgvr.Cells[0].Value = code;\n                dgvr.Cells[1].Value = lang;\n                dgvr.Cells[2].Value = code switch\n                {\n                    "AR" or "EG" or "RU" or "TR" => name + " (\xe9\x94\x81)",\n                    _ => name,\n                };\n                dgvr.Cells[11].Value = "\xe5\x8f\x8c\xe5\x87\xbb\xe5\x89\x8d\xe5\xbe\x80";\n                cb.Tag = dgvr;\n                dicDgvr.TryAdd(code, dgvr);\n            }\n\n            double MSRP = product.DisplaySkuAvailabilities[0].Availabilities[0].OrderManagementData.Price.MSRP;\n            double ListPrice_1 = product.DisplaySkuAvailabilities[0].Availabilities[0].OrderManagementData.Price.ListPrice;\n            double ListPrice_2 = product.DisplaySkuAvailabilities[0].Availabilities.Count >= 2 ? product.DisplaySkuAvailabilities[0].Availabilities[1].OrderManagementData.Price.ListPrice : 0;\n            double WholesalePrice_1 = product.DisplaySkuAvailabilities[0].Availabilities[0].OrderManagementData.Price.WholesalePrice;\n            double WholesalePrice_2 = product.DisplaySkuAvailabilities[0].Availabilities.Count >= 2 ? product.DisplaySkuAvailabilities[0].Availabilities[1].OrderManagementData.Price.WholesalePrice : 0;\n\n            double priceRatio = 0;\n            if (ListPrice_1 > 0 && ListPrice_1 != MSRP)\n            {\n                discount_ListPrice_1 = true;\n                priceRatio = Math.Round(ListPrice_1 / MSRP * 100, 0, MidpointRounding.AwayFromZero);\n            }\n            if (ListPrice_2 > 0 && ListPrice_2 < ListPrice_1 && ListPrice_2 != MSRP)\n            {\n                discount_ListPrice_2 = true;\n                priceRatio = Math.Round(ListPrice_2 / MSRP * 100, 0, MidpointRounding.AwayFromZero);\n                this.member = (product.DisplaySkuAvailabilities[0].Availabilities[1].Properties.MerchandisingTags != null && product.DisplaySkuAvailabilities[0].Availabilities[1].Properties.MerchandisingTags.Length >= 1 && product.DisplaySkuAvailabilities[0].Availabilities[1].Properties.MerchandisingTags[0] == "LegacyDiscountEAAccess") ? "EA Play" : "\xe9\x87\x91\xe4\xbc\x9a\xe5\x91\x98";\n                dataGridView1.Columns["Col_ListPrice_2"].HeaderText = this.member + "\xe6\x8a\x98\xe6\x89\xa3";\n            }\n            if (WholesalePrice_1 > 0)\n            {\n                discount_WholesalePrice_1 = true;\n                discount_WholesalePrice_2 = WholesalePrice_2 > 0 && WholesalePrice_2 < WholesalePrice_1;\n            }\n            dataGridView1.Columns["Col_ListPrice_1"].Visible = discount_ListPrice_1;\n            dataGridView1.Columns["Col_ListPrice_2"].Visible = discount_ListPrice_2;\n            dataGridView1.Columns["Col_WholesalePrice_1"].Visible = discount_WholesalePrice_1;\n            dataGridView1.Columns["Col_WholesalePrice_2"].Visible = discount_WholesalePrice_2;\n\n            if (discount_ListPrice_1 || discount_ListPrice_2 || discount_WholesalePrice_2)\n                groupBox2.Text = product.LocalizedProperties[0].ProductTitle + " (\xe6\x8a\x98\xe6\x89\xa3: " + priceRatio + "%\xef\xbc\x8c\xe5\x89\xa9\xe4\xbd\x99\xef\xbc\x9a" + (new TimeSpan(product.DisplaySkuAvailabilities[0].Availabilities[0].Conditions.EndDate.Ticks - DateTime.Now.Ticks).Days) + "\xe5\xa4\xa9\xef\xbc\x8c\xe6\x89\x93\xe6\x8a\x98\xe6\x97\xb6\xe6\xae\xb5\xef\xbc\x9a" + product.DisplaySkuAvailabilities[0].Availabilities[0].Conditions.StartDate + " - " + product.DisplaySkuAvailabilities[0].Availabilities[0].Conditions.EndDate + ")";\n            else if (product.LocalizedProperties[0].EligibilityProperties != null && product.LocalizedProperties[0].EligibilityProperties.Affirmations.Length >= 1)\n            {\n                string description = product.LocalizedProperties[0].EligibilityProperties.Affirmations[0].Description;\n                if (description.Contains("EA Play"))\n                    groupBox2.Text = product.LocalizedProperties[0].ProductTitle + " (\xe4\xbd\xbf\xe7\x94\xa8\xe6\x82\xa8\xe7\x9a\x84 EA Play \xe4\xbc\x9a\xe5\x91\x98\xe8\xb5\x84\xe6\xa0\xbc\xef\xbc\x8c\xe6\xb8\xb8\xe6\x88\x8f\xe5\x8f\xaf\xe4\xba\xab\xe6\x9c\x80\xe9\xab\x989\xe6\x8a\x98\xe4\xbc\x98\xe6\x83\xa0)";\n                else if (description.Contains("Xbox Game Pass"))\n                    groupBox2.Text = product.LocalizedProperties[0].ProductTitle + " (\xe4\xbd\xbf\xe7\x94\xa8\xe6\x82\xa8\xe7\x9a\x84 Xbox Game Pass \xe4\xbc\x9a\xe5\x91\x98\xe8\xb5\x84\xe6\xa0\xbc\xef\xbc\x8c\xe6\xb8\xb8\xe6\x88\x8f\xe5\x8f\xaf\xe4\xba\xab\xe6\x9c\x80\xe9\xab\x988\xe6\x8a\x98\xe4\xbc\x98\xe6\x83\xa0\xef\xbc\x8c\xe9\x99\x84\xe5\x8a\xa0\xe5\x86\x85\xe5\xae\xb9\xe6\x9c\x80\xe9\xab\x989\xe6\x8a\x98\xe4\xbc\x98\xe6\x83\xa0)";\n                else\n                    groupBox2.Text = product.LocalizedProperties[0].ProductTitle + " (" + description + ")";\n            }\n            else\n                groupBox2.Text = product.LocalizedProperties[0].ProductTitle;\n        }\n\n        private void CheckBox_CheckedChanged(object? sender, EventArgs? e)\n        {\n            if (sender is CheckBox cb)\n            {\n                DataGridViewRow? dgvr = cb.Tag as DataGridViewRow;\n                if (cb.Checked)\n                    dataGridView1.Rows.Add(dgvr);\n                else\n                    dataGridView1.Rows.Remove(dgvr);\n                dataGridView1.ClearSelection();\n                groupBox1.Text = "\xe9\x80\x89\xe6\x8b\xa9\xe5\x95\x86\xe5\xba\x97 (" + dataGridView1.Rows.Count + ")";\n            }\n        }\n\n        private void DataGridView1_CellDoubleClick(object sender, DataGridViewCellEventArgs e)\n        {\n            if (e.ColumnIndex == -1 || e.RowIndex == -1) return;\n            if (dataGridView1.Columns[e.ColumnIndex].Name != "Col_Purchase") return;\n            DataGridViewRow dgvr = dataGridView1.Rows[e.RowIndex];\n            Process.Start(new ProcessStartInfo("https://www.microsoft.com/" + dgvr.Cells["Col_Lang"].Value + "/p/_/" + this.productId) { UseShellExecute = true });\n        }\n\n        private void DataGridView1_RowPostPaint(object sender, DataGridViewRowPostPaintEventArgs e)\n        {\n            DataGridView dgv = (DataGridView)sender;\n            Rectangle rectangle = new(e.RowBounds.Location.X, e.RowBounds.Location.Y, dgv.RowHeadersWidth - 1, e.RowBounds.Height);\n            TextRenderer.DrawText(e.Graphics, (e.RowIndex + 1).ToString(), dgv.RowHeadersDefaultCellStyle.Font, rectangle, dgv.RowHeadersDefaultCellStyle.ForeColor, TextFormatFlags.VerticalCenter | TextFormatFlags.Right);\n        }\n\n        private void LinkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)\n        {\n            foreach (Control control in flowLayoutPanel1.Controls)\n            {\n                if (control is CheckBox cb)\n                {\n                    cb.Checked = true;\n                }\n            }\n        }\n\n        private void LinkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)\n        {\n            foreach (Control control in flowLayoutPanel1.Controls)\n            {\n                if (control is CheckBox cb)\n                {\n                    cb.Checked = false;\n                }\n            }\n        }\n\n        private void Button1_Click(object sender, EventArgs e)\n        {\n            List<DataGridViewRow> list = new();\n            foreach (DataGridViewRow dgvr in dataGridView1.Rows)\n            {\n                if (!dgvr.Visible) continue;\n                list.Add(dgvr);\n            }\n            if (list.Count >= 1)\n            {\n                button1.Enabled = false;\n                ThreadPool.QueueUserWorkItem(delegate { Price(list); });\n            }\n        }\n\n        private void FormCompare_FormClosing(object sender, FormClosingEventArgs e)\n        {\n            cts?.Cancel();\n        }\n\n        CancellationTokenSource? cts = null;\n        private void Price(List<DataGridViewRow> list)\n        {\n            cts = new CancellationTokenSource();\n            Task[] tasks = new Task[list.Count];\n            for (int i = 0; i < list.Count; i++)\n            {\n                if (cts.IsCancellationRequested) break;\n                int index = i;\n                tasks[index] = new Task(() =>\n                {\n                    DataGridViewRow dgvr = list[index];\n                    if (dgvr.Tag == null)\n                    {\n                        string url = "https://displaycatalog.mp.microsoft.com/v7.0/products?bigIds=" + productId + "&market=" + dgvr.Cells["Col_Code"].Value + "&languages=neutral&MS-CV=DGU1mcuYo0WMMp+F.1";\n                        string html = ClassWeb.HttpResponseContent(url, "GET", null, null, null, 30000, null, cts.Token);\n                        if (Regex.IsMatch(html, @"^{.+}$", RegexOptions.Singleline))\n                        {\n                            var json = JsonSerializer.Deserialize<ClassGame.Game>(html, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });\n                            if (json != null && json.Products != null && json.Products.Count >= 1)\n                            {\n                                var product = json.Products[0];\n                                if (product.LocalizedProperties != null)\n                                {\n                                    string CurrencyCode = product.DisplaySkuAvailabilities[0].Availabilities[0].OrderManagementData.Price.CurrencyCode.ToUpperInvariant();\n                                    double MSRP = product.DisplaySkuAvailabilities[0].Availabilities[0].OrderManagementData.Price.MSRP;\n                                    double ListPrice_1 = product.DisplaySkuAvailabilities[0].Availabilities[0].OrderManagementData.Price.ListPrice;\n                                    double ListPrice_2 = product.DisplaySkuAvailabilities[0].Availabilities.Count >= 2 ? product.DisplaySkuAvailabilities[0].Availabilities[1].OrderManagementData.Price.ListPrice : 0;\n                                    double WholesalePrice_1 = product.DisplaySkuAvailabilities[0].Availabilities[0].OrderManagementData.Price.WholesalePrice;\n                                    double WholesalePrice_2 = product.DisplaySkuAvailabilities[0].Availabilities.Count >= 2 ? product.DisplaySkuAvailabilities[0].Availabilities[1].OrderManagementData.Price.WholesalePrice : 0;\n                                    if (ListPrice_1 > MSRP) MSRP = ListPrice_1;\n                                    if (!string.IsNullOrEmpty(CurrencyCode) && MSRP > 0 && CurrencyCode != "CNY" && !Form1.dicExchangeRate.ContainsKey(CurrencyCode))\n                                    {\n                                        ClassGame.ExchangeRate(CurrencyCode);\n                                    }\n                                    double ExchangeRate = Form1.dicExchangeRate.ContainsKey(CurrencyCode) ? Form1.dicExchangeRate[CurrencyCode] : 0;\n                                    dgvr.Tag = true;\n                                    if (MSRP > 0)\n                                    {\n                                        dgvr.Cells["Col_CurrencyCode"].Value = CurrencyCode;\n                                        dgvr.Cells["Col_MSRP"].Value = MSRP;\n                                        if (ListPrice_1 > 0 && ListPrice_1 != MSRP)\n                                        {\n                                            dgvr.Cells["Col_ListPrice_1"].Value = ListPrice_1;\n                                            discount_ListPrice_1 = true;\n                                        }\n                                        if (ListPrice_2 > 0 && ListPrice_2 < ListPrice_1 && ListPrice_2 != MSRP)\n                                        {\n                                            dgvr.Cells["Col_ListPrice_2"].Value = ListPrice_2;\n                                            discount_ListPrice_2 = true;\n                                            if (string.IsNullOrEmpty(this.member))\n                                                this.member = (product.DisplaySkuAvailabilities[0].Availabilities[1].Properties.MerchandisingTags != null && product.DisplaySkuAvailabilities[0].Availabilities[1].Properties.MerchandisingTags[0] == "LegacyDiscountEAAccess") ? "EA Play" : "\xe9\x87\x91\xe4\xbc\x9a\xe5\x91\x98";\n                                        }\n                                        if (WholesalePrice_1 > 0)\n                                        {\n                                            dgvr.Cells["Col_WholesalePrice_1"].Value = WholesalePrice_1;\n                                            discount_WholesalePrice_1 = true;\n                                            if (WholesalePrice_2 > 0 && WholesalePrice_2 < WholesalePrice_1)\n                                            {\n                                                dgvr.Cells["Col_WholesalePrice_2"].Value = WholesalePrice_2;\n                                                discount_WholesalePrice_2 = true;\n                                            }\n                                        }\n                                        if (ExchangeRate > 0)\n                                        {\n                                            if (ListPrice_2 > 0 && ListPrice_2 < ListPrice_1 && ListPrice_2 != MSRP)\n                                                dgvr.Cells["Col_CNY"].Value = ListPrice_2 * ExchangeRate;\n                                            else if (ListPrice_1 > 0 && ListPrice_1 != MSRP)\n                                                dgvr.Cells["Col_CNY"].Value = ListPrice_1 * ExchangeRate;\n                                            else\n                                                dgvr.Cells["Col_CNY"].Value = MSRP * ExchangeRate;\n                                            dgvr.Cells["Col_CNYExchangeRate"].Value = ExchangeRate;\n                                        }\n                                        else if (CurrencyCode == "CNY")\n                                        {\n                                            if (ListPrice_2 > 0 && ListPrice_2 < ListPrice_1 && ListPrice_2 != MSRP)\n                                                dgvr.Cells["Col_CNY"].Value = ListPrice_2;\n                                            else if (ListPrice_1 > 0 && ListPrice_1 != MSRP)\n                                                dgvr.Cells["Col_CNY"].Value = ListPrice_1;\n                                            else\n                                                dgvr.Cells["Col_CNY"].Value = MSRP;\n                                        }\n                                    }\n                                    else dgvr.Cells["Col_CurrencyCode"].Value = "\xe4\xb8\x8d\xe5\x8f\xaf\xe7\x94\xa8";\n                                }\n                            }\n                        }\n                    }\n                    else if (dgvr.Cells["Col_CNYExchangeRate"].Value == null && dgvr.Cells["Col_MSRP"].Value != null && dgvr.Cells["Col_CurrencyCode"].Value.ToString() != "CNY")\n                    {\n                        string CurrencyCode = dgvr.Cells["Col_CurrencyCode"].Value.ToString() ?? string.Empty;\n                        double MSRP = Convert.ToDouble(dgvr.Cells["Col_MSRP"].Value);\n                        if (MSRP > 0)\n                        {\n                            if (!string.IsNullOrEmpty(CurrencyCode) && MSRP > 0 && CurrencyCode != "CNY" && !Form1.dicExchangeRate.ContainsKey(CurrencyCode))\n                            {\n                                ClassGame.ExchangeRate(CurrencyCode);\n                            }\n                            double ExchangeRate = Form1.dicExchangeRate.ContainsKey(CurrencyCode) ? Form1.dicExchangeRate[CurrencyCode] : 0;\n                            if (ExchangeRate > 0)\n                            {\n                                double ListPrice_1 = Convert.ToDouble(dgvr.Cells["Col_ListPrice_1"].Value);\n                                double ListPrice_2 = Convert.ToDouble(dgvr.Cells["Col_ListPrice_2"].Value);\n                                if (ListPrice_2 > 0 && ListPrice_2 < ListPrice_1 && ListPrice_2 != MSRP)\n                                    dgvr.Cells["Col_CNY"].Value = ListPrice_2 * ExchangeRate;\n                                else if (ListPrice_1 > 0 && ListPrice_1 != MSRP)\n                                    dgvr.Cells["Col_CNY"].Value = ListPrice_1 * ExchangeRate;\n                                else\n                                    dgvr.Cells["Col_CNY"].Value = MSRP * ExchangeRate;\n                                dgvr.Cells["Col_CNYExchangeRate"].Value = ExchangeRate;\n                            }\n                        }\n                    }\n                }, cts.Token);\n                tasks[index].Start();\n            }\n            try\n            {\n                Task.WaitAll(tasks, cts.Token);\n            }\n            catch { };\n            if (cts.IsCancellationRequested) return;\n            this.Invoke(new Action(() =>\n            {\n                List<DataGridViewRow> lsDgvr = new();\n                for (int i = dataGridView1.Rows.Count - 1; i >= 0; i--)\n                {\n                    if (dataGridView1.Rows[i].Cells["Col_CNY"].Value == null)\n                    {\n                        lsDgvr.Add(dataGridView1.Rows[i]);\n                        dataGridView1.Rows.RemoveAt(i);\n                    }\n                }\n                dataGridView1.Sort(dataGridView1.Columns["Col_CNY"], ListSortDirection.Ascending);\n                if (lsDgvr.Count >= 1)\n                {\n                    lsDgvr.Reverse();\n                    dataGridView1.Rows.AddRange(lsDgvr.ToArray());\n                }\n                if (dataGridView1.Rows[0].Visible)\n                {\n                    dataGridView1.Rows[0].Cells["Col_Store"].Selected = true;\n                }\n                dataGridView1.Columns["Col_ListPrice_2"].HeaderText = this.member + "\xe6\x8a\x98\xe6\x89\xa3";\n                dataGridView1.Columns["Col_ListPrice_1"].Visible = discount_ListPrice_1;\n                dataGridView1.Columns["Col_ListPrice_2"].Visible = discount_ListPrice_2;\n                dataGridView1.Columns["Col_WholesalePrice_1"].Visible = discount_WholesalePrice_1;\n                dataGridView1.Columns["Col_WholesalePrice_2"].Visible = discount_WholesalePrice_2;\n                button1.Enabled = true;\n            }));\n            cts = null;\n        }\n    }\n}\n'