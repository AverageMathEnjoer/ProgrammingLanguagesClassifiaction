b'#include<iostream>\n#include<vector>\nusing namespace std;\ntemplate<class T> class matrix\n{\t\n\tpublic:\n\t\ttypedef T value_type;\n\tprivate:\n\t\tvector<vector<T> > M;\n\tpublic:\n\t\tmatrix(){}\n\t\t\n\t\tmatrix(int rSize,int cSize)\n\t\t{\n\t\t\tM.assign(rSize,vector<value_type>(cSize));\t\n\t\t}\n\t\tvoid assign(int rSize,int cSize)\n\t\t{\n\t\t\tM.assign(rSize,vector<value_type>(cSize));\t\n\t\t}\n\t\t\n\t\tvector<value_type>& operator[](int i)\n\t\t{\n\t\t\treturn M[i];\n\t\t}\n\t\t\n\t\tint rowSize() const\n\t\t{\n\t\t\treturn M.size();\n\t\t}\n\t\tint columnSize() const\n\t\t{\n\t\t\tif(M.size()==0)\n\t\t\t\treturn 0;\n\t\t\telse\n\t\t\t\treturn M[0].size();\n\t\t}\n\t\tmatrix<value_type> operator *(matrix<value_type> B) //assumes matricces are multiplicable\n\t\t{\n\t\t\tmatrix<value_type> &A=*this;\n\t\t\tmatrix<value_type> temp(A.rowSize(),B.columnSize());\n\t\t\t\n\t\t\tfor(int i=0;i<temp.rowSize();i++)\n\t\t\t\tfor(int j=0;j<temp.columnSize();j++)\n\t\t\t\t\tfor(int k=0;k<B.rowSize();k++)\n\t\t\t\t\t\ttemp[i][j]+=A[i][k]*B[k][j];\n\t\t\t\n\t\t\treturn temp;\n\t\t}\n\t\t\n\t\tmatrix<value_type> operator %(value_type MOD)\n\t\t{\n\t\t\tmatrix<value_type> temp(rowSize(),columnSize());\n\t\t\tfor(int i=0;i<rowSize();i++)\n\t\t\t\tfor(int j=0;j<columnSize();j++)\n\t\t\t\t\ttemp[i][j]=M[i][j]%MOD;\n\t\t\treturn temp;\n\t\t}\n\t\tvoid clear()\n\t\t{\n\t\t\tM.clear();\n\t\t}\n\t\t\n\t\tstatic matrix<value_type> identity(int i)\n\t\t{\n\t\t\tmatrix<value_type> X;\n\t\t\tX.assign(i,i);\n\t\t\tfor(int j=0;j<i;j++)\n\t\t\t\tX[j][j]=1;\t\n\t\t\treturn X;\n\t\t}\n};\ntemplate<class T> T p(T &n,long long m,int MOD)\n{\n    if(m==0) \n\t\treturn matrix<long long>::identity(n.rowSize());\n    \n    T x=p(n,m/2,MOD);\n    if(m%2==0) \n               return (x*x)%MOD;\n    else\n               return (((x*x)%MOD)*n)%MOD;\n}\ntemplate<class T> void printMatrix(matrix<T> X)\n{\n\tfor(int i=0;i<X.rowSize();i++)\n\t{\n\t\tfor(int j=0;j<X.columnSize();j++)\n\t\t\tcout<<X[i][j]<<" ";\n\t\tcout<<endl;\n\t}\n\tcout<<endl;\n}\nint main()\n{\n\tmatrix<long long> T(26,26);\n\tfor(int i=0;i<T.rowSize();i++)\n\t\tfor(int j=0;j<T.columnSize();j++)\n\t\t\tcin>>T[i][j];\n\t\n\tconst int MOD = 1000000007;\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tchar endChar;\n\t\tlong long length;\n\t\tcin>>endChar>>length;\n\t\tmatrix<long long> solutionMatrix = p(T,length-1, MOD);\n\t\tlong long solution = 0;\n\t\tfor(int i=0;i<solutionMatrix.columnSize();i++)\n\t\t\tsolution+=solutionMatrix[i][endChar-\'a\'];\n\t\tcout<<solution%MOD<<endl;\n\t}\n}\n'