b'{-# LANGUAGE OverloadedStrings #-}\n{-# OPTIONS_GHC -fno-warn-unused-imports#-}\nmodule Restexample.Client.Post where\nimport Rest.Client.Internal\nimport qualified Rest.Types.Void\nimport qualified Rest.Types.Container\nimport qualified Type.Post\nimport qualified Rest.Types.Error\nimport qualified Rest.StringMap.HashMap.Strict\nimport qualified Type.PostError\nimport qualified Type.UserPost\n\ndata Identifier = Id Int\n                | Latest\n\nreadId :: Identifier -> [String]\nreadId (Id x) = ["id", showUrl x]\nreadId Latest = ["latest"]\n\nlist ::\n       ApiStateC m =>\n       [(String, String)] ->\n         m (ApiResponse Rest.Types.Void.Void\n              (Rest.Types.Container.List (Type.Post.Post)))\nlist pList\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/plain")]\n        request = makeReq "GET" "v1.0.0" [["post"]] pList rHeaders ""\n      in doRequest fromJSON fromJSON request\n\nbyId ::\n       ApiStateC m =>\n       Int -> m (ApiResponse Rest.Types.Void.Void Type.Post.Post)\nbyId integer\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/plain")]\n        request\n          = makeReq "GET" "v1.0.0" [["post"], ["id"], [showUrl integer]] []\n              rHeaders\n              ""\n      in doRequest fromJSON fromJSON request\n\nremoveManyId ::\n               ApiStateC m =>\n               Rest.StringMap.HashMap.Strict.StringHashMap ([(Char)]) (()) ->\n                 m (ApiResponse (Rest.Types.Error.Reason (Rest.Types.Void.Void))\n                      (Rest.StringMap.HashMap.Strict.StringHashMap ([(Char)])\n                         (Rest.Types.Error.Status\n                            (Rest.Types.Error.Reason (Rest.Types.Void.Void))\n                            (()))))\nremoveManyId input\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/json")]\n        request\n          = makeReq "DELETE" "v1.0.0" [["post"], ["id"]] [] rHeaders\n              (toJSON input)\n      in doRequest fromJSON fromJSON request\n\nlatest ::\n         ApiStateC m => m (ApiResponse Rest.Types.Void.Void Type.Post.Post)\nlatest\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/plain")]\n        request\n          = makeReq "GET" "v1.0.0" [["post"], ["latest"]] [] rHeaders ""\n      in doRequest fromJSON fromJSON request\n\ncreate ::\n         ApiStateC m =>\n         Type.UserPost.UserPost ->\n           m (ApiResponse Type.PostError.PostError Type.Post.Post)\ncreate input\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/json")]\n        request\n          = makeReq "POST" "v1.0.0" [["post"]] [] rHeaders (toJSON input)\n      in doRequest fromJSON fromJSON request\n\nremove ::\n         ApiStateC m =>\n         Identifier -> m (ApiResponse Rest.Types.Void.Void ())\nremove post\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/plain")]\n        request\n          = makeReq "DELETE" "v1.0.0" [["post"], readId post] [] rHeaders ""\n      in doRequest fromJSON (const ()) request\n'