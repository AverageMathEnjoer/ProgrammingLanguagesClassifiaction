b'context("Tests fastLink() wrapper.")\n\ndata(samplematch)\nset.seed(738969) ## From random.org, 2018/04/16\n\n## ---------\n## Run tests\n## ---------\ntest_that("fastLink() gives correct results on sample data.", {\n\n    ## Run match\n    fl_out <- fastLink(\n        dfA = dfA, dfB = dfB,\n        varnames = c("firstname", "middlename", "lastname", "housenum",\n                     "streetname", "city", "birthyear"),\n        return.all = TRUE, n.cores = 1\n    )\n\n    ## Test class\n    expect_is(fl_out, "fastLink", label = "Test class is fastLink.")\n    expect_is(fl_out, "confusionTable", label = "Test class is confusionTable.")\n\n    ## Confusion table\n    ct_out <- confusion(fl_out)\n    \n    ## Test output\n    expect_equivalent(\n        as.vector(round(ct_out$confusion.table, 2)),\n        round(c(50.0, 0.3, 0.0, 299.7), 2),\n        label = "We get the right baseline results from fastLink()."\n    )\n\n})\n\ntest_that("fastLink() throws errors when we expect it to.", {\n\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname", "not_in_df")\n        ), label = "Variable provided not in data frame."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname"),\n            stringdist.match = "middlename"\n        ), label = "Variable for stringdist.match not in varnames."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname"),\n            numeric.match = "birthyear"\n        ), label = "Variable for numeric.match not in varnames."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname", "birthyear"),\n            stringdist.match = "birthyear",\n            numeric.match = "birthyear"\n        ), label = "Variable provided for both stringdist.match and numeric.match."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "middlename", "lastname"),\n            partial.match = "middlename"\n        ), label = "Variable in partial.match but not in either stringdist.match or numeric.match"\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname"),\n            address.field = "street_name"\n        ), label = "Variable in address.field not present in data frame or varnames."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname"),\n            address.field = c("streetname", "city")\n        ), label = "Multiple variables provided for address.field."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname"),\n            gender.field = "male"\n        ), label = "Variable in gender.field not in data frame."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname"),\n            gender.field = c("female", "male")\n        ), label = "Multiple variables provided for gender.field."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname"),\n            reweight.names = TRUE\n        ), label = "No argument provided for firstname.field when reweight.names = TRUE."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("middlename", "lastname"),\n            firstname.field = "firstname", reweight.names = TRUE\n        ), label = "Argument for firstname.field not present in varnames."\n    )\n    expect_error(\n        fastLink(\n            dfA = dfA, dfB = dfB,\n            varnames = c("firstname", "lastname"),\n            stringdist.match = "firstname",\n            stringdist.method = "jaro-winkler"\n        ), label = "Invalid string distance method provided."\n    )\n\n})\n\n'