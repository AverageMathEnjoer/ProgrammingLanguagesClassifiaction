b'package com.codeest.geeknews.base;\r\n\r\nimport android.support.v7.app.AppCompatDelegate;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.codeest.geeknews.app.App;\r\nimport com.codeest.geeknews.di.component.ActivityComponent;\r\nimport com.codeest.geeknews.di.component.DaggerActivityComponent;\r\nimport com.codeest.geeknews.di.module.ActivityModule;\r\nimport com.codeest.geeknews.util.SnackbarUtil;\r\n\r\nimport javax.inject.Inject;\r\n\r\n/**\r\n * Created by codeest on 2016/8/2.\r\n * MVP activity\xe5\x9f\xba\xe7\xb1\xbb\r\n */\r\npublic abstract class BaseActivity<T extends BasePresenter> extends SimpleActivity implements BaseView {\r\n\r\n    @Inject\r\n    protected T mPresenter;\r\n\r\n    protected ActivityComponent getActivityComponent(){\r\n        return  DaggerActivityComponent.builder()\r\n                .appComponent(App.getAppComponent())\r\n                .activityModule(getActivityModule())\r\n                .build();\r\n    }\r\n\r\n    protected ActivityModule getActivityModule(){\r\n        return new ActivityModule(this);\r\n    }\r\n\r\n    @Override\r\n    protected void onViewCreated() {\r\n        super.onViewCreated();\r\n        initInject();\r\n        if (mPresenter != null)\r\n            mPresenter.attachView(this);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        if (mPresenter != null)\r\n            mPresenter.detachView();\r\n        super.onDestroy();\r\n    }\r\n\r\n    @Override\r\n    public void showErrorMsg(String msg) {\r\n        SnackbarUtil.show(((ViewGroup) findViewById(android.R.id.content)).getChildAt(0), msg);\r\n    }\r\n\r\n    @Override\r\n    public void useNightMode(boolean isNight) {\r\n        if (isNight) {\r\n            AppCompatDelegate.setDefaultNightMode(\r\n                    AppCompatDelegate.MODE_NIGHT_YES);\r\n        } else {\r\n            AppCompatDelegate.setDefaultNightMode(\r\n                    AppCompatDelegate.MODE_NIGHT_NO);\r\n        }\r\n        recreate();\r\n    }\r\n\r\n    @Override\r\n    public void stateError() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void stateEmpty() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void stateLoading() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void stateMain() {\r\n\r\n    }\r\n\r\n    protected abstract void initInject();\r\n}'