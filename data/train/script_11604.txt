b'package com.codeest.geeknews.model.http;\r\n\r\nimport com.codeest.geeknews.app.Constants;\r\nimport com.codeest.geeknews.model.bean.CommentBean;\r\nimport com.codeest.geeknews.model.bean.DailyBeforeListBean;\r\nimport com.codeest.geeknews.model.bean.DailyListBean;\r\nimport com.codeest.geeknews.model.bean.DetailExtraBean;\r\nimport com.codeest.geeknews.model.bean.GankItemBean;\r\nimport com.codeest.geeknews.model.bean.GankSearchItemBean;\r\nimport com.codeest.geeknews.model.bean.GoldListBean;\r\nimport com.codeest.geeknews.model.bean.HotListBean;\r\nimport com.codeest.geeknews.model.bean.NodeBean;\r\nimport com.codeest.geeknews.model.bean.NodeListBean;\r\nimport com.codeest.geeknews.model.bean.RepliesListBean;\r\nimport com.codeest.geeknews.model.bean.SectionChildListBean;\r\nimport com.codeest.geeknews.model.bean.SectionListBean;\r\nimport com.codeest.geeknews.model.bean.ThemeChildListBean;\r\nimport com.codeest.geeknews.model.bean.ThemeListBean;\r\nimport com.codeest.geeknews.model.bean.VersionBean;\r\nimport com.codeest.geeknews.model.bean.WXItemBean;\r\nimport com.codeest.geeknews.model.bean.WelcomeBean;\r\nimport com.codeest.geeknews.model.bean.ZhihuDetailBean;\r\nimport com.codeest.geeknews.model.http.api.GankApis;\r\nimport com.codeest.geeknews.model.http.api.GoldApis;\r\nimport com.codeest.geeknews.model.http.api.MyApis;\r\nimport com.codeest.geeknews.model.http.api.VtexApis;\r\nimport com.codeest.geeknews.model.http.api.WeChatApis;\r\nimport com.codeest.geeknews.model.http.api.ZhihuApis;\r\nimport com.codeest.geeknews.model.http.response.GankHttpResponse;\r\nimport com.codeest.geeknews.model.http.response.GoldHttpResponse;\r\nimport com.codeest.geeknews.model.http.response.MyHttpResponse;\r\nimport com.codeest.geeknews.model.http.response.WXHttpResponse;\r\n\r\nimport java.util.List;\r\n\r\nimport javax.inject.Inject;\r\n\r\nimport io.reactivex.Flowable;\r\n\r\n/**\r\n * Created by codeest on 2016/8/3.\r\n */\r\npublic class RetrofitHelper implements HttpHelper {\r\n\r\n    private ZhihuApis mZhihuApiService;\r\n    private GankApis mGankApiService;\r\n    private WeChatApis mWechatApiService;\r\n    private MyApis mMyApiService;\r\n    private GoldApis mGoldApiService;\r\n    private VtexApis mVtexApiService;\r\n\r\n    @Inject\r\n    public RetrofitHelper(ZhihuApis zhihuApiService, GankApis gankApiService, WeChatApis wechatApiService,\r\n                          MyApis myApiService, GoldApis goldApiService, VtexApis vtexApiService) {\r\n        this.mZhihuApiService = zhihuApiService;\r\n        this.mGankApiService = gankApiService;\r\n        this.mWechatApiService = wechatApiService;\r\n        this.mMyApiService = myApiService;\r\n        this.mGoldApiService = goldApiService;\r\n        this.mVtexApiService = vtexApiService;\r\n    }\r\n\r\n    @Override\r\n    public Flowable<DailyListBean> fetchDailyListInfo() {\r\n        return mZhihuApiService.getDailyList();\r\n    }\r\n\r\n    @Override\r\n    public Flowable<DailyBeforeListBean> fetchDailyBeforeListInfo(String date) {\r\n        return mZhihuApiService.getDailyBeforeList(date);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<ThemeListBean> fetchDailyThemeListInfo() {\r\n        return mZhihuApiService.getThemeList();\r\n    }\r\n\r\n    @Override\r\n    public Flowable<ThemeChildListBean> fetchThemeChildListInfo(int id) {\r\n        return mZhihuApiService.getThemeChildList(id);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<SectionListBean> fetchSectionListInfo() {\r\n        return mZhihuApiService.getSectionList();\r\n    }\r\n\r\n    @Override\r\n    public Flowable<SectionChildListBean> fetchSectionChildListInfo(int id) {\r\n        return mZhihuApiService.getSectionChildList(id);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<ZhihuDetailBean> fetchDetailInfo(int id) {\r\n        return mZhihuApiService.getDetailInfo(id);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<DetailExtraBean> fetchDetailExtraInfo(int id) {\r\n        return mZhihuApiService.getDetailExtraInfo(id);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<WelcomeBean> fetchWelcomeInfo(String res) {\r\n        return mZhihuApiService.getWelcomeInfo(res);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<CommentBean> fetchLongCommentInfo(int id) {\r\n        return mZhihuApiService.getLongCommentInfo(id);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<CommentBean> fetchShortCommentInfo(int id) {\r\n        return mZhihuApiService.getShortCommentInfo(id);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<HotListBean> fetchHotListInfo() {\r\n        return mZhihuApiService.getHotList();\r\n    }\r\n\r\n    @Override\r\n    public Flowable<GankHttpResponse<List<GankItemBean>>> fetchTechList(String tech, int num, int page) {\r\n        return mGankApiService.getTechList(tech, num, page);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<GankHttpResponse<List<GankItemBean>>> fetchGirlList(int num, int page) {\r\n        return mGankApiService.getGirlList(num, page);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<GankHttpResponse<List<GankItemBean>>> fetchRandomGirl(int num) {\r\n        return mGankApiService.getRandomGirl(num);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<GankHttpResponse<List<GankSearchItemBean>>> fetchGankSearchList(String query,String type,int num,int page) {\r\n        return mGankApiService.getSearchList(query,type,num,page);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<WXHttpResponse<List<WXItemBean>>> fetchWechatListInfo(int num, int page) {\r\n        return mWechatApiService.getWXHot(Constants.KEY_API, num, page);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<WXHttpResponse<List<WXItemBean>>> fetchWechatSearchListInfo(int num, int page, String word) {\r\n        return mWechatApiService.getWXHotSearch(Constants.KEY_API, num, page, word);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<MyHttpResponse<VersionBean>> fetchVersionInfo() {\r\n        return mMyApiService.getVersionInfo();\r\n    }\r\n\r\n    @Override\r\n    public Flowable<GoldHttpResponse<List<GoldListBean>>> fetchGoldList(String type, int num, int page) {\r\n        return mGoldApiService.getGoldList(Constants.LEANCLOUD_ID, Constants.LEANCLOUD_SIGN,\r\n                "{\\"category\\":\\"" + type + "\\"}", "-createdAt", "user,user.installation", num, page * num);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<GoldHttpResponse<List<GoldListBean>>> fetchGoldHotList(String type, String dataTime, int limit) {\r\n        return mGoldApiService.getGoldHot(Constants.LEANCLOUD_ID, Constants.LEANCLOUD_SIGN,\r\n                "{\\"category\\":\\"" + type + "\\",\\"createdAt\\":{\\"$gt\\":{\\"__type\\":\\"Date\\",\\"iso\\":\\"" + dataTime + "T00:00:00.000Z\\"}},\\"objectId\\":{\\"$nin\\":[\\"58362f160ce463005890753e\\",\\"583659fcc59e0d005775cc8c\\",\\"5836b7358ac2470065d3df62\\"]}}",\r\n                "-hotIndex", "user,user.installation", limit);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<NodeBean> fetchNodeInfo(String name) {\r\n        return mVtexApiService.getNodeInfo(name);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<List<NodeListBean>> fetchTopicList(String name) {\r\n        return mVtexApiService.getTopicList(name);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<List<NodeListBean>> fetchTopicInfo(String id) {\r\n        return mVtexApiService.getTopicInfo(id);\r\n    }\r\n\r\n    @Override\r\n    public Flowable<List<RepliesListBean>> fetchRepliesList(String id){\r\n        return mVtexApiService.getRepliesList(id);\r\n    }\r\n}\r\n'