b'package effectivejava.chapter3.item12;\n\n// Adding a toString method to PhoneNumber (page 52)\npublic final class PhoneNumber {\n    private final short areaCode, prefix, lineNum;\n\n    public PhoneNumber(int areaCode, int prefix, int lineNum) {\n        this.areaCode = rangeCheck(areaCode, 999, "area code");\n        this.prefix   = rangeCheck(prefix,   999, "prefix");\n        this.lineNum  = rangeCheck(lineNum, 9999, "line num");\n    }\n\n    private static short rangeCheck(int val, int max, String arg) {\n        if (val < 0 || val > max)\n            throw new IllegalArgumentException(arg + ": " + val);\n        return (short) val;\n    }\n\n    @Override public boolean equals(Object o) {\n        if (o == this)\n            return true;\n        if (!(o instanceof effectivejava.chapter3.item11.PhoneNumber))\n            return false;\n        PhoneNumber pn = (PhoneNumber)o;\n        return pn.lineNum == lineNum && pn.prefix == prefix\n                && pn.areaCode == areaCode;\n    }\n\n    @Override public int hashCode() {\n        int result = Short.hashCode(areaCode);\n        result = 31 * result + Short.hashCode(prefix);\n        result = 31 * result + Short.hashCode(lineNum);\n        return result;\n    }\n\n    /**\n     * Returns the string representation of this phone number.\n     * The string consists of twelve characters whose format is\n     * "XXX-YYY-ZZZZ", where XXX is the area code, YYY is the\n     * prefix, and ZZZZ is the line number. Each of the capital\n     * letters represents a single decimal digit.\n     *\n     * If any of the three parts of this phone number is too small\n     * to fill up its field, the field is padded with leading zeros.\n     * For example, if the value of the line number is 123, the last\n     * four characters of the string representation will be "0123".\n     */\n//    @Override public String toString() {\n//        return String.format("%03d-%03d-%04d",\n//                areaCode, prefix, lineNum);\n//    }\n\n    public static void main(String[] args) {\n        PhoneNumber jenny = new PhoneNumber(707, 867, 5309);\n        System.out.println("Jenny\'s number: " + jenny);\n    }\n}\n'