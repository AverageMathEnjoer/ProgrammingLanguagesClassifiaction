b'package com.rd.draw.controller;\n\nimport androidx.annotation.NonNull;\nimport android.util.Pair;\nimport android.view.View;\nimport com.rd.animation.type.AnimationType;\nimport com.rd.draw.data.Indicator;\nimport com.rd.draw.data.Orientation;\n\npublic class MeasureController {\n\n    public Pair<Integer, Integer> measureViewSize(@NonNull Indicator indicator, int widthMeasureSpec, int heightMeasureSpec) {\n        int widthMode = View.MeasureSpec.getMode(widthMeasureSpec);\n        int widthSize = View.MeasureSpec.getSize(widthMeasureSpec);\n\n        int heightMode = View.MeasureSpec.getMode(heightMeasureSpec);\n        int heightSize = View.MeasureSpec.getSize(heightMeasureSpec);\n\n        int count = indicator.getCount();\n        int radius = indicator.getRadius();\n        int stroke = indicator.getStroke();\n\n        int padding = indicator.getPadding();\n        int paddingLeft = indicator.getPaddingLeft();\n        int paddingTop = indicator.getPaddingTop();\n        int paddingRight = indicator.getPaddingRight();\n        int paddingBottom = indicator.getPaddingBottom();\n\n        int circleDiameterPx = radius * 2;\n        int desiredWidth = 0;\n        int desiredHeight = 0;\n\n        int width;\n        int height;\n\n        Orientation orientation = indicator.getOrientation();\n        if (count != 0) {\n            int diameterSum = circleDiameterPx * count;\n            int strokeSum = (stroke * 2) * count;\n\n            int paddingSum = padding * (count - 1);\n            int w = diameterSum + strokeSum + paddingSum;\n            int h = circleDiameterPx + stroke;\n\n            if (orientation == Orientation.HORIZONTAL) {\n                desiredWidth = w;\n                desiredHeight = h;\n\n            } else {\n                desiredWidth = h;\n                desiredHeight = w;\n            }\n        }\n\n        if (indicator.getAnimationType() == AnimationType.DROP) {\n            if (orientation == Orientation.HORIZONTAL) {\n                desiredHeight *= 2;\n            } else {\n                desiredWidth *= 2;\n            }\n        }\n\n        int horizontalPadding = paddingLeft + paddingRight;\n        int verticalPadding = paddingTop + paddingBottom;\n\n        if (orientation == Orientation.HORIZONTAL) {\n            desiredWidth += horizontalPadding;\n            desiredHeight += verticalPadding;\n\n        } else {\n            desiredWidth += horizontalPadding;\n            desiredHeight += verticalPadding;\n        }\n\n        if (widthMode == View.MeasureSpec.EXACTLY) {\n            width = widthSize;\n        } else if (widthMode == View.MeasureSpec.AT_MOST) {\n            width = Math.min(desiredWidth, widthSize);\n        } else {\n            width = desiredWidth;\n        }\n\n        if (heightMode == View.MeasureSpec.EXACTLY) {\n            height = heightSize;\n        } else if (heightMode == View.MeasureSpec.AT_MOST) {\n            height = Math.min(desiredHeight, heightSize);\n        } else {\n            height = desiredHeight;\n        }\n\n        if (width < 0) {\n            width = 0;\n        }\n\n        if (height < 0) {\n            height = 0;\n        }\n\n        indicator.setWidth(width);\n        indicator.setHeight(height);\n\n        return new Pair<>(width, height);\n    }\n}\n'