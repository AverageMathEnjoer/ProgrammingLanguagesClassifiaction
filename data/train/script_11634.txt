b'package com.naman14.timber.lastfmapi.models;\n\nimport com.google.gson.annotations.SerializedName;\nimport com.naman14.timber.lastfmapi.LastFmClient;\n\nimport java.io.UnsupportedEncodingException;\nimport java.net.URLDecoder;\nimport java.net.URLEncoder;\n\n/**\n * Created by christoph on 17.07.16.\n */\npublic class ScrobbleQuery {\n    private static final String ARTIST_NAME = "artist";\n    private static final String TRACK_NAME = "track";\n    private static final String TIMESTAMP_NAME = "timestamp";\n\n    @SerializedName(ARTIST_NAME)\n    public String mArtist;\n\n    @SerializedName(TRACK_NAME)\n    public String mTrack;\n\n    @SerializedName(TIMESTAMP_NAME)\n    public long mTimestamp;\n\n    public static final String Method = "track.scrobble";\n\n    public ScrobbleQuery(String in) {\n        String[] arr = in.split(",");\n        try {\n            this.mArtist = URLDecoder.decode(arr[0],"UTF-8");\n            this.mTrack = URLDecoder.decode(arr[1],"UTF-8");\n            this.mTimestamp = Long.parseLong(arr[2],16);\n        } catch (UnsupportedEncodingException ignored) { }\n    }\n\n    public ScrobbleQuery(String artist, String track, long timestamp) {\n        this.mArtist = artist;\n        this.mTrack = track;\n        this.mTimestamp = timestamp;\n    }\n\n    @Override\n    public String toString(){\n        try {\n            return URLEncoder.encode(mArtist,"UTF-8")+\',\'+URLEncoder.encode(mTrack,"UTF-8")+\',\'+Long.toHexString(mTimestamp);\n        } catch (UnsupportedEncodingException ignored) {\n            return "";\n        }\n    }\n}\n'