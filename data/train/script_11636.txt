b'#load "Domain.fs"\n#load "Operations.fs"\n\nopen Capstone4.Operations\nopen Capstone4.Domain\nopen System\n\ntype CreditAccount = CreditAccount of Account\n\ntype RatedAccount =\n    | Credit of CreditAccount\n    | Overdrawn of Account\n\nlet rateAccount account =\n    if account.Balance < 0M then Overdrawn account\n    else Credit(CreditAccount account)\n\nlet withdraw amount (CreditAccount account) =\n    { account with Balance = account.Balance - amount }\n    |> rateAccount\n\nlet deposit amount account =\n    let account =\n        match account with\n        | Credit (CreditAccount account) -> account\n        | Overdrawn account -> account\n    { account with Balance = account.Balance + amount }\n    |> rateAccount\n\nlet myAccount = { Balance = 0M; Owner = { Name = "Isaac" }; AccountId = Guid.NewGuid() } |> rateAccount\n\nmyAccount\n|> deposit 50M\n|> deposit 100M\n//|> withdraw 500M <- does not compile :)\n\nlet withdrawSafe amount ratedAccount =\n    match ratedAccount with\n    | Credit account -> account |> withdraw amount\n    | Overdrawn _ ->\n        printfn "Your account is overdrawn - withdrawal rejected!"\n        ratedAccount\n\nmyAccount\n|> deposit 50M\n|> deposit 100M\n|> withdrawSafe 500M\n|> withdrawSafe 500M\n'