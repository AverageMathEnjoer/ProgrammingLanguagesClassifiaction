b'package com.github.eprendre.sources_by_eprendre\n\nimport com.github.eprendre.tingshu.extensions.config\nimport com.github.eprendre.tingshu.sources.AudioUrlExtractor\nimport com.github.eprendre.tingshu.sources.AudioUrlWebViewExtractor\nimport com.github.eprendre.tingshu.sources.TingShu\nimport com.github.eprendre.tingshu.utils.*\nimport org.jsoup.Jsoup\n\n/**\n * \xe8\xbf\x99\xe4\xb8\xaa\xe7\xbd\x91\xe7\xab\x99\xe7\xbb\x93\xe6\x9e\x84\xe5\x92\x8c\xe4\xb8\x80\xe8\x88\xac\xe5\x90\xac\xe4\xb9\xa6\xe7\xab\x99\xe4\xb8\x8d\xe4\xb8\x80\xe6\xa0\xb7\xef\xbc\x8c\xe6\x89\x80\xe4\xbb\xa5\xe9\x80\x9a\xe8\xbf\x87\xe5\x8f\x96\xe5\xb7\xa7\xe7\x9a\x84\xe6\x96\xb9\xe5\xbc\x8f\xe6\x8a\x8a\xe5\x88\x86\xe7\xb1\xbb\xe5\x81\x9a\xe6\x88\x90\xe4\xb9\xa6\xe7\xb1\x8d\xe3\x80\x82\n */\nobject JDLG : TingShu() {\n    override fun getSourceId(): String {\n        return "af69db7d4f284caabbeb51a30e05017e"\n    }\n\n    override fun getUrl(): String {\n        return "http://www.jdlg.net/"\n    }\n\n    override fun getName(): String {\n        return "\xe7\xbb\x8f\xe5\x85\xb8\xe8\x80\x81\xe6\xad\x8c"\n    }\n\n    override fun getDesc(): String {\n        return "\xe6\x8e\xa8\xe8\x8d\x90\xe6\x8c\x87\xe6\x95\xb0:3\xe6\x98\x9f \xe2\xad\x90\xe2\xad\x90\xe2\xad\x90\\n\xe6\x89\x93\xe5\xbc\x80\xe8\xbe\x83\xe6\x85\xa2"\n    }\n\n    /**\n     * \xe4\xb8\x8d\xe5\x81\x9a\xe6\x90\x9c\xe7\xb4\xa2\n     */\n    override fun isSearchable(): Boolean {\n        return false\n    }\n\n    /**\n     * \xe6\x90\x9c\xe7\xb4\xa2\xe8\xbf\x94\xe5\x9b\x9e\xe7\xa9\xba\n     */\n    override fun search(keywords: String, page: Int): Pair<List<Book>, Int> {\n        return Pair(emptyList(), 1)\n    }\n\n    override fun getAudioUrlExtractor(): AudioUrlExtractor {\n        AudioUrlWebViewExtractor.setUp(isDeskTop = true) { html ->\n            val doc = Jsoup.parse(html)\n            return@setUp doc.selectFirst("#jp_audio_0")?.attr("src")\n        }\n        return AudioUrlWebViewExtractor\n    }\n\n    override fun getCategoryMenus(): List<CategoryMenu> {\n        val menu1 = CategoryMenu("\xe5\x88\x86\xe7\xb1\xbb", listOf(\n            CategoryTab("\xe8\x80\x81\xe6\xad\x8c\xe5\x88\x86\xe7\xb1\xbb", "0"),\n            CategoryTab("\xe8\x80\x81\xe6\xad\x8c\xe6\x8e\x92\xe8\xa1\x8c", "1")\n        ))\n        return listOf(menu1)\n    }\n\n    override fun getCategoryList(url: String): Category {\n        val type = url.toInt()\n        val doc = Jsoup.connect("http://www.jdlg.net/jingdianlaoge500shou/").config(true).get()\n        val divs = doc.select("#tipcontent > div > div")\n\n        val list = ArrayList<Book>()\n        divs[type].select("ul > li > a").forEach {\n            val book = Book("", it.absUrl("href"), it.text(), "", "")\n            book.sourceId = getSourceId()\n            list.add(book)\n        }\n        return Category(list, 1, 1, url, "")\n    }\n\n    override fun getBookDetailInfo(bookUrl: String, loadEpisodes: Boolean, loadFullPages: Boolean): BookDetail {\n        val doc = Jsoup.connect(bookUrl).config(true).get()\n        val episodes = doc.select("div.rankBox > ol > li, div.songList > ol > li")\n            .map {\n                val a = it.selectFirst(".singer_title > a, .songName")\n                var artist = it.selectFirst(".songer > a")?.text()\n                if (artist == null) {\n                    artist = it.selectFirst("a:last-child")?.text()\n                    if (artist == "\xe5\x8a\xa0\xe5\x85\xa5\xe5\x88\x97\xe8\xa1\xa8") {\n                        artist = null\n                    }\n                }\n                var title = a.text()\n                if (artist != null) {\n                    title += " - $artist"\n                }\n                Episode(title, a.absUrl("href"))\n            }\n        return BookDetail(episodes)\n    }\n}'