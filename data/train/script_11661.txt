b'type Expression = [Term]\ntype Term = [Factor] \ntype Factor = [Digit] \ntype Digit = Int\n\ndigits :: Factor\ndigits = [1 .. 9]\n\npi_digits :: Factor\npi_digits = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8, 9, 7]\n\ngood c (_, f, t, e)  = (f * t + e ==c)\nok c (_, f, t, e)    = (f * t + e <= c)\n\nmodify x (k, f, t, e) = [(10 * k, k * x + f, t, e), (10, x, f * t, e), (10, x, 1, f * t + e)]\n\nsolutions :: Int -> [Digit] -> [Expression]\nsolutions c = map fst . filter (good c . snd) . foldr (expand c) []\n\nexpand c x [] = [([[[x]]], (10, x, 1, 0))]\nexpand c x evs = concat (map (filter (ok c . snd) . glue x) evs)\n\nglue x ((xs : xss) : xsss, (k, f, t, e)) =\n    [(((x : xs) : xss) : xsss, (10*k, k*x + f, t, e)),\n    (([x] : xs : xss) : xsss, (10, x, f * t, e)),\n    ([[x]] : (xs : xss) : xsss, (10, x, 1, f * t + e))]\n\nmain = putStrLn $ "Number of solutions found: " ++ (show $ length $ solutions 1000 pi_digits)\n'