b'package com.codeest.geeknews.presenter.zhihu;\n\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.base.RxPresenter;\nimport com.codeest.geeknews.model.DataManager;\nimport com.codeest.geeknews.model.bean.DetailExtraBean;\nimport com.codeest.geeknews.model.bean.RealmLikeBean;\nimport com.codeest.geeknews.model.bean.ZhihuDetailBean;\nimport com.codeest.geeknews.base.contract.zhihu.ZhihuDetailContract;\nimport com.codeest.geeknews.util.RxUtil;\nimport com.codeest.geeknews.widget.CommonSubscriber;\n\nimport javax.inject.Inject;\n\n/**\n * Created by codeest on 16/8/13.\n */\n\npublic class ZhihuDetailPresenter extends RxPresenter<ZhihuDetailContract.View> implements ZhihuDetailContract.Presenter{\n\n    private DataManager mDataManager;\n    private ZhihuDetailBean mData;\n\n    @Inject\n    public ZhihuDetailPresenter(DataManager mDataManager) {\n        this.mDataManager = mDataManager;\n    }\n\n    @Override\n    public void getDetailData(int id) {\n        addSubscribe(mDataManager.fetchDetailInfo(id)\n                .compose(RxUtil.<ZhihuDetailBean>rxSchedulerHelper())\n                .subscribeWith(new CommonSubscriber<ZhihuDetailBean>(mView) {\n                    @Override\n                    public void onNext(ZhihuDetailBean zhihuDetailBean) {\n                        mData = zhihuDetailBean;\n                        mView.showContent(zhihuDetailBean);\n                    }\n                })\n        );\n    }\n\n    @Override\n    public void getExtraData(int id) {\n        addSubscribe(mDataManager.fetchDetailExtraInfo(id)\n                .compose(RxUtil.<DetailExtraBean>rxSchedulerHelper())\n                .subscribeWith(new CommonSubscriber<DetailExtraBean>(mView, "\xe5\x8a\xa0\xe8\xbd\xbd\xe9\xa2\x9d\xe5\xa4\x96\xe4\xbf\xa1\xe6\x81\xaf\xe5\xa4\xb1\xe8\xb4\xa5\xe3\x83\xbd(\xe2\x89\xa7\xd0\x94\xe2\x89\xa6)\xe3\x83\x8e") {\n                    @Override\n                    public void onNext(DetailExtraBean detailExtraBean) {\n                        mView.showExtraInfo(detailExtraBean);\n                    }\n                })\n        );\n    }\n\n    @Override\n    public void insertLikeData() {\n        if (mData != null) {\n            RealmLikeBean bean = new RealmLikeBean();\n            bean.setId(String.valueOf(mData.getId()));\n            bean.setImage(mData.getImage());\n            bean.setTitle(mData.getTitle());\n            bean.setType(Constants.TYPE_ZHIHU);\n            bean.setTime(System.currentTimeMillis());\n            mDataManager.insertLikeBean(bean);\n        } else {\n            mView.showErrorMsg("\xe6\x93\x8d\xe4\xbd\x9c\xe5\xa4\xb1\xe8\xb4\xa5");\n        }\n    }\n\n    @Override\n    public void deleteLikeData() {\n        if (mData != null) {\n            mDataManager.deleteLikeBean(String.valueOf(mData.getId()));\n        } else {\n            mView.showErrorMsg("\xe6\x93\x8d\xe4\xbd\x9c\xe5\xa4\xb1\xe8\xb4\xa5");\n        }\n    }\n\n    @Override\n    public void queryLikeData(int id) {\n        mView.setLikeButtonState(mDataManager.queryLikeId(String.valueOf(id)));\n    }\n\n    @Override\n    public boolean getNoImageState() {\n        return mDataManager.getNoImageState();\n    }\n\n    @Override\n    public boolean getAutoCacheState() {\n        return mDataManager.getAutoCacheState();\n    }\n}\n'