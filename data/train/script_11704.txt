b'package io.github.javiewer.adapter;\n\nimport android.app.Activity;\nimport androidx.recyclerview.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport com.bumptech.glide.Glide;\n\nimport java.util.List;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport io.github.javiewer.R;\nimport io.github.javiewer.adapter.item.Actress;\nimport io.github.javiewer.view.SquareTopCrop;\nimport io.github.javiewer.view.listener.ActressClickListener;\nimport io.github.javiewer.view.listener.ActressLongClickListener;\n\nimport static com.bumptech.glide.load.engine.DiskCacheStrategy.SOURCE;\n\n/**\n * Project: JAViewer\n */\npublic class ActressAdapter extends ItemAdapter<Actress, ActressAdapter.ViewHolder> {\n\n    private Activity mParentActivity;\n\n    public ActressAdapter(List<Actress> actresses, Activity mParentActivity) {\n        super(actresses);\n        this.mParentActivity = mParentActivity;\n    }\n\n    @Override\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.layout_actress, parent, false);\n\n        return new ViewHolder(v);\n    }\n\n    @Override\n    public void onBindViewHolder(final ViewHolder holder, int position) {\n\n        final Actress actress = getItems().get(position);\n\n        holder.parse(actress);\n\n        holder.mLayout.setOnClickListener(new ActressClickListener(actress, mParentActivity));\n        holder.mLayout.setOnLongClickListener(new ActressLongClickListener(actress, mParentActivity));\n\n        holder.mImage.setImageDrawable(null);\n        Glide.with(holder.mImage.getContext().getApplicationContext())\n                .load(actress.getImageUrl())\n                .placeholder(R.drawable.ic_movie_actresses)\n                .diskCacheStrategy(SOURCE) // override default RESULT cache and apply transform always\n                .skipMemoryCache(true) // do not reuse the transformed result while running\n                .transform(new SquareTopCrop(holder.mImage.getContext()))\n                .dontAnimate()\n                .into(holder.mImage);\n    }\n\n    public static class ViewHolder extends RecyclerView.ViewHolder {\n\n        @BindView(R.id.actress_name)\n        public TextView mTextName;\n\n        @BindView(R.id.actress_img)\n        public ImageView mImage;\n\n        @BindView(R.id.layout_actress)\n        public View mLayout;\n\n        public ViewHolder(View view) {\n            super(view);\n\n            ButterKnife.bind(this, view);\n        }\n\n        public void parse(Actress actress) {\n            mTextName.setText(actress.getName());\n            mTextName.setSelected(true);\n        }\n    }\n}\n'