b'{-# LANGUAGE OverloadedStrings #-}\n\nmodule Test.Stream\n(\n  spec\n)\nwhere\n\nimport Control.Monad\nimport qualified System.IO.Streams as Streams\nimport qualified System.IO.Streams.Attoparsec as Streams\n\nimport Pdf.Core.Stream\n\nimport Test.Hspec\n\nspec :: Spec\nspec = describe "Stream" $ do\n  describe "readStream" $ do\n    it "should throw ParseException when indirect object is not a stream" $ (do\n        is <- Streams.fromByteString "1 1 obj\\r(hello)\\nendobj"\n        void $ readStream is 0\n      ) `shouldThrow` \\(Streams.ParseException _) -> True\n'