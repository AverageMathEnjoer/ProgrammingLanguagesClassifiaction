b'{-# LANGUAGE RecordWildCards #-}\n\nmodule Text.Hoodle.Migrate.FromXournal\n  ( mkHoodleFromXournal,\n  )\nwhere\n\nimport qualified Data.Hoodle.Simple as H\nimport qualified Data.Xournal.Simple as X\nimport Lens.Micro (set)\n\n-- |\nmkHoodleFromXournal :: X.Xournal -> IO H.Hoodle\nmkHoodleFromXournal X.Xournal {..} =\n  set H.title xoj_title . set H.pages (map x2h4Page xoj_pages) <$> H.emptyHoodle\n\n-- |\nx2h4Page :: X.Page -> H.Page\nx2h4Page X.Page {..} =\n  H.Page\n    (x2h4dim page_dim)\n    (x2h4bkg page_bkg)\n    (map x2h4layer page_layers)\n\n-- |\nx2h4dim :: X.Dimension -> H.Dimension\nx2h4dim X.Dim {..} = H.Dim dim_width dim_height\n\n-- |\nx2h4bkg :: X.Background -> H.Background\nx2h4bkg X.Background {..} = H.Background bkg_type bkg_color bkg_style\nx2h4bkg X.BackgroundPdf {..} =\n  H.BackgroundPdf bkg_type bkg_domain bkg_filename bkg_pageno\n\n-- |\nx2h4layer :: X.Layer -> H.Layer\nx2h4layer X.Layer {..} = H.Layer (map x2h4stroke layer_strokes)\n\n-- |\nx2h4stroke :: X.Stroke -> H.Item -- H.Stroke\nx2h4stroke X.Stroke {..} =\n  H.ItemStroke (H.Stroke stroke_tool stroke_color stroke_width stroke_data)\nx2h4stroke X.VWStroke {..} =\n  H.ItemStroke (H.VWStroke stroke_tool stroke_color stroke_vwdata)\n'