b'{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# LANGUAGE TypeFamilies #-}\n\n-- | [Facebook Login](http://developers.facebook.com/docs/facebook-login/)\nmodule Network.OAuth2.Provider.Facebook where\n\nimport Data.Aeson\nimport Data.Map.Strict qualified as Map\nimport Data.Set qualified as Set\nimport Data.Text.Lazy (Text)\nimport GHC.Generics\nimport Network.OAuth.OAuth2\nimport Network.OAuth2.Experiment\nimport URI.ByteString.QQ\n\ndata Facebook = Facebook deriving (Eq, Show)\n\ntype instance IdpUserInfo Facebook = FacebookUser\n\ndefaultFacebookApp :: IdpApplication \'AuthorizationCode Facebook\ndefaultFacebookApp =\n  AuthorizationCodeIdpApplication\n    { idpAppClientId = ""\n    , idpAppClientSecret = ""\n    , idpAppScope = Set.fromList ["user_about_me", "email"]\n    , idpAppAuthorizeExtraParams = Map.empty\n    , idpAppAuthorizeState = "CHANGE_ME"\n    , idpAppRedirectUri = [uri|http://localhost|]\n    , idpAppName = "default-facebook-App"\n    , idpAppTokenRequestAuthenticationMethod = ClientSecretPost\n    , idp = defaultFacebookIdp\n    }\n\ndefaultFacebookIdp :: Idp Facebook\ndefaultFacebookIdp =\n  Idp\n    { idpFetchUserInfo = authGetJSON @(IdpUserInfo Facebook)\n    , idpUserInfoEndpoint = [uri|https://graph.facebook.com/me?fields=id,name,email|]\n    , idpAuthorizeEndpoint = [uri|https://www.facebook.com/dialog/oauth|]\n    , idpTokenEndpoint = [uri|https://graph.facebook.com/v2.3/oauth/access_token|]\n    }\n\ndata FacebookUser = FacebookUser\n  { id :: Text\n  , name :: Text\n  , email :: Text\n  }\n  deriving (Show, Generic)\n\ninstance FromJSON FacebookUser\n'