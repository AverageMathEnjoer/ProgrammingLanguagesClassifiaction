b'/*\n* Copyright 2014 Adnan A M.\n\n* Licensed under the Apache License, Version 2.0 (the "License");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n\n*   http://www.apache.org/licenses/LICENSE-2.0\n\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an "AS IS" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\npackage com.naman14.timber.timely.animation;\n\nimport android.animation.TypeEvaluator;\n\npublic class TimelyEvaluator implements TypeEvaluator<float[][]> {\n    private float[][] _cachedPoints = null;\n\n    @Override\n    public float[][] evaluate(float fraction, float[][] startValue, float[][] endValue) {\n        int pointsCount = startValue.length;\n        initCache(pointsCount);\n\n        for (int i = 0; i < pointsCount; i++) {\n            _cachedPoints[i][0] = startValue[i][0] + fraction * (endValue[i][0] - startValue[i][0]);\n            _cachedPoints[i][1] = startValue[i][1] + fraction * (endValue[i][1] - startValue[i][1]);\n        }\n\n        return _cachedPoints;\n    }\n\n    private void initCache(int pointsCount) {\n        if (_cachedPoints == null || _cachedPoints.length != pointsCount) {\n            _cachedPoints = new float[pointsCount][2];\n        }\n    }\n\n}\n'