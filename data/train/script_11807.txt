b'package io.github.javiewer;\n\nimport android.app.Application;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.os.Environment;\nimport androidx.fragment.app.Fragment;\n\nimport com.crashlytics.android.Crashlytics;\nimport com.google.gson.Gson;\nimport com.google.gson.GsonBuilder;\nimport com.google.gson.JsonParseException;\nimport com.google.gson.stream.JsonReader;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport cn.jzvd.JZVideoPlayer;\nimport io.fabric.sdk.android.Fabric;\nimport io.github.javiewer.adapter.item.DataSource;\nimport io.github.javiewer.fragment.ActressesFragment;\nimport io.github.javiewer.fragment.HomeFragment;\nimport io.github.javiewer.fragment.PopularFragment;\nimport io.github.javiewer.fragment.ReleasedFragment;\nimport io.github.javiewer.fragment.favourite.FavouriteTabsFragment;\nimport io.github.javiewer.fragment.genre.GenreTabsFragment;\nimport io.github.javiewer.network.BasicService;\nimport io.github.javiewer.util.ExoPlayerImpl;\nimport okhttp3.Cookie;\nimport okhttp3.CookieJar;\nimport okhttp3.HttpUrl;\nimport okhttp3.Interceptor;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.Response;\nimport retrofit2.Retrofit;\n\n/**\n * Project: JAViewer\n */\n\npublic class JAViewer extends Application {\n\n    public static final String USER_AGENT = "Mozilla/5.0 (Linux; Android 5.1.1; Nexus 5 Build/LMY48B; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.65 Mobile Safari/537.36";\n    public static final List<DataSource> DATA_SOURCES = new ArrayList<>();\n    public static final Map<Integer, Class<? extends Fragment>> FRAGMENTS = new HashMap<Integer, Class<? extends Fragment>>() {{\n        put(R.id.nav_home, HomeFragment.class);\n        put(R.id.nav_popular, PopularFragment.class);\n        put(R.id.nav_released, ReleasedFragment.class);\n        put(R.id.nav_actresses, ActressesFragment.class);\n        put(R.id.nav_genre, GenreTabsFragment.class);\n        put(R.id.nav_favourite, FavouriteTabsFragment.class);\n    }};\n    public static Configurations CONFIGURATIONS;\n    public static BasicService SERVICE;\n    public static Map<String, String> hostReplacements = new HashMap<>();\n    public static final OkHttpClient HTTP_CLIENT = new OkHttpClient.Builder().addInterceptor(new Interceptor() {\n        @Override\n        public Response intercept(Interceptor.Chain chain) throws IOException {\n            Request original = chain.request();\n\n            Request request = original.newBuilder()\n                    .url(replaceUrl(original.url()))\n                    .header("User-Agent", USER_AGENT)\n                    .build();\n\n            return chain.proceed(request);\n        }\n    })\n            .cookieJar(new CookieJar() {\n                private final HashMap<HttpUrl, List<Cookie>> cookieStore = new HashMap<>();\n\n                @Override\n                public void saveFromResponse(HttpUrl url, List<Cookie> cookies) {\n                    cookieStore.put(url, cookies);\n                }\n\n                @Override\n                public List<Cookie> loadForRequest(HttpUrl url) {\n                    List<Cookie> cookies = cookieStore.get(url);\n                    return cookies != null ? cookies : new ArrayList<Cookie>();\n                }\n            })\n            .build();\n\n    static {\n        JZVideoPlayer.setMediaInterface(new ExoPlayerImpl());\n    }\n\n    public static DataSource getDataSource() {\n        return JAViewer.CONFIGURATIONS.getDataSource();\n    }\n\n    public static void recreateService() {\n        SERVICE = new Retrofit.Builder()\n                .baseUrl(JAViewer.getDataSource().getLink())\n                .client(JAViewer.HTTP_CLIENT)\n                .build()\n                .create(BasicService.class);\n    }\n\n    public static File getStorageDir() {\n        File dir = new File(Environment.getExternalStorageDirectory(), "JAViewer/");\n        dir.mkdirs();\n        return dir;\n    }\n\n    public static HttpUrl replaceUrl(HttpUrl url) {\n        HttpUrl.Builder builder = url.newBuilder();\n        String host = url.url().getHost();\n        if (hostReplacements.containsKey(host)) {\n            builder.host(hostReplacements.get(host));\n            return builder.build();\n        }\n\n        return url;\n    }\n\n    public static <T> T parseJson(Class<T> beanClass, JsonReader reader) throws JsonParseException {\n        GsonBuilder builder = new GsonBuilder();\n        Gson gson = builder.create();\n        return gson.fromJson(reader, beanClass);\n    }\n\n    public static <T> T parseJson(Class<T> beanClass, String json) throws JsonParseException {\n        GsonBuilder builder = new GsonBuilder();\n        Gson gson = builder.create();\n        return gson.fromJson(json, beanClass);\n    }\n\n    public static String bytesToHex(byte[] bytes) {\n        final char[] hexArray = {\'0\', \'1\', \'2\', \'3\', \'4\', \'5\', \'6\', \'7\', \'8\', \'9\', \'a\', \'b\', \'c\', \'d\', \'e\', \'f\'};\n        char[] hexChars = new char[bytes.length * 2];\n        int v;\n        for (int j = 0; j < bytes.length; j++) {\n            v = bytes[j] & 0xFF;\n            hexChars[j * 2] = hexArray[v >>> 4];\n            hexChars[j * 2 + 1] = hexArray[v & 0x0F];\n        }\n        return new String(hexChars);\n    }\n\n    public static boolean Objects_equals(Object a, Object b) {\n        return (a == b) || (a != null && a.equals(b));\n    }\n\n    public static void a(Context context) {\n        String url = "https://qr.alipay.com/a6x05027ymf6n8kl0qkoa54";\n        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);\n        context.startActivity(intent);\n    }\n\n    public static String b(String s1, String s2) {\n        try {\n            MessageDigest md = MessageDigest.getInstance("MD5");\n            byte[] bytes = md.digest(String.format("%s%sBrynhildr", s1, s2).getBytes());\n            return bytesToHex(bytes);\n        } catch (NoSuchAlgorithmException e) {\n            return null;\n        }\n    }\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        Fabric.with(this, new Crashlytics());\n    }\n}\n'