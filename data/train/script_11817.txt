b'// Copyright (c) 2022 Manuel Schneider\n\n#include "albert/extensionregistry.h"\n#include "albert/extension.h"\nusing namespace std;\nusing namespace albert;\n\nvoid ExtensionRegistry::add(Extension *e)\n{\n    const auto&[it, success] = extensions_.emplace(e->id(), e);\n    if (success)\n        emit added(e);\n    else\n        qFatal("Duplicate extension registration: %s", qPrintable(e->id()));\n}\n\nvoid ExtensionRegistry::remove(Extension *e)\n{\n    if (extensions_.erase(e->id()))\n            emit removed(e);\n    else\n        qFatal("Extension removed more than once: %s", qPrintable(e->id()));\n}\n\nconst map<QString,Extension*> &ExtensionRegistry::extensions()\n{\n    return extensions_;\n}\n'