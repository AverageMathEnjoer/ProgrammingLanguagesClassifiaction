b'package com.naman14.timber.widgets;\n\nimport android.animation.Animator;\nimport android.animation.AnimatorListenerAdapter;\nimport android.animation.AnimatorSet;\nimport android.animation.ObjectAnimator;\nimport android.content.Context;\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\nimport android.util.AttributeSet;\nimport android.view.LayoutInflater;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\nimport com.naman14.timber.R;\n\nimport static androidx.recyclerview.widget.RecyclerView.OnScrollListener;\n\npublic class FastScroller extends LinearLayout {\n    private static final int BUBBLE_ANIMATION_DURATION = 100;\n    private static final int TRACK_SNAP_RANGE = 5;\n    private final ScrollListener scrollListener = new ScrollListener();\n    private TextView bubble;\n    private View handle;\n    private RecyclerView recyclerView;\n    private int height;\n\n    private ObjectAnimator currentAnimator = null;\n\n    public FastScroller(final Context context, final AttributeSet attrs, final int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initialise(context);\n    }\n\n    public FastScroller(final Context context) {\n        super(context);\n        initialise(context);\n    }\n\n    public FastScroller(final Context context, final AttributeSet attrs) {\n        super(context, attrs);\n        initialise(context);\n    }\n\n    private void initialise(Context context) {\n        setOrientation(HORIZONTAL);\n        setClipChildren(false);\n        LayoutInflater inflater = LayoutInflater.from(context);\n        inflater.inflate(R.layout.recyclerview_fastscroller, this, true);\n        bubble = (TextView) findViewById(R.id.fastscroller_bubble);\n        handle = findViewById(R.id.fastscroller_handle);\n        bubble.setVisibility(INVISIBLE);\n    }\n\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        height = h;\n    }\n\n    @Override\n    public boolean onTouchEvent(@NonNull MotionEvent event) {\n        final int action = event.getAction();\n        switch (action) {\n            case MotionEvent.ACTION_DOWN:\n                if (event.getX() < handle.getX())\n                    return false;\n                if (currentAnimator != null)\n                    currentAnimator.cancel();\n                if (bubble.getVisibility() == INVISIBLE)\n                    showBubble();\n                handle.setSelected(true);\n            case MotionEvent.ACTION_MOVE:\n                final float y = event.getY();\n                setBubbleAndHandlePosition(y);\n                setRecyclerViewPosition(y);\n                return true;\n            case MotionEvent.ACTION_UP:\n            case MotionEvent.ACTION_CANCEL:\n                handle.setSelected(false);\n                hideBubble();\n                return true;\n        }\n        return super.onTouchEvent(event);\n    }\n\n    public void setRecyclerView(RecyclerView recyclerView) {\n        this.recyclerView = recyclerView;\n        recyclerView.addOnScrollListener(scrollListener);\n    }\n\n    private void setRecyclerViewPosition(float y) {\n        if (recyclerView != null) {\n            int itemCount = recyclerView.getAdapter().getItemCount();\n            float proportion;\n            if (handle.getY() == 0)\n                proportion = 0f;\n            else if (handle.getY() + handle.getHeight() >= height - TRACK_SNAP_RANGE)\n                proportion = 1f;\n            else\n                proportion = y / (float) height;\n            int targetPos = getValueInRange(0, itemCount - 1, (int) (proportion * (float) itemCount));\n            ((LinearLayoutManager) recyclerView.getLayoutManager()).scrollToPositionWithOffset(targetPos, 0);\n//      recyclerView.oPositionWithOffset(targetPos);\n            String bubbleText = ((BubbleTextGetter) recyclerView.getAdapter()).getTextToShowInBubble(targetPos);\n            bubble.setText(bubbleText);\n        }\n    }\n\n    private int getValueInRange(int min, int max, int value) {\n        int minimum = Math.max(min, value);\n        return Math.min(minimum, max);\n    }\n\n    private void setBubbleAndHandlePosition(float y) {\n        int bubbleHeight = bubble.getHeight();\n        int handleHeight = handle.getHeight();\n        handle.setY(getValueInRange(0, height - handleHeight, (int) (y - handleHeight / 2)));\n        bubble.setY(getValueInRange(0, height - bubbleHeight - handleHeight / 2, (int) (y - bubbleHeight)));\n    }\n\n    private void showBubble() {\n        AnimatorSet animatorSet = new AnimatorSet();\n        bubble.setVisibility(VISIBLE);\n        if (currentAnimator != null)\n            currentAnimator.cancel();\n        currentAnimator = ObjectAnimator.ofFloat(bubble, "alpha", 0f, 1f).setDuration(BUBBLE_ANIMATION_DURATION);\n        currentAnimator.start();\n    }\n\n    private void hideBubble() {\n        if (currentAnimator != null)\n            currentAnimator.cancel();\n        currentAnimator = ObjectAnimator.ofFloat(bubble, "alpha", 1f, 0f).setDuration(BUBBLE_ANIMATION_DURATION);\n        currentAnimator.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                super.onAnimationEnd(animation);\n                bubble.setVisibility(INVISIBLE);\n                currentAnimator = null;\n            }\n\n            @Override\n            public void onAnimationCancel(Animator animation) {\n                super.onAnimationCancel(animation);\n                bubble.setVisibility(INVISIBLE);\n                currentAnimator = null;\n            }\n        });\n        currentAnimator.start();\n    }\n\n    private class ScrollListener extends OnScrollListener {\n        @Override\n        public void onScrolled(RecyclerView rv, int dx, int dy) {\n\n            if (handle.isSelected()) {\n                return;\n            }\n            View firstVisibleView = recyclerView.getChildAt(0);\n            int firstVisiblePosition = recyclerView.getChildLayoutPosition(firstVisibleView);\n            int visibleRange = recyclerView.getChildCount();\n            int lastVisiblePosition = firstVisiblePosition + visibleRange;\n            int itemCount = recyclerView.getAdapter().getItemCount();\n            int position;\n            if (firstVisiblePosition == 0)\n                position = 0;\n            else if (lastVisiblePosition == itemCount)\n                position = itemCount;\n            else\n                position = (int) (((float) firstVisiblePosition / (((float) itemCount - (float) visibleRange))) * (float) itemCount);\n            float proportion = (float) position / (float) itemCount;\n            setBubbleAndHandlePosition(height * proportion);\n        }\n    }\n}'