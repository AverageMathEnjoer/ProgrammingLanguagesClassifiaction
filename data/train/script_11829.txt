b'package com.codeest.geeknews.presenter.main;\n\nimport com.codeest.geeknews.base.RxPresenter;\nimport com.codeest.geeknews.model.DataManager;\nimport com.codeest.geeknews.model.bean.VersionBean;\nimport com.codeest.geeknews.model.http.response.MyHttpResponse;\nimport com.codeest.geeknews.base.contract.main.SettingContract;\nimport com.codeest.geeknews.util.RxUtil;\nimport com.codeest.geeknews.widget.CommonSubscriber;\n\nimport javax.inject.Inject;\n\n/**\n * Created by codeest on 16/10/17.\n */\n\npublic class SettingPresenter extends RxPresenter<SettingContract.View> implements SettingContract.Presenter {\n\n    private DataManager mDataManager;\n\n    @Inject\n    public SettingPresenter(DataManager mDataManager) {\n        this.mDataManager = mDataManager;\n    }\n\n    @Override\n    public void checkVersion(final String currentVersion) {\n        addSubscribe(mDataManager.fetchVersionInfo()\n                .compose(RxUtil.<MyHttpResponse<VersionBean>>rxSchedulerHelper())\n                .compose(RxUtil.<VersionBean>handleMyResult())\n                .subscribeWith(new CommonSubscriber<VersionBean>(mView, "\xe8\x8e\xb7\xe5\x8f\x96\xe7\x89\x88\xe6\x9c\xac\xe4\xbf\xa1\xe6\x81\xaf\xe5\xa4\xb1\xe8\xb4\xa5 T T") {\n                    @Override\n                    public void onNext(VersionBean versionBean) {\n                        if (Integer.valueOf(currentVersion.replace(".", "")) < Integer.valueOf(versionBean.getCode().replace(".", ""))) {\n                            mView.showUpdateDialog(versionBean);\n                        } else {\n                            mView.showErrorMsg("\xe5\xb7\xb2\xe7\xbb\x8f\xe6\x98\xaf\xe6\x9c\x80\xe6\x96\xb0\xe7\x89\x88\xe6\x9c\xac~");\n                        }\n                    }\n                })\n        );\n    }\n\n    @Override\n    public void setNightModeState(boolean b) {\n        mDataManager.setNightModeState(b);\n    }\n\n    @Override\n    public void setNoImageState(boolean b) {\n        mDataManager.setNoImageState(b);\n    }\n\n    @Override\n    public void setAutoCacheState(boolean b) {\n        mDataManager.setAutoCacheState(b);\n    }\n\n    @Override\n    public boolean getNightModeState() {\n        return mDataManager.getNightModeState();\n    }\n\n    @Override\n    public boolean getNoImageState() {\n        return mDataManager.getNoImageState();\n    }\n\n    @Override\n    public boolean getAutoCacheState() {\n        return mDataManager.getAutoCacheState();\n    }\n}\n'