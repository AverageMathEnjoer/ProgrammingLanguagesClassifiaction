b'module Test.DummyProperties where\n\nimport Hedgehog\n\nimport qualified Data.List as List\nimport qualified Hedgehog.Gen as Gen\nimport qualified Hedgehog.Range as Range\n\ngenIntList :: Gen [Int]\ngenIntList =\n  let listLength = Range.linear 0 100000\n  in  Gen.list listLength Gen.enumBounded\n\nprop_reverse :: Property\nprop_reverse = property $\n  forAll genIntList >>= \\xs ->\n  List.reverse (List.reverse xs) === xs\n\nfauxReverse :: [a] -> [a]\nfauxReverse xs =\n  let sx = List.reverse xs\n      mp = length xs `div` 2\n      (as, bs) = List.splitAt mp sx\n  in as ++ List.drop 1 bs\n\nprop_fauxReverse :: Property\nprop_fauxReverse = property $\n    forAll genIntList >>= \\xs ->\n    fauxReverse xs === List.reverse xs\n'