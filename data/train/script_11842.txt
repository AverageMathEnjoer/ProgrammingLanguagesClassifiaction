b'package droidninja.filepicker.models\n\nimport android.net.Uri\nimport android.os.Parcelable\nimport kotlinx.android.parcel.Parcelize\n\n@Parcelize\nclass PhotoDirectory(\n                var id: Long = 0,\n                var bucketId: String? = null,\n                private var coverPath: Uri? = null,\n                var name: String? = null,\n                var dateAdded: Long = 0,\n                val medias: MutableList<Media> = mutableListOf()\n) : Parcelable {\n\n    fun getCoverPath(): Uri? {\n        return when {\n            medias.size > 0 -> medias[0].path\n            coverPath != null -> coverPath\n            else -> null\n        };\n    }\n\n    fun setCoverPath(coverPath: Uri?) {\n        this.coverPath = coverPath\n    }\n\n    fun addPhoto(imageId: Long, fileName: String, path: Uri, mediaType: Int) {\n        medias.add(Media(imageId, fileName, path, mediaType))\n    }\n\n    override fun equals(other: Any?): Boolean {\n        return this.bucketId == (other as? PhotoDirectory)?.bucketId\n    }\n\n    override fun hashCode(): Int {\n        var result = id.hashCode()\n        result = 31 * result + (bucketId?.hashCode() ?: 0)\n        result = 31 * result + (coverPath?.hashCode() ?: 0)\n        result = 31 * result + (name?.hashCode() ?: 0)\n        result = 31 * result + dateAdded.hashCode()\n        result = 31 * result + medias.hashCode()\n        return result\n    }\n}'