b'// UVa714 Copying Books\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxm = 500 + 5;\nint m, k, p[maxm];\n\n// how many scribers needed if each scriber can work on at most maxp pages\nint solve(long long maxp) {\n  long long done = 0;\n  int ans = 1;\n  for(int i = 0; i < m; i++) {\n    if(done + p[i] <= maxp) done += p[i];\n    else { ans++; done = p[i]; }\n  }\n  return ans;\n}\n\nint last[maxm]; // last[i] = 1 iff i is the last book assigned to someone\nvoid print(long long ans) {\n  long long done = 0;\n  memset(last, 0, sizeof(last));\n  int remain = k;\n  for(int i = m-1; i >= 0; i--) {\n    if(done + p[i] > ans || i+1 < remain) {\n      last[i] = 1; remain--; done = p[i];\n    }\n    else {\n      done += p[i];\n    }\n  }\n  for(int i = 0; i < m-1; i++) {\n    printf("%d ", p[i]);\n    if(last[i]) printf("/ ");\n  }\n  printf("%d\\n", p[m-1]);\n}\n\nint main() {\n  int T;\n  scanf("%d", &T);\n  while(T--) {\n    scanf("%d%d", &m, &k);\n    long long tot = 0;\n    int maxp = -1;\n    for(int i = 0; i < m; i++) {\n      scanf("%d", &p[i]);\n      tot += p[i];\n      maxp = max(maxp, p[i]);\n    }\n    long long L = maxp, R = tot;\n    while(L < R) {\n      long long M = L + (R-L)/2;\n      if(solve(M) <= k) R = M; else L = M+1;\n    }\n    print(L);\n  }\n  return 0;\n}\n'