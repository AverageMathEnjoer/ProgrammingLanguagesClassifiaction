b'package com.codeest.geeknews.util;\r\n\r\n/**\r\n * Created by codeest on 2016/7/25.\r\n */\r\nimport android.animation.Animator;\r\nimport android.animation.AnimatorListenerAdapter;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.ViewAnimationUtils;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\n/**\r\n * \xe5\xaf\xb9 ViewAnimationUtils.createCircularReveal() \xe6\x96\xb9\xe6\xb3\x95\xe7\x9a\x84\xe5\xb0\x81\xe8\xa3\x85.\r\n * <p/>\r\n * Created on 16/7/20.\r\n * GitHub: https://github.com/XunMengWinter\r\n *\r\n * @author ice\r\n */\r\npublic class CircularAnimUtil {\r\n\r\n    public static final long PERFECT_MILLS = 618;\r\n    public static final int MINI_RADIUS = 0;\r\n\r\n    /**\r\n     * \xe5\x90\x91\xe5\x9b\x9b\xe5\x91\xa8\xe4\xbc\xb8\xe5\xbc\xa0\xef\xbc\x8c\xe7\x9b\xb4\xe5\x88\xb0\xe5\xae\x8c\xe6\x88\x90\xe6\x98\xbe\xe7\xa4\xba\xe3\x80\x82\r\n     */\r\n    @SuppressLint("NewApi")\r\n    public static void show(View myView, float startRadius, long durationMills) {\r\n        if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.LOLLIPOP) {\r\n            myView.setVisibility(View.VISIBLE);\r\n            return;\r\n        }\r\n\r\n        int cx = (myView.getLeft() + myView.getRight()) / 2;\r\n        int cy = (myView.getTop() + myView.getBottom()) / 2;\r\n\r\n        int w = myView.getWidth();\r\n        int h = myView.getHeight();\r\n\r\n        // \xe5\x8b\xbe\xe8\x82\xa1\xe5\xae\x9a\xe7\x90\x86 & \xe8\xbf\x9b\xe4\xb8\x80\xe6\xb3\x95\r\n        int finalRadius = (int) Math.sqrt(w * w + h * h) + 1;\r\n\r\n        Animator anim =\r\n                ViewAnimationUtils.createCircularReveal(myView, cx, cy, startRadius, finalRadius);\r\n        myView.setVisibility(View.VISIBLE);\r\n        anim.setDuration(durationMills);\r\n        anim.start();\r\n    }\r\n\r\n    /**\r\n     * \xe7\x94\xb1\xe6\xbb\xa1\xe5\x90\x91\xe4\xb8\xad\xe9\x97\xb4\xe6\x94\xb6\xe7\xbc\xa9\xef\xbc\x8c\xe7\x9b\xb4\xe5\x88\xb0\xe9\x9a\x90\xe8\x97\x8f\xe3\x80\x82\r\n     */\r\n    @SuppressLint("NewApi")\r\n    public static void hide(final View myView, float endRadius, long durationMills) {\r\n        if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.LOLLIPOP) {\r\n            myView.setVisibility(View.INVISIBLE);\r\n            return;\r\n        }\r\n\r\n        int cx = (myView.getLeft() + myView.getRight()) / 2;\r\n        int cy = (myView.getTop() + myView.getBottom()) / 2;\r\n        int w = myView.getWidth();\r\n        int h = myView.getHeight();\r\n\r\n        // \xe5\x8b\xbe\xe8\x82\xa1\xe5\xae\x9a\xe7\x90\x86 & \xe8\xbf\x9b\xe4\xb8\x80\xe6\xb3\x95\r\n        int initialRadius = (int) Math.sqrt(w * w + h * h) + 1;\r\n\r\n        Animator anim =\r\n                ViewAnimationUtils.createCircularReveal(myView, cx, cy, initialRadius, endRadius);\r\n        anim.setDuration(durationMills);\r\n        anim.addListener(new AnimatorListenerAdapter() {\r\n            @Override\r\n            public void onAnimationEnd(Animator animation) {\r\n                super.onAnimationEnd(animation);\r\n                myView.setVisibility(View.INVISIBLE);\r\n            }\r\n        });\r\n\r\n        anim.start();\r\n    }\r\n\r\n    /**\r\n     * \xe4\xbb\x8e\xe6\x8c\x87\xe5\xae\x9aView\xe5\xbc\x80\xe5\xa7\x8b\xe5\x90\x91\xe5\x9b\x9b\xe5\x91\xa8\xe4\xbc\xb8\xe5\xbc\xa0(\xe4\xbc\xb8\xe5\xbc\xa0\xe9\xa2\x9c\xe8\x89\xb2\xe6\x88\x96\xe5\x9b\xbe\xe7\x89\x87\xe4\xb8\xbacolorOrImageRes), \xe7\x84\xb6\xe5\x90\x8e\xe8\xbf\x9b\xe5\x85\xa5\xe5\x8f\xa6\xe4\xb8\x80\xe4\xb8\xaaActivity,\r\n     * \xe8\xbf\x94\xe5\x9b\x9e\xe8\x87\xb3 @thisActivity \xe5\x90\x8e\xe6\x98\xbe\xe7\xa4\xba\xe6\x94\xb6\xe7\xbc\xa9\xe5\x8a\xa8\xe7\x94\xbb\xe3\x80\x82\r\n     */\r\n    @SuppressLint("NewApi")\r\n    public static void startActivityForResult(\r\n            final Activity thisActivity, final Intent intent, final Integer requestCode, final Bundle bundle,\r\n            final View triggerView, int colorOrImageRes, long durationMills) {\r\n\r\n        if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.LOLLIPOP) {\r\n            thisActivity.startActivity(intent);\r\n            return;\r\n        }\r\n\r\n        int[] location = new int[2];\r\n        triggerView.getLocationInWindow(location);\r\n        final int cx = location[0] + triggerView.getWidth() / 2;\r\n        final int cy = location[1] + triggerView.getHeight() / 2;\r\n        final ImageView view = new ImageView(thisActivity);\r\n        view.setScaleType(ImageView.ScaleType.CENTER_CROP);\r\n        view.setImageResource(colorOrImageRes);\r\n        final ViewGroup decorView = (ViewGroup) thisActivity.getWindow().getDecorView();\r\n        int w = decorView.getWidth();\r\n        int h = decorView.getHeight();\r\n        decorView.addView(view, w, h);\r\n\r\n        // \xe8\xae\xa1\xe7\xae\x97\xe4\xb8\xad\xe5\xbf\x83\xe7\x82\xb9\xe8\x87\xb3view\xe8\xbe\xb9\xe7\x95\x8c\xe7\x9a\x84\xe6\x9c\x80\xe5\xa4\xa7\xe8\xb7\x9d\xe7\xa6\xbb\r\n        int maxW = Math.max(cx, w - cx);\r\n        int maxH = Math.max(cy, h - cy);\r\n        final int finalRadius = (int) Math.sqrt(maxW * maxW + maxH * maxH) + 1;\r\n        Animator\r\n                anim = ViewAnimationUtils.createCircularReveal(view, cx, cy, 0, finalRadius);\r\n        int maxRadius = (int) Math.sqrt(w * w + h * h) + 1;\r\n        // \xe8\x8b\xa5\xe4\xbd\xbf\xe7\x94\xa8\xe9\xbb\x98\xe8\xae\xa4\xe6\x97\xb6\xe9\x95\xbf\xef\xbc\x8c\xe5\x88\x99\xe9\x9c\x80\xe8\xa6\x81\xe6\xa0\xb9\xe6\x8d\xae\xe6\xb0\xb4\xe6\xb3\xa2\xe6\x89\xa9\xe6\x95\xa3\xe7\x9a\x84\xe8\xb7\x9d\xe7\xa6\xbb\xe6\x9d\xa5\xe8\xae\xa1\xe7\xae\x97\xe5\xae\x9e\xe9\x99\x85\xe6\x97\xb6\xe9\x97\xb4\r\n        if (durationMills == PERFECT_MILLS) {\r\n            // \xe7\xae\x97\xe5\x87\xba\xe5\xae\x9e\xe9\x99\x85\xe8\xbe\xb9\xe8\xb7\x9d\xe4\xb8\x8e\xe6\x9c\x80\xe5\xa4\xa7\xe8\xbe\xb9\xe8\xb7\x9d\xe7\x9a\x84\xe6\xaf\x94\xe7\x8e\x87\r\n            double rate = 1d * finalRadius / maxRadius;\r\n            // \xe6\xb0\xb4\xe6\xb3\xa2\xe6\x89\xa9\xe6\x95\xa3\xe7\x9a\x84\xe8\xb7\x9d\xe7\xa6\xbb\xe4\xb8\x8e\xe6\x89\xa9\xe6\x95\xa3\xe6\x97\xb6\xe9\x97\xb4\xe6\x88\x90\xe6\xad\xa3\xe6\xaf\x94\r\n            durationMills = (long) (PERFECT_MILLS * rate);\r\n        }\r\n        final long finalDuration = durationMills;\r\n        anim.setDuration(finalDuration);\r\n        anim.addListener(new AnimatorListenerAdapter() {\r\n            @Override\r\n            public void onAnimationEnd(Animator animation) {\r\n                super.onAnimationEnd(animation);\r\n\r\n                if (requestCode == null)\r\n                    thisActivity.startActivity(intent);\r\n                else if (bundle == null)\r\n                    thisActivity.startActivityForResult(intent, requestCode);\r\n                else\r\n                    thisActivity.startActivityForResult(intent, requestCode, bundle);\r\n\r\n                // \xe9\xbb\x98\xe8\xae\xa4\xe6\xb8\x90\xe9\x9a\x90\xe8\xbf\x87\xe6\xb8\xa1\xe5\x8a\xa8\xe7\x94\xbb.\r\n                thisActivity.overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);\r\n\r\n                // \xe9\xbb\x98\xe8\xae\xa4\xe6\x98\xbe\xe7\xa4\xba\xe8\xbf\x94\xe5\x9b\x9e\xe8\x87\xb3\xe5\xbd\x93\xe5\x89\x8dActivity\xe7\x9a\x84\xe5\x8a\xa8\xe7\x94\xbb.\r\n                triggerView.postDelayed(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        Animator anim =\r\n                                ViewAnimationUtils.createCircularReveal(view, cx, cy, finalRadius, 0);\r\n                        anim.setDuration(finalDuration);\r\n                        anim.addListener(new AnimatorListenerAdapter() {\r\n                            @Override\r\n                            public void onAnimationEnd(Animator animation) {\r\n                                super.onAnimationEnd(animation);\r\n                                try {\r\n                                    decorView.removeView(view);\r\n                                } catch (Exception e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n                        });\r\n                        anim.start();\r\n                    }\r\n                }, 1000);\r\n\r\n            }\r\n        });\r\n        anim.start();\r\n    }\r\n\r\n\r\n    /*\xe4\xb8\x8b\xe9\x9d\xa2\xe7\x9a\x84\xe6\x96\xb9\xe6\xb3\x95\xe5\x85\xa8\xe6\x98\xaf\xe9\x87\x8d\xe8\xbd\xbd\xef\xbc\x8c\xe7\x94\xa8\xe7\xae\x80\xe5\x8c\x96\xe4\xb8\x8a\xe9\x9d\xa2\xe6\x96\xb9\xe6\xb3\x95\xe7\x9a\x84\xe6\x9e\x84\xe5\xbb\xba*/\r\n\r\n\r\n    public static void startActivityForResult(\r\n            Activity thisActivity, Intent intent, Integer requestCode, View triggerView, int colorOrImageRes) {\r\n        startActivityForResult(thisActivity, intent, requestCode, null, triggerView, colorOrImageRes, PERFECT_MILLS);\r\n    }\r\n\r\n    public static void startActivity(\r\n            Activity thisActivity, Intent intent, View triggerView, int colorOrImageRes, long durationMills) {\r\n        startActivityForResult(thisActivity, intent, null, null, triggerView, colorOrImageRes, durationMills);\r\n    }\r\n\r\n    public static void startActivity(\r\n            Activity thisActivity, Intent intent, View triggerView, int colorOrImageRes) {\r\n        startActivity(thisActivity, intent, triggerView, colorOrImageRes, PERFECT_MILLS);\r\n    }\r\n\r\n    public static void startActivity(Activity thisActivity, Class<?> targetClass, View triggerView, int colorOrImageRes) {\r\n        startActivity(thisActivity, new Intent(thisActivity, targetClass), triggerView, colorOrImageRes, PERFECT_MILLS);\r\n    }\r\n\r\n    public static void show(View myView) {\r\n        show(myView, MINI_RADIUS, PERFECT_MILLS);\r\n    }\r\n\r\n    public static void hide(View myView) {\r\n        hide(myView, MINI_RADIUS, PERFECT_MILLS);\r\n    }\r\n\r\n}'