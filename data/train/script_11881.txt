b'\xef\xbb\xbfusing System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Data;\n\nnamespace DMSkin.Core.Converters\n{\n    /// <summary>\n    /// \xe5\xb0\x86\xe7\xa7\x92\xe6\x95\xb0 \xe8\xbd\xac\xe6\x8d\xa2 \xe4\xb8\xba\xe6\x97\xb6\xe9\x97\xb4\xe6\x98\xbe\xe7\xa4\xba 00:10:00\n    /// </summary>\n    public class SecondToStringConverter : IValueConverter\n    {\n        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)\n        {\n            if (value is int offset)\n            {\n                var absOffset = Math.Abs(offset);\n                var hour = ((absOffset / 3600)).ToString();\n                var minute = ((absOffset - ((absOffset / 3600) * 3600)) / 60).ToString();\n                var second = ((absOffset - ((absOffset / 3600) * 3600)) % 60).ToString();\n                return $"{(offset >= 0 ? "" : "-")}{hour.PadLeft(2, \'0\')}:{minute.PadLeft(2, \'0\')}:{second.PadLeft(2, \'0\')}";\n            }\n            return value;\n        }\n\n        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)\n        {\n            var arr = (value as string)?.Split(\':\');\n            if (arr?.Length == 2)\n            {\n                long hour, minute;\n                if (Int64.TryParse(arr[0], out hour) && Int64.TryParse(arr[1], out minute))\n                {\n                    return hour * 3600 + minute * 60;\n                }\n            }\n            return value;\n        }\n    }\n}\n'