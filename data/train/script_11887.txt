b'module Test.Unit\n       ( hspecTestTree\n       ) where\n\nimport Data.Maybe (isJust, isNothing)\n\nimport Test.Tasty (TestTree)\nimport Test.Tasty.Hspec (Spec, describe, it, shouldBe, shouldSatisfy, testSpec)\n\nimport Parser (char, eof, runP)\n\nhspecTestTree :: IO TestTree\nhspecTestTree = testSpec "Simple parser" spec_Parser\n\nspec_Parser :: Spec\nspec_Parser = do\n  describe "eof works" $ do\n    it "eof on empty input" $\n      runP eof "" `shouldSatisfy` isJust\n    it "eof on non-empty input" $\n      runP eof "x" `shouldSatisfy` isNothing\n  describe "char works" $ do\n    it "char parses character" $\n      runP (char \'a\') "abc" `shouldBe` Just (\'x\', "bc")\n'