b'\xef\xbb\xbf// UVa10305 Ordering Tasks\n// Rujia Liu\n// \xe9\xa2\x98\xe6\x84\x8f\xef\xbc\x9a\xe8\xbe\x93\xe5\x85\xa5n\xe5\x92\x8cm\xef\xbc\x8c\xe4\xbb\xa5\xe5\x8f\x8am\xe4\xb8\xaa\xe4\xba\x8c\xe5\x85\x83\xe7\xbb\x84(i,j)\xef\xbc\x8c\xe6\xb1\x821~n\xe7\x9a\x84\xe4\xb8\x80\xe4\xb8\xaa\xe6\x8e\x92\xe5\x88\x97\xe4\xbd\xbf\xe5\xbe\x97\xe5\xaf\xb9\xe4\xba\x8e\xe6\xaf\x8f\xe4\xb8\xaa(i,j)\xef\xbc\x8ci\xe5\x9c\xa8j\xe7\x9a\x84\xe5\x89\x8d\xe9\x9d\xa2\n// \xe7\xae\x97\xe6\xb3\x95\xef\xbc\x9a\xe6\x8b\x93\xe6\x89\x91\xe6\x8e\x92\xe5\xba\x8f\xe3\x80\x82\xe6\xb3\xa8\xe6\x84\x8fm\xe5\x8f\xaf\xe8\x83\xbd\xe7\xad\x89\xe4\xba\x8e0\n#include<cstdio>\n#include<cstring>\nconst int maxn = 1000;\nint n, m, G[maxn][maxn], c[maxn], topo[maxn], t;\n\nbool dfs(int u){\n  c[u] = -1;\n  for(int v = 0; v < n; v++) if(G[u][v]) {\n    if(c[v]<0) return false;\n    else if(!c[v]) dfs(v);\n  }\n  c[u] = 1; topo[--t]=u;\n  return true;\n}\n\nbool toposort(){\n  t = n;\n  memset(c, 0, sizeof(c));\n  for(int u = 0; u < n; u++) if(!c[u])\n    if(!dfs(u)) return false;\n  return true;\n}\n\nint main() {\n  while(scanf("%d%d", &n, &m) == 2 && n) {\n    memset(G, 0, sizeof(G));\n    for(int i = 0; i < m; i++) {\n      int u, v;\n      scanf("%d%d", &u, &v); u--; v--;\n      G[u][v] = 1;\n    }\n    if(toposort()) {\n      for(int i = 0; i < n-1; i++)\n        printf("%d ", topo[i]+1);\n      printf("%d\\n", topo[n-1]+1);\n    }\n    else\n      printf("No\\n"); // \xe9\xa2\x98\xe7\x9b\xae\xe6\xb2\xa1\xe8\xaf\xb4\xe6\x97\xa0\xe8\xa7\xa3\xe8\xbe\x93\xe5\x87\xba\xe4\xbb\x80\xe4\xb9\x88\xef\xbc\x8c\xe5\xba\x94\xe8\xaf\xa5\xe6\x98\xaf\xe4\xbf\x9d\xe8\xaf\x81\xe6\x9c\x89\xe8\xa7\xa3\xe5\x90\xa7\n  }\n}\n'