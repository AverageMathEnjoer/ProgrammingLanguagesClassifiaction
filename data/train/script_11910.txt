b'\xef\xbb\xbf// UVa10129 Play on Words\n// Rujia Liu\n// \xe9\xa2\x98\xe6\x84\x8f\xef\xbc\x9a\xe8\xbe\x93\xe5\x85\xa5n\xe4\xb8\xaa\xe5\x8d\x95\xe8\xaf\x8d\xef\xbc\x8c\xe6\x98\xaf\xe5\x90\xa6\xe5\x8f\xaf\xe4\xbb\xa5\xe6\x8e\x92\xe6\x88\x90\xe4\xb8\x80\xe4\xb8\xaa\xe5\xba\x8f\xe5\x88\x97\xef\xbc\x8c\xe4\xbd\xbf\xe5\xbe\x97\xe6\xaf\x8f\xe4\xb8\xaa\xe5\x8d\x95\xe8\xaf\x8d\xe7\x9a\x84\xe7\xac\xac\xe4\xb8\x80\xe4\xb8\xaa\xe5\xad\x97\xe6\xaf\x8d\xe5\x92\x8c\xe4\xb8\x8a\xe4\xb8\x80\xe4\xb8\xaa\xe5\x8d\x95\xe8\xaf\x8d\xe7\x9a\x84\xe6\x9c\x80\xe5\x90\x8e\xe4\xb8\x80\xe4\xb8\xaa\xe5\xad\x97\xe6\xaf\x8d\xe7\x9b\xb8\xe5\x90\x8c\n// \xe7\xae\x97\xe6\xb3\x95\xef\xbc\x9a\xe6\x8a\x8a\xe5\xad\x97\xe6\xaf\x8d\xe7\x9c\x8b\xe4\xbd\x9c\xe7\xbb\x93\xe7\x82\xb9\xef\xbc\x8c\xe5\x8d\x95\xe8\xaf\x8d\xe7\x9c\x8b\xe6\x88\x90\xe6\x9c\x89\xe5\x90\x91\xe8\xbe\xb9\xef\xbc\x8c\xe5\x88\x99\xe6\x9c\x89\xe8\xa7\xa3\xe5\xbd\x93\xe4\xb8\x94\xe4\xbb\x85\xe5\xbd\x93\xe5\x9b\xbe\xe4\xb8\xad\xe6\x9c\x89\xe6\xac\xa7\xe6\x8b\x89\xe8\xb7\xaf\xe5\xbe\x84\xe3\x80\x82\xe6\xb3\xa8\xe6\x84\x8f\xe8\xa6\x81\xe5\x85\x88\xe5\x88\xa4\xe8\xbf\x9e\xe9\x80\x9a\n#include<cstdio>\n#include<cstring>\n#include<vector>\nusing namespace std;\n\nconst int maxn = 1000 + 5;\n\n// \xe5\xb9\xb6\xe6\x9f\xa5\xe9\x9b\x86\xef\xbc\x88\xe4\xbb\xa3\xe7\xa0\x81\xe6\x91\x98\xe8\x87\xaa\xe3\x80\x8a\xe7\xae\x97\xe6\xb3\x95\xe7\xab\x9e\xe8\xb5\x9b\xe5\x85\xa5\xe9\x97\xa8\xe7\xbb\x8f\xe5\x85\xb8\xe2\x80\x94\xe2\x80\x94\xe8\xae\xad\xe7\xbb\x83\xe6\x8c\x87\xe5\x8d\x97\xe3\x80\x8b\xe7\xac\xac\xe4\xb8\x89\xe7\xab\xa0\xef\xbc\x89\nint pa[256];\nint findset(int x) { return pa[x] != x ? pa[x] = findset(pa[x]) : x; } \n\nint used[256], deg[256]; // \xe6\x98\xaf\xe5\x90\xa6\xe5\x87\xba\xe7\x8e\xb0\xe8\xbf\x87\xef\xbc\x9b\xe5\xba\xa6\xe6\x95\xb0\n\nint main() {\n  int T;\n  scanf("%d", &T);\n  while(T--) {\n    int n;\n    char word[maxn];\n\n    scanf("%d", &n);\n    memset(used, 0, sizeof(used));\n    memset(deg, 0, sizeof(deg));\n    for(int ch = \'a\'; ch <= \'z\'; ch++) pa[ch] = ch; // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe5\xb9\xb6\xe6\x9f\xa5\xe9\x9b\x86\n    int cc = 26; // \xe8\xbf\x9e\xe9\x80\x9a\xe5\x9d\x97\xe4\xb8\xaa\xe6\x95\xb0\n\n    for(int i = 0; i < n; i++) {\n      scanf("%s", word);\n      char c1 = word[0], c2 = word[strlen(word)-1];\n      deg[c1]++;\n      deg[c2]--;\n      used[c1] = used[c2] = 1;\n      int s1 = findset(c1), s2 = findset(c2);\n      if(s1 != s2) { pa[s1] = s2; cc--; }\n    }\n\n    vector<int> d;\n    for(int ch = \'a\'; ch <= \'z\'; ch++) {\n      if(!used[ch]) cc--; // \xe6\xb2\xa1\xe5\x87\xba\xe7\x8e\xb0\xe8\xbf\x87\xe7\x9a\x84\xe5\xad\x97\xe6\xaf\x8d\n      else if(deg[ch] != 0) d.push_back(deg[ch]);\n    }\n    bool ok = false;\n    if(cc == 1 && (d.empty() || (d.size() == 2 && (d[0] == 1 || d[0] == -1)))) ok = true;\n    if(ok) printf("Ordering is possible.\\n");\n    else printf("The door cannot be opened.\\n");\n  }\n  return 0;\n}\n'