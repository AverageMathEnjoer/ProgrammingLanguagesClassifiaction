b'\n-- | Compound data structures from sec. 7.9 of PDF32000:2008\n\nmodule Pdf.Core.Types\n(\n  Rectangle(..),\n  rectangleFromArray,\n  rectangleToArray\n)\nwhere\n\nimport qualified Data.Scientific as Scientific\nimport Pdf.Core\nimport Pdf.Core.Util\nimport Pdf.Core.Object.Util\n\nimport qualified Data.Vector as Vector\n\n-- | Rectangle\ndata Rectangle a = Rectangle a a a a\n  deriving Show\n\n-- | Create rectangle form an array of 4 numbers\nrectangleFromArray :: Array -> Either String (Rectangle Double)\nrectangleFromArray arr = do\n  res <- mapM realValue (Vector.toList arr)\n      `notice` "Rectangle should contain real values"\n  case res of\n    [a, b, c, d] -> return $ Rectangle a b c d\n    _ -> Left ("rectangleFromArray: " ++ show arr)\n\nrectangleToArray :: Rectangle Double -> Array\nrectangleToArray (Rectangle a b c d) =\n  Vector.fromList . map (Number . Scientific.fromFloatDigits) $ [a, b, c, d]\n'