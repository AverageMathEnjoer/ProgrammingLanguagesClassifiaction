b'package effectivejava.chapter3.item10;\n\n// Simple immutable two-dimensional integer point class (Page 37)\npublic class Point {\n    private final int x;\n    private final int y;\n\n    public Point(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    @Override public boolean equals(Object o) {\n        if (!(o instanceof Point))\n            return false;\n        Point p = (Point)o;\n        return p.x == x && p.y == y;\n    }\n\n//    // Broken - violates Liskov substitution principle (page 43)\n//    @Override public boolean equals(Object o) {\n//        if (o == null || o.getClass() != getClass())\n//            return false;\n//        Point p = (Point) o;\n//        return p.x == x && p.y == y;\n//    }\n\n    // See Item 11\n    @Override public int hashCode()  {\n        return 31 * x + y;\n    }\n}\n'