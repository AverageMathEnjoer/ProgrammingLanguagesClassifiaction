b'\xef\xbb\xbfusing System;\nusing Asn1;\nusing System.Collections.Generic;\n\nnamespace Rubeus\n{\n    public class KRB_PRIV\n    {\n        //KRB-PRIV        ::= [APPLICATION 21] SEQUENCE {\n        //        pvno            [0] INTEGER (5),\n        //        msg-type        [1] INTEGER (21),\n        //                        -- NOTE: there is no [2] tag\n        //        enc-part        [3] EncryptedData -- EncKrbPrivPart\n        //}\n\n        public KRB_PRIV(Interop.KERB_ETYPE encType, byte[] encKey)\n        {\n            // defaults for creation\n            pvno = 5;\n            msg_type = 21;\n\n            etype = encType;\n\n            ekey = encKey;\n\n            enc_part = new EncKrbPrivPart();\n        }\n\n        public AsnElt Encode()\n        {\n            // pvno            [0] INTEGER (5)\n            AsnElt pvnoAsn = AsnElt.MakeInteger(pvno);\n            AsnElt pvnoSeq = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { pvnoAsn });\n            pvnoSeq = AsnElt.MakeImplicit(AsnElt.CONTEXT, 0, pvnoSeq);\n\n\n            // msg-type        [1] INTEGER (21)\n            AsnElt msg_typeAsn = AsnElt.MakeInteger(msg_type);\n            AsnElt msg_typeSeq = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { msg_typeAsn });\n            msg_typeSeq = AsnElt.MakeImplicit(AsnElt.CONTEXT, 1, msg_typeSeq);\n\n            // enc-part        [3] EncryptedData -- EncKrbPrivPart\n            AsnElt enc_partAsn = enc_part.Encode();\n\n            // etype\n            AsnElt etypeAsn = AsnElt.MakeInteger((int)etype);\n            AsnElt etypeSeq = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { etypeAsn });\n            etypeSeq = AsnElt.MakeImplicit(AsnElt.CONTEXT, 0, etypeSeq);\n\n            // now encrypt the enc_part (EncKrbPrivPart)\n            //  KRB_KEY_USAGE_KRB_PRIV_ENCRYPTED_PART = 13;\n            byte[] encBytes = Crypto.KerberosEncrypt(etype, Interop.KRB_KEY_USAGE_KRB_PRIV_ENCRYPTED_PART, ekey, enc_partAsn.Encode());\n            AsnElt blob = AsnElt.MakeBlob(encBytes);\n            AsnElt blobSeq = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { blob });\n            blobSeq = AsnElt.MakeImplicit(AsnElt.CONTEXT, 2, blobSeq);\n\n            AsnElt encPrivSeq = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { etypeSeq, blobSeq });\n            AsnElt encPrivSeq2 = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { encPrivSeq });\n            encPrivSeq2 = AsnElt.MakeImplicit(AsnElt.CONTEXT, 3, encPrivSeq2);\n\n\n            // all the components\n            AsnElt total = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { pvnoSeq, msg_typeSeq, encPrivSeq2 });\n\n            // tag the final total ([APPLICATION 21])\n            AsnElt final = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { total });\n            final = AsnElt.MakeImplicit(AsnElt.APPLICATION, 21, final);\n\n            return final;\n        }\n\n        public long pvno { get; set; }\n\n        public long msg_type { get; set; }\n\n        public EncKrbPrivPart enc_part { get; set; }\n\n        public Interop.KERB_ETYPE etype { get; set; }\n\n        public byte[] ekey { get; set; }\n    }\n}'