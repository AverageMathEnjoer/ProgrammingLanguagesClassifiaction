b'\xef\xbb\xbfusing ScreenSaver;\nusing System;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Windows.Forms;\n\nnamespace Aerial\n{\n    static class Program\n    {\n        /// <summary>\n        /// Arguments for any Windows 98+ screensaver:\n        /// \n        ///   ScreenSaver.scr           - Show the Settings dialog box.\n        ///   ScreenSaver.scr /c        - Show the Settings dialog box, modal to the foreground window.\n        ///   ScreenSaver.scr /p <HWND> - Preview Screen Saver as child of window <HWND>.\n        ///   ScreenSaver.scr /s        - Run the Screen Saver.\n        /// \n        /// Custom arguments:\n        /// \n        ///   ScreenSaver.scr /w        - Run in normal resizable window mode.\n        ///   ScreenSaver.exe           - Run in normal resizable window mode.\n        /// </summary>\n        /// <param name="args"></param>\n        [STAThread]\n        static void Main(string[] args)\n        {\n            AppDomain.CurrentDomain.AssemblyResolve += (sender, dll) =>\n            {\n                var resName = "Aerial.libs." + dll.Name.Split(\',\')[0] + ".dll";\n                var thisAssembly = Assembly.GetExecutingAssembly();\n                using (var input = thisAssembly.GetManifestResourceStream(resName))\n                {\n                    return input != null\n                         ? Assembly.Load(StreamToBytes(input))\n                         : null;\n                }\n            };\n\n            Application.EnableVisualStyles();\n            Application.SetCompatibleTextRenderingDefault(false);\n\n            Caching.Setup();\n\n\n            if (args.Length > 0)\n            {\n                string firstArgument = args[0].ToLower().Trim();\n                string secondArgument = null;\n\n                // Handle cases where arguments are separated by colon. \n                // Examples: /c:1234567 or /P:1234567\n                if (firstArgument.Length > 2)\n                {\n                    secondArgument = firstArgument.Substring(3).Trim();\n                    firstArgument = firstArgument.Substring(0, 2);\n                }\n                else if (args.Length > 1)\n                    secondArgument = args[1];\n                \n                if (firstArgument == "/c")           // Configuration mode\n                {\n                    var settings = new SettingsForm();\n                    settings.StartPosition = FormStartPosition.CenterScreen;\n                    Application.Run(settings);\n                }\n                else if (firstArgument == "/p")      // Preview mode\n                {\n                    if (secondArgument == null)\n                    {\n                        MessageBox.Show("Sorry, but the expected window handle was not provided.",\n                            "ScreenSaver", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n                        return;\n                    }\n                    \n                    IntPtr previewWndHandle = new IntPtr(long.Parse(secondArgument));\n                    Application.Run(new ScreenSaverForm(previewWndHandle));\n                }\n                else if (firstArgument == "/s")      // Full-screen mode\n                {\n                    ShowScreenSaver();\n                    Application.Run();\n                }  else if (firstArgument == "/w") // if executable, windowed mode.\n                {\n                    Application.Run(new ScreenSaverForm(WindowMode: true));\n                }\n                else    // Undefined argument\n                {\n                    MessageBox.Show("Sorry, but the command line argument \\"" + firstArgument +\n                        "\\" is not valid.", "ScreenSaver",\n                        MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n                }\n            }\n            else    \n            {\n                if (System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName.EndsWith("exe")) // treat like /w\n                {\n                    Application.Run(new ScreenSaverForm(WindowMode: true));\n                }\n                else // No arguments - treat like /c\n                {\n                    Application.Run(new SettingsForm());\n                }\n            }            \n        }\n\n        static byte[] StreamToBytes(Stream input)\n        {\n            var capacity = input.CanSeek ? (int)input.Length : 0;\n            using (var output = new MemoryStream(capacity))\n            {\n                int readLength;\n                var buffer = new byte[4096];\n\n                do\n                {\n                    readLength = input.Read(buffer, 0, buffer.Length);\n                    output.Write(buffer, 0, readLength);\n                }\n                while (readLength != 0);\n\n                return output.ToArray();\n            }\n        }\n\n        /// <summary>\n        /// Display the form on each of the computer\'s monitors.\n        /// </summary>\n        static void ShowScreenSaver()\n        {\n            var multiMonitorMode = new RegSettings().MultiMonitorMode;\n\n            switch (multiMonitorMode)\n            {\n                case RegSettings.MultiMonitorModeEnum.SameOnEach:\n                case RegSettings.MultiMonitorModeEnum.DifferentVideos:\n                    {\n                        foreach (var screen in Screen.AllScreens)\n                        {\n                            new ScreenSaverForm(screen.Bounds, shouldCache: screen.Primary, showVideo: true).Show();\n                        }\n                        break;\n                    }\n                case RegSettings.MultiMonitorModeEnum.SpanAll:\n                    {\n                        new ScreenSaverForm(Screen.AllScreens.GetBounds(), shouldCache: true, showVideo: true).Show();\n                        break;\n                    }\n                case RegSettings.MultiMonitorModeEnum.MainOnly:\n                default:\n                    {\n                        foreach (var screen in Screen.AllScreens)\n                        {\n                            new ScreenSaverForm(screen.Bounds, shouldCache: screen.Primary, showVideo: screen.Primary).Show();\n                        }\n                        break;\n                    }\n            }\n        }\n    }\n}\n'