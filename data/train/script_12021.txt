b"-- | Postgres is a popular, open-source RDBMS. It is fairly standards compliant\n-- and supports many advanced features and data types.\n--\n-- The @beam-postgres@ module is built atop of @postgresql-simple@, which is\n-- used for connection management, transaction support, serialization, and\n-- deserialization.\n--\n-- @beam-postgres@ supports most beam features as well as many postgres-specific\n-- features. For example, @beam-postgres@ provides support for full-text search,\n-- @DISTINCT ON@, JSON handling, postgres @ARRAY@s, @RANGE@s, and the @MONEY@ type.\n--\n-- The documentation for @beam-postgres@ functionality below indicates which\n-- postgres function each function or type wraps. Postgres maintains its own\n-- in-depth documentation. Please refer to that for more detailed information on\n-- <https://www.postgresql.org/docs/current/static/index.html behavior>.\n--\n-- For examples on how to use @beam-postgres@ usage, see\n-- <https://haskell-beam.github.io/beam/user-guide/backends/beam-postgres/ its manual>.\n\nmodule Database.Beam.Postgres\n  (  -- * Beam Postgres backend\n    Postgres(..), Pg, liftIOWithHandle\n\n    -- ** Postgres syntax\n  , PgCommandSyntax, PgSyntax\n  , PgSelectSyntax, PgInsertSyntax\n  , PgUpdateSyntax, PgDeleteSyntax\n\n    -- * Beam URI support\n  , postgresUriSyntax\n\n    -- * Postgres-specific features\n    -- ** Postgres-specific data types\n\n  , json, jsonb, uuid, money\n  , tsquery, tsvector, text, bytea\n  , unboundedArray\n\n    -- *** @SERIAL@ support\n  , smallserial, serial, bigserial\n\n  , module Database.Beam.Postgres.PgSpecific\n\n  , runBeamPostgres, runBeamPostgresDebug\n\n    -- ** Postgres extension support\n  , PgExtensionEntity, IsPgExtension(..)\n  , pgCreateExtension, pgDropExtension\n  , getPgExtension\n\n    -- ** Utilities for defining custom instances\n  , fromPgIntegral\n  , fromPgScientificOrIntegral\n\n    -- ** Debug support\n\n  , PgDebugStmt\n  , pgTraceStmtIO, pgTraceStmtIO'\n  , pgTraceStmt\n\n  -- * @postgresql-simple@ re-exports\n\n  , Pg.ResultError(..), Pg.SqlError(..)\n\n  , Pg.Connection, Pg.ConnectInfo(..)\n  , Pg.defaultConnectInfo\n\n  , Pg.connectPostgreSQL, Pg.connect\n  , Pg.close\n\n  ) where\n\nimport Database.Beam.Postgres.Connection\nimport Database.Beam.Postgres.Full () -- for BeamHasInsertOnConflict instance\nimport Database.Beam.Postgres.Syntax\nimport Database.Beam.Postgres.Types\nimport Database.Beam.Postgres.PgSpecific\nimport Database.Beam.Postgres.Migrate ( tsquery, tsvector, text, bytea, unboundedArray\n                                      , json, jsonb, uuid, money, smallserial, serial\n                                      , bigserial)\nimport Database.Beam.Postgres.Extensions ( PgExtensionEntity, IsPgExtension(..)\n                                         , pgCreateExtension, pgDropExtension\n                                         , getPgExtension )\nimport Database.Beam.Postgres.Debug\n\nimport qualified Database.PostgreSQL.Simple as Pg\n"