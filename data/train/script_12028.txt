b'// UVa1343 The Rotation Game\n// Rujia Liu\n// This solutions uses IDA* instead of BFS described in the book, because it\'s shorter 8-)\n// It\'s shorter because no need for lookup tables and "automatically" lexicographically smallest solution.\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\n/*\n      00    01\n      02    03\n04 05 06 07 08 09 10\n      11    12\n13 14 15 16 17 18 19\n      20    21\n      22    23\n*/\n\n// lines E~H are computed with the help of rev[]\nint line[8][7]={\n  { 0, 2, 6,11,15,20,22}, // A\n  { 1, 3, 8,12,17,21,23}, // B\n  {10, 9, 8, 7, 6, 5, 4}, // C\n  {19,18,17,16,15,14,13}, // D\n};\n\nconst int rev[8] = {5, 4, 7, 6, 1, 0, 3, 2}; // reverse lines of each line\n\n// center squares\nconst int center[8] = {6, 7, 8, 11, 12, 15, 16, 17};\n\nint a[24];\nchar ans[1000];\n\nbool is_final() {\n  for(int i = 0; i < 8; i++)\n    if (a[center[i]] != a[center[0]]) return false;\n  return true;\n}\n\nint diff(int target) {\n  int ans = 0;\n  for(int i = 0; i < 8; i++)\n    if(a[center[i]] != target) ans++;\n  return ans;\n}\n\ninline int h() {\n  return min(min(diff(1), diff(2)), diff(3));\n}\n\ninline void move(int i) {\n  int tmp = a[line[i][0]];\n  for(int j = 0; j < 6; j++) a[line[i][j]] = a[line[i][j+1]];\n  a[line[i][6]] = tmp;\n}\n\nbool dfs(int d, int maxd) {\n  if(is_final()) {\n    ans[d] = \'\\0\';\n    printf("%s\\n", ans);\n    return true;\n  }\n  if(d + h() > maxd) return false;\n  for(int i = 0; i < 8; i++) {\n    ans[d] = \'A\' + i;\n    move(i);\n    if(dfs(d+1, maxd)) return true;\n    move(rev[i]);\n  }\n  return false;\n}\n\nint main() {\n  for(int i = 4; i < 8; i++)\n    for(int j = 0; j < 7; j++) line[i][j] = line[rev[i]][6-j];\n\n  while(scanf("%d", &a[0]) == 1 && a[0]) {\n    for(int i = 1; i < 24; i++) scanf("%d", &a[i]);\n    for(int i = 0; i < 24; i++) if(!a[i]) return 0;\n    if(is_final()) {\n      printf("No moves needed\\n");\n    } else {\n      for(int maxd = 1; ; maxd++)\n        if(dfs(0, maxd)) break;\n    }\n    printf("%d\\n", a[6]);\n  }\n  return 0;\n}\n'