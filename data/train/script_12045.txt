b'/*\n * Copyright (C) 2015 Naman Dwivedi\n *\n * Licensed under the GNU General Public License v3\n *\n * This is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n */\n\npackage com.naman14.timber.utils;\n\nimport android.annotation.TargetApi;\nimport android.app.Activity;\nimport android.app.ActivityOptions;\nimport android.content.ActivityNotFoundException;\nimport android.content.Context;\nimport android.content.Intent;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentTransaction;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.util.Pair;\nimport android.view.View;\nimport android.widget.Toast;\n\nimport com.naman14.timber.R;\nimport com.naman14.timber.activities.MainActivity;\nimport com.naman14.timber.activities.NowPlayingActivity;\nimport com.naman14.timber.activities.PlaylistDetailActivity;\nimport com.naman14.timber.activities.SearchActivity;\nimport com.naman14.timber.activities.SettingsActivity;\nimport com.naman14.timber.fragments.AlbumDetailFragment;\nimport com.naman14.timber.fragments.ArtistDetailFragment;\nimport com.naman14.timber.nowplaying.Timber1;\nimport com.naman14.timber.nowplaying.Timber2;\nimport com.naman14.timber.nowplaying.Timber3;\nimport com.naman14.timber.nowplaying.Timber4;\nimport com.naman14.timber.nowplaying.Timber5;\nimport com.naman14.timber.nowplaying.Timber6;\n\nimport java.util.ArrayList;\n\npublic class NavigationUtils {\n\n    @TargetApi(21)\n    public static void navigateToAlbum(Activity context, long albumID, Pair<View, String> transitionViews) {\n\n        FragmentTransaction transaction = ((AppCompatActivity) context).getSupportFragmentManager().beginTransaction();\n        Fragment fragment;\n\n        transaction.setCustomAnimations(R.anim.activity_fade_in,\n                R.anim.activity_fade_out, R.anim.activity_fade_in, R.anim.activity_fade_out);\n        fragment = AlbumDetailFragment.newInstance(albumID, false, null);\n\n        transaction.hide(((AppCompatActivity) context).getSupportFragmentManager().findFragmentById(R.id.fragment_container));\n        transaction.add(R.id.fragment_container, fragment);\n        transaction.addToBackStack(null).commit();\n\n    }\n\n    @TargetApi(21)\n    public static void navigateToArtist(Activity context, long artistID, Pair<View, String> transitionViews) {\n\n        FragmentTransaction transaction = ((AppCompatActivity) context).getSupportFragmentManager().beginTransaction();\n        Fragment fragment;\n\n        transaction.setCustomAnimations(R.anim.activity_fade_in,\n                R.anim.activity_fade_out, R.anim.activity_fade_in, R.anim.activity_fade_out);\n        fragment = ArtistDetailFragment.newInstance(artistID, false, null);\n\n        transaction.hide(((AppCompatActivity) context).getSupportFragmentManager().findFragmentById(R.id.fragment_container));\n        transaction.add(R.id.fragment_container, fragment);\n        transaction.addToBackStack(null).commit();\n\n    }\n\n    public static void goToArtist(Context context, long artistId) {\n        Intent intent = new Intent(context, MainActivity.class);\n        intent.setAction(Constants.NAVIGATE_ARTIST);\n        intent.putExtra(Constants.ARTIST_ID, artistId);\n        context.startActivity(intent);\n    }\n\n    public static void goToAlbum(Context context, long albumId) {\n        Intent intent = new Intent(context, MainActivity.class);\n        intent.setAction(Constants.NAVIGATE_ALBUM);\n        intent.putExtra(Constants.ALBUM_ID, albumId);\n        context.startActivity(intent);\n    }\n\n    public static void goToLyrics(Context context) {\n        Intent intent = new Intent(context, MainActivity.class);\n        intent.setAction(Constants.NAVIGATE_LYRICS);\n        context.startActivity(intent);\n    }\n\n    public static void navigateToNowplaying(Activity context, boolean withAnimations) {\n\n        final Intent intent = new Intent(context, NowPlayingActivity.class);\n        context.startActivity(intent);\n    }\n\n    public static Intent getNowPlayingIntent(Context context) {\n\n        final Intent intent = new Intent(context, MainActivity.class);\n        intent.setAction(Constants.NAVIGATE_NOWPLAYING);\n        return intent;\n    }\n\n    public static void navigateToSettings(Activity context) {\n        final Intent intent = new Intent(context, SettingsActivity.class);\n        intent.setAction(Constants.NAVIGATE_SETTINGS);\n        context.startActivity(intent);\n    }\n\n    public static void navigateToSearch(Activity context) {\n        final Intent intent = new Intent(context, SearchActivity.class);\n        intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\n        intent.setAction(Constants.NAVIGATE_SEARCH);\n        context.startActivity(intent);\n    }\n\n\n    @TargetApi(21)\n    public static void navigateToPlaylistDetail(Activity context, String action, long firstAlbumID, String playlistName, int foregroundcolor, long playlistID, ArrayList<Pair> transitionViews) {\n        final Intent intent = new Intent(context, PlaylistDetailActivity.class);\n        intent.setAction(action);\n        intent.putExtra(Constants.PLAYLIST_ID, playlistID);\n        intent.putExtra(Constants.PLAYLIST_FOREGROUND_COLOR, foregroundcolor);\n        intent.putExtra(Constants.ALBUM_ID, firstAlbumID);\n        intent.putExtra(Constants.PLAYLIST_NAME, playlistName);\n        intent.putExtra(Constants.ACTIVITY_TRANSITION, transitionViews != null);\n\n        if (transitionViews != null && TimberUtils.isLollipop()) {\n            ActivityOptions options = ActivityOptions.makeSceneTransitionAnimation(context, transitionViews.get(0), transitionViews.get(1), transitionViews.get(2));\n            context.startActivityForResult(intent, Constants.ACTION_DELETE_PLAYLIST, options.toBundle());\n        } else {\n            context.startActivityForResult(intent, Constants.ACTION_DELETE_PLAYLIST);\n        }\n    }\n\n    public static void navigateToEqualizer(Activity context) {\n        try {\n            // The google MusicFX apps need to be started using startActivityForResult\n            context.startActivityForResult(TimberUtils.createEffectsIntent(), 666);\n        } catch (final ActivityNotFoundException notFound) {\n            Toast.makeText(context, "Equalizer not found", Toast.LENGTH_SHORT).show();\n        }\n    }\n\n    public static Intent getNavigateToStyleSelectorIntent(Activity context, String what) {\n        final Intent intent = new Intent(context, SettingsActivity.class);\n        intent.setAction(Constants.SETTINGS_STYLE_SELECTOR);\n        intent.putExtra(Constants.SETTINGS_STYLE_SELECTOR_WHAT, what);\n        return intent;\n    }\n\n    public static Fragment getFragmentForNowplayingID(String fragmentID) {\n        switch (fragmentID) {\n            case Constants.TIMBER1:\n                return new Timber1();\n            case Constants.TIMBER2:\n                return new Timber2();\n            case Constants.TIMBER3:\n                return new Timber3();\n            case Constants.TIMBER4:\n                return new Timber4();\n            case Constants.TIMBER5:\n                return new Timber5();\n            case Constants.TIMBER6:\n                return new Timber6();\n            default:\n                return new Timber1();\n        }\n\n    }\n\n    public static int getIntForCurrentNowplaying(String nowPlaying) {\n        switch (nowPlaying) {\n            case Constants.TIMBER1:\n                return 0;\n            case Constants.TIMBER2:\n                return 1;\n            case Constants.TIMBER3:\n                return 2;\n            case Constants.TIMBER4:\n                return 3;\n            case Constants.TIMBER5:\n                return 4;\n            case Constants.TIMBER6:\n                return 5;\n            default:\n                return 2;\n        }\n\n    }\n\n}\n'