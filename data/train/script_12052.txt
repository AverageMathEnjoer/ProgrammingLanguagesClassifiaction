b'package effectivejava.chapter12.item87;\nimport java.io.*;\n\n// StringList with a reasonable custom serialized form  - Page 349\npublic final class StringList implements Serializable {\n    private transient int size   = 0;\n    private transient Entry head = null;\n\n    // No longer Serializable!\n    private static class Entry {\n        String data;\n        Entry  next;\n        Entry  previous;\n    }\n\n    // Appends the specified string to the list\n    public final void add(String s) {  }\n\n    /**\n     * Serialize this {@code StringList} instance.\n     *\n     * @serialData The size of the list (the number of strings\n     * it contains) is emitted ({@code int}), followed by all of\n     * its elements (each a {@code String}), in the proper\n     * sequence.\n     */\n    private void writeObject(ObjectOutputStream s)\n            throws IOException {\n        s.defaultWriteObject();\n        s.writeInt(size);\n\n        // Write out all elements in the proper order.\n        for (Entry e = head; e != null; e = e.next)\n            s.writeObject(e.data);\n    }\n\n    private void readObject(ObjectInputStream s)\n            throws IOException, ClassNotFoundException {\n        s.defaultReadObject();\n        int numElements = s.readInt();\n\n        // Read in all elements and insert them in list\n        for (int i = 0; i < numElements; i++)\n            add((String) s.readObject());\n    }\n\n    // Remainder omitted\n}\n'