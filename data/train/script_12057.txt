b'package com.naman14.timber.utils;\n\nimport android.content.Context;\n\nimport com.squareup.okhttp.Cache;\nimport com.squareup.okhttp.OkHttpClient;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.lang.reflect.Type;\nimport java.util.concurrent.TimeUnit;\n\nimport retrofit.Callback;\nimport retrofit.RequestInterceptor;\nimport retrofit.RestAdapter;\nimport retrofit.client.OkClient;\nimport retrofit.converter.ConversionException;\nimport retrofit.converter.Converter;\nimport retrofit.http.GET;\nimport retrofit.http.Headers;\nimport retrofit.http.Query;\nimport retrofit.mime.TypedInput;\nimport retrofit.mime.TypedOutput;\n\n/**\n * Created by Christoph Walcher on 03.12.16.\n */\n\npublic class LyricsLoader {\n    private static LyricsLoader instance = null;\n    private static final String BASE_API_URL = "https://makeitpersonal.co";\n    private static final long CACHE_SIZE = 1024 * 1024;\n    private LyricsRestService service;\n\n    public static LyricsLoader getInstance(Context con) {\n        if(instance==null)instance = new LyricsLoader(con);\n        return instance;\n    }\n\n    private LyricsLoader(Context con){\n        final OkHttpClient okHttpClient = new OkHttpClient();\n\n        okHttpClient.setCache(new Cache(con.getApplicationContext().getCacheDir(),\n                CACHE_SIZE));\n        okHttpClient.setConnectTimeout(20, TimeUnit.SECONDS);\n\n        RequestInterceptor interceptor = new RequestInterceptor() {\n            @Override\n            public void intercept(RequestFacade request) {\n                //7-days cache\n                request.addHeader("Cache-Control", String.format("max-age=%d,max-stale=%d", Integer.valueOf(60 * 60 * 24 * 7), Integer.valueOf(31536000)));\n            }\n        };\n\n        RestAdapter.Builder builder = new RestAdapter.Builder()\n                .setEndpoint(BASE_API_URL)\n                .setRequestInterceptor(interceptor)\n                .setConverter(new Converter() {\n                    @Override\n                    public Object fromBody(TypedInput arg0, Type arg1)\n                            throws ConversionException {\n\n                        try {\n                            BufferedReader br = null;\n                            StringBuilder sb = new StringBuilder();\n\n                            String line;\n\n                            br = new BufferedReader(new InputStreamReader(arg0.in()));\n                            while ((line = br.readLine()) != null) {\n                                sb.append(line);\n                                sb.append(\'\\n\');\n                            }\n                            return sb.toString();\n\n                        } catch (IOException e) {\n                            e.printStackTrace();\n                            return null;\n                        }\n                    }\n\n                    @Override\n                    public TypedOutput toBody(Object arg0) {\n                        return null;\n                    }\n                })\n                .setClient(new OkClient(okHttpClient));\n\n         service = builder\n                .build()\n                .create(LyricsRestService.class);\n    }\n\n    public void getLyrics(String artist, String title, Callback<String> callback){\n        service.getLyrics(artist,title,callback);\n    }\n\n    private interface LyricsRestService {\n        @Headers("Cache-Control: public")\n        @GET("/lyrics")\n        void getLyrics(@Query("artist") String artist, @Query("title") String title, Callback<String> callback);\n    }\n\n}\n'