b'smallest k ([], ws) = ws !! k\nsmallest k (zs, []) = zs !! k\nsmallest k (zs, ws) =\n    case (a < b, k <= p + q) of\n        (True, True)   -> smallest k (zs, us)\n        (True, False)  -> smallest (k - p - 1) (ys, ws)\n        (False, True)  -> smallest k (xs, ws)\n        (False, False) -> smallest (k - q - 1) (zs, vs)\n    where p = (length zs) `div` 2\n          q = (length ws) `div` 2\n          (xs, a : ys) = splitAt p zs\n          (us, b : vs) = splitAt q ws\n'