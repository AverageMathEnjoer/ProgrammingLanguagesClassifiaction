b'/**\n * Copyright (C) 2020 Fernando Cejas Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.fernandocejas.sample.features.movies\n\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.viewModelScope\nimport com.fernandocejas.sample.core.platform.BaseViewModel\nimport com.fernandocejas.sample.features.movies.GetMovieDetails.Params\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport javax.inject.Inject\n\n@HiltViewModel\nclass MovieDetailsViewModel\n@Inject constructor(\n    private val getMovieDetails: GetMovieDetails,\n    private val playMovie: PlayMovie\n) : BaseViewModel() {\n\n    private val _movieDetails: MutableLiveData<MovieDetailsView> = MutableLiveData()\n    val movieDetails: LiveData<MovieDetailsView> = _movieDetails\n\n    fun loadMovieDetails(movieId: Int) =\n        getMovieDetails(Params(movieId), viewModelScope) {\n            it.fold(\n                ::handleFailure,\n                ::handleMovieDetails\n            )\n        }\n\n    fun playMovie(url: String) = playMovie(PlayMovie.Params(url), viewModelScope)\n\n    private fun handleMovieDetails(movie: MovieDetails) {\n        _movieDetails.value = MovieDetailsView(\n            movie.id, movie.title, movie.poster,\n            movie.summary, movie.cast, movie.director, movie.year, movie.trailer\n        )\n    }\n}\n'