b'#\' Delete Temporary Html Files\n#\'\n#\' Delete temporary files created when using generic print method with \n#\' \\code{method=\'browser\'} or \\code{method=\'viewer\'}, or when calling\n#\' \\code{view()} function.\n#\'\n#\' @param all Logical. When \\code{TRUE} (default), all temporary summarytools \n#\'   files are deleted. When \\code{FALSE}, only the latest file is.\n#\' @param silent Logical. Hide confirmation messages (\\code{FALSE} by default).\n#\' @param verbose Logical. Display a message for every file that is deleted.\n#\'   \\code{FALSE} by default.\n#\'\n#\' @return NULL\n#\'\n#\' @note Given that all temporary files are deleted automatically when an R\n#\' session is ended, this function is an overkill in most circumstances. It \n#\' could however be useful in server-type setups.\n#\'\n#\' @author Dominic Comtois, \\email{dominic.comtois@@gmail.com}\n#\'\n#\' @keywords IO\n#\'\n#\' @export\n#\' @importFrom utils tail\ncleartmp <- function(all=TRUE, silent = FALSE, verbose = FALSE) {\n  if (length(.st_env$tmpfiles) == 0) {\n    if (!silent)\n      message("No temporary files to delete.")\n  } else if (isTRUE(all) || all == 1 || all == "all") {\n    nfiles <- 0\n    for (tmpfile in .st_env$tmpfiles) {\n      nfiles <- nfiles + 1\n      if (isTRUE(verbose))\n        message(paste("Deleting", tmpfile))\n      unlink(tmpfile)\n    }\n    .st_env$tmpfiles <- c()\n    if (!isTRUE(silent))\n      message(paste(nfiles, "file(s) deleted"))\n  } else {\n    tmpfile <- tail(.st_env$tmpfiles, 1)\n    if (!isTRUE(silent))\n      message(paste("Deleting", tmpfile))\n    unlink(tmpfile)\n    length(.st_env$tmpfiles) <- length(.st_env$tmpfiles) - 1\n  }\n}\n'