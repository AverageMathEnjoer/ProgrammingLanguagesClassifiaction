b'package io.github.javiewer.network.provider;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.Elements;\n\nimport java.util.ArrayList;\nimport java.util.LinkedHashMap;\nimport java.util.List;\n\nimport io.github.javiewer.adapter.item.Actress;\nimport io.github.javiewer.adapter.item.Genre;\nimport io.github.javiewer.adapter.item.Movie;\nimport io.github.javiewer.adapter.item.MovieDetail;\nimport io.github.javiewer.adapter.item.Screenshot;\n\n/**\n * Project: JAViewer\n */\npublic class AVMOProvider {\n\n    public static List<Movie> parseMovies(String html) {\n        Document document = Jsoup.parse(html);\n\n        List<Movie> movies = new ArrayList<>();\n\n        for (Element box : document.select("a[class*=movie-box]")) {\n            Element img = box.select("div.photo-frame > img").first();\n            Element span = box.select("div.photo-info > span").first();\n\n            boolean hot = span.getElementsByTag("i").size() > 0;\n\n            Elements date = span.select("date");\n\n            movies.add(\n                    Movie.create(\n                            img.attr("title"),  //\xe6\xa0\x87\xe9\xa2\x98\n                            date.get(0).text(), //\xe7\x95\xaa\xe5\x8f\xb7\n                            date.get(1).text(), //\xe6\x97\xa5\xe6\x9c\x9f\n                            img.attr("src"),    //\xe5\x9b\xbe\xe7\x89\x87\xe5\x9c\xb0\xe5\x9d\x80\n                            box.attr("href"),   //\xe9\x93\xbe\xe6\x8e\xa5\n                            hot                 //\xe6\x98\xaf\xe5\x90\xa6\xe7\x83\xad\xe9\x97\xa8\n                    )\n            );\n        }\n\n        return movies;\n    }\n\n    public static List<Actress> parseActresses(String html) {\n        Document document = Jsoup.parse(html);\n\n        List<Actress> actresses = new ArrayList<>();\n\n        for (Element box : document.select("a[class*=avatar-box]")) {\n            Element img = box.select("div.photo-frame > img").first();\n            Element span = box.select("div.photo-info > span").first();\n\n            actresses.add(\n                    Actress.create(\n                            span.text(),     //\xe5\x90\x8d\xe5\xad\x97\n                            img.attr("src"), //\xe5\x9b\xbe\xe7\x89\x87\xe5\x9c\xb0\xe5\x9d\x80\n                            box.attr("href") //\xe9\x93\xbe\xe6\x8e\xa5\n                    ));\n        }\n\n        return actresses;\n    }\n\n    public static MovieDetail parseMoviesDetail(String html) {\n        Document document = Jsoup.parse(html);\n        MovieDetail movie = new MovieDetail();\n\n        //General Parsing\n        {\n            movie.title = document.select("div.container > h3").first().text();\n            movie.coverUrl = document.select("[class=bigImage]").first().attr("href");\n        }\n\n        //Parsing Screenshots\n        {\n            for (Element box : document.select("[class*=sample-box]")) {\n                movie.screenshots.add(\n                        Screenshot.create(\n                                box.getElementsByTag("img").first().attr("src"),\n                                box.attr("href")\n                        )\n                );\n            }\n        }\n\n        //Parsing Actresses\n        {\n            for (Element box : document.select("[class*=avatar-box]")) {\n                movie.actresses.add(\n                        Actress.create(\n                                box.text(),\n                                box.getElementsByTag("img").first().attr("src"),\n                                box.attr("href")\n                        )\n                );\n            }\n        }\n\n        //Parsing Headers\n        {\n            Element info = document.select("div.info").first();\n            if (info != null) {\n                for (Element p : info.select("p:not([class*=header]):has(span:not([class=genre]))")) {\n                    String[] strings = p.text().split(":");\n                    movie.headers.add(MovieDetail.Header.create(\n                            strings[0].trim(),\n                            strings.length > 1 ? strings[1].trim() : "",\n                            null\n                    ));\n                }\n\n                {\n                    List<String> headerNames = new ArrayList<>();\n                    List<String[]> headerAttr = new ArrayList<>();\n\n                    for (Element p : info.select("p[class*=header]")) {\n                        headerNames.add(p.text().replace(":", ""));\n                    }\n\n                    for (Element a : info.select("p > a")) {\n                        headerAttr.add(new String[]{a.text(), a.attr("href")});\n                    }\n\n                    for (int i = 0; i < Math.min(headerNames.size(), headerAttr.size()); i++) {\n                        movie.headers.add(\n                                MovieDetail.Header.create(\n                                        headerNames.get(i),\n                                        headerAttr.get(i)[0].trim(),\n                                        headerAttr.get(i)[1].trim()\n                                )\n                        );\n                    }\n                }\n\n                for (Element a : info.select("* > [class=genre] > a")) {\n                    movie.genres.add(\n                            Genre.create(\n                                    a.text(),\n                                    a.attr("href")\n                            )\n                    );\n                }\n            }\n            return movie;\n        }\n    }\n\n    public static LinkedHashMap<String, List<Genre>> parseGenres(String html) {\n        LinkedHashMap<String, List<Genre>> map = new LinkedHashMap<>();\n\n        Element container = Jsoup.parse(html).getElementsByClass("pt-10").first();\n        List<String> keys = new ArrayList<>();\n        for (Element e : container.getElementsByTag("h4")) {\n            keys.add(e.text());\n        }\n\n        List<List<Genre>> genres = new ArrayList<>();\n        for (Element element : container.getElementsByClass("genre-box")) {\n            List<Genre> list = new ArrayList<>();\n            for (Element e : element.getElementsByTag("a")) {\n                list.add(Genre.create(e.text(), e.attr("href")));\n            }\n            genres.add(list);\n        }\n\n        for (int i = 0; i < keys.size(); i++) {\n            map.put(keys.get(i), genres.get(i));\n        }\n\n        return map;\n    }\n}\n'