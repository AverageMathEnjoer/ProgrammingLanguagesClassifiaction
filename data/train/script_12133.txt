b'#\' getPosterior\n#\'\n#\' Get the posterior probability of a match for each matched pair of observations\n#\'\n#\' @usage getPosterior(matchesA, matchesB, EM, patterns)\n#\' @param matchesA A dataframe of the matched observations in\n#\' dataset A, with all variables used to inform the match.\n#\' @param matchesB A dataframe of the matched observations in\n#\' dataset B, with all variables used to inform the match.\n#\' @param EM The EM object from \\code{emlinkMARmov()}\n#\' @param patterns The output from \\code{getPatterns()}.\n#\'\n#\' @return \\code{getPosterior} returns the posterior probability of a match for each matched pair of observations\n#\' in matchesA and matchesB\n#\' @author Ben Fifield <benfifield@gmail.com>\n#\' @export\ngetPosterior <- function(matchesA, matchesB, EM, patterns){\n\n    ## --------------\n    ## Start function\n    ## --------------\n    ## Convert to dataframe\n    if(any(class(matchesA) %in% c("tbl_df", "data.table"))){\n        matchesA <- as.data.frame(matchesA)\n    }\n    if(any(class(matchesB) %in% c("tbl_df", "data.table"))){\n        matchesB <- as.data.frame(matchesB)\n    }\n\n    ## Get original column names\n    colnames.df.a <- colnames(matchesA)\n    colnames.df.b <- colnames(matchesB)\n\n    ## Gammalist\n    gammalist <- patterns\n\n    ## -------------------------------\n    ## Convert EM object to data frame\n    ## -------------------------------\n    emdf <- as.data.frame(EM$patterns.w)\n    emdf$zeta.j <- c(EM$zeta.j)\n\n    ## ---------------------\n    ## Merge EM to gammalist\n    ## ---------------------\n    namevec <- names(patterns)\n    matchesA <- cbind(matchesA, gammalist)\n    matchesA$roworder <- 1:nrow(matchesA)\n    matchesA <- merge(matchesA, emdf, by = namevec, all.x = TRUE)\n    matchesA <- matchesA[order(matchesA$roworder),]\n\n    ## -------------\n    ## Get max zetas\n    ## -------------\n    return(matchesA$zeta.j)\n    \n}\n\n'