b'{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# LANGUAGE TypeFamilies #-}\n\n-- | [LinkedIn Authenticating with OAuth 2.0 Overview](https://learn.microsoft.com/en-us/linkedin/shared/authentication/authentication?context=linkedin%2Fcontext)\nmodule Network.OAuth2.Provider.Linkedin where\n\nimport Data.Aeson\nimport Data.Map.Strict qualified as Map\nimport Data.Set qualified as Set\nimport Data.Text.Lazy (Text)\nimport GHC.Generics\nimport Network.OAuth.OAuth2\nimport Network.OAuth2.Experiment\nimport URI.ByteString.QQ\n\ndata Linkedin = Linkedin deriving (Eq, Show)\n\ntype instance IdpUserInfo Linkedin = LinkedinUser\n\ndefaultLinkedinApp :: IdpApplication \'AuthorizationCode Linkedin\ndefaultLinkedinApp =\n  AuthorizationCodeIdpApplication\n    { idpAppClientId = ""\n    , idpAppClientSecret = ""\n    , idpAppScope = Set.fromList ["r_liteprofile"]\n    , idpAppAuthorizeState = "CHANGE_ME"\n    , idpAppAuthorizeExtraParams = Map.empty\n    , idpAppRedirectUri = [uri|http://localhost|]\n    , idpAppName = "default-linkedin-App"\n    , idpAppTokenRequestAuthenticationMethod = ClientSecretPost\n    , idp = defaultLinkedinIdp\n    }\n\ndefaultLinkedinIdp :: Idp Linkedin\ndefaultLinkedinIdp =\n  Idp\n    { idpFetchUserInfo = authGetJSON @(IdpUserInfo Linkedin)\n    , idpUserInfoEndpoint = [uri|https://api.linkedin.com/v2/me|]\n    , idpAuthorizeEndpoint = [uri|https://www.linkedin.com/oauth/v2/authorization|]\n    , idpTokenEndpoint = [uri|https://www.linkedin.com/oauth/v2/accessToken|]\n    }\n\ndata LinkedinUser = LinkedinUser\n  { localizedFirstName :: Text\n  , localizedLastName :: Text\n  }\n  deriving (Show, Generic, Eq)\n\ninstance FromJSON LinkedinUser\n'