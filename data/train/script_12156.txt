b'//second file is better\n//ye codechef wala submission h mera\nconst int  N =  1003;\nint a[N][N], dp[N][N][10][10];\nconst int lg = 10;\n//lg is 1 power greater than N\nll dpp[N][N]; \n \nint st[N];\nint max(int a, int b, int c, int d){\n\treturn max(a, max(b, max(c, d)));\n}\nint n, m;\nvoid mem(){\n\tint i,j,x,y,k;\n\t   st[1] = 0;\n        int c = 0;\n        Fo(i, 2, N)\n        {\n                int v = (1 << c);\n                if (v + v < i)\n                        c++;\n                st[i] = c;\n        }\n\tfo(i, n)\n\tfo(j, m)\n\t\tdp[i][j][0][0] = a[i][j];\n\t\t\n\tFo(i, 0, n)\n        {\n                Fo(k, 1, lg)\n                {\n                        int val = (1 << k);\n                        int nval = val / 2;\n                        Fo(j, 0, m)\n                        {\n                                if (j + val > m)\n                                        break;\n                                dp[i][j][k][0] = max(dp[i][j][k - 1][0], dp[i][j + nval][k - 1][0]);\n                        }\n                }\n        }\n        Fo(j, 0, m)\n        {\n                Fo(k, 1, lg)\n                {\n                        int val = (1 << k);\n                        int nval = val / 2;\n                        Fo(i, 0, n)\n                        {\n                                if (i + val > n)\n                                        break;\n                                dp[i][j][0][k] = max(dp[i][j][0][k - 1], dp[i + nval][j][0][k - 1]);\n                        }\n                }\n        }\n      int k1,k2,st2;\n      \n      int st1=st2=lg-1;\n      \n\t Fo(k1, 1, st1 + 1)\n        {\n                int val1 = (1 << k1);\n                int nval1 = val1 / 2;\n                Fo(k2, 1, st2 + 1)\n                {\n                        int val2 = (1 << k2);\n                        int nval2 = val2 / 2;\n                        Fo(i, 0, n)\n                        {\n                                Fo(j, 0, m)\n                                {\n                                        if ((j + val1 > m) || (i + val2 > n))\n                                                continue;\n                                                \n                                        dp[i][j][k1][k2] = max(dp[i][j][k1 - 1][k2 - 1], dp[i + nval2][j][k1 - 1][k2 - 1], dp[i][j+nval1][k1 - 1][k2 - 1], dp[i + nval2][j+nval1][k1 - 1][k2 - 1]);\n                                }\n                        }\n                }\n        }\n        \n}\n \nint query(int i, int j, int down, int k){\n\tint dx = down - i + 1;\n    int dy = k - j + 1;\n    int k1 = st[dy];\n    int k2 = st[dx];\n    int val1 = (1 << k1);\n    int val2 = (1 << k2);\n\t int dp1 = max(dp[i][j][k1][k2], dp[i][k-val1+1][k1][k2]);\n\t int dp2 = max(dp[down - val2 + 1][j][k1][k2], dp[down - val2 + 1][k - val1 + 1][k1][k2]);\n\treturn max(dp1,dp2);\n\t\n}\n'