b'class Solution {\npublic:\n    vector<int> en;\n    int go(int lo, int hi) {\n        if(lo+1 == hi) return 1;\n        int mid = en[lo];\n        if(mid == hi) return 2*go(lo+1, hi-1);\n        return go(lo, mid) + go(mid+1, hi);\n    }\n    \n    //calculates the score of string S\n    //This is solution of my YouTube video "The Recursive Stack Problem on Strings"\n    int scoreOfParentheses(string &S) {\n        int i, n = (int)S.size();\n        n = max(n, 1);\n        en.resize(n, 0);\n        stack<int> s;\n        for(i=0; i<n; i++){\n            if(S[i] == \')\'){\n                int t = s.top();\n                en[t] = i;\n                s.pop();\n            }\n            else s.push(i);\n        }\n        return go(0, n-1);\n    }\n};\n'