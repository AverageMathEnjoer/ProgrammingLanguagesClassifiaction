b'namespace Fable.Plugins\n#r "../docs/fable-core/Fable.Core.dll"\nopen Fable\nopen Fable.AST\n\ntype PatchedMethods() =\n  interface IReplacePlugin with\n    member x.TryReplace com (info:Fable.ApplyInfo) =\n      match info.ownerFullName, info.methodName, info.args with\n      |"System.Char", "IsDigit", [s] ->       // char => string after compilation\n        let emitExpr = Fable.Value (Fable.Emit "!isNaN(parseInt($0))")\n        Some (Fable.Apply(emitExpr, [s], Fable.ApplyMeth, info.returnType, info.range))\n      |"System.Char", "IsLetter", [s] ->      // only doing a-z and A-Z\n        let emitExpr = Fable.Value (Fable.Emit @"/^[a-zA-Z]$/.test($0)")\n        Some (Fable.Apply(emitExpr, [s], Fable.ApplyMeth, info.returnType, info.range))\n      |_ -> None\n'