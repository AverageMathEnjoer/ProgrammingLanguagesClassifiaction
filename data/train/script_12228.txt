b'// UVa10559 Blocks\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn = 200 + 5;\nint n, A[maxn], d[maxn][maxn][maxn];\n\n// blocks i~j, plus k blocks whose color is the same as block j\nint dp(int i, int j, int k) {\n  if(i > j) return 0;\n  int& ans = d[i][j][k];\n  if(ans >= 0) return ans;\n  int p = j;\n  while(p >= i && A[p] == A[j]) p--;\n  p++; // leftmost position that block j\'s color can "extend" to\n  ans = dp(i, p-1, 0) + (j-p+k+1)*(j-p+k+1); // click block j\n  for(int q = i; q < p; q++)\n    if(A[q] == A[j] && A[q] != A[q+1]) // remove q+1~p-1 first\n      ans = max(ans, dp(q+1, p-1, 0) + dp(i, q, j-p+k+1));\n  return ans;\n}\n\nint main() {\n  int T;\n  scanf("%d", &T);\n  for(int kase = 1; kase <= T; kase++) {\n    scanf("%d", &n);\n    for(int i = 0; i < n; i++) scanf("%d", &A[i]);\n    memset(d, -1, sizeof(d));\n    printf("Case %d: %d\\n", kase, dp(0, n-1, 0));\n  }\n  return 0;\n}\n'