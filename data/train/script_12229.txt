b'{-# LANGUAGE TemplateHaskell #-}\n\nmodule AsyncTest (tests, manual_main) where\n\nimport Control.Exception \nimport Control.Monad.Par.Scheds.Trace\nimport Control.Monad.Par.Scheds.TraceInternal (Par(..),Trace(Fork),runCont,runParAsync)\nimport Test.Framework.TH (testGroupGenerator)\nimport Test.Framework (defaultMain, testGroup)\nimport Test.Framework.Providers.HUnit\n\nimport TestHelpers\n\n--------------------------------------------------------------------------------\n\n-- A D E  or A D B E  but no C\n--\n-- ODD -- this passes when run manually (compiled or interpreted) but\n-- fails when run through the test framework [2011.10.25].\ncase_async_test2 = \n  do x <- async2\n     case words x of \n       ["A","D","E"]     -> return ()\n       ["A","D","B","E"] -> return ()\n       _  -> error$ "async_test2: Bad output: "++ show (words x)\n\nasync2 = collectOutput $ \\ r -> do \n  prnt r "A"\n  evaluate$ runParAsync $\n    do \n       fork $ do _prnt r "B"\n\t\t x <- _unsafeio$ waste_time 0.5\n\t\t _prnt r$ "C "++ show x\n--\t\t _prnt r$ "C "++ show (_waste_time awhile)\n       _prnt r "D"\n  prnt r "E"\n\n--------------------------------------------------------------------------------\n\ntests = [ $(testGroupGenerator) ]\n\n-- It works fine when run like this:\nmanual_main = do x <- async2; putStrLn x\n                 case_async_test2\n--\t  case_async_test1\n'