b'{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# LANGUAGE TypeFamilies #-}\n\n-- | [Github build oauth applications guide](https://docs.github.com/en/developers/apps/building-oauth-apps)\nmodule Network.OAuth2.Provider.Github where\n\nimport Data.Aeson\nimport Data.Map.Strict qualified as Map\nimport Data.Set qualified as Set\nimport Data.Text.Lazy (Text)\nimport GHC.Generics\nimport Network.OAuth.OAuth2\nimport Network.OAuth2.Experiment\nimport URI.ByteString.QQ\n\ndata Github = Github deriving (Eq, Show)\n\ntype instance IdpUserInfo Github = GithubUser\n\ndefaultGithubApp :: IdpApplication \'AuthorizationCode Github\ndefaultGithubApp =\n  AuthorizationCodeIdpApplication\n    { idpAppClientId = ""\n    , idpAppClientSecret = ""\n    , idpAppScope = Set.empty\n    , idpAppAuthorizeState = "CHANGE_ME"\n    , idpAppAuthorizeExtraParams = Map.empty\n    , idpAppRedirectUri = [uri|http://localhost|]\n    , idpAppName = "default-github-App"\n    , idpAppTokenRequestAuthenticationMethod = ClientSecretBasic\n    , idp = defaultGithubIdp\n    }\n\ndefaultGithubIdp :: Idp Github\ndefaultGithubIdp =\n  Idp\n    { idpFetchUserInfo = authGetJSON @(IdpUserInfo Github)\n    , idpUserInfoEndpoint = [uri|https://api.github.com/user|]\n    , idpAuthorizeEndpoint = [uri|https://github.com/login/oauth/authorize|]\n    , idpTokenEndpoint = [uri|https://github.com/login/oauth/access_token|]\n    }\n\ndata GithubUser = GithubUser\n  { name :: Text\n  , id :: Integer\n  }\n  deriving (Show, Generic)\n\ninstance FromJSON GithubUser\n'