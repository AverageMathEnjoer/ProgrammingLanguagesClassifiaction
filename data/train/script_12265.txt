b'# WEEK 4 PROBLEMS\n\n################################\n# 1\n\n## R code 6.21\nlibrary(rethinking)\nd <- sim_happiness( seed=1977 , N_years=1000 )\nprecis(d)\n\n## R code 6.22\nd2 <- d[ d$age>17 , ] # only adults\nd2$A <- ( d2$age - 18 ) / ( 65 - 18 )\n\n## R code 6.23\nd2$mid <- d2$married + 1\nm6.9 <- quap(\n    alist(\n        happiness ~ dnorm( mu , sigma ),\n        mu <- a[mid] + bA*A,\n        a[mid] ~ dnorm( 0 , 1 ),\n        bA ~ dnorm( 0 , 2 ),\n        sigma ~ dexp(1)\n    ) , data=d2 )\n\n## R code 6.24\nm6.10 <- quap(\n    alist(\n        happiness ~ dnorm( mu , sigma ),\n        mu <- a + bA*A,\n        a ~ dnorm( 0 , 1 ),\n        bA ~ dnorm( 0 , 2 ),\n        sigma ~ dexp(1)\n    ) , data=d2 )\n\n\ncompare( m6.9 , m6.10 , func=PSIS )\ncompare( m6.9 , m6.10 , func=WAIC )\n\nm1 <- quap(\n    alist(\n        happiness ~ dnorm( mu , sigma ),\n        mu <- a[mid],\n        a[mid] ~ dnorm( 0 , 1 ),\n        sigma ~ dexp(1)\n    ) , data=d2 )\n\n################################\n# 2 \n\nlibrary(rethinking)\ndata(foxes)\nd <- foxes\nd$W <- standardize(d$weight)\nd$A <- standardize(d$area)\nd$F <- standardize(d$avgfood)\nd$G <- standardize(d$groupsize)\n\ntau <- 0.5\n\nm1 <- quap(\n    alist(\n        W ~ dnorm( mu , sigma ),\n        mu <- a + bF*F + bG*G + bA*A,\n        a ~ dnorm(0,0.2),\n        c(bF,bG,bA) ~ dnorm(0,tau),\n        sigma ~ dexp(1)\n    ), data=d )\n\nm2 <- quap(\n    alist(\n        W ~ dnorm( mu , sigma ),\n        mu <- a + bF*F + bG*G,\n        a ~ dnorm(0,0.2),\n        c(bF,bG) ~ dnorm(0,tau),\n        sigma ~ dexp(1)\n    ), data=d )\n\nm3 <- quap(\n    alist(\n        W ~ dnorm( mu , sigma ),\n        mu <- a + bG*G + bA*A,\n        a ~ dnorm(0,0.2),\n        c(bG,bA) ~ dnorm(0,tau),\n        sigma ~ dexp(1)\n    ), data=d )\n\nm4 <- quap(\n    alist(\n        W ~ dnorm( mu , sigma ),\n        mu <- a + bF*F,\n        a ~ dnorm(0,0.2),\n        bF ~ dnorm(0,tau),\n        sigma ~ dexp(1)\n    ), data=d )\n\nm5 <- quap(\n    alist(\n        W ~ dnorm( mu , sigma ),\n        mu <- a + bA*A,\n        a ~ dnorm(0,0.2),\n        bA ~ dnorm(0,tau),\n        sigma ~ dexp(1)\n), data=d )\n\ncompare( m1 , m2 , m3 , m4 , m5 , func=PSIS )\n\nm6 <- quap(\n    alist(\n        W ~ dnorm( mu , sigma ),\n        mu <- a + bA*A + bF*F,\n        a ~ dnorm(0,0.2),\n        c(bA,bF) ~ dnorm(0,0.5),\n        sigma ~ dexp(1)\n    ), data=d )\n\n#######\n# 3\n\ndata(cherry_blossoms)\nd <- cherry_blossoms\n\nd$D <- standardize(d$doy)\nd$T <- standardize(d$temp)\n\ndd <- d[ complete.cases(d$D,d$T) , ]\n\nm3a <- quap(\n    alist(\n        D ~ dnorm(mu,sigma),\n        mu <- a,\n        a ~ dnorm(0,10),\n        sigma ~ dexp(1)\n    ) , data=list(D=dd$D,T=dd$T) )\n\nm3b <- quap(\n    alist(\n        D ~ dnorm(mu,sigma),\n        mu <- a + b*T,\n        a ~ dnorm(0,10),\n        b ~ dnorm(0,10),\n        sigma ~ dexp(1)\n    ) , data=list(D=dd$D,T=dd$T) )\n\nm3c <- quap(\n    alist(\n        D ~ dnorm(mu,sigma),\n        mu <- a + b1*T + b2*T^2,\n        a ~ dnorm(0,10),\n        c(b1,b2) ~ dnorm(0,10),\n        sigma ~ dexp(1)\n    ) , data=list(D=dd$D,T=dd$T) )\n\ncompare( m3a , m3b , m3c , func=PSIS )\n\n# predict\n\nTval <- (9 - mean(d$temp,na.rm=TRUE))/sd(d$temp,na.rm=TRUE)\nD_sim <- sim( m3b , data=list(T=Tval) )\n# put back on natural scale\ndoy_sim <- D_sim*sd(d$doy,na.rm=TRUE) + mean(d$doy,na.rm=TRUE)\ndens( doy_sim , lwd=4 , col=2 , xlab="day in year 1st bloom")\nabline(v=89,lty=1)\ndens( d$doy , add=TRUE , lwd=3 )\n\n#######\n# 4\n\ndata(Dinosaurs)\nd <- Dinosaurs\n\ndd <- d[ d$sp_id==1 , ]\n\ndat <- list(\n    A = dd$age,\n    M = dd$mass/max(dd$mass)\n)\n\nm4a <- ulam(\n    alist(\n        M ~ normal(mu,sigma),\n        mu <- a + b*A,\n        a ~ normal(0,1),\n        b ~ normal(0,1),\n        sigma ~ exponential(1)\n    ) , data=dat , chains=4 , log_lik=TRUE )\n\nplot( dat$A , dat$M , xlab="age" , ylab="mass (normalized)" , lwd=3 , xlim=c(0,16) )\nAseq <- seq(from=0,to=16,len=50)\nmu <- link(m4a,data=list(A=Aseq))\nlines( Aseq , apply(mu,2,mean) , lwd=3 )\nshade( apply(mu,2,PI) , Aseq )\n\nm4b <- ulam(\n    alist(\n        M ~ normal(mu,sigma),\n        mu <- k*(1-exp(-b*A)),\n        b ~ exponential(1),\n        k ~ normal(1,0.5),\n        sigma ~ exponential(1)\n    ) , data=dat , chains=4 , log_lik=TRUE )\n\nplot( dat$A , dat$M , xlab="age" , ylab="mass (normalized)" , lwd=3 , xlim=c(0,16) )\nmu <- link(m4b,data=list(A=Aseq))\nlines( Aseq , apply(mu,2,mean) , lwd=3 )\nshade( apply(mu,2,PI) , Aseq )\n\nm4c <- ulam(\n    alist(\n        M ~ normal(mu,sigma),\n        mu <- k*(1-exp(-b*A))^a,\n        a ~ exponential(0.1),\n        b ~ exponential(1),\n        k ~ normal(1,0.5),\n        sigma ~ exponential(1)\n    ) , data=dat , chains=4 , log_lik=TRUE )\n\nplot( dat$A , dat$M , xlab="age" , ylab="mass (normalized)" , lwd=3 , xlim=c(0,16) )\nmu <- link(m4c,data=list(A=Aseq))\nlines( Aseq , apply(mu,2,mean) , lwd=3 )\nshade( apply(mu,2,PI) , Aseq )\n\ncompare( m4a , m4b , m4c , func=PSIS )\n\n# try to fit to all species\n\n# scale max size within each species\nd$Ms <- sapply( 1:nrow(d) , function(i) d$mass[i]/max(d$mass[d$sp_id==d$sp_id[i]]) )\ndat_all <- list( A=d$age , M=d$Ms , S=d$sp_id )\n\nm4x <- ulam(\n    alist(\n        M ~ normal(mu,sigma),\n        mu <- k[S]*(1-exp(-b[S]*A))^a[S],\n        a[S] ~ exponential(0.1),\n        b[S] ~ exponential(1),\n        k[S] ~ normal(1,0.5),\n        sigma ~ exponential(1)\n    ) , data=dat_all , chains=4 , log_lik=TRUE )\n\nplot( NULL , xlim=c(0,max(d$age)) , ylim=c(0,1.5) , xlab="dinosaur age" , ylab="mass (normalized)" )\npost <- extract.samples(m4x)\nAseq <- seq(from=0,to=16,len=50)\nfor ( i in 1:max(d$sp_id) ) {\n    j <- which(dat_all$S==i)\n    points( dat_all$A[j] , dat_all$M[j] , col=i , lwd=3 )\n    mu <- link( m4x , data=list(S=rep(i,50),A=Aseq) )\n    lines( Aseq , apply(mu,2,mean) , lwd=3 , col=i )\n}\n\n# with intervals\nplot( NULL , xlim=c(0,max(d$age)) , ylim=c(0,2) , xlab="dinosaur age" , ylab="mass (normalized)" )\npost <- extract.samples(m4x)\nAseq <- seq(from=0,to=16,len=50)\nfor ( i in 1:max(d$sp_id) ) {\n    j <- which(dat_all$S==i)\n    points( dat_all$A[j] , dat_all$M[j] , col=i , lwd=3 )\n    mu <- link( m4x , data=list(S=rep(i,50),A=Aseq) )\n    lines( Aseq , apply(mu,2,mean) , lwd=3 , col=i )\n    shade( apply(mu,2,PI) , Aseq , col=col.alpha(i,0.3) )\n}\n\n# line model\nm4z <- ulam(\n    alist(\n        M ~ normal(mu,sigma),\n        mu <- a[S] + b[S]*A,\n        a[S] ~ normal(0,1),\n        b[S] ~ normal(0,1),\n        sigma ~ exponential(1)\n    ) , data=dat_all , chains=4 , log_lik=TRUE )\n\ncompare( m4z , m4x , func=PSIS )\n\nplot( NULL , xlim=c(0,max(d$age)) , ylim=c(0,1) , xlab="age" , ylab="mass (normalized)" )\npost <- extract.samples(m4z)\nAseq <- seq(from=0,to=16,len=50)\nfor ( i in 1:max(d$sp_id) ) {\n    j <- which(dat_all$S==i)\n    points( dat_all$A[j] , dat_all$M[j] , col=i , lwd=3 )\n    mu <- link( m4z , data=list(S=rep(i,50),A=Aseq) )\n    lines( Aseq , apply(mu,2,mean) , lwd=2 , col=i )\n}\n\n'