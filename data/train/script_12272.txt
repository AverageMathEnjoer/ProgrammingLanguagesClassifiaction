b'package com.iammert.library\n\nimport android.content.Context\nimport android.os.Build\nimport android.os.Handler\nimport android.util.AttributeSet\nimport android.view.LayoutInflater\nimport android.widget.FrameLayout\nimport android.widget.LinearLayout\nimport androidx.annotation.RequiresApi\nimport androidx.viewpager.widget.ViewPager\n\nclass AnimatedTabLayout : FrameLayout {\n\n    interface OnChangeListener{\n        fun onChanged(position: Int)\n    }\n\n    lateinit var containerLinearLayout: LinearLayout\n\n    lateinit var tabs: List<AnimatedTabItemContainer>\n\n    lateinit var selectedTab: AnimatedTabItemContainer\n\n    lateinit var viewPager: ViewPager\n\n    private var onChangeListener: OnChangeListener? = null\n\n    constructor(context: Context) : super(context) {\n        init(context, null, 0, 0)\n    }\n\n    constructor(context: Context, attrs: AttributeSet?) : super(context, attrs) {\n        init(context, attrs, 0, 0)\n    }\n\n    constructor(context: Context, attrs: AttributeSet?, defStyleAttr: Int) : super(context, attrs, defStyleAttr) {\n        init(context, attrs, defStyleAttr, 0)\n    }\n\n    @RequiresApi(Build.VERSION_CODES.LOLLIPOP)\n    constructor(context: Context, attrs: AttributeSet?, defStyleAttr: Int, defStyleRes: Int) : super(context, attrs, defStyleAttr, defStyleRes) {\n        init(context, attrs, defStyleAttr, defStyleRes)\n    }\n\n\n    private fun init(context: Context?, attrs: AttributeSet?, defStyleAttr: Int, defStyleRes: Int) {\n        val typedArray = context?.theme?.obtainStyledAttributes(attrs, R.styleable.AnimatedTabLayout, defStyleAttr, defStyleRes)\n        val tabXmlResource = typedArray?.getResourceId(R.styleable.AnimatedTabLayout_atl_tabs, 0)\n\n        tabs = AnimatedTabResourceParser(context, tabXmlResource!!).parse()\n\n        val layoutInflater = LayoutInflater.from(getContext())\n        val parentView = layoutInflater.inflate(R.layout.view_tablayout_container, this, true)\n        containerLinearLayout = parentView.findViewById(R.id.linear_layout_container)\n\n        tabs.forEach { tab ->\n            containerLinearLayout.addView(tab)\n            tab.setOnClickListener {\n                val selectedIndex = tabs.indexOf(tab)\n                onPageChangeListener.onPageSelected(selectedIndex)\n                viewPager.currentItem = selectedIndex\n            }\n        }\n    }\n\n    fun setTabChangeListener(onChangeListener: OnChangeListener?){\n        this.onChangeListener = onChangeListener\n    }\n\n    fun setupViewPager(viewPager: ViewPager) {\n        this.viewPager = viewPager\n        this.viewPager.addOnPageChangeListener(onPageChangeListener)\n        selectedTab = tabs[viewPager.currentItem]\n        selectedTab.expand()\n    }\n\n    private var onPageChangeListener: ViewPager.OnPageChangeListener = object : ViewPager.SimpleOnPageChangeListener() {\n        override fun onPageSelected(position: Int) {\n            super.onPageSelected(position)\n            if (tabs[position] == selectedTab) {\n                return\n            }\n            selectedTab.collapse()\n            selectedTab = tabs[position]\n            selectedTab.expand()\n\n            this@AnimatedTabLayout.onChangeListener?.onChanged(position)\n        }\n    }\n\n}\n\n'