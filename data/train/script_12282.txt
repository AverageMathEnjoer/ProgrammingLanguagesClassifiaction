b'#\' Include \\strong{summarytools}\' \\emph{css} Into Active Document\n#\'\n#\' Generate the \\emph{css} needed by \\strong{summarytools} in \\emph{html}\n#\' documents.\n#\'\n#\' @param main Logical. Include \\emph{summarytools.css} file. \\code{TRUE} by\n#\'   default. This will affects only \\strong{summarytools} objects, for one\n#\'   exception: two properties of the \\code{img} tag are redefined to have\n#\'   \\code{background-color: transparent} and \\code{border: 0}.\n#\' @param global Logical. Include the additional \\emph{summarytools-global.css}\n#\'   file, which affects all content in the document. Provides control over\n#\'   objects that were not \\emph{html-rendered}; in particular, table widths\n#\'   and vertical alignment are modified to improve layout. \\code{FALSE} by\n#\'   default.\n#\' @param bootstrap Logical. Include \\emph{bootstrap.min.css}. \\code{FALSE}\n#\'   by default.\n#\' @param style.tag Logical. Include the opening and closing \\code{<style>}\n#\'   tags. \\code{TRUE} by default.\n#\' @param \\dots Character. Path to additional \\emph{css} file(s) to include.\n#\'\n#\' @return The \\emph{css} file(s) content silently as a character vector, and\n#\'   prints (using \\code{cat()}) the content.\n#\'\n#\' @details Typically the function is called right after the initial setup chunk\n#\'   of an \\emph{R markdown} document, in a chunk having options\n#\'   \\code{echo=FALSE} and \\code{results="asis"}.\n#\'   \n#\' @keywords utilities\n#\' @author Dominic Comtois, \\email{dominic.comtois@@gmail.com}\n#\' @export\nst_css <- function(main = TRUE,\n                   global = FALSE,\n                   bootstrap = FALSE, \n                   style.tag = TRUE,\n                   ...) {\n\n  output <- character()\n  \n  if (isTRUE(style.tag)) {\n    output %+=% \'<style type="text/css">\\n\'\n  }\n  \n  if (isTRUE(main)) {\n    output %+=% readLines(system.file(package = "summarytools",\n                                      "includes/stylesheets/summarytools.css"))\n  }\n\n  if (isTRUE(global)) {\n    output %+=% readLines(\n      system.file(package = "summarytools",\n                  "includes/stylesheets/summarytools-global.css")\n    )\n  }\n  \n  if (isTRUE(bootstrap)) {\n    output %+=% readLines(system.file(package = "summarytools",\n                                      "includes/stylesheets/bootstrap.min.css"))\n  }\n  \n  dotArgs <- list(...)\n  for (f in dotArgs) {\n    output %+=% \n      readLines(f)\n  }\n  \n  if (isTRUE(style.tag)) {\n    output %+=% \'</style>\\n\'\n  }\n  \n  output <- paste(output, sep = "\\n")\n  cat(output)\n  return(invisible(output))\n}\n'