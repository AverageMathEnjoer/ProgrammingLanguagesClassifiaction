b'package com.db.williamchart\n\nimport android.graphics.Paint\nimport android.graphics.Shader\nimport android.graphics.Typeface\n\n/**\n * The Paint class holds the paint object used to draw charts\n * and provides methods to speed up its customization before drawing.\n */\nclass Painter(\n    val paint: Paint = Paint(),\n    var labelsFont: Typeface?\n) {\n\n    init {\n        paint.textAlign = Paint.Align.CENTER\n    }\n\n    /**\n     * Measure text width given a certain font size.\n     *\n     * @param text text to be measured.\n     * @param textSize size used in font.\n     * @return width of the text.\n     */\n    fun measureLabelWidth(text: String, textSize: Float): Float {\n        paint.typeface = labelsFont\n        paint.textSize = textSize\n        return paint.measureText(text)\n    }\n\n    /**\n     * Measure the maximum text height for a given font size.\n     *\n     * @param textSize size used in font.\n     * @return height of the text.\n     */\n    fun measureLabelHeight(textSize: Float): Float {\n        paint.textSize = textSize\n        return paint.descent() - paint.ascent()\n    }\n\n    fun measureLabelAscent(textSize: Float): Float {\n        paint.textSize = textSize\n        return paint.ascent()\n    }\n\n    fun measureLabelDescent(textSize: Float): Float {\n        paint.textSize = textSize\n        return paint.descent()\n    }\n\n    /**\n     * Prepares a Paint object already configured to be used.\n     *\n     * @param textSize new font size to set in the paint.\n     * @param color new color (including alpha) to set in the paint.\n     * @param style new style to set in the paint.\n     * @param strokeWidth new stroke width, used when style is Stroke or StrokeAndFill.\n     * @param shader May be null. New shader to be set in the paint.\n     * @param typeface May be null. New Typeface to be set in the paint.\n     * @return Configured Paint object.\n     */\n    fun prepare(\n        textSize: Float = 15F,\n        color: Int = -0x1000000,\n        style: Paint.Style = Paint.Style.FILL,\n        strokeWidth: Float = 4F,\n        shader: Shader? = null,\n        font: Typeface? = null\n    ): Paint {\n        paint.textSize = textSize\n        paint.color = color\n        paint.style = style\n        paint.strokeWidth = strokeWidth\n        paint.shader = shader\n        paint.typeface = font\n\n        return paint\n    }\n}\n'