b'package com.droidcba.kedditbysteps.commons\n\nimport android.arch.lifecycle.ViewModel\nimport android.arch.lifecycle.ViewModelProvider\nimport dagger.Lazy\nimport javax.inject.Inject\n\n/**\n * Lazy ViewModel Factory to be used for scopes and subscopes.\n *\n * @author juan.saravia\n */\nclass ViewModelFactory<T : ViewModel>\n@Inject constructor(private val viewModel: @JvmSuppressWildcards Lazy<T>) : ViewModelProvider.Factory {\n    @Suppress("UNCHECKED_CAST")\n    override fun <T : ViewModel?> create(modelClass: Class<T>): T = viewModel.get() as T\n}'