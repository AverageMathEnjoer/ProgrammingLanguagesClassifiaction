b'// UVa11093 Just Finish it up\n// Rujia Liu\n#include<cstdio>\n\nconst int maxn = 100000 + 5;\nint n, p[maxn], q[maxn];\n\n// returns s if success\n// otherwise, return the station you failed to reach\n// if you failed to reach the start, return -1\nint go(int s) {\n  int fuel = p[s] - q[s];\n  for(int i = (s+1)%n; i != s; i = (i+1)%n) {\n    if(fuel < 0) return i;\n    fuel += p[i] - q[i];\n  }\n  if(fuel < 0) return -1; // this means sum(p) < sum(q), so this case is impossible\n  return s; // success\n}\n\nint solve() {\n  int start = 0;\n  for(;;) {\n    int finish = go(start);\n    if(finish < start) return -1; // wrapped around, or go(start) returns -1\n    if(finish == start) return start;\n    start = finish;\n  }\n}\n\nint main() {\n  int T;\n  scanf("%d", &T);\n  for(int kase = 1; kase <= T; kase++) {\n    scanf("%d", &n);\n    for(int i = 0; i < n; i++) scanf("%d", &p[i]);\n    for(int i = 0; i < n; i++) scanf("%d", &q[i]);\n    int ans = solve();\n    printf("Case %d: ", kase);\n    if(ans < 0) printf("Not possible\\n");\n    else printf("Possible from station %d\\n", ans+1);\n  }\n  return 0;\n}\n'