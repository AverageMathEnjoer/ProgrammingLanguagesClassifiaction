b'\nmodule Main where\n\nimport qualified Data.Map as Map\n\nimport GrammarChecker\n\n\n-- Syntaxtabellen \xc3\xa4r implementerad med Data.Map\n-- Denna tabell motsvarar i BNF:\n--\n--     <program> ::= <whitespace> | <expression> . [<program>]\n--     <whitespace> ::= " " | "\\t" | "\\n" | "\\r" . [<whitespace>]\n--     <expression> ::= <primitive>\n--     <primitive> ::= "()"\n--\n-- Det \xc3\xa4r naturligtvis bara b\xc3\xb6rjan p\xc3\xa5 en riktig lisp och mycket \xc3\xa5terst\xc3\xa5r.\n \ndopeysyntax = Map.fromList $\n  [("program",    [Tokens   Mandatory ["whitespace", "expression"]\n                  ,Tokens   Optional  ["program"]])\n  ,("whitespace", [Literals Mandatory [" ", "\\t", "\\n", "\\r"]\n                  ,Tokens   Optional  ["whitespace"]])\n  ,("expression", [Tokens   Mandatory ["primitive"]])\n  ,("primitive",  [Literals Mandatory ["()"]])]\n\n\n{- Kod testas:\n\n*Main> checkGrammar dopeysyntax "() ()) ()" "program"\n(False,") ()")\n*Main> checkGrammar dopeysyntax "() ()()()" "program"\n(True,"")\n*Main> checkGrammar dopeysyntax "()       " "program"\n(True,"")\n*Main> checkGrammar dopeysyntax "      ()" "program"\n(True,"")\n*Main> checkGrammar dopeysyntax "" "program"\n(True,"")\n\n-}\n'