b'//The Coin Change Problem\n//Given an Array of coins C, and money S, print number of ways to make a change for S\n//Eg: A=[1,2] S=4 answer is {1,1,1,1}, {2,2}, {2,1,1} i.e 3 ways\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e3;\nint A[N], n;\nint vis[N][N], dp[N][N];\n\nint ways(int pos, int S) {\n\tif(pos == n) return S == 0;\n\tint &ans = dp[pos][S];\n  \tif(vis[pos][S]) return ans; vis[pos][S] = 1, ans = 0;\n\tint times = 0;\n\twhile(times*A[pos] <= S) ans += ways(pos+1, S-times*A[pos]), times++;\n\treturn ans;\n}\n\n//Faster than ways function as it causes only two transitions\nint fasterWays(int pos, int S) {\n\tif(pos == n) return S == 0;\n \t if(S < 0) return 0;\n\tint &ans = dp[pos][S];\n \t if(vis[pos][S]) return ans; vis[pos][S] = 1, ans = 0;\n\tans = ways(pos, S-A[pos]) + ways(pos+1, S);\n\treturn ans;\n}\n\nint main() {\n\t\n\tint i, S;\n\tcin >> n >> S;\n\tfor(i=0; i<n; i++) cin >> A[i];\t\n\tcout << fasterWays(0, S) << endl;\n\treturn 0;\n}\n'