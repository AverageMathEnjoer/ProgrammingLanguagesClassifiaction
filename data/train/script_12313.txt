b'package effectivejava.chapter2.item2.hierarchicalbuilder;\n\nimport java.util.Objects;\n\n// Subclass with hierarchical builder (Page 15)\npublic class NyPizza extends Pizza {\n    public enum Size { SMALL, MEDIUM, LARGE }\n    private final Size size;\n\n    public static class Builder extends Pizza.Builder<Builder> {\n        private final Size size;\n\n        public Builder(Size size) {\n            this.size = Objects.requireNonNull(size);\n        }\n\n        @Override public NyPizza build() {\n            return new NyPizza(this);\n        }\n\n        @Override protected Builder self() { return this; }\n    }\n\n    private NyPizza(Builder builder) {\n        super(builder);\n        size = builder.size;\n    }\n\n    @Override public String toString() {\n        return "New York Pizza with " + toppings;\n    }\n}\n'