b'context("design matrix")\ntest_that("design can be a matrix", {\n\n  m <- matrix(rpois(12*100,100),ncol=12)\n  coldata <- data.frame(condition=factor(rep(1:2,each=6)),\n                        batch=factor(rep(c(1,2,1,2),each=3)))\n  dm <- model.matrix(~condition, coldata)\n  dm2 <- model.matrix(~batch + condition, coldata)\n  dds <- DESeqDataSetFromMatrix(m, coldata, dm)\n  dds <- DESeq(dds, fitType="mean")\n  resultsNames(dds)\n  \n  # specifying \'full\' overrides...\n  dds2 <- DESeq(dds, full=dm2, fitType="mean")\n  resultsNames(dds2)\n\n  dds <- DESeqDataSetFromMatrix(m, coldata, dm2)\n  dds <- DESeq(dds, fitType="mean")\n  \n  res <- results(dds)\n  res <- results(dds, contrast=list("condition2","batch2"))\n  res <- results(dds, contrast=c(0,-1,1))\n  expect_error(res <- results(dds, contrast=c("condition","2","1")), "only list- and numeric-type")\n\n  res <- lfcShrink(dds, coef="condition2", type="normal")\n  res <- lfcShrink(dds, coef="condition2", type="apeglm")\n  res <- lfcShrink(dds, coef="condition2", type="ashr")\n  \n  # test replace with matrix\n  design(dds) <- dm\n  \n})\n'