b'package com.naman14.timber.activities;\n\nimport android.content.Intent;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport androidx.appcompat.widget.Toolbar;\nimport android.view.LayoutInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.LinearLayout;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.anjlab.android.iab.v3.BillingProcessor;\nimport com.anjlab.android.iab.v3.SkuDetails;\nimport com.anjlab.android.iab.v3.TransactionDetails;\nimport com.naman14.timber.R;\nimport com.naman14.timber.utils.PreferencesUtility;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\n/**\n * Created by naman on 29/10/16.\n */\npublic class DonateActivity extends BaseThemedActivity implements BillingProcessor.IBillingHandler {\n\n    private static final String DONATION_1 = "naman14.timber.donate_1";\n    private static final String DONATION_2 = "naman14.timber.donate_2";\n    private static final String DONATION_3 = "naman14.timber.donate_3";\n    private static final String DONATION_5 = "naman14.timber.donate_5";\n    private static final String DONATION_10 = "naman14.timber.donate_10";\n    private static final String DONATION_20 = "naman14.timber.donate_20";\n\n\n    private boolean readyToPurchase = false;\n    BillingProcessor bp;\n\n    private LinearLayout productListView;\n    private ProgressBar progressBar;\n    private TextView status;\n\n    private String action = "support";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        getSupportActionBar().setTitle("Support development");\n        action = getIntent().getAction();\n\n        productListView = (LinearLayout) findViewById(R.id.product_list);\n        progressBar = (ProgressBar) findViewById(R.id.progressBar);\n        status = (TextView) findViewById(R.id.donation_status);\n\n        if (action != null && action.equals("restore")) {\n            status.setText("Restoring purchases..");\n        }\n\n        bp = new BillingProcessor(this, getString(R.string.play_billing_license_key), this);\n\n    }\n\n    @Override\n    public void onBillingInitialized() {\n        readyToPurchase = true;\n        checkStatus();\n        if (!(action != null && action.equals("restore")))\n            getProducts();\n    }\n\n    @Override\n    public void onProductPurchased(String productId, TransactionDetails details) {\n        checkStatus();\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                Toast.makeText(DonateActivity.this, "Thanks for your support!", Toast.LENGTH_SHORT).show();\n            }\n        });\n    }\n\n    @Override\n    public void onBillingError(int errorCode, Throwable error) {\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                Toast.makeText(DonateActivity.this, "Unable to process purchase", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n    }\n\n    @Override\n    public void onPurchaseHistoryRestored() {\n\n    }\n\n    @Override\n    public void onDestroy() {\n        if (bp != null)\n            bp.release();\n        super.onDestroy();\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (!bp.handleActivityResult(requestCode, resultCode, data))\n            super.onActivityResult(requestCode, resultCode, data);\n    }\n\n    private void checkStatus() {\n        new AsyncTask<Void, Void, Boolean>() {\n            @Override\n            protected Boolean doInBackground(Void... voids) {\n                List<String> owned = bp.listOwnedProducts();\n                return owned != null && owned.size() != 0;\n            }\n\n            @Override\n            protected void onPostExecute(Boolean b) {\n                super.onPostExecute(b);\n                if (b) {\n                    PreferencesUtility.getInstance(DonateActivity.this).setFullUnlocked(true);\n                    status.setText("Thanks for your support!");\n                    if (action!=null && action.equals("restore")) {\n                        status.setText("Your purchases has been restored. Thanks for your support");\n                        progressBar.setVisibility(View.GONE);\n                    }\n                    if (getSupportActionBar() != null)\n                        getSupportActionBar().setTitle("Support development");\n                } else {\n                    if (action!=null && action.equals("restore")) {\n                        status.setText("No previous purchase found");\n                        getProducts();\n                    }\n                }\n            }\n        }.execute();\n    }\n\n    private void getProducts() {\n\n        new AsyncTask<Void, Void, List<SkuDetails>>() {\n            @Override\n            protected List<SkuDetails> doInBackground(Void... voids) {\n\n                ArrayList<String> products = new ArrayList<>();\n\n                products.add(DONATION_1);\n                products.add(DONATION_2);\n                products.add(DONATION_3);\n                products.add(DONATION_5);\n                products.add(DONATION_10);\n                products.add(DONATION_20);\n\n                return bp.getPurchaseListingDetails(products);\n            }\n\n            @Override\n            protected void onPostExecute(List<SkuDetails> productList) {\n                super.onPostExecute(productList);\n\n                if (productList == null)\n                    return;\n\n                Collections.sort(productList, new Comparator<SkuDetails>() {\n                    @Override\n                    public int compare(SkuDetails skuDetails, SkuDetails t1) {\n                        if (skuDetails.priceValue >= t1.priceValue)\n                            return 1;\n                        else if (skuDetails.priceValue <= t1.priceValue)\n                            return -1;\n                        else return 0;\n                    }\n                });\n                for (int i = 0; i < productList.size(); i++) {\n                    final SkuDetails product = productList.get(i);\n                    View rootView = LayoutInflater.from(DonateActivity.this).inflate(R.layout.item_donate_product, productListView, false);\n\n                    TextView detail = (TextView) rootView.findViewById(R.id.product_detail);\n                    detail.setText(product.priceText);\n\n                    rootView.findViewById(R.id.btn_donate).setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View view) {\n                            if (readyToPurchase)\n                                bp.purchase(DonateActivity.this, product.productId);\n                            else\n                                Toast.makeText(DonateActivity.this, "Unable to initiate purchase", Toast.LENGTH_SHORT).show();\n                        }\n                    });\n\n                    productListView.addView(rootView);\n\n                }\n                progressBar.setVisibility(View.GONE);\n            }\n        }.execute();\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(final MenuItem item) {\n        switch (item.getItemId()) {\n            case android.R.id.home:\n                super.onBackPressed();\n                return true;\n            default:\n                break;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n}\n'