b'{-# LANGUAGE OverloadedStrings #-}\n\nmodule Graphics.Hoodle.Render.Util where\n\n--\nimport Data.Hoodle.BBox (BBox (..))\nimport qualified Graphics.Rendering.Cairo as Cairo\n\n-- |\nclipBBox :: Maybe BBox -> Cairo.Render ()\nclipBBox (Just (BBox (x1, y1) (x2, y2))) = do\n  Cairo.resetClip\n  Cairo.rectangle x1 y1 (x2 - x1) (y2 - y1)\n  Cairo.clip\nclipBBox Nothing = Cairo.resetClip\n\n-- |\nclearBBox :: Maybe BBox -> Cairo.Render ()\nclearBBox Nothing = return ()\nclearBBox (Just (BBox (x1, y1) (x2, y2))) = do\n  Cairo.save\n  Cairo.setSourceRGBA 0 0 0 0\n  Cairo.setOperator Cairo.OperatorSource\n  Cairo.rectangle x1 y1 (x2 - x1) (y2 - y1)\n  Cairo.fill\n  Cairo.restore\n'