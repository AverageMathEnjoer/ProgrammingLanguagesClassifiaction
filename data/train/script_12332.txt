b'/*\n * Copyright (C) 2015 Naman Dwivedi\n *\n * Licensed under the GNU General Public License v3\n *\n * This is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n */\n\npackage com.naman14.timber;\n\nimport androidx.multidex.MultiDexApplication;\n\nimport com.afollestad.appthemeengine.ATE;\nimport com.naman14.timber.permissions.Nammu;\nimport com.naman14.timber.utils.PreferencesUtility;\nimport com.nostra13.universalimageloader.core.ImageLoader;\nimport com.nostra13.universalimageloader.core.ImageLoaderConfiguration;\nimport com.nostra13.universalimageloader.core.download.BaseImageDownloader;\nimport com.nostra13.universalimageloader.utils.L;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class TimberApp extends MultiDexApplication {\n\n    private static TimberApp mInstance;\n\n    public static synchronized TimberApp getInstance() {\n        return mInstance;\n    }\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        mInstance = this;\n\n        ImageLoaderConfiguration localImageLoaderConfiguration = new ImageLoaderConfiguration.Builder(this).imageDownloader(new BaseImageDownloader(this) {\n            PreferencesUtility prefs = PreferencesUtility.getInstance(TimberApp.this);\n\n            @Override\n            protected InputStream getStreamFromNetwork(String imageUri, Object extra) throws IOException {\n                if (prefs.loadArtistAndAlbumImages())\n                    return super.getStreamFromNetwork(imageUri, extra);\n                throw new IOException();\n            }\n        }).build();\n\n        ImageLoader.getInstance().init(localImageLoaderConfiguration);\n        L.writeLogs(false);\n        L.disableLogging();\n        L.writeDebugLogs(false);\n        Nammu.init(this);\n\n        if (!ATE.config(this, "light_theme").isConfigured()) {\n            ATE.config(this, "light_theme")\n                    .activityTheme(R.style.AppThemeLight)\n                    .primaryColorRes(R.color.colorPrimaryLightDefault)\n                    .accentColorRes(R.color.colorAccentLightDefault)\n                    .coloredNavigationBar(false)\n                    .usingMaterialDialogs(true)\n                    .commit();\n        }\n        if (!ATE.config(this, "dark_theme").isConfigured()) {\n            ATE.config(this, "dark_theme")\n                    .activityTheme(R.style.AppThemeDark)\n                    .primaryColorRes(R.color.colorPrimaryDarkDefault)\n                    .accentColorRes(R.color.colorAccentDarkDefault)\n                    .coloredNavigationBar(false)\n                    .usingMaterialDialogs(true)\n                    .commit();\n        }\n        if (!ATE.config(this, "light_theme_notoolbar").isConfigured()) {\n            ATE.config(this, "light_theme_notoolbar")\n                    .activityTheme(R.style.AppThemeLight)\n                    .coloredActionBar(false)\n                    .primaryColorRes(R.color.colorPrimaryLightDefault)\n                    .accentColorRes(R.color.colorAccentLightDefault)\n                    .coloredNavigationBar(false)\n                    .usingMaterialDialogs(true)\n                    .commit();\n        }\n        if (!ATE.config(this, "dark_theme_notoolbar").isConfigured()) {\n            ATE.config(this, "dark_theme_notoolbar")\n                    .activityTheme(R.style.AppThemeDark)\n                    .coloredActionBar(false)\n                    .primaryColorRes(R.color.colorPrimaryDarkDefault)\n                    .accentColorRes(R.color.colorAccentDarkDefault)\n                    .coloredNavigationBar(true)\n                    .usingMaterialDialogs(true)\n                    .commit();\n        }\n\n    }\n\n\n}\n'