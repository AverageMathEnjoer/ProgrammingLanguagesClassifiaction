b'package effectivejava.chapter2.item2.telescopingconstructor;\n\n// Telescoping constructor pattern - does not scale well! (Pages 10-11)\npublic class NutritionFacts {\n    private final int servingSize;  // (mL)            required\n    private final int servings;     // (per container) required\n    private final int calories;     // (per serving)   optional\n    private final int fat;          // (g/serving)     optional\n    private final int sodium;       // (mg/serving)    optional\n    private final int carbohydrate; // (g/serving)     optional\n\n    public NutritionFacts(int servingSize, int servings) {\n        this(servingSize, servings, 0);\n    }\n\n    public NutritionFacts(int servingSize, int servings,\n                          int calories) {\n        this(servingSize, servings, calories, 0);\n    }\n\n    public NutritionFacts(int servingSize, int servings,\n                          int calories, int fat) {\n        this(servingSize, servings, calories, fat, 0);\n    }\n\n    public NutritionFacts(int servingSize, int servings,\n                          int calories, int fat, int sodium) {\n        this(servingSize, servings, calories, fat, sodium, 0);\n    }\n    public NutritionFacts(int servingSize, int servings,\n                          int calories, int fat, int sodium, int carbohydrate) {\n        this.servingSize  = servingSize;\n        this.servings     = servings;\n        this.calories     = calories;\n        this.fat          = fat;\n        this.sodium       = sodium;\n        this.carbohydrate = carbohydrate;\n    }\n\n    public static void main(String[] args) {\n        NutritionFacts cocaCola =\n                new NutritionFacts(240, 8, 100, 0, 35, 27);\n    }\n    \n}'