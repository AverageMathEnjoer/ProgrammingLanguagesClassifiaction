b'package effectivejava.chapter5.item32;\n\nimport java.util.Arrays;\nimport java.util.concurrent.ThreadLocalRandom;\n\n// Subtle heap pollution (Pages 147-8)\npublic class PickTwo {\n    // UNSAFE - Exposes a reference to its generic parameter array!\n    static <T> T[] toArray(T... args) {\n        return args;\n    }\n\n    static <T> T[] pickTwo(T a, T b, T c) {\n        switch(ThreadLocalRandom.current().nextInt(3)) {\n            case 0: return toArray(a, b);\n            case 1: return toArray(a, c);\n            case 2: return toArray(b, c);\n        }\n        throw new AssertionError(); // Can\'t get here\n    }\n\n    public static void main(String[] args) {\n        String[] attributes = pickTwo("Good", "Fast", "Cheap");\n        System.out.println(Arrays.toString(attributes));\n    }\n}\n'