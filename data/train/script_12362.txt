b'package effectivejava.chapter5.item30;\nimport java.util.*;\n\n// Using a recursive type bound to express mutual comparability (Pages 137-8)\npublic class RecursiveTypeBound {\n    // Returns max value in a collection - uses recursive type bound\n    public static <E extends Comparable<E>> E max(Collection<E> c) {\n        if (c.isEmpty())\n            throw new IllegalArgumentException("Empty collection");\n\n        E result = null;\n        for (E e : c)\n            if (result == null || e.compareTo(result) > 0)\n                result = Objects.requireNonNull(e);\n\n        return result;\n    }\n\n    public static void main(String[] args) {\n        List<String> argList = Arrays.asList(args);\n        System.out.println(max(argList));\n    }\n}'