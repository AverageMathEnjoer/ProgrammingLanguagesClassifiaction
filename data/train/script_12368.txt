b'\xef\xbb\xbf#load "NaiveBayes.fs"\nopen MachineLearning.NaiveBayes\n\nopen System\nopen System.Text.RegularExpressions\n   \nlet dataset =\n    [| ("Ham",  "My dog has flea problems help please");\n       ("Spam", "Maybe not take him to dog park stupid");\n       ("Ham",  "My dalmatian is so cute I love him");\n       ("Spam", "Stop posting stupid worthless garbage");\n       ("Ham",  "Mr Licks ate my steak how to stop him");\n       ("Spam", "Quit buying worthless dog food stupid") |]\n\n// Retrieve all words from the dataset\nlet tokens = extractWords dataset\n\n// using the frequency functions\nlet spam = \n    dataset \n    |> Seq.filter (fun e -> fst e = "Spam") \n    |> prepare\nlet spamBag = bagOfWords spam tokens |> Seq.toList\n\n// Create 2 classifiers, using all the words found\nlet setClassifier = classifier setOfWords dataset tokens\nlet bagClassifier = classifier bagOfWords dataset tokens\n\nlet test1 = bagClassifier "what a stupid dog"\nlet test2 = setClassifier "my dog has flea should I stop going to the park"\n\n// apply the set-of-words classifier \n// to all elements from the dataset,\n// and retrieves actual and predicted labels\nlet setOfWordsTest =\n    dataset\n    |> Seq.map (fun t -> fst t, setClassifier (snd t))\n    |> Seq.toList\n\n// apply the bag-of-words classifier \n// to all elements from the dataset.\nlet bagOfWordsTest =\n    dataset\n    |> Seq.map (fun t -> fst t, bagClassifier (snd t))\n    |> Seq.toList'