b'\xef\xbb\xbfusing System.Data;\nusing System.Diagnostics;\nusing System.Net;\nusing System.Text.RegularExpressions;\n\nnamespace XboxDownload\n{\n    public partial class FormImportIP : Form\n    {\n        public String host = string.Empty;\n        public DataTable dt;\n\n        public FormImportIP()\n        {\n            InitializeComponent();\n\n            dt = new DataTable();\n            dt.Columns.Add("IP", typeof(string));\n            dt.Columns.Add("IpFilter", typeof(string));\n            dt.Columns.Add("ASN", typeof(string));\n            dt.Columns.Add("IpLong", typeof(ulong));\n            var col = dt.Columns["IpFilter"];\n            if (col != null) dt.PrimaryKey = new DataColumn[] { col };\n\n            comboBox1.SelectedIndex = 0;\n        }\n\n        private void LinkLabel_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)\n        {\n            string url = ((LinkLabel)sender).Text;\n            Process.Start(new ProcessStartInfo(url) { UseShellExecute = true });\n        }\n\n        private void LinkLabel3_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)\n        {\n            string hosts = Regex.Replace(comboBox1.Text, @"\\s.+$", "").Trim();\n            Clipboard.SetDataObject(hosts);\n            MessageBox.Show("\xe5\x9f\x9f\xe5\x90\x8d(" + hosts + ")\xe5\xb7\xb2\xe5\xa4\x8d\xe5\x88\xb6\xe5\x88\xb0\xe5\x89\xaa\xe8\xb4\xb4\xe6\x9d\xbf", "\xe5\xa4\x8d\xe5\x88\xb6\xe5\x9f\x9f\xe5\x90\x8d", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n\n        private void Button1_Click(object sender, EventArgs e)\n        {\n            string content = textBox1.Text.Trim();\n            if (string.IsNullOrEmpty(content)) return;\n\n            string[] array = content.Split(new string[] { "\\n" }, StringSplitOptions.RemoveEmptyEntries);\n            if (array.Length >= 1)\n            {\n                if (String.Equals(array[0].Trim(), "Akamai", StringComparison.CurrentCultureIgnoreCase))\n                {\n                    this.host = "Akamai";\n                }\n                else\n                {\n                    foreach (string str in array)\n                    {\n                        string tmp = str.Trim();\n                        if (Regex.IsMatch(tmp, @"^[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+$"))\n                        {\n                            this.host = tmp.ToLowerInvariant();\n                            switch (this.host)\n                            {\n                                case "atum.hac.lp1.d4c.nintendo.net":\n                                    this.host = "Akamai";\n                                    break;\n                                default:\n                                    if (Regex.IsMatch(this.host, @"\\.akamaihd\\.net$"))\n                                    {\n                                        this.host = "Akamai";\n                                    }\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            if (string.IsNullOrEmpty(this.host))\n            {\n                MessageBox.Show("\xe6\x8f\x90\xe4\xba\xa4\xe5\x86\x85\xe5\xae\xb9\xe4\xb8\x8d\xe7\xac\xa6\xe5\x90\x88\xe6\x9d\xa1\xe4\xbb\xb6\xe3\x80\x82", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);\n                return;\n            }\n            Match result = Regex.Match(content, @"(?<IP>\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}\\.\\d{0,3})\\s*\\((?<ASN>[^\\)]+)\\)|(?<IP>\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}\\.\\d{0,3})(?<ASN>.+)\\d+ms|^\\s*(?<IP>\\d{0,3}\\.\\d{0,3}\\.\\d{0,3}\\.\\d{0,3})\\s*$", RegexOptions.Multiline);\n            while (result.Success)\n            {\n                string ip = result.Groups["IP"].Value;\n                UInt64 ipLong = IpToLong(ip);\n                if (ipLong == 0) return;\n                string IpFilter = Regex.Replace(ip, @"\\d{0,3}$", "");\n                DataRow? dr = dt.Rows.Find(IpFilter);\n                if (dr == null)\n                {\n                    dr = dt.NewRow();\n                    dr["IP"] = ip;\n                    dr["IpFilter"] = IpFilter;\n                    dr["ASN"] = Regex.Replace(result.Groups["ASN"].Value.Trim(), @" ([-a-zA-Z0-9]+\\.)+[a-zA-Z0-9]{2,}", "");\n                    dr["IpLong"] = ipLong;\n                    dt.Rows.Add(dr);\n                }\n                result = result.NextMatch();\n            }\n            this.Close();\n        }\n\n        private void LinkLabel4_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)\n        {\n            OpenFileDialog openFileDialog = new()\n            {\n                InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.Desktop),\n                Filter = "\xe6\x96\x87\xe6\x9c\xac\xe6\x96\x87\xe4\xbb\xb6(*.txt)|*.txt",\n                RestoreDirectory = true\n            };\n            if (openFileDialog.ShowDialog() == DialogResult.OK)\n            {\n                StreamReader sr = new(openFileDialog.FileName);\n                textBox1.Text = sr.ReadToEnd();\n                sr.Close();\n            }\n        }\n\n        private static ulong IpToLong(string ip)\n        {\n            ulong IntIp = 0;\n            if (IPAddress.TryParse(ip, out IPAddress? ipaddress))\n            {\n                string[] ips = ipaddress.ToString().Split(\'.\');\n                IntIp = ulong.Parse(ips[0]) << 0x18 | ulong.Parse(ips[1]) << 0x10 | ulong.Parse(ips[2]) << 0x8 | ulong.Parse(ips[3]);\n            }\n            return IntIp;\n        }\n    }\n}\n'