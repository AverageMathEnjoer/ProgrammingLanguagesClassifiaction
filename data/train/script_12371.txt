b'// UVa1628 Pizza Delivery\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn = 100 + 5;\n\nint kase, n;\nint p[maxn], v[maxn];\nint d[maxn][maxn][maxn][2];\nint vis[maxn][maxn][maxn][2];\n\n// already considered s~e, still need to delivery to cnt people. \n// pos = 0 means at s, pos = 1 means at e\nint dp(int s, int e, int cnt, int pos) {\n  if(cnt == 0) return 0;\n\n  int &ans = d[s][e][cnt][pos];\n  if(vis[s][e][cnt][pos] == kase) return ans;\n  vis[s][e][cnt][pos] = kase;\n\n  ans = 0;  \n  if(!pos) {\n    for(int i = 0; i < s; i++)\n      ans = max(ans, v[i] - cnt * abs(p[i] - p[s]) + dp(i, e, cnt - 1, 0));\n    for(int i = e + 1; i < n; i++)\n      ans = max(ans, v[i] - cnt * abs(p[i] - p[s]) + dp(s, i, cnt - 1, 1));\n  }\n  else {\n    for(int i = 0; i < s; i++)\n      ans = max(ans, v[i] - cnt * abs(p[i] - p[e]) + dp(i, e, cnt - 1, 0));\n    for(int i = e + 1; i < n; i++)\n      ans = max(ans, v[i] - cnt * abs(p[i] - p[e]) + dp(s, i, cnt - 1, 1));\n  }\n  return ans;\n}\n\nint main() {\n  int T;\n  scanf("%d",&T);\n  memset(vis, 0, sizeof(vis));\n  for(kase = 1; kase <= T; kase++) {\n    scanf("%d", &n);\n    for(int i = 0; i < n; i++) scanf("%d", &p[i]);\n    for(int i = 0; i < n; i++) scanf("%d", &v[i]);\n\n    int ans = 0;\n    for(int k = 1; k <= n; k++)\n      for(int i = 0; i < n; i++)\n        ans = max(ans, v[i] - k * abs(p[i]) + dp(i, i, k - 1, 0));\n    printf("%d\\n",ans);\n  }\n  return 0;\n}\n'