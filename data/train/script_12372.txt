b'package effectivejava.chapter11.item84;\n\n// Awful CountDownLatch implementation - busy-waits incessantly!  - Pages 336-7\npublic class SlowCountDownLatch {\n    private int count;\n\n    public SlowCountDownLatch(int count) {\n        if (count < 0)\n            throw new IllegalArgumentException(count + " < 0");\n        this.count = count;\n    }\n\n    public void await() {\n        while (true) {\n            synchronized(this) {\n                if (count == 0)\n                    return;\n            }\n        }\n    }\n    public synchronized void countDown() {\n        if (count != 0)\n            count--;\n    }\n}\n'