b'package com.db.williamchartdemo\n\nimport android.graphics.Color\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.fragment.app.Fragment\nimport com.db.williamchart.ExperimentalFeature\nimport com.db.williamchart.slidertooltip.SliderTooltip\nimport kotlinx.android.synthetic.main.demo_fragment.*\n\nclass DemoFragment : Fragment() {\n\n    override fun onCreateView(\n        inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? = inflater.inflate(R.layout.demo_fragment, container, false)\n\n    @OptIn(ExperimentalFeature::class)\n    override fun onViewCreated(view: View, saveInstanceState: Bundle?) {\n\n        /**\n         * Line Chart\n         */\n        lineChart.gradientFillColors =\n            intArrayOf(\n                Color.parseColor("#81FFFFFF"),\n                Color.TRANSPARENT\n            )\n        lineChart.animation.duration = animationDuration\n        lineChart.tooltip =\n            SliderTooltip().also {\n                it.color = Color.WHITE\n            }\n        lineChart.onDataPointTouchListener = { index, _, _ ->\n            lineChartValue.text =\n                lineSet.toList()[index]\n                    .second\n                    .toString()\n        }\n        lineChart.animate(lineSet)\n\n        /**\n         * Bar Chart\n         */\n        barChart.animation.duration = animationDuration\n        barChart.animate(barSet)\n\n        /**\n         * Donut Chart\n         */\n        donutChart.donutColors = intArrayOf(\n            Color.parseColor("#FFFFFF"),\n            Color.parseColor("#9EFFFFFF"),\n            Color.parseColor("#8DFFFFFF")\n        )\n        donutChart.animation.duration = animationDuration\n        donutChart.animate(donutSet)\n\n        /**\n         * Horizontal Bar Chart\n         */\n        horizontalBarChart.animation.duration = animationDuration\n        horizontalBarChart.animate(horizontalBarSet)\n    }\n\n    companion object {\n        private val lineSet = listOf(\n            "label1" to 5f,\n            "label2" to 4.5f,\n            "label3" to 4.7f,\n            "label4" to 3.5f,\n            "label5" to 3.6f,\n            "label6" to 7.5f,\n            "label7" to 7.5f,\n            "label8" to 10f,\n            "label9" to 5f,\n            "label10" to 6.5f,\n            "label11" to 3f,\n            "label12" to 4f\n        )\n\n        private val barSet = listOf(\n            "JAN" to 4F,\n            "FEB" to 7F,\n            "MAR" to 2F,\n            "MAY" to 2.3F,\n            "APR" to 5F,\n            "JUN" to 4F\n        )\n\n        private val horizontalBarSet = listOf(\n            "PORRO" to 5F,\n            "FUSCE" to 6.4F,\n            "EGET" to 3F\n        )\n\n        private val donutSet = listOf(\n            20f,\n            80f,\n            100f\n        )\n\n        private const val animationDuration = 1000L\n    }\n}\n'