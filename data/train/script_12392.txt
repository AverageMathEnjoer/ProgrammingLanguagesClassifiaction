b'import com.github.eprendre.tingshu.utils.Book\nimport com.github.eprendre.tingshu.utils.Episode\nimport org.jsoup.Jsoup\nimport org.junit.Test\n\nclass JDLGTest {\n\n    @Test\n    fun audioUrl() {\n        val url = "http://www.jdlg.net/90niandaijingdianlaoge/A1106.html"\n        val doc = Jsoup.connect(url).testConfig(true).get()\n        val audioUrl = doc.selectFirst(".jp_audio_0")?.attr("src")\n        println(audioUrl)//\xe7\xbb\x93\xe6\x9e\x9c\xe4\xb8\x8d\xe8\xa1\x8c\xef\xbc\x8c\xe9\x9c\x80\xe8\xa6\x81\xe5\x80\x9f\xe5\x8a\xa9webview\xe7\x9a\x84\xe6\xb8\xb2\xe6\x9f\x93\n    }\n\n\n    @Test\n    fun categoryList() {\n        val type = "0"\n        val url = "http://www.jdlg.net/jingdianlaoge500shou/"\n        val doc = Jsoup.connect(url).testConfig(true).get()\n        val divs = doc.select("#tipcontent > div > div")\n        println(divs.size)\n\n        val list = ArrayList<Book>()\n        val index = type.toInt()\n        divs[index].select("ul > li > a").forEach {\n            list.add(Book("", it.absUrl("href"), it.text(), "", ""))\n        }\n        list.take(5).forEach { println(it) }\n        assert(list.isNotEmpty())\n    }\n\n    @Test\n    fun bookDetail() {\n        val url = "http://www.jdlg.net/jingdianlaoge500shou/1.html"\n//        val url = "http://www.jdlg.net/80niandaijingdianlaoge/1.html"\n//        val url = "http://www.jdlg.net/jdlgphb/1.html"\n        val doc = Jsoup.connect(url).testConfig(true).get()\n        val episodes = doc.select("div.rankBox > ol > li, div.songList > ol > li")\n            .map {\n                val a = it.selectFirst(".singer_title > a, .songName")\n                var artist = it.selectFirst(".songer > a")?.text()\n                if (artist == null) {\n                    artist = it.selectFirst("a:last-child")?.text()\n                    if (artist == "\xe5\x8a\xa0\xe5\x85\xa5\xe5\x88\x97\xe8\xa1\xa8") {\n                        artist = null\n                    }\n                }\n                var title = a.text()\n                if (artist != null) {\n                    title += " - $artist"\n                }\n                Episode(title, a.absUrl("href"))\n            }\n        episodes.take(10).forEach {\n            println(it)\n        }\n        assert(episodes.isNotEmpty())\n    }\n}'