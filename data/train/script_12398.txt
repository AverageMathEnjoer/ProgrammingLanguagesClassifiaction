b'testData :: [Int]\r\ntestData = [-4, -3, -7, 2, 1, -2, -1, -4]\r\n\r\ntestDataBig :: [Int]\r\ntestDataBig = [-4, -3, -7, 2, 1, -2, -1, -4, 5, 7, -8, 3, 2, -1, -4, 5, -9, 3]\r\n\r\nmnss :: [Int] -> Int\r\nmnss xs = fourth (foldl h (start (take 3 xs)) (drop 3 xs))\r\n\r\nh :: (Num a,  Ord a) => (a, a, a, a) -> a -> (a, a, a, a)\r\nh (e, s, m, n) x = (e, max s e + x, max m s, max n (max n m + x))\r\n\r\nfourth :: (a, b, c, d) -> d\r\nfourth (_, _, _, x) = x\r\n\r\nstart :: (Num a,  Ord a) => [a] -> (a, a, a, a)\r\nstart xs = (0, maximum [x + y + z, y + z, z], maximum [x, x + y, y], x + z)\r\n    where x = xs!!0\r\n          y = xs!!1\r\n          z = xs!!2\r\n'