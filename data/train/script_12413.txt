b'// UVa1374 Power Calculus\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int maxans = 13; // we got it by experimenting\n\nint n, a[maxans+1];\n\nbool dfs(int d, int maxd) {\n  if(a[d] == n) return true;\n  if(d == maxd) return false;\n\n  int maxv = a[0];\n  for(int i = 1; i <= d; i++) maxv = max(maxv, a[i]);\n  if((maxv << (maxd-d)) < n) return false;\n\n  // Always use the last value.\n  // I can\'t prove it, but we haven\'t found a counter-example for n <= 1000\n  for(int i = d; i >= 0; i--) {\n    a[d+1] = a[d] + a[i];\n    if(dfs(d+1, maxd)) return true;\n    a[d+1] = a[d] - a[i];\n    if(dfs(d+1, maxd)) return true;\n  }\n  return false;\n}\n\nint solve(int n) {\n  if(n == 1) return 0;\n  a[0] = 1;\n  for(int maxd = 1; maxd < maxans; maxd++) {\n    if(dfs(0, maxd)) return maxd;\n  }\n  return maxans;\n}\n\nint main() {\n  while(scanf("%d", &n) == 1 && n) {\n    printf("%d\\n", solve(n));\n  }\n  return 0;\n}\n'