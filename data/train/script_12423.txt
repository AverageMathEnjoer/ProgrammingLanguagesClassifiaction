b'{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE TypeFamilies #-}\n\nmodule Graphics.Hoodle.Render.Type.Item where\n\nimport Data.Hoodle.BBox\n  ( BBoxed (..),\n    GetBBoxable (..),\n  )\nimport Data.Hoodle.Simple\n  ( Anchor (..),\n    Image (..),\n    Item (..),\n    Link (..),\n    SVG (..),\n    Stroke (..),\n  )\nimport qualified Graphics.Rendering.Cairo as Cairo\nimport qualified Graphics.Rendering.Cairo.SVG as RSVG\n\ndata RItem\n  = RItemStroke (BBoxed Stroke)\n  | RItemImage (BBoxed Image) (Maybe Cairo.Surface) -- UUID\n  | RItemSVG (BBoxed SVG) (Maybe RSVG.SVG)\n  | RItemLink (BBoxed Link) (Maybe RSVG.SVG)\n  | RItemAnchor (BBoxed Anchor) (Maybe RSVG.SVG)\n\ninstance GetBBoxable RItem where\n  getBBox (RItemStroke strk) = getBBox strk\n  getBBox (RItemImage img _) = getBBox img\n  getBBox (RItemSVG svg _) = getBBox svg\n  getBBox (RItemLink lnk _) = getBBox lnk\n  getBBox (RItemAnchor anc _) = getBBox anc\n\ninstance Show RItem where\n  show (RItemStroke strk) = "RItemStroke " ++ show strk\n  show (RItemImage img _) = "RItemImage " ++ show img\n  show (RItemSVG svg _) = "RItemSVG " ++ show svg\n  show (RItemLink lnk _) = "RItemLink " ++ show lnk\n  show (RItemAnchor anc _) = "RItemAnchor " ++ show anc\n\n-- |\nisStrkInRItem :: RItem -> Bool\nisStrkInRItem (RItemStroke _) = True\nisStrkInRItem _ = False\n\n-- |\nisImgInRItem :: RItem -> Bool\nisImgInRItem (RItemImage _ _) = True\nisImgInRItem _ = False\n\n-- |\nisSVGInRItem :: RItem -> Bool\nisSVGInRItem (RItemSVG _ _) = True\nisSVGInRItem _ = False\n\n-- |\nisLinkInRItem :: RItem -> Bool\nisLinkInRItem (RItemLink _ _) = True\nisLinkInRItem _ = False\n\n-- |\nisAnchorInRItem :: RItem -> Bool\nisAnchorInRItem (RItemAnchor _ _) = True\nisAnchorInRItem _ = False\n\n-- |\nfindStrkInRItem :: RItem -> Maybe (BBoxed Stroke)\nfindStrkInRItem (RItemStroke strk) = Just strk\nfindStrkInRItem _ = Nothing\n\n-- |\nfindImgInRItem :: RItem -> Maybe (BBoxed Image)\nfindImgInRItem (RItemImage img _) = Just img\nfindImgInRItem _ = Nothing\n\n-- |\nfindSVGInRItem :: RItem -> Maybe (BBoxed SVG)\nfindSVGInRItem (RItemSVG svg _) = Just svg\nfindSVGInRItem _ = Nothing\n\n-- |\nrItem2Item :: RItem -> Item\nrItem2Item (RItemStroke strk) = (ItemStroke . bbxed_content) strk\nrItem2Item (RItemImage img _) = (ItemImage . bbxed_content) img\nrItem2Item (RItemSVG svg _) = (ItemSVG . bbxed_content) svg\nrItem2Item (RItemLink lnk _) = (ItemLink . bbxed_content) lnk\nrItem2Item (RItemAnchor anc _) = (ItemAnchor . bbxed_content) anc\n'