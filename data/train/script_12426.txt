b'package co.joebirch.composeplayground.material\n\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.material.TriStateCheckbox\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.state.ToggleableState\nimport androidx.compose.ui.unit.dp\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject TriStateCheckboxView: ComposableLayout {\n\n    @Composable\n    override fun build() {\n        Column(\n            modifier = Modifier.fillMaxSize().padding(32.dp),\n            verticalArrangement = Arrangement.SpaceEvenly,\n            horizontalAlignment = Alignment.CenterHorizontally\n        ) {\n\n            TriStateCheckboxComponent()\n        }\n    }\n\n}\n\nclass TriStateFormState(var optionChecked: ToggleableState? = ToggleableState.Indeterminate)\n\n@Composable\nfun TriStateCheckboxComponent() {\n    val state = remember { mutableStateOf(ToggleableState.Off) }\n    TriStateCheckbox(\n        state = state.value,\n        onClick = {\n            when (state.value) {\n                ToggleableState.Off -> {\n                    state.value = ToggleableState.Indeterminate\n                }\n                ToggleableState.On -> {\n                    state.value = ToggleableState.Off\n                }\n                ToggleableState.Indeterminate -> {\n                    state.value = ToggleableState.On\n                }\n            }\n        }\n    )\n}\n\n@Composable\nfun EnabledTriStateCheckboxComponent() {\n    val state = remember { mutableStateOf(ToggleableState.Off) }\n    TriStateCheckbox(\n        state = state.value,\n        onClick = {\n            when (state.value) {\n                ToggleableState.Off -> {\n                    state.value = ToggleableState.Indeterminate\n                }\n                ToggleableState.On -> {\n                    state.value = ToggleableState.Off\n                }\n                ToggleableState.Indeterminate -> {\n                    state.value = ToggleableState.On\n                }\n            }\n        },\n        enabled = false\n    )\n}\n\n@Composable\nfun BoxColorTriStateCheckboxComponent() {\n    val state = remember { mutableStateOf(ToggleableState.Off) }\n    TriStateCheckbox(\n        state = state.value,\n        onClick = {\n            when (state.value) {\n                ToggleableState.Off -> {\n                    state.value = ToggleableState.Indeterminate\n                }\n                ToggleableState.On -> {\n                    state.value = ToggleableState.Off\n                }\n                ToggleableState.Indeterminate -> {\n                    state.value = ToggleableState.On\n                }\n            }\n        }\n    )\n}'