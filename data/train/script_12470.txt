b'package com.zzg.mybatis.generator.plugins;\r\n\r\nimport org.mybatis.generator.api.IntrospectedColumn;\r\nimport org.mybatis.generator.api.dom.java.FullyQualifiedJavaType;\r\nimport org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl;\r\n\r\nimport java.sql.Types;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalTime;\r\n\r\n/**\r\n * @author hanakei\r\n * @since 2018/4/28\r\n */\r\npublic class JavaTypeResolverJsr310Impl extends JavaTypeResolverDefaultImpl {\r\n\r\n    @Override\r\n    protected FullyQualifiedJavaType overrideDefaultType(IntrospectedColumn column, FullyQualifiedJavaType defaultType) {\r\n        FullyQualifiedJavaType answer = defaultType;\r\n\r\n        switch (column.getJdbcType()) {\r\n            case Types.BIT:\r\n                answer = calculateBitReplacement(column, defaultType);\r\n                break;\r\n            case Types.DECIMAL:\r\n            case Types.NUMERIC:\r\n                answer = calculateBigDecimalReplacement(column, defaultType);\r\n                break;\r\n            case Types.DATE:\r\n                answer = new FullyQualifiedJavaType(LocalDate.class.getName());\r\n                break;\r\n            case Types.TIME:\r\n                answer = new FullyQualifiedJavaType(LocalTime.class.getName());\r\n                break;\r\n            case Types.TIMESTAMP:\r\n                answer = new FullyQualifiedJavaType(LocalDateTime.class.getName());\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return answer;\r\n    }\r\n}\r\n'