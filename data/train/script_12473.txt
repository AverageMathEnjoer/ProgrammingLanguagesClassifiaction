b'{-# LANGUAGE AllowAmbiguousTypes #-}\nmodule Pagila.Test where\n\nimport Control.Arrow\n\nimport Data.Int\nimport Data.Proxy\nimport Data.Text(Text)\n\nimport Database.Beam\nimport Database.Beam.Backend.Types\nimport Database.Beam.Migrate.Types ( CheckedDatabaseSettings, MigrationSteps, unCheckDatabase\n                                   , evaluateDatabase, migrationStep)\nimport Database.Beam.Migrate.Generics\nimport Database.Beam.Migrate.SQL.SQL92\nimport Database.Beam.Postgres (Postgres, PgCommandSyntax)\nimport Database.Beam.Postgres.Migrate\nimport Database.Beam.Migrate.Types hiding (migrateScript)\nimport Database.Beam.Migrate.SQL.Tables\nimport Database.Beam.Migrate.SQL.Types\n\ndata SimpleTbl f\n  = SimpleTbl\n  { simpletblField1 :: Columnar f Int32\n  , simpletblField2 :: Columnar f (Maybe Text) }\n  deriving Generic\ninstance Beamable SimpleTbl\n\ninstance Table SimpleTbl where\n  data PrimaryKey SimpleTbl f = SimpleTblId (Columnar f Int32) deriving Generic\n  primaryKey = SimpleTblId <$> simpletblField1\ninstance Beamable (PrimaryKey SimpleTbl)\n\ndata MyDb f =\n  MyDb { mydbSimpleTbl :: f (TableEntity SimpleTbl) } deriving Generic\ninstance Database be MyDb\n\nmyDbMigratable :: forall syntax be\n                . IsSql92DdlCommandSyntax syntax\n               => CheckedDatabaseSettings be MyDb\nmyDbMigratable = defaultMigratableDbSettings @syntax\n'