b'package com.bennyhuo.kotlin.api\n\nimport io.reactivex.rxjava3.core.Observable\nimport okhttp3.Dispatcher\nimport okhttp3.OkHttpClient\nimport retrofit2.Call\nimport retrofit2.Retrofit\nimport retrofit2.adapter.rxjava3.RxJava3CallAdapterFactory\nimport retrofit2.converter.gson.GsonConverterFactory\nimport retrofit2.http.GET\nimport java.util.concurrent.Executors\n\ndata class Config(val bannerId: String, val bannerUrl: String)\n\ninterface UpdateApi {\n\n    @GET("/")\n    suspend fun getConfigSuspend(): List<Config>\n\n    @GET("/")\n    fun getConfig(): Call<List<Config>>\n\n    @GET("/")\n    fun getConfigObservable(): Observable<List<Config>>\n}\n\nval updateApi by lazy {\n    Retrofit.Builder()\n        .client(\n            OkHttpClient.Builder()\n                .dispatcher(Dispatcher(Executors.newFixedThreadPool(3) {\n                    Thread(it).also { it.isDaemon = true }\n                }))\n                .build()\n        )\n        .addCallAdapterFactory(RxJava3CallAdapterFactory.create())\n        .addConverterFactory(GsonConverterFactory.create())\n        .baseUrl("http://localhost:8080")\n        .build()\n        .create(UpdateApi::class.java)\n}\n'