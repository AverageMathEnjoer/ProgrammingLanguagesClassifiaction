b'-- | The @uuid-ossp@ extension provides functions for constructing UUIDs.\n--\n-- For an example of usage, see the documentation for \'PgExtensionEntity\'.\nmodule Database.Beam.Postgres.Extensions.UuidOssp\n  ( UuidOssp(..)\n  ) where\n\nimport           Data.Proxy (Proxy(..))\nimport           Data.Text (Text)\nimport           Data.UUID.Types (UUID)\n\nimport           Database.Beam\nimport           Database.Beam.Postgres.Extensions\nimport           Database.Beam.Postgres.Extensions.Internal\n\n-- | Data type representing definitions contained in the @uuid-ossp@ extension\ndata UuidOssp = UuidOssp\n  { pgUuidNil ::\n      forall ctxt s. LiftPg ctxt s UUID\n  , pgUuidNsDns ::\n      forall ctxt s. LiftPg ctxt s UUID\n  , pgUuidNsUrl ::\n      forall ctxt s. LiftPg ctxt s UUID\n  , pgUuidNsOid ::\n      forall ctxt s. LiftPg ctxt s UUID\n  , pgUuidNsX500 ::\n      forall ctxt s. LiftPg ctxt s UUID\n  , pgUuidGenerateV1 ::\n      forall ctxt s. LiftPg ctxt s UUID\n  , pgUuidGenerateV1Mc ::\n      forall ctxt s. LiftPg ctxt s UUID\n  , pgUuidGenerateV3 ::\n      forall ctxt s. LiftPg ctxt s (UUID -> Text -> UUID)\n  , pgUuidGenerateV4 ::\n      forall ctxt s. LiftPg ctxt s UUID\n  , pgUuidGenerateV5 ::\n      forall ctxt s. LiftPg ctxt s (UUID -> Text -> UUID)\n  }\n\ninstance IsPgExtension UuidOssp where\n  pgExtensionName Proxy = "uuid-ossp"\n  pgExtensionBuild = UuidOssp\n    { pgUuidNil =\n        QExpr $ funcE "uuid_nil" <$> sequenceA []\n    , pgUuidNsDns =\n        QExpr $ funcE "uuid_ns_dns" <$> sequenceA []\n    , pgUuidNsUrl =\n        QExpr $ funcE "uuid_ns_url" <$> sequenceA []\n    , pgUuidNsOid =\n        QExpr $ funcE "uuid_ns_oid" <$> sequenceA []\n    , pgUuidNsX500 =\n        QExpr $ funcE "uuid_ns_x500" <$> sequenceA []\n    , pgUuidGenerateV1 =\n        QExpr $ funcE "uuid_generate_v1" <$> sequenceA []\n    , pgUuidGenerateV1Mc =\n        QExpr $ funcE "uuid_generate_v1mc" <$> sequenceA []\n    , pgUuidGenerateV3 = \\(QExpr ns) (QExpr t) ->\n        QExpr $ funcE "uuid_generate_v3" <$> sequenceA [ns, t]\n    , pgUuidGenerateV4 =\n        QExpr $ funcE "uuid_generate_v4" <$> sequenceA []\n    , pgUuidGenerateV5 = \\(QExpr ns) (QExpr t) ->\n        QExpr $ funcE "uuid_generate_v5" <$> sequenceA [ns, t]\n    }\n'