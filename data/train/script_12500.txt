b'package co.joebirch.composeplayground.animation\n\nimport androidx.compose.animation.core.*\nimport androidx.compose.foundation.Canvas\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.unit.dp\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject GrowingCircleAnimationView : ComposableLayout {\n\n    @Composable\n    override fun build() {\n        Column(\n            modifier = Modifier.fillMaxSize().padding(32.dp),\n            verticalArrangement = Arrangement.SpaceEvenly,\n            horizontalAlignment = Alignment.CenterHorizontally\n        ) {\n            //GrowingCircleComponent()\n        }\n    }\n\n    /*\n    private val shapeSize = FloatPropKey()\n\n    private val sizeTransitionDefinition = transitionDefinition<String> {\n        state("A") { this[shapeSize] = 50f }\n        state("B") { this[shapeSize] = 175f }\n        state("C") { this[shapeSize] = 50f }\n\n        transition(fromState = "A", toState = "B") {\n            shapeSize using tween(\n                durationMillis = 900,\n                easing = FastOutLinearInEasing\n            )\n            nextState = "C"\n        }\n        transition(fromState = "B", toState = "C") {\n            shapeSize using tween(\n                durationMillis = 900,\n                easing = LinearOutSlowInEasing\n            )\n        }\n    }\n\n\n    @Composable\n    fun GrowingCircleComponent() {\n        Box(modifier = Modifier.fillMaxSize()) {\n            val state = transition(\n                definition = sizeTransitionDefinition,\n                initState = "A",\n                toState = "B"\n            )\n            Canvas(modifier = Modifier.preferredSize(80.dp).align(Alignment.Center)) {\n                drawCircle(Color.Black, state[shapeSize])\n            }\n        }\n    }\n\n     */\n}'