b'{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n\nmodule Env where\n\nimport Data.Aeson\nimport Data.Aeson.KeyMap\nimport Data.Default\nimport Data.Text.Lazy (Text)\nimport GHC.Generics\n\ndata EnvConfigAuthParams = EnvConfigAuthParams\n  { clientId :: Text\n  , clientSecret :: Text\n  , scopes :: Maybe [Text]\n  }\n  deriving (Generic)\n\ninstance Default EnvConfigAuthParams where\n  def =\n    EnvConfigAuthParams\n      { clientId = ""\n      , clientSecret = ""\n      , scopes = Just []\n      }\n\ninstance FromJSON EnvConfigAuthParams\n\ntype EnvConfig = KeyMap EnvConfigAuthParams\n'