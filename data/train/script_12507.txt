b'{-# LANGUAGE OverloadedStrings #-}\n{-# OPTIONS_GHC -fno-warn-unused-do-bind #-}\n\nmodule Text.Hoodlet.Parse.Attoparsec where\n\nimport Control.Applicative ((<|>))\nimport Data.Attoparsec.ByteString.Char8\n  ( Parser,\n    char,\n    string,\n    try,\n    (<?>),\n  )\nimport qualified Data.ByteString.Char8 as B\nimport qualified Data.Hoodle.Simple as H\nimport Text.Hoodle.Parse.Attoparsec\n  ( hoodleversion,\n    img,\n    link,\n    onestroke,\n    svgObj,\n    trim,\n    xmlheader,\n  )\n\n-- |\nhoodlet :: Parser H.Item\nhoodlet = do\n  trim\n  xmlheader <?> "xmlheader"\n  trim\n  hoodletheader <?> "hoodletheader"\n  trim\n  itm <- try (H.ItemStroke <$> onestroke) <|> try img <|> try svgObj <|> link\n  trim\n  string "</hoodlet>"\n  return itm\n\nhoodletheader :: Parser B.ByteString\nhoodletheader = do\n  string "<hoodlet"\n  trim\n  v <- hoodleversion\n  trim\n  char \'>\'\n  return v\n'