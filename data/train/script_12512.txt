b'package com.codeest.geeknews.presenter.vtex;\n\nimport com.codeest.geeknews.base.RxPresenter;\nimport com.codeest.geeknews.model.DataManager;\nimport com.codeest.geeknews.model.bean.NodeBean;\nimport com.codeest.geeknews.model.bean.NodeListBean;\nimport com.codeest.geeknews.base.contract.vtex.NodeContract;\nimport com.codeest.geeknews.util.RxUtil;\nimport com.codeest.geeknews.widget.CommonSubscriber;\n\nimport java.util.List;\n\nimport javax.inject.Inject;\n\n/**\n * Created by codeest on 16/12/23.\n */\n\npublic class NodePresenter extends RxPresenter<NodeContract.View> implements NodeContract.Presenter{\n\n    private DataManager mDataManager;\n\n    @Inject\n    public NodePresenter(DataManager mDataManager) {\n        this.mDataManager = mDataManager;\n    }\n\n    @Override\n    public void getContent(String node_name) {\n        addSubscribe(mDataManager.fetchTopicList(node_name)\n                .compose(RxUtil.<List<NodeListBean>>rxSchedulerHelper())\n                .subscribeWith(new CommonSubscriber<List<NodeListBean>>(mView) {\n                    @Override\n                    public void onNext(List<NodeListBean> nodeListBeen) {\n                        mView.showContent(nodeListBeen);\n                    }\n                })\n        );\n    }\n\n    @Override\n    public void getTopInfo(String node_name) {\n        addSubscribe(mDataManager.fetchNodeInfo(node_name)\n                .compose(RxUtil.<NodeBean>rxSchedulerHelper())\n                .subscribeWith(new CommonSubscriber<NodeBean>(mView, false) {\n                    @Override\n                    public void onNext(NodeBean nodeBean) {\n                        mView.showTopInfo(nodeBean);\n                    }\n                })\n        );\n    }\n}\n'