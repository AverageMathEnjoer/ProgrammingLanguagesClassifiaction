b'#include <bits/stdc++.h>\nusing namespace std;\nclass heap{\n\tvector<int> a;\n\t#define l(x) 2*x+1\n\t#define r(x) 2*x+2\n\t#define p(x) (x-1)/2\n\t#define null -INT_MAX\n\tpublic:\n\tvoid add(int x){\n\t\ta.push_back(x);\n\t\tgo(a.size()-1);\n\t}\n\tvoid go(int u){\n\t\tif(u == 0) return;\n\t\tint P = p(u);\n\t\tif(a[P]>a[u]) swap(a[P], a[u]), go(P);\n\t}\n\tvoid heapify(int u){\n\t\tint L = l(u), R = r(u), n = a.size();\n\t\tif(L>=n and R>=n) return;\n\t\tint v = (L<n&&R<n)?(a[L]<=a[R]?L:R):L;\n\t\tif(a[u]>a[v]) swap(a[u], a[v]), heapify(v);\n\t}\n\tint extract(){\n\t\tif (a.empty()){\n\t\t\tcout << "Oops! heap is empty!" << endl;\n\t\t\treturn null;\n\t\t}\n\t\tint ans = a[0];\n\t\tif(a.size() == 1) {\n\t\t\ta.clear();\n\t\t\treturn ans;\n\t\t}\n\t\ta[0] = a.back();\n\t\ta.pop_back();\n\t\theapify(0);\n\t\treturn ans;\n\t}\n};\n\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tint i,n,k,j;\n\theap H;\n\tvector<int> a{13, 1, 10, 34, 42, -10};\n\tfor(int x: a) H.add(x);\n\tfor(int x: a) cout << H.extract() << " ";\n\treturn 0;\n} \n\n\n'