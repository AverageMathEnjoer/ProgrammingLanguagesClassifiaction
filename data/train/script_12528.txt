b'-- | These modules allow you to define a single REST resource. Then,\n-- you can combine multiple resources into an API using "Rest.Api",\n-- and run them using \'rest-happstack\' or \'rest-snap\', or generate\n-- client code or documentation using \'rest-gen\'.\nmodule Rest\n  ( -- | Creating a \'Resource\'.\n    module Rest.Resource\n    -- | Defining the routing schema.\n  , module Rest.Schema\n    -- | Defining \'Handler\'s for endpoints in the resource.\n  , module Rest.Handler\n  , module Rest.Dictionary.Types\n    -- | Combinators for defining input and ouput dictionaries of\n    -- handlers.\n  , module Rest.Dictionary.Combinators\n    -- | Working with errors returned from handlers.\n  , module Rest.Error\n  ) where\n\nimport Rest.Dictionary.Types (Json (..), Xml (..))\nimport Rest.Dictionary.Combinators\nimport Rest.Error\nimport Rest.Handler ( Env (..), Handler, ListHandler, secureHandler\n                    , Range (..), range, mkListing, mkOrderedListing, mkHandler\n                    , mkInputHandler, mkConstHandler, mkIdHandler\n                    )\nimport Rest.Resource (Resource, mkResource, mkResourceId, mkResourceReader, mkResourceReaderWith, Void)\nimport Rest.Schema\n\n{-# ANN module "HLint: ignore Use import/export shortcut" #-}\n'