b'namespace CS_SQLite3\n{\n  using sqlite_u3264 = System.UInt64;\n\n  public partial class CSSQLite\n  {\n    /*\n    ** 2008 May 27\n    **\n    ** The author disclaims copyright to this source code.  In place of\n    ** a legal notice, here is a blessing:\n    **\n    **    May you do good and not evil.\n    **    May you find forgiveness for yourself and forgive others.\n    **    May you share freely, never taking more than you give.\n    **\n    ******************************************************************************\n    **\n    ** This file contains inline asm code for retrieving "high-performance"\n    ** counters for x86 class CPUs.\n    **\n    ** $Id: hwtime.h,v 1.3 2008/08/01 14:33:15 shane Exp $\n    **\n    *************************************************************************\n    **  Included in SQLite3 port to C#-SQLite;  2008 Noah B Hart\n    **  C#-SQLite is an independent reimplementation of the SQLite software library\n    **\n    **  $Header$\n    *************************************************************************\n    */\n    //#if !_HWTIME_H_\n    //#define _HWTIME_H_\n\n    /*\n    ** The following routine only works on pentium-class (or newer) processors.\n    ** It uses the RDTSC opcode to read the cycle count value out of the\n    ** processor and returns that value.  This can be used for high-res\n    ** profiling.\n    */\n#if ((__GNUC__) || (_MSC_VER)) &&       ((i386) || (__i386__) || (_M_IX86))\n\n#if (__GNUC__)\n\n__inline__ sqlite_u3264 sqlite3Hwtime(void){\nunsigned int lo, hi;\n__asm__ __volatile__ ("rdtsc" : "=a" (lo), "=d" (hi));\nreturn (sqlite_u3264)hi << 32 | lo;\n}\n\n#elif  (_MSC_VER)\n\n__declspec(naked) __inline sqlite_u3264 __cdecl sqlite3Hwtime(void){\n__asm {\nrdtsc\nret       ; return value at EDX:EAX\n}\n}\n\n#endif\n\n#elif ((__GNUC__) && (__x86_64__))\n\n__inline__ sqlite_u3264 sqlite3Hwtime(void){\nunsigned long val;\n__asm__ __volatile__ ("rdtsc" : "=A" (val));\nreturn val;\n}\n\n#elif ( (__GNUC__) &&  (__ppc__))\n\n__inline__ sqlite_u3264 sqlite3Hwtime(void){\nunsigned long long retval;\nunsigned long junk;\n__asm__ __volatile__ ("\\n\\\n1:      mftbu   %1\\n\\\nmftb    %L0\\n\\\nmftbu   %0\\n\\\ncmpw    %0,%1\\n\\\nbne     1b"\n: "=r" (retval), "=r" (junk));\nreturn retval;\n}\n\n#else\n\n    //#error Need implementation of sqlite3Hwtime() for your platform.\n\n    /*\n    ** To compile without implementing sqlite3Hwtime() for your platform,\n    ** you can remove the above #error and use the following\n    ** stub function.  You will lose timing support for many\n    ** of the debugging and testing utilities, but it should at\n    ** least compile and run.\n    */\n    static sqlite_u3264 sqlite3Hwtime() { return (sqlite_u3264)System.DateTime.Now.Ticks; }// (sqlite_u3264)0 ); }\n\n#endif\n\n    //#endif /* !_HWTIME_H_) */\n  }\n}\n'