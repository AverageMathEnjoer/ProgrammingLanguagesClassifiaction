b'class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        int n = nums.size();\n        int ans = INT_MIN;\n        \n        // vector<int> dp(n+1, 0); // O(N) extra space\n        // dp[i] = max subarray sum starting from index i\n        // mandate to pick something\n        int nextMax = 0;\n        for(int i = n-1; i >= 0; i--) {\n            // dp[i] = max(nums[i] + dp[i+1], 0)\n            // dp[i] = nums[i] + max(dp[i+1], 0);\n            int curMax = nums[i] + max(nextMax, 0);\n            ans = max(ans, curMax);\n            nextMax = curMax;\n        }\n       \n        return ans;\n    }\n};\n\n/*\n_ _ _ _ _ 100 _ _ _ _ _ \n        i ^\n        dp[i] = max(nums[i] + dp[i+1], 0)\n*/\n'