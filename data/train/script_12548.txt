b'package com.codeest.geeknews.presenter.zhihu;\n\nimport com.codeest.geeknews.base.RxPresenter;\nimport com.codeest.geeknews.model.DataManager;\nimport com.codeest.geeknews.model.bean.HotListBean;\nimport com.codeest.geeknews.base.contract.zhihu.HotContract;\nimport com.codeest.geeknews.util.RxUtil;\nimport com.codeest.geeknews.widget.CommonSubscriber;\n\nimport java.util.List;\n\nimport javax.inject.Inject;\n\nimport io.reactivex.functions.Function;\n\n/**\n * Created by codeest on 16/8/12.\n */\n\npublic class HotPresenter extends RxPresenter<HotContract.View> implements HotContract.Presenter{\n\n    private DataManager mDataManager;\n\n    @Inject\n    public HotPresenter(DataManager mDataManager) {\n        this.mDataManager = mDataManager;\n    }\n\n    @Override\n    public void getHotData() {\n        addSubscribe(mDataManager.fetchHotListInfo()\n                .compose(RxUtil.<HotListBean>rxSchedulerHelper())\n                .map(new Function<HotListBean, HotListBean>() {\n                    @Override\n                    public HotListBean apply(HotListBean hotListBean) {\n                        List<HotListBean.RecentBean> list = hotListBean.getRecent();\n                        for(HotListBean.RecentBean item : list) {\n                            item.setReadState(mDataManager.queryNewsId(item.getNews_id()));\n                        }\n                        return hotListBean;\n                    }\n                })\n                .subscribeWith(new CommonSubscriber<HotListBean>(mView) {\n                    @Override\n                    public void onNext(HotListBean hotListBean) {\n                        mView.showContent(hotListBean);\n                    }\n                })\n        );\n    }\n\n    @Override\n    public void insertReadToDB(int id) {\n        mDataManager.insertNewsId(id);\n    }\n}\n'