b'package com.codeest.geeknews.presenter.main;\n\nimport com.codeest.geeknews.base.RxPresenter;\nimport com.codeest.geeknews.model.DataManager;\nimport com.codeest.geeknews.model.bean.WelcomeBean;\nimport com.codeest.geeknews.base.contract.main.WelcomeContract;\nimport com.codeest.geeknews.util.RxUtil;\n\nimport java.util.concurrent.TimeUnit;\n\nimport javax.inject.Inject;\n\nimport io.reactivex.Flowable;\nimport io.reactivex.functions.Consumer;\n\n/**\n * Created by codeest on 16/8/15.\n */\n\npublic class WelcomePresenter extends RxPresenter<WelcomeContract.View> implements WelcomeContract.Presenter{\n\n    private static final String RES = "1080*1776";\n\n    private static final int COUNT_DOWN_TIME = 2200;\n\n    private DataManager mDataManager;\n\n    @Inject\n    public WelcomePresenter(DataManager mDataManager) {\n        this.mDataManager = mDataManager;\n    }\n\n    @Override\n    public void getWelcomeData() {\n        addSubscribe(mDataManager.fetchWelcomeInfo(RES)\n                .compose(RxUtil.<WelcomeBean>rxSchedulerHelper())\n                .subscribe(new Consumer<WelcomeBean>() {\n                    @Override\n                    public void accept(WelcomeBean welcomeBean) {\n                        mView.showContent(welcomeBean);\n                        startCountDown();\n                    }\n                }, new Consumer<Throwable>() {\n                    @Override\n                    public void accept(Throwable throwable) {\n                        mView.jumpToMain();\n                    }\n                })\n        );\n    }\n\n    private void startCountDown() {\n        addSubscribe(Flowable.timer(COUNT_DOWN_TIME, TimeUnit.MILLISECONDS)\n                .compose(RxUtil.<Long>rxSchedulerHelper())\n                .subscribe(new Consumer<Long>() {\n                    @Override\n                    public void accept(Long aLong) {\n                        mView.jumpToMain();\n                    }\n                })\n        );\n    }\n}\n'