b'package effectivejava.chapter4.item23.taggedclass;\n\n// Tagged class - vastly inferior to a class hierarchy! (Page 109)\nclass Figure {\n    enum Shape { RECTANGLE, CIRCLE };\n\n    // Tag field - the shape of this figure\n    final Shape shape;\n\n    // These fields are used only if shape is RECTANGLE\n    double length;\n    double width;\n\n    // This field is used only if shape is CIRCLE\n    double radius;\n\n    // Constructor for circle\n    Figure(double radius) {\n        shape = Shape.CIRCLE;\n        this.radius = radius;\n    }\n\n    // Constructor for rectangle\n    Figure(double length, double width) {\n        shape = Shape.RECTANGLE;\n        this.length = length;\n        this.width = width;\n    }\n\n    double area() {\n        switch(shape) {\n            case RECTANGLE:\n                return length * width;\n            case CIRCLE:\n                return Math.PI * (radius * radius);\n            default:\n                throw new AssertionError(shape);\n        }\n    }\n}\n'