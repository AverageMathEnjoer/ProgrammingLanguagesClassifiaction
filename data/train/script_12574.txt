b'package co.joebirch.composeplayground.material\n\nimport androidx.compose.material.Text\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.material.Slider\nimport androidx.compose.material.SliderDefaults\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject SliderView : ComposableLayout {\n\n    @Composable\n    override fun build() {\n        Box(\n            modifier = Modifier\n                .fillMaxSize()\n                .padding(32.dp)\n        ) {\n            Column(\n                modifier = Modifier.fillMaxSize(),\n                verticalArrangement = Arrangement.SpaceEvenly,\n                horizontalAlignment = Alignment.CenterHorizontally\n            ) {\n                MinimalSliderComponent()\n                ColoredSliderComponent()\n                RangedSliderComponent()\n                SteppedSliderComponent()\n                EndListenerSliderComponent()\n            }\n        }\n    }\n\n    @Composable\n    fun MinimalSliderComponent() {\n        val state = remember { mutableStateOf(0f) }\n        Slider(\n            value = state.value,\n            onValueChange = {\n                state.value = it\n            }\n        )\n    }\n\n    @Composable\n    fun RangedSliderComponent() {\n        val state = remember { mutableStateOf(0f) }\n        Slider(\n            value = state.value,\n            onValueChange = {\n                state.value = it\n            },\n            valueRange = 0f..5f\n        )\n    }\n\n    @Composable\n    fun SteppedSliderComponent() {\n        val state = remember { mutableStateOf(0f) }\n        Slider(\n            value = state.value,\n            onValueChange = {\n                state.value = it\n            },\n            steps = 3,\n            valueRange = 0f..2f\n        )\n    }\n\n    @Composable\n    fun ColoredSliderComponent() {\n        val state = remember { mutableStateOf(0f) }\n        Slider(\n            value = state.value,\n            onValueChange = {\n                state.value = it\n            },\n            colors = SliderDefaults.colors(\n                thumbColor = Color.Red\n            )\n        )\n    }\n\n    @Composable\n    fun EndListenerSliderComponent() {\n        val state = remember { mutableStateOf(0f) }\n        val endState = remember { mutableStateOf(0f) }\n        Column(horizontalAlignment = Alignment.CenterHorizontally) {\n            Text(text = endState.value.toString())\n            Slider(\n                value = state.value,\n                onValueChange = {\n                    state.value = it\n                },\n                onValueChangeFinished = {\n                    endState.value = state.value\n                },\n                colors = SliderDefaults.colors(\n                    thumbColor = Color.Red\n                )\n            )\n        }\n    }\n}'