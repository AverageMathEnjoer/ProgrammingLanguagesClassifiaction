b'\xef\xbb\xbfusing System;\nusing Asn1;\nusing Rubeus.Kerberos;\n\nnamespace Rubeus\n{\n    public class ADWin2KPac : AuthorizationData\n    {\n        public PACTYPE Pac { get; set; }\n\n        public ADWin2KPac()\n        {\n            ad_type = Interop.AuthorizationDataType.AD_WIN2K_PAC;\n\n            ad_data = null;\n        }\n        public ADWin2KPac(byte[] data)\n        {\n            ad_type = Interop.AuthorizationDataType.AD_WIN2K_PAC;\n            Pac = new PACTYPE(data, null);\n        }\n\n        public ADWin2KPac(byte[] data, byte[] asrepKey)\n        {\n            ad_type = Interop.AuthorizationDataType.AD_WIN2K_PAC;\n            Pac = new PACTYPE(data, asrepKey);\n        }\n\n        public ADWin2KPac(PACTYPE pac)\n        {\n            ad_type = Interop.AuthorizationDataType.AD_WIN2K_PAC;\n            Pac = pac;\n        }\n\n        public ADWin2KPac(AsnElt data, byte[] asrepKey = null)\n        {\n            Decode(data, asrepKey);\n        }\n\n        protected override void Decode(AsnElt data)\n        {\n            Decode(data, null);\n        }\n\n        protected override void Decode(AsnElt data, byte[] asrepKey = null)\n        {\n            foreach (AsnElt s in data.Sub)\n            {\n                switch (s.TagValue)\n                {\n                    case 0:\n                        ad_type = (Interop.AuthorizationDataType)s.Sub[0].GetInteger();\n                        break;\n                    case 1:\n                        ad_data = s.Sub[0].CopyValue();\n                        Pac = new PACTYPE(ad_data, asrepKey);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n\n        public override AsnElt Encode()\n        {\n            if (Pac != null)\n            {\n                ad_data = Pac.Encode();\n            }\n\n            return ADEncode();\n        }\n    }\n}\n'