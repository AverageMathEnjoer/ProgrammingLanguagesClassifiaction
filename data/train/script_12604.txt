b'package com.zzg.mybatis.generator.model;\n\nimport java.util.Objects;\n\n/**\n * Created by Owen on 5/13/16.\n */\npublic class DatabaseConfig {\n\n\t/**\n\t * The primary key in the sqlite db\n\t */\n\tprivate Integer id;\n\n\tprivate String dbType;\n\t/**\n\t * The name of the config\n\t */\n\tprivate String name;\n\n\tprivate String host;\n\n\tprivate String port;\n\n\tprivate String schema;\n\n\tprivate String username;\n\n\tprivate String password;\n\n\tprivate String encoding;\n\n    private String lport;\n\n    private String rport;\n\n    private String sshPort;\n\n    private String sshHost;\n\n    private String sshUser;\n\n    private String sshPassword;\n\n    private String privateKeyPassword;\n\n    private String privateKey;\n\n\tpublic Integer getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Integer id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic String getHost() {\n\t\treturn host;\n\t}\n\n\tpublic void setHost(String host) {\n\t\tthis.host = host;\n\t}\n\n\tpublic String getPort() {\n\t\treturn port;\n\t}\n\n\tpublic void setPort(String port) {\n\t\tthis.port = port;\n\t}\n\n\tpublic String getSchema() {\n\t\treturn schema;\n\t}\n\n\tpublic void setSchema(String schema) {\n\t\tthis.schema = schema;\n\t}\n\n\tpublic String getUsername() {\n\t\treturn username;\n\t}\n\n\tpublic void setUsername(String username) {\n\t\tthis.username = username;\n\t}\n\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\n\tpublic String getEncoding() {\n\t\treturn encoding;\n\t}\n\n\tpublic void setEncoding(String encoding) {\n\t\tthis.encoding = encoding;\n\t}\n\n\tpublic String getDbType() {\n\t\treturn dbType;\n\t}\n\n\tpublic void setDbType(String dbType) {\n\t\tthis.dbType = dbType;\n\t}\n\n    public String getLport() {\n        return lport;\n    }\n\n    public void setLport(String lport) {\n        this.lport = lport;\n    }\n\n    public String getRport() {\n        return rport;\n    }\n\n    public void setRport(String rport) {\n        this.rport = rport;\n    }\n\n    public String getSshPort() {\n        return sshPort;\n    }\n\n    public void setSshPort(String sshPort) {\n        this.sshPort = sshPort;\n    }\n\n    public String getSshHost() {\n        return sshHost;\n    }\n\n    public void setSshHost(String sshHost) {\n        this.sshHost = sshHost;\n    }\n\n\tpublic String getSshUser() {\n\t\treturn sshUser;\n\t}\n\n\tpublic void setSshUser(String sshUser) {\n\t\tthis.sshUser = sshUser;\n\t}\n\n\tpublic String getSshPassword() {\n\t\treturn sshPassword;\n\t}\n\n\tpublic void setSshPassword(String sshPassword) {\n\t\tthis.sshPassword = sshPassword;\n\t}\n\n\tpublic String getPrivateKeyPassword() {\n\t\treturn privateKeyPassword;\n\t}\n\n\tpublic void setPrivateKeyPassword(String privateKeyPassword) {\n\t\tthis.privateKeyPassword = privateKeyPassword;\n\t}\n\n\tpublic String getPrivateKey() {\n\t\treturn privateKey;\n\t}\n\n\tpublic void setPrivateKey(String privateKey) {\n\t\tthis.privateKey = privateKey;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (o == null || getClass() != o.getClass()) return false;\n\t\tDatabaseConfig that = (DatabaseConfig) o;\n\t\treturn Objects.equals(id, that.id) &&\n\t\t\tObjects.equals(dbType, that.dbType) &&\n\t\t\tObjects.equals(name, that.name) &&\n\t\t\tObjects.equals(host, that.host) &&\n\t\t\tObjects.equals(port, that.port) &&\n\t\t\tObjects.equals(schema, that.schema) &&\n\t\t\tObjects.equals(username, that.username) &&\n\t\t\tObjects.equals(password, that.password) &&\n\t\t\tObjects.equals(encoding, that.encoding) &&\n\t\t\tObjects.equals(lport, that.lport) &&\n\t\t\tObjects.equals(rport, that.rport) &&\n\t\t\tObjects.equals(sshPort, that.sshPort) &&\n\t\t\tObjects.equals(sshHost, that.sshHost) &&\n\t\t\tObjects.equals(sshUser, that.sshUser) &&\n\t\t\tObjects.equals(sshPassword, that.sshPassword) &&\n\t\t\tObjects.equals(privateKeyPassword, that.privateKeyPassword) &&\n\t\t\tObjects.equals(privateKey, that.privateKey);\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\treturn Objects.hash(id, dbType, name, host, port, schema, username, password, encoding, lport, rport, sshPort, sshHost, sshUser, sshPassword, privateKeyPassword, privateKey);\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn "DatabaseConfig{" +\n\t\t\t\t"id=" + id +\n\t\t\t\t", dbType=\'" + dbType + \'\\\'\' +\n\t\t\t\t", name=\'" + name + \'\\\'\' +\n\t\t\t\t", host=\'" + host + \'\\\'\' +\n\t\t\t\t", port=\'" + port + \'\\\'\' +\n\t\t\t\t", schema=\'" + schema + \'\\\'\' +\n\t\t\t\t", username=\'" + username + \'\\\'\' +\n\t\t\t\t", password=\'" + password + \'\\\'\' +\n\t\t\t\t", encoding=\'" + encoding + \'\\\'\' +\n\t\t\t\t", lport=\'" + lport + \'\\\'\' +\n\t\t\t\t", rport=\'" + rport + \'\\\'\' +\n\t\t\t\t", sshPort=\'" + sshPort + \'\\\'\' +\n\t\t\t\t", sshHost=\'" + sshHost + \'\\\'\' +\n\t\t\t\t", sshUser=\'" + sshUser + \'\\\'\' +\n\t\t\t\t", sshPassword=\'" + sshPassword + \'\\\'\' +\n\t\t\t\t\'}\';\n\t}\n}\n'