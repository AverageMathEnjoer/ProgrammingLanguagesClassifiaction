b'package com.codeest.geeknews.ui.zhihu.adapter;\n\nimport android.content.Context;\nimport android.support.v4.content.ContextCompat;\nimport android.support.v4.view.ViewPager;\nimport android.support.v7.util.DiffUtil;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\nimport com.codeest.geeknews.R;\nimport com.codeest.geeknews.component.ImageLoader;\nimport com.codeest.geeknews.model.bean.DailyBeforeListBean;\nimport com.codeest.geeknews.model.bean.DailyListBean;\nimport com.codeest.geeknews.widget.SquareImageView;\nimport com.codeest.geeknews.widget.ZhihuDiffCallback;\n\nimport java.util.List;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\n\n/**\n * Created by codeest on 16/8/13.\n *\n * \xe4\xb8\x80\xe5\xbc\x80\xe5\xa7\x8b\xe6\x89\x93\xe7\xae\x97\xe7\x94\xa8ScrollView\xe5\xb5\x8c\xe5\xa5\x97RecyclerView\xe6\x9d\xa5\xe5\xae\x9e\xe7\x8e\xb0\n * \xe4\xbd\x86\xe6\x98\xafRecyclerView23.1.1\xe4\xb9\x8b\xe5\x90\x8e\xe7\x9a\x84\xe7\x89\x88\xe6\x9c\xac\xe5\xb5\x8c\xe5\xa5\x97\xe4\xbc\x9a\xe6\x98\xbe\xe7\xa4\xba\xe4\xb8\x8d\xe5\x85\xa8\n * Google\xe4\xb9\x9f\xe4\xb8\x8d\xe6\x8e\xa8\xe8\x8d\x90ScrollView\xe5\xb5\x8c\xe5\xa5\x97RecyclerView\n * \xe8\xbf\x98\xe6\x98\xaf\xe9\x87\x87\xe5\x8f\x96getItemViewType\xe6\x9d\xa5\xe5\xae\x9e\xe7\x8e\xb0\n */\n\npublic class DailyAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>{\n\n    private List<DailyListBean.StoriesBean> mList;\n    private List<DailyListBean.TopStoriesBean> mTopList;\n    private LayoutInflater inflater;\n    private Context mContext;\n    private TopPagerAdapter mAdapter;\n    private ViewPager topViewPager;\n    private OnItemClickListener onItemClickListener;\n\n    private boolean isBefore = false;\n    private String currentTitle = "\xe4\xbb\x8a\xe6\x97\xa5\xe7\x83\xad\xe9\x97\xbb";\n\n    public enum ITEM_TYPE {\n        ITEM_TOP,       //\xe6\xbb\x9a\xe5\x8a\xa8\xe6\xa0\x8f\n        ITEM_DATE,      //\xe6\x97\xa5\xe6\x9c\x9f\n        ITEM_CONTENT    //\xe5\x86\x85\xe5\xae\xb9\n    }\n\n    public DailyAdapter(Context mContext, List<DailyListBean.StoriesBean> mList) {\n        this.mList = mList;\n        this.mContext = mContext;\n        inflater = LayoutInflater.from(mContext);\n    }\n\n    @Override\n    public int getItemViewType(int position) {\n        if(!isBefore) {\n            if(position == 0) {\n                return ITEM_TYPE.ITEM_TOP.ordinal();\n            } else if(position == 1) {\n                return ITEM_TYPE.ITEM_DATE.ordinal();\n            } else {\n                return ITEM_TYPE.ITEM_CONTENT.ordinal();\n            }\n        } else {\n            if(position == 0) {\n                return ITEM_TYPE.ITEM_DATE.ordinal();\n            } else {\n                return ITEM_TYPE.ITEM_CONTENT.ordinal();\n            }\n        }\n    }\n\n    @Override\n    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        if(viewType == ITEM_TYPE.ITEM_TOP.ordinal()) {\n            mAdapter = new TopPagerAdapter(mContext,mTopList);\n            return new TopViewHolder(inflater.inflate(R.layout.item_top, parent, false));\n        } else if(viewType == ITEM_TYPE.ITEM_DATE.ordinal()) {\n            return new DateViewHolder(inflater.inflate(R.layout.item_date, parent, false));\n        }\n        return new ContentViewHolder(inflater.inflate(R.layout.item_daily, parent, false));\n    }\n\n    @Override\n    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\n        if (holder instanceof ContentViewHolder) {\n            final int contentPosition;\n            if(isBefore) {\n                contentPosition = position - 1;\n            } else {\n                contentPosition = position - 2;\n            }\n            ((ContentViewHolder)holder).title.setText(mList.get(contentPosition).getTitle());\n            if (mList.get(contentPosition).getReadState()) {\n                ((ContentViewHolder)holder).title.setTextColor(ContextCompat.getColor(mContext,R.color.news_read));\n            } else {\n                ((ContentViewHolder)holder).title.setTextColor(ContextCompat.getColor(mContext,R.color.news_unread));\n            }\n            ImageLoader.load(mContext,mList.get(contentPosition).getImages().get(0),((ContentViewHolder)holder).image);\n            holder.itemView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View view) {\n                    if(onItemClickListener != null) {\n                        ImageView iv = (ImageView) view.findViewById(R.id.iv_daily_item_image);\n                        onItemClickListener.onItemClick(contentPosition,iv);\n                    }\n                }\n            });\n        } else if (holder instanceof DateViewHolder) {\n            ((DateViewHolder) holder).tvDate.setText(currentTitle);\n        } else {\n            ((TopViewHolder) holder).vpTop.setAdapter(mAdapter);\n            topViewPager = ((TopViewHolder) holder).vpTop;\n        }\n    }\n\n    @Override\n    public int getItemCount() {\n        return mList.size();\n    }\n\n    public static class ContentViewHolder extends RecyclerView.ViewHolder {\n\n        @BindView(R.id.tv_daily_item_title)\n        TextView title;\n        @BindView(R.id.iv_daily_item_image)\n        SquareImageView image;\n\n        public ContentViewHolder(View itemView) {\n            super(itemView);\n            ButterKnife.bind(this,itemView);\n        }\n    }\n\n    public static class DateViewHolder extends RecyclerView.ViewHolder {\n\n        @BindView(R.id.tv_daily_date)\n        TextView tvDate;\n\n        public DateViewHolder(View itemView) {\n            super(itemView);\n            ButterKnife.bind(this,itemView);\n        }\n    }\n\n    public static class TopViewHolder extends RecyclerView.ViewHolder {\n\n        @BindView(R.id.vp_top)\n        ViewPager vpTop;\n        @BindView(R.id.ll_point_container)\n        LinearLayout llContainer;\n\n        public TopViewHolder(View itemView) {\n            super(itemView);\n            ButterKnife.bind(this,itemView);\n        }\n    }\n\n    public void addDailyDate(DailyListBean info) {\n        currentTitle = "\xe4\xbb\x8a\xe6\x97\xa5\xe7\x83\xad\xe9\x97\xbb";\n        DiffUtil.DiffResult diffResult = DiffUtil.calculateDiff(new ZhihuDiffCallback(mList, info.getStories()), true);\n        mList = info.getStories();\n        mTopList = info.getTop_stories();\n        isBefore = false;\n        diffResult.dispatchUpdatesTo(this);\n//        notifyDataSetChanged();\n    }\n\n    public void addDailyBeforeDate(DailyBeforeListBean info) {\n        currentTitle = info.getDate();\n        DiffUtil.DiffResult diffResult = DiffUtil.calculateDiff(new ZhihuDiffCallback(mList, info.getStories()), true);\n        mList = info.getStories();\n        isBefore = true;\n        diffResult.dispatchUpdatesTo(this);\n//        notifyDataSetChanged();\n    }\n\n    public boolean getIsBefore() {\n        return isBefore;\n    }\n\n    public void setReadState(int position,boolean readState) {\n        mList.get(position).setReadState(readState);\n    }\n\n    public void changeTopPager(int currentCount) {\n        if(!isBefore && topViewPager != null) {\n            topViewPager.setCurrentItem(currentCount);\n        }\n    }\n\n    public void setOnItemClickListener(OnItemClickListener onItemClickListener) {\n        this.onItemClickListener = onItemClickListener;\n    }\n\n    public interface OnItemClickListener {\n        void onItemClick(int position,View view);\n    }\n}\n'