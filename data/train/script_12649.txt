b'package com.rd.pageindicatorview.data;\n\nimport android.os.Parcel;\nimport android.os.Parcelable;\n\nimport com.rd.animation.type.AnimationType;\nimport com.rd.draw.data.Orientation;\nimport com.rd.draw.data.RtlMode;\n\npublic class Customization implements Parcelable {\n\n    private AnimationType animationType = AnimationType.NONE;\n    private Orientation orientation = Orientation.HORIZONTAL;\n    private RtlMode rtlMode = RtlMode.Off;\n\n    private boolean interactiveAnimation = false;\n    private boolean autoVisibility = true;\n    private boolean fadeOnIdle = false;\n\n    public AnimationType getAnimationType() {\n        return animationType;\n    }\n\n    public void setAnimationType(AnimationType animationType) {\n        this.animationType = animationType;\n    }\n\n    public Orientation getOrientation() {\n        return orientation;\n    }\n\n    public void setOrientation(Orientation orientation) {\n        this.orientation = orientation;\n    }\n\n    public RtlMode getRtlMode() {\n        return rtlMode;\n    }\n\n    public void setRtlMode(RtlMode rtlMode) {\n        this.rtlMode = rtlMode;\n    }\n\n    public boolean isInteractiveAnimation() {\n        return interactiveAnimation;\n    }\n\n    public void setInteractiveAnimation(boolean interactiveAnimation) {\n        this.interactiveAnimation = interactiveAnimation;\n    }\n\n    public boolean isAutoVisibility() {\n        return autoVisibility;\n    }\n\n    public void setAutoVisibility(boolean autoVisibility) {\n        this.autoVisibility = autoVisibility;\n    }\n\n    public boolean isFadeOnIdle() {\n        return fadeOnIdle;\n    }\n\n    public void setFadeOnIdle(boolean fadeOnIdle) {\n        this.fadeOnIdle = fadeOnIdle;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        Customization that = (Customization) o;\n\n        if (interactiveAnimation != that.interactiveAnimation) return false;\n        if (autoVisibility != that.autoVisibility) return false;\n        if (animationType != that.animationType) return false;\n        if (orientation != that.orientation) return false;\n        if (fadeOnIdle != that.fadeOnIdle) return false;\n        return rtlMode == that.rtlMode;\n\n    }\n\n    @Override\n    public int hashCode() {\n        int result = animationType != null ? animationType.hashCode() : 0;\n        result = 31 * result + (orientation != null ? orientation.hashCode() : 0);\n        result = 31 * result + (rtlMode != null ? rtlMode.hashCode() : 0);\n        result = 31 * result + (interactiveAnimation ? 1 : 0);\n        result = 31 * result + (autoVisibility ? 1 : 0);\n        result = 31 * result + (fadeOnIdle ? 1 : 0);\n        return result;\n    }\n\n    @Override\n    public int describeContents() {\n        return 0;\n    }\n\n    @Override\n    public void writeToParcel(Parcel dest, int flags) {\n        dest.writeInt(this.animationType == null ? -1 : this.animationType.ordinal());\n        dest.writeInt(this.orientation == null ? -1 : this.orientation.ordinal());\n        dest.writeInt(this.rtlMode == null ? -1 : this.rtlMode.ordinal());\n        dest.writeByte(this.interactiveAnimation ? (byte) 1 : (byte) 0);\n        dest.writeByte(this.autoVisibility ? (byte) 1 : (byte) 0);\n        dest.writeByte(this.fadeOnIdle ? (byte) 1 : (byte) 0);\n    }\n\n    public Customization() {\n    }\n\n    protected Customization(Parcel in) {\n        int tmpAnimationType = in.readInt();\n        this.animationType = tmpAnimationType == -1 ? null : AnimationType.values()[tmpAnimationType];\n        int tmpOrientation = in.readInt();\n        this.orientation = tmpOrientation == -1 ? null : Orientation.values()[tmpOrientation];\n        int tmpRtlMode = in.readInt();\n        this.rtlMode = tmpRtlMode == -1 ? null : RtlMode.values()[tmpRtlMode];\n        this.interactiveAnimation = in.readByte() != 0;\n        this.autoVisibility = in.readByte() != 0;\n        this.fadeOnIdle = in.readByte() != 0;\n    }\n\n    public static final Parcelable.Creator<Customization> CREATOR = new Parcelable.Creator<Customization>() {\n        @Override\n        public Customization createFromParcel(Parcel source) {\n            return new Customization(source);\n        }\n\n        @Override\n        public Customization[] newArray(int size) {\n            return new Customization[size];\n        }\n    };\n}\n'