b'\xef\xbb\xbf#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<iostream>\nusing namespace std;\n\nstruct BigInteger {\n  static const int BASE = 100000000;\n  static const int WIDTH = 8;\n  vector<int> s;\n\n  BigInteger(long long num = 0) { *this = num; } // \xe6\x9e\x84\xe9\x80\xa0\xe5\x87\xbd\xe6\x95\xb0\n  BigInteger operator = (long long num) { // \xe8\xb5\x8b\xe5\x80\xbc\xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6\n    s.clear();\n    do {\n      s.push_back(num % BASE);\n      num /= BASE;\n    } while(num > 0);\n    return *this;\n  }\n  BigInteger operator = (const string& str) { // \xe8\xb5\x8b\xe5\x80\xbc\xe8\xbf\x90\xe7\xae\x97\xe7\xac\xa6\n    s.clear();\n    int x, len = (str.length() - 1) / WIDTH + 1;\n    for(int i = 0; i < len; i++) {\n      int end = str.length() - i*WIDTH;\n      int start = max(0, end - WIDTH);\n      sscanf(str.substr(start, end-start).c_str(), "%d", &x);\n      s.push_back(x);\n    }\n    return *this;\n  }\n  BigInteger operator + (const BigInteger& b) const {\n    BigInteger c;\n    c.s.clear();\n    for(int i = 0, g = 0; ; i++) {\n      if(g == 0 && i >= s.size() && i >= b.s.size()) break;\n      int x = g;\n      if(i < s.size()) x += s[i];\n      if(i < b.s.size()) x += b.s[i];\n      c.s.push_back(x % BASE);\n      g = x / BASE;\n    }\n    return c;\n  }\n};\n\nostream& operator << (ostream &out, const BigInteger& x) {\n  out << x.s.back();\n  for(int i = x.s.size()-2; i >= 0; i--) {\n    char buf[20];\n    sprintf(buf, "%08d", x.s[i]);\n    for(int j = 0; j < strlen(buf); j++) out << buf[j];\n  }\n  return out;\n}\n\nistream& operator >> (istream &in, BigInteger& x) {\n  string s;\n  if(!(in >> s)) return in;\n  x = s;\n  return in;\n}\n\n#include<set>\n#include<map>\nset<BigInteger> s;\nmap<BigInteger, int> m;\n\nint main() {\n  BigInteger y;\n  BigInteger x = y;\n  BigInteger z = 123;\n\n  BigInteger a, b;\n  cin >> a >> b;\n  cout << a + b << "\\n";\n  cout << BigInteger::BASE << "\\n";\n  return 0;\n}\n'