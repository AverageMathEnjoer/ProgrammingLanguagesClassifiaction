b'package com.codeest.geeknews.base;\r\n\r\nimport com.codeest.geeknews.component.RxBus;\r\n\r\nimport io.reactivex.disposables.CompositeDisposable;\r\nimport io.reactivex.disposables.Disposable;\r\nimport io.reactivex.functions.Consumer;\r\n\r\n/**\r\n * Created by codeest on 2016/8/2.\r\n * \xe5\x9f\xba\xe4\xba\x8eRx\xe7\x9a\x84Presenter\xe5\xb0\x81\xe8\xa3\x85,\xe6\x8e\xa7\xe5\x88\xb6\xe8\xae\xa2\xe9\x98\x85\xe7\x9a\x84\xe7\x94\x9f\xe5\x91\xbd\xe5\x91\xa8\xe6\x9c\x9f\r\n */\r\npublic class RxPresenter<T extends BaseView> implements BasePresenter<T> {\r\n\r\n    protected T mView;\r\n    protected CompositeDisposable mCompositeDisposable;\r\n\r\n    protected void unSubscribe() {\r\n        if (mCompositeDisposable != null) {\r\n            mCompositeDisposable.clear();\r\n        }\r\n    }\r\n\r\n    protected void addSubscribe(Disposable subscription) {\r\n        if (mCompositeDisposable == null) {\r\n            mCompositeDisposable = new CompositeDisposable();\r\n        }\r\n        mCompositeDisposable.add(subscription);\r\n    }\r\n\r\n    protected <U> void addRxBusSubscribe(Class<U> eventType, Consumer<U> act) {\r\n        if (mCompositeDisposable == null) {\r\n            mCompositeDisposable = new CompositeDisposable();\r\n        }\r\n        mCompositeDisposable.add(RxBus.getDefault().toDefaultFlowable(eventType, act));\r\n    }\r\n\r\n    @Override\r\n    public void attachView(T view) {\r\n        this.mView = view;\r\n    }\r\n\r\n    @Override\r\n    public void detachView() {\r\n        this.mView = null;\r\n        unSubscribe();\r\n    }\r\n}\r\n'