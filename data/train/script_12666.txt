b'module Database.Beam.Postgres.Extensions.Internal where\n\nimport Data.Text (Text)\n\nimport Database.Beam\nimport Database.Beam.Backend.SQL\nimport Database.Beam.Postgres\n\ntype PgExpr ctxt s = QGenExpr ctxt Postgres s\n\ntype family LiftPg ctxt s fn where\n  LiftPg ctxt s (Maybe a -> b) = Maybe (PgExpr ctxt s a) -> LiftPg ctxt s b\n  LiftPg ctxt s (a -> b) = PgExpr ctxt s a -> LiftPg ctxt s b\n  LiftPg ctxt s a = PgExpr ctxt s a\n\nfuncE :: IsSql99ExpressionSyntax expr => Text -> [expr] -> expr\nfuncE nm args = functionCallE (fieldE (unqualifiedField nm)) args\n'