b'package com.quyunshuo.androidbaseframemvvm.common.di\n\nimport com.quyunshuo.androidbaseframemvvm.base.BuildConfig\nimport com.quyunshuo.androidbaseframemvvm.base.constant.VersionStatus\nimport com.quyunshuo.androidbaseframemvvm.common.constant.NetBaseUrlConstant\nimport dagger.Module\nimport dagger.Provides\nimport dagger.hilt.InstallIn\nimport dagger.hilt.components.SingletonComponent\nimport okhttp3.OkHttpClient\nimport okhttp3.logging.HttpLoggingInterceptor\nimport retrofit2.Retrofit\nimport java.util.concurrent.TimeUnit\nimport okhttp3.logging.HttpLoggingInterceptor.Level.NONE\nimport okhttp3.logging.HttpLoggingInterceptor.Level.BODY\nimport retrofit2.converter.gson.GsonConverterFactory\nimport javax.inject.Singleton\n\n/**\n * \xe5\x85\xa8\xe5\xb1\x80\xe4\xbd\x9c\xe7\x94\xa8\xe5\x9f\x9f\xe7\x9a\x84\xe7\xbd\x91\xe7\xbb\x9c\xe5\xb1\x82\xe7\x9a\x84\xe4\xbe\x9d\xe8\xb5\x96\xe6\xb3\xa8\xe5\x85\xa5\xe6\xa8\xa1\xe5\x9d\x97\n *\n * @author Qu Yunshuo\n * @since 6/4/21 8:58 AM\n */\n@Module\n@InstallIn(SingletonComponent::class)\nclass DINetworkModule {\n\n    /**\n     * [OkHttpClient]\xe4\xbe\x9d\xe8\xb5\x96\xe6\x8f\x90\xe4\xbe\x9b\xe6\x96\xb9\xe6\xb3\x95\n     *\n     * @return OkHttpClient\n     */\n    @Singleton\n    @Provides\n    fun provideOkHttpClient(): OkHttpClient {\n        // \xe6\x97\xa5\xe5\xbf\x97\xe6\x8b\xa6\xe6\x88\xaa\xe5\x99\xa8\xe9\x83\xa8\xe5\x88\x86\n        val level = if (BuildConfig.VERSION_TYPE != VersionStatus.RELEASE) BODY else NONE\n        val logInterceptor = HttpLoggingInterceptor().setLevel(level)\n\n        return OkHttpClient.Builder()\n            .connectTimeout(15L * 1000L, TimeUnit.MILLISECONDS)\n            .readTimeout(20L * 1000L, TimeUnit.MILLISECONDS)\n            .addInterceptor(logInterceptor)\n            .retryOnConnectionFailure(true)\n            .build()\n    }\n\n    /**\n     * \xe9\xa1\xb9\xe7\x9b\xae\xe4\xb8\xbb\xe8\xa6\x81\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe5\x9c\xb0\xe5\x9d\x80\xe7\x9a\x84[Retrofit]\xe4\xbe\x9d\xe8\xb5\x96\xe6\x8f\x90\xe4\xbe\x9b\xe6\x96\xb9\xe6\xb3\x95\n     *\n     * @param okHttpClient OkHttpClient OkHttp\xe5\xae\xa2\xe6\x88\xb7\xe7\xab\xaf\n     * @return Retrofit\n     */\n    @Singleton\n    @Provides\n    fun provideMainRetrofit(okHttpClient: OkHttpClient): Retrofit {\n        return Retrofit.Builder()\n            .baseUrl(NetBaseUrlConstant.MAIN_URL)\n            .addConverterFactory(GsonConverterFactory.create())\n            .client(okHttpClient)\n            .build()\n    }\n}'