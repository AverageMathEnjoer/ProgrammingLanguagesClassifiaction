b'package com.rd.pageindicatorview.home;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport androidx.annotation.NonNull;\nimport androidx.viewpager.widget.ViewPager;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport com.rd.PageIndicatorView;\nimport com.rd.pageindicatorview.base.BaseActivity;\nimport com.rd.pageindicatorview.customize.CustomizeActivity;\nimport com.rd.pageindicatorview.data.Customization;\nimport com.rd.pageindicatorview.sample.R;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n\npublic class HomeActivity extends BaseActivity {\n\n    private PageIndicatorView pageIndicatorView;\n    private Customization customization;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.ac_home);\n        customization = new Customization();\n\n        initToolbar();\n        initViews();\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent intent) {\n        boolean customization = requestCode == CustomizeActivity.EXTRAS_CUSTOMIZATION_REQUEST_CODE && resultCode == RESULT_OK;\n        if (customization && intent != null) {\n            this.customization = intent.getParcelableExtra(CustomizeActivity.EXTRAS_CUSTOMIZATION);\n            updateIndicator();\n        }\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu_customize, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case R.id.actionCustomize:\n                CustomizeActivity.start(this, customization);\n                return true;\n\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n    }\n\n    @SuppressWarnings("ConstantConditions")\n    private void initViews() {\n        HomeAdapter adapter = new HomeAdapter();\n        adapter.setData(createPageList());\n\n        final ViewPager pager = findViewById(R.id.viewPager);\n        pager.setAdapter(adapter);\n\n        pageIndicatorView = findViewById(R.id.pageIndicatorView);\n    }\n\n    @NonNull\n    private List<View> createPageList() {\n        List<View> pageList = new ArrayList<>();\n        pageList.add(createPageView(R.color.google_red));\n        pageList.add(createPageView(R.color.google_blue));\n        pageList.add(createPageView(R.color.google_yellow));\n        pageList.add(createPageView(R.color.google_green));\n\n        return pageList;\n    }\n\n    @NonNull\n    private View createPageView(int color) {\n        View view = new View(this);\n        view.setBackgroundColor(getResources().getColor(color));\n\n        return view;\n    }\n\n    private void updateIndicator() {\n        if (customization == null) {\n            return;\n        }\n\n        pageIndicatorView.setAnimationType(customization.getAnimationType());\n        pageIndicatorView.setOrientation(customization.getOrientation());\n        pageIndicatorView.setRtlMode(customization.getRtlMode());\n        pageIndicatorView.setInteractiveAnimation(customization.isInteractiveAnimation());\n        pageIndicatorView.setAutoVisibility(customization.isAutoVisibility());\n        pageIndicatorView.setFadeOnIdle(customization.isFadeOnIdle());\n    }\n}\n'