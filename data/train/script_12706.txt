b'module ColorCoins\n       ( Coin (..)\n       , blue\n       , createCoins\n       , red\n       ) where\n\nnewtype Coin color = Coin\n    { getCoin :: Int\n    } deriving (Show)\n\ndata Blue\ndata Red\n\nblue :: Blue\nblue = undefined\n\nred :: Red\nred = undefined\n\ncreateCoins :: color -> Int -> Coin color\ncreateCoins _ = Coin\n\nc1 :: Coin Blue\nc1 = createCoins blue 10\n\nc2 :: Coin Red\nc2 = Coin 5\n\naddCoins :: Coin color -> Coin color -> Coin color\naddCoins (Coin a) (Coin b) = Coin (a + b)\n'