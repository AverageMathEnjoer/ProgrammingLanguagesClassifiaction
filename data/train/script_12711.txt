b'# week 7\n# varying effects, clusters and features, non-centering\n\nlibrary(rethinking)\n\n# 1\n# simple varying intercepts model\n\ndata(bangladesh)\nd <- bangladesh\n\ndat <- list(\n    C = d$use.contraception,\n    D = as.integer(d$district) )\n\nm1 <- ulam(\n    alist(\n        C ~ bernoulli(p),\n        logit(p) <- a[D],\n        vector[61]:a ~ normal(abar,sigma),\n        abar ~ normal(0,1),\n        sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4 )\n\n# plot estimates\npost <- extract.samples(m1)\np <- inv_logit(post$a)\nplot( apply(p,2,mean) , xlab="district" , lwd=3 , col=2 , ylim=c(0,1) , ylab="prob use contraception" )\nfor ( i in 1:61 ) lines( c(i,i) , PI(p[,i]) , lwd=8 , col=col.alpha(2,0.5) )\n\n# show raw proportions - have to skip 54\nn <- table(dat$D)\nCn <- xtabs(dat$C ~ dat$D)\npC <- as.numeric( Cn/n )\npC <- c( pC[1:53] , NA , pC[54:60] )\npoints( pC , lwd=2 )\n\n# add sample size labels\ny <- rep(c(0.8,0.85,0.9),len=61)\nn <- as.numeric(n)\nn <- c( n[1:53] , 0 , n[54:60] )\ntext( 1:61 , y , n , cex=0.8 )\n\n# 2\n# draw DAG for system, design strategy to estimate influence of urban on contraceptive use\n\n# 3\n# estimate influence of U on C\n# need to adjust for D\n\ndat <- list(\n    C = d$use.contraception,\n    D = as.integer(d$district),\n    U = d$urban,\n    A = standardize(d$age.centered),\n    K = d$living.children )\n\n# total\nm3a <- ulam(\n    alist(\n        C ~ bernoulli(p),\n        logit(p) <- a[D] + bU*U,\n        bU ~ normal(0,0.5),\n        vector[61]:a ~ normal(abar,sigma),\n        abar ~ normal(0,1),\n        sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4 )\n\nprecis(m3a)\n\n# direct\ndat$Kprior <- rep(2,3)\nm3b <- ulam(\n    alist(\n        C ~ bernoulli(p),\n        logit(p) <- a[D] + bU*U + bA*A + \n                    bK*sum( delta_j[1:K] ),\n        c(bU,bA,bK) ~ normal(0,0.5),\n        vector[4]: delta_j <<- append_row( 0 , delta ),\n        simplex[3]: delta ~ dirichlet( Kprior ),\n        vector[61]:a ~ normal(abar,sigma),\n        abar ~ normal(0,1),\n        sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4 )\n\nprecis(m3b)\n\n# varying slopes models\n\n# total\nm3c <- ulam(\n    alist(\n        C ~ bernoulli(p),\n        logit(p) <- a[D,1] + a[D,2]*U,\n        matrix[61,2]:a ~ multi_normal(abar,Rho,sigma),\n        vector[2]:abar ~ normal(0,1),\n        corr_matrix[2]:Rho ~ lkj_corr(4),\n        vector[2]:sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4 )\n\n# non-centered with age\nm3cnc <- ulam(\n    alist(\n        C ~ bernoulli(p),\n        logit(p) <- abar[1] + a[D,1] + \n                    (abar[2] + a[D,2])*U + \n                    (abar[3] + a[D,3])*A,\n        transpars> matrix[61,3]:a <-\n            compose_noncentered( sigma , L_Rho , Z ),\n        matrix[3,61]:Z ~ normal( 0 , 1 ),\n        vector[3]:abar ~ normal(0,1),\n        cholesky_factor_corr[3]:L_Rho ~ lkj_corr_cholesky( 4 ),\n        vector[3]:sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4 )\n\n# direct\ndat$Kprior <- rep(2,3)\nm3d <- ulam(\n    alist(\n        C ~ bernoulli(p),\n        logit(p) <- a[D,1] + a[D,2]*U + a[D,3]*A +\n                    a[D,4]*sum( delta_j[1:K] ),\n        matrix[61,4]:a ~ multi_normal(abar,Rho,sigma),\n        vector[4]: delta_j <<- append_row( 0 , delta ),\n        simplex[3]: delta ~ dirichlet( Kprior ),\n        vector[4]:abar ~ normal(0,1),\n        corr_matrix[4]:Rho ~ lkj_corr(4),\n        vector[4]:sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4 )\n\n# non-centered version\n\nm3dnc <- ulam(\n    alist(\n        C ~ bernoulli(p),\n        logit(p) <- abar[1] + a[D,1] + \n                    (abar[2] + a[D,2])*U + \n                    (abar[3] + a[D,3])*A +\n                    (abar[4] + a[D,4])*sum( delta_j[1:K] ),\n        transpars> matrix[61,4]:a <-\n            compose_noncentered( sigma , L_Rho , Z ),\n        matrix[4,61]:Z ~ normal( 0 , 1 ),\n        vector[4]: delta_j <<- append_row( 0 , delta ),\n        simplex[3]: delta ~ dirichlet( Kprior ),\n        vector[4]:abar ~ normal(0,1),\n        cholesky_factor_corr[4]:L_Rho ~ lkj_corr_cholesky( 4 ),\n        vector[4]:sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4 )\n\nprecis(m3dnc,3,pars="abar")\n\n# 4\n# Can you also go beyond the parameter estimates from problem 3 and compute a marginal causal effect of urban living for each district, using a standard age distribution? Use any population age distribution you like. The important thing is to project the estimates from the sample of each district (which does not have representative age distributions) to the population. If you think the different districts should have different age distributions, that would be even more interesting.\n\ndat$Ks <- standardize(dat$K)\nm4 <- ulam(\n    alist(\n        # C model\n        C ~ bernoulli(p),\n        logit(p) <- abar[1] + a[D,1] + \n                    (abar[2] + a[D,2])*U + \n                    (abar[3] + a[D,3])*A +\n                    (abar[4] + a[D,4])*Ks,\n\n        # K model\n        Ks ~ normal( mu , tau ),\n        mu <- aK + bAK*A + bUK*U,\n        c(aK,bAK,bUK) ~ normal(0,1),\n        tau ~ exponential(1),\n\n        # guts of the machine below\n        transpars> matrix[61,4]:a <-\n            compose_noncentered( sigma , L_Rho , Z ),\n        matrix[4,61]:Z ~ normal( 0 , 1 ),\n        vector[4]:abar ~ normal(0,1),\n        cholesky_factor_corr[4]:L_Rho ~ lkj_corr_cholesky( 4 ),\n        vector[4]:sigma ~ exponential(1)\n    ) , data=dat , chains=4 , cores=4 )\n\n# age distribution - total sample\nAx <- round( d$age.centered - min(d$age.centered) )\nplot(table(Ax),xlab="age (centered & shifted)",lwd=4,col=2,ylab="frequency")\n\n# sample from our idealized age distribution\nf <- seq( from=80 , to=20 , len=34 )\nlines( 0:33 , f , lwd=4 , col=1 )\n\nn <- 1000\nAsim <- sample(0:33,size=n,replace=TRUE,prob=f)\nAsim <- standardize( Asim + min(d$age.centered) )\n\npU0 <- sapply( 1:61 , \n    function(dist) \n        sim(m4,vars=c("Ks","C"),data=list(A=Asim,U=rep(0,n),D=rep(dist,n)))$C \n    )\n\npU1 <- sapply( 1:61 , \n    function(dist) \n        sim(m4,vars=c("Ks","C"),data=list(A=Asim,U=rep(1,n),D=rep(dist,n)))$C \n    )\n\nplot( NULL , xlim=c(1,61) , ylim=c(-0.5,0.5) , ylab="P(C|do(U=1)) - P(C|do(U=0))" , xlab="District" )\nfor ( i in 1:61 ) points( i , mean(pU1[,i] - pU0[,i]) , lwd=4 , col=2 )\nabline(h=0,lty=3,lwd=1)\n\nate <- mean(pU1-pU0)\nabline(h=ate,lwd=2)\n'