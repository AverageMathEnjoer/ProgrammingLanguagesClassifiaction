b'package effectivejava.chapter7.item47;\n\nimport java.util.*;\n\npublic class PowerSet {\n    // Returns the power set of an input set as custom collection (Page 218)\n    public static final <E> Collection<Set<E>> of(Set<E> s) {\n        List<E> src = new ArrayList<>(s);\n        if (src.size() > 30)\n            throw new IllegalArgumentException("Set too big " + s);\n        return new AbstractList<Set<E>>() {\n            @Override public int size() {\n                return 1 << src.size(); // 2 to the power srcSize\n            }\n\n            @Override public boolean contains(Object o) {\n                return o instanceof Set && src.containsAll((Set)o);\n            }\n\n            @Override public Set<E> get(int index) {\n                Set<E> result = new HashSet<>();\n                for (int i = 0; index != 0; i++, index >>= 1)\n                    if ((index & 1) == 1)\n                        result.add(src.get(i));\n                return result;\n            }\n        };\n    }\n\n    public static void main(String[] args) {\n        Set s = new HashSet(Arrays.asList(args));\n        System.out.println(PowerSet.of(s));\n    }\n}'