b'{-# LANGUAGE\n    DeriveDataTypeable\n  , DeriveGeneric\n  #-}\nmodule Type.Comment (Comment (..)) where\n\nimport Data.Aeson\nimport Data.JSON.Schema\nimport Data.Text (Text)\nimport Data.Time\nimport Data.Typeable\nimport GHC.Generics\nimport Generics.Generic.Aeson\nimport Generics.XmlPickler\nimport Text.XML.HXT.Arrow.Pickle\n\nimport Type.Post ()\nimport qualified Type.User as User\n\ndata Comment = Comment\n  { author      :: User.Name\n  , createdTime :: UTCTime\n  , content     :: Text\n  } deriving (Eq, Generic, Ord, Show, Typeable)\n\ninstance XmlPickler Comment where xpickle   = gxpickle\ninstance JSONSchema Comment where schema    = gSchema\ninstance FromJSON   Comment where parseJSON = gparseJson\ninstance ToJSON     Comment where toJSON    = gtoJson\n'