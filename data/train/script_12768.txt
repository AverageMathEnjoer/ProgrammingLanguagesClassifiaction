b'module TreeSitter.Parser\n( Parser\n, withParser\n, withParseTree\n, ts_parser_new\n, ts_parser_halt_on_error\n, ts_parser_parse_string\n, ts_parser_delete\n, ts_parser_set_language\n, ts_parser_timeout_micros\n, ts_parser_set_timeout_micros\n, ts_parser_log_to_stderr\n) where\n\nimport Control.Exception as Exc\nimport Data.ByteString (ByteString)\nimport Data.ByteString.Unsafe (unsafeUseAsCStringLen)\nimport Foreign\nimport Foreign.C\nimport TreeSitter.Language\nimport TreeSitter.Tree\n\n-- | A tree-sitter parser.\n--\n--   This type is uninhabited and used only for type safety within \'Ptr\' values.\ndata Parser\n\nwithParser :: Ptr Language -> (Ptr Parser -> IO a) -> IO a\nwithParser language action = Exc.bracket\n  ts_parser_new\n  ts_parser_delete\n  $ \\ parser -> do\n    _ <- ts_parser_set_language parser language\n    action parser\n\nwithParseTree :: Ptr Parser -> ByteString -> (Ptr Tree -> IO a) -> IO a\nwithParseTree parser bytestring action =\n  unsafeUseAsCStringLen bytestring $ \\ (source, len) -> Exc.bracket\n    (ts_parser_parse_string parser nullPtr source len)\n    releaseTree\n    action\n  where releaseTree t\n          | t == nullPtr = pure ()\n          | otherwise    = ts_tree_delete t\n\nforeign import ccall safe "ts_parser_new" ts_parser_new :: IO (Ptr Parser)\nforeign import ccall safe "ts_parser_halt_on_error" ts_parser_halt_on_error :: Ptr Parser -> CBool -> IO ()\nforeign import ccall safe "ts_parser_parse_string" ts_parser_parse_string :: Ptr Parser -> Ptr Tree -> CString -> Int -> IO (Ptr Tree)\nforeign import ccall safe "ts_parser_delete" ts_parser_delete :: Ptr Parser -> IO ()\nforeign import ccall safe "ts_parser_set_language" ts_parser_set_language :: Ptr Parser -> Ptr Language -> IO Bool\nforeign import ccall safe "ts_parser_timeout_micros" ts_parser_timeout_micros :: Ptr Parser -> IO Word64\nforeign import ccall safe "ts_parser_set_timeout_micros" ts_parser_set_timeout_micros :: Ptr Parser -> Word64 -> IO ()\n\nforeign import ccall safe "src/bridge.c ts_parser_log_to_stderr" ts_parser_log_to_stderr :: Ptr Parser -> IO ()\n'