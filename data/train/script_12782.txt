b"package effectivejava.chapter7.item46;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.*;\nimport java.util.stream.Stream;\n\nimport static java.util.Comparator.comparing;\nimport static java.util.stream.Collectors.*;\nimport static java.util.stream.Collectors.*;\n\n// Frequency table examples showing improper and proper use of stream (Page 210-11)\npublic class Freq {\n    public static void main(String[] args) throws FileNotFoundException {\n        File file = new File(args[0]);\n\n//        // Uses the streams API but not the paradigm--Don't do this!\n//        Map<String, Long> freq = new HashMap<>();\n//        try (Stream<String> words = new Scanner(file).tokens()) {\n//            words.forEach(word -> {\n//                freq.merge(word.toLowerCase(), 1L, Long::sum);\n//            });\n//        }\n\n        // Proper use of streams to initialize a frequency table (\n        Map<String, Long> freq;\n        try (Stream<String> words = new Scanner(file).tokens()) {\n            freq = words\n                    .collect(groupingBy(String::toLowerCase, counting()));\n        }\n\n        System.out.println(freq);\n\n        // Pipeline to get a top-ten list of words from a frequency table\n        List<String> topTen = freq.keySet().stream()\n                .sorted(comparing(freq::get).reversed())\n                .limit(10)\n                .collect(toList());\n\n        System.out.println(topTen);\n    }\n}\n"