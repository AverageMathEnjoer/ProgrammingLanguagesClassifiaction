b'package com.github.eprendre.sources_by_eprendre\n\nimport com.github.eprendre.tingshu.extensions.getMobileUA\nimport com.github.eprendre.tingshu.sources.AudioUrlExtractor\nimport com.github.eprendre.tingshu.sources.AudioUrlWebViewSniffExtractor\nimport com.github.eprendre.tingshu.sources.TingShu\nimport com.github.eprendre.tingshu.utils.*\nimport com.github.kittinunf.fuel.Fuel\nimport com.github.kittinunf.fuel.json.responseJson\nimport java.net.URLEncoder\n\nobject BiliBili: TingShu() {\n    private val headers = mapOf(\n        "User-Agent" to getMobileUA()\n    )\n    override fun getSourceId(): String {\n        return "c893546d95f84db194046bd8de5dbcbb"\n    }\n\n    override fun getUrl(): String {\n        return "https://m.bilibili.com"\n    }\n\n    override fun getName(): String {\n        return "\xe5\x93\x94\xe5\x93\xa9\xe5\x93\x94\xe5\x93\xa9"\n    }\n\n    override fun getDesc(): String {\n        return "\xe6\x8e\xa8\xe8\x8d\x90\xe6\x8c\x87\xe6\x95\xb0:3\xe6\x98\x9f \xe2\xad\x90\xe2\xad\x90\xe2\xad\x90\\n b\xe7\xab\x99\xe4\xb9\x9f\xe6\x9c\x89\xe4\xb8\x80\xe4\xba\x9b\xe6\x9c\x89\xe5\xa3\xb0\xe5\xb0\x8f\xe8\xaf\xb4\xef\xbc\x8c\xe6\x94\xbe\xe6\x9d\xbe\xe4\xb9\x8b\xe4\xbd\x99\xe5\x81\xb6\xe5\xb0\x94\xe7\x9c\x8b\xe7\x9c\x8b\xe8\xa7\x86\xe9\xa2\x91\xe5\x90\xa7\xe3\x80\x82"\n    }\n\n    override fun search(keywords: String, page: Int): Pair<List<Book>, Int> {\n        val encodedKeywords = URLEncoder.encode(keywords, "utf-8")\n\n        val url = "https://api.bilibili.com/x/web-interface/search/all/v2?keyword=${encodedKeywords}&page=${page}&pagesize=20"\n        val data = Fuel.get(url).header(headers).responseJson().third.get().obj().getJSONObject("data")\n        val numPages = data.getInt("numPages")\n        val list = ArrayList<Book>()\n        val results = data.getJSONArray("result")\n        run loop@{\n            (0 until results.length()).forEach {\n                val result = results.getJSONObject(it)\n                if (result.getString("result_type") == "video") {\n                    val videos = result.getJSONArray("data")\n                    (0 until videos.length()).forEach { index ->\n                        val videoObj = videos.getJSONObject(index)\n                        val coverUrl = "https:" + videoObj.getString("pic")\n                        val title = videoObj.getString("title")\n                            .replace("<em class=\\"keyword\\">", "")\n                            .replace("</em>", "")\n                        val author = ""\n                        val artist = videoObj.getString("author")\n                        val bookUrl = "https://m.bilibili.com/video/" + videoObj.getString("bvid")\n                        val status = "\xe6\x92\xad\xe6\x94\xbe\xe6\xac\xa1\xe6\x95\xb0: " + videoObj.getInt("play")\n                        val intro = videoObj.getString("description")\n\n                        list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                            this.status = status\n                            this.intro = intro\n                            this.sourceId = getSourceId()\n                        })\n                    }\n                    return@loop\n                }\n            }\n        }\n        return Pair(list, numPages)\n    }\n\n    override fun getAudioUrlExtractor(): AudioUrlExtractor {\n        AudioUrlWebViewSniffExtractor.setUp(validateUrl = null)\n        return AudioUrlWebViewSniffExtractor\n    }\n\n    override fun getCategoryMenus(): List<CategoryMenu> {\n        return listOf(\n            CategoryMenu(\n                "\xe6\x8e\xa8\xe8\x8d\x90", listOf(\n                    CategoryTab("\xe6\x9c\x89\xe5\xa3\xb0\xe5\xb0\x8f\xe8\xaf\xb4","\xe6\x9c\x89\xe5\xa3\xb0\xe5\xb0\x8f\xe8\xaf\xb4&&1"),\n                    CategoryTab("\xe5\x90\x8c\xe4\xba\xba\xe9\x9f\xb3\xe5\xa3\xb0","\xe5\x90\x8c\xe4\xba\xba\xe9\x9f\xb3\xe5\xa3\xb0&&1"),\n                    CategoryTab("\xe8\x8b\xb1\xe6\x96\x87\xe5\xb0\x8f\xe8\xaf\xb4","audiobooks&&1"),\n                    CategoryTab("\xe7\xbb\x8f\xe5\x85\xb8\xe8\x80\x81\xe6\xad\x8c","\xe7\xbb\x8f\xe5\x85\xb8\xe8\x80\x81\xe6\xad\x8c&&1"),\n                    CategoryTab("\xe9\x9f\xb3\xe4\xb9\x90\xe6\x8e\xa8\xe8\x8d\x90","\xe9\x9f\xb3\xe4\xb9\x90\xe6\x8e\xa8\xe8\x8d\x90&&1"),\n                    CategoryTab("\xe6\x9c\x89\xe5\xa3\xb0\xe6\xbc\xab\xe7\x94\xbb","\xe6\x9c\x89\xe5\xa3\xb0\xe6\xbc\xab\xe7\x94\xbb&&1")\n                )\n            ))\n    }\n\n    override fun getCategoryList(url: String): Category {\n        val params = url.split("&&")\n        val keywords = params[0]\n        val currentPage = params[1].toInt()\n        val encodedKeywords = URLEncoder.encode(keywords, "utf-8")\n\n        val currentUrl = "https://api.bilibili.com/x/web-interface/search/all/v2?keyword=${encodedKeywords}&page=${currentPage}&pagesize=20"\n        val nextUrl = "${keywords}&&${currentPage + 1}"\n        val data = Fuel.get(currentUrl).header(headers).responseJson().third.get().obj().getJSONObject("data")\n        val numPages = data.getInt("numPages")\n        val list = ArrayList<Book>()\n        val results = data.getJSONArray("result")\n        run loop@{\n            (0 until results.length()).forEach {\n                val result = results.getJSONObject(it)\n                if (result.getString("result_type") == "video") {\n                    val videos = result.getJSONArray("data")\n                    (0 until videos.length()).forEach { index ->\n                        val videoObj = videos.getJSONObject(index)\n                        val coverUrl = "https:" + videoObj.getString("pic")\n                        val title = videoObj.getString("title")\n                            .replace("<em class=\\"keyword\\">", "")\n                            .replace("</em>", "")\n                        val author = ""\n                        val artist = videoObj.getString("author")\n                        val bookUrl = "https://m.bilibili.com/video/" + videoObj.getString("bvid")\n                        val status = "\xe6\x92\xad\xe6\x94\xbe\xe6\xac\xa1\xe6\x95\xb0: " + videoObj.getInt("play")\n                        val intro = videoObj.getString("description")\n\n                        list.add(Book(coverUrl, bookUrl, title, author, artist).apply {\n                            this.status = status\n                            this.intro = intro\n                            this.sourceId = getSourceId()\n                        })\n                    }\n                    return@loop\n                }\n            }\n        }\n\n        return Category(list, currentPage, numPages, url, nextUrl)\n    }\n\n    override fun getBookDetailInfo(bookUrl: String, loadEpisodes: Boolean, loadFullPages: Boolean): BookDetail {\n        val episodes = ArrayList<Episode>()\n        if (loadEpisodes) {\n            val bvid = bookUrl.split("/").last().replace("BV1", "")\n            val url = "https://api.bilibili.com/x/web-interface/view/detail?aid=&bvid=$bvid"\n            val data = Fuel.get(url).header(headers).responseJson().third.get().obj().getJSONObject("data")\n            val pages = data.getJSONObject("View").getJSONArray("pages")\n            (0 until pages.length()).forEach {\n                val item = pages.getJSONObject(it)\n                val page = item.getInt("page")\n                val title = item.getString("part")\n                episodes.add(Episode(title, "$bookUrl?p=$page"))\n            }\n        }\n        return BookDetail(episodes)\n    }\n}'