b'package effectivejava.chapter2.item2.hierarchicalbuilder;\n\n// Subclass with hierarchical builder (Page 15)\npublic class Calzone extends Pizza {\n    private final boolean sauceInside;\n\n    public static class Builder extends Pizza.Builder<Builder> {\n        private boolean sauceInside = false; // Default\n\n        public Builder sauceInside() {\n            sauceInside = true;\n            return this;\n        }\n\n        @Override public Calzone build() {\n            return new Calzone(this);\n        }\n\n        @Override protected Builder self() { return this; }\n    }\n\n    private Calzone(Builder builder) {\n        super(builder);\n        sauceInside = builder.sauceInside;\n    }\n\n    @Override public String toString() {\n        return String.format("Calzone with %s and sauce on the %s",\n                toppings, sauceInside ? "inside" : "outside");\n    }\n}\n'