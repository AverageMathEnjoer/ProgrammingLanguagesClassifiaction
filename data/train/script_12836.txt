b'{-# LANGUAGE OverloadedStrings #-}\n{-# OPTIONS_GHC -fno-warn-unused-imports#-}\nmodule Restexample.Client.Post.Comment where\nimport Rest.Client.Internal\nimport qualified Restexample.Client.Post as Post\nimport qualified Rest.Types.Void\nimport qualified Rest.Types.Container\nimport qualified Type.Comment\nimport qualified Type.UserComment\n\ntype Identifier = [(Char)]\n\nreadId :: Identifier -> [String]\nreadId x = ["id", showUrl x]\n\nlist ::\n       ApiStateC m =>\n       Post.Identifier ->\n         [(String, String)] ->\n           m (ApiResponse Rest.Types.Void.Void\n                (Rest.Types.Container.List (Type.Comment.Comment)))\nlist post pList\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/plain")]\n        request\n          = makeReq "GET" "v1.0.0" [["post"], Post.readId post, ["comment"]]\n              pList\n              rHeaders\n              ""\n      in doRequest fromJSON fromJSON request\n\ncreate ::\n         ApiStateC m =>\n         Post.Identifier ->\n           Type.UserComment.UserComment ->\n             m (ApiResponse Rest.Types.Void.Void Type.Comment.Comment)\ncreate post input\n  = let rHeaders\n          = [(hAccept, "text/json"), (hContentType, "text/json")]\n        request\n          = makeReq "POST" "v1.0.0" [["post"], Post.readId post, ["comment"]]\n              []\n              rHeaders\n              (toJSON input)\n      in doRequest fromJSON fromJSON request'