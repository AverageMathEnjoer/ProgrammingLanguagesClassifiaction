b'{-# LANGUAGE OverloadedStrings #-}\n\nmodule Test.Internal.Util\n( spec\n)\nwhere\n\nimport Pdf.Document.Internal.Util\n\nimport Test.Hspec\n\nspec :: Spec\nspec = describe "Internal.Util" $ do\n  describe "decodeTextString" $ do\n    context "when string starts with BOM" $ do\n      it "decodes it as UTF16BE" $ do\n        decodeTextString "\\254\\255\\NULH\\NULe\\NULl\\NULl\\NULo\\EOT^"\n          `shouldBe` Right "Hello\xd1\x9e"\n\n    context "when string doesn\'t start with BOM" $ do\n      it "decodes it as PDFDocEncoding string" $ do\n        decodeTextString "Hello\\130"\n          `shouldBe` Right "Hello\xe2\x80\xa1"\n'