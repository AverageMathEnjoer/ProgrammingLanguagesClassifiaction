b'context("tximport and tximeta")\ntest_that("tximport works", {\n  library(tximport)\n  library(readr)\n  library(tximportData)\n  dir <- system.file("extdata", package="tximportData")\n  samples <- read.table(file.path(dir,"samples.txt"), header=TRUE)\n  samples$condition <- factor(rep(c("A","B"),each=3))\n  rownames(samples) <- samples$run\n  samples[,c("pop","center","run","condition")]\n  files <- file.path(dir,"salmon", samples$run, "quant.sf.gz")\n  names(files) <- samples$run\n  #tx2gene <- read_csv(file.path(dir, "tx2gene.gencode.v27.csv"))\n  txi <- tximport(files, type="salmon", txOut=TRUE)\n  dds <- DESeqDataSetFromTximport(txi,\n                                  colData = samples,\n                                  design = ~ condition)\n  expect_true("avgTxLength" %in% assayNames(dds))\n  dds <- estimateSizeFactors(dds)\n  expect_true("normalizationFactors" %in% assayNames(dds))\n  txi2 <- txi\n  # Note to users: this is NOT the ideal way to make CFA, instead use tximport()\n  txi2$counts <- makeCountsFromAbundance(txi$counts,\n                                         txi$abundance,\n                                         txi$length,\n                                         countsFromAbundance="lengthScaledTPM")\n  txi2$countsFromAbundance <- "lengthScaledTPM"\n  dds <- DESeqDataSetFromTximport(txi2,\n                                  colData = samples,\n                                  design = ~ condition)\n  expect_true("counts" == assayNames(dds))\n  dds <- estimateSizeFactors(dds)\n  expect_true("counts" == assayNames(dds))\n})\ntest_that("tximeta works", {\n  library(tximportData)\n  library(tximeta)\n  dir <- system.file("extdata/salmon_dm", package="tximportData")\n  files <- file.path(dir, "SRR1197474", "quant.sf") \n  coldata <- data.frame(files, names="SRR1197474", condition="A", stringsAsFactors=FALSE)\n  indexDir <- file.path(dir, "Dm.BDGP6.22.98_salmon-0.14.1")\n  fastaFTP <- c("ftp://ftp.ensembl.org/pub/release-98/fasta/drosophila_melanogaster/cdna/Drosophila_melanogaster.BDGP6.22.cdna.all.fa.gz",\n                "ftp://ftp.ensembl.org/pub/release-98/fasta/drosophila_melanogaster/ncrna/Drosophila_melanogaster.BDGP6.ncrna.all.fa.gz")\n  gtfPath <- file.path(dir,"Drosophila_melanogaster.BDGP6.22.98.gtf.gz")\n  makeLinkedTxome(indexDir=indexDir,\n                  source="LocalEnsembl",\n                  organism="Drosophila melanogaster",\n                  release="98",\n                  genome="BDGP6.22",\n                  fasta=fastaFTP,\n                  gtf=gtfPath,\n                  write=FALSE)\n  # doesn\'t throw an error on Bioc...\n  expect_warning(se <- tximeta(coldata))\n  gse <- summarizeToGene(se)\n  # warning about 1 file... ok\n  expect_warning(dds <- DESeqDataSet(gse, ~1))\n  expect_true("avgTxLength" %in% assayNames(dds))\n  dds <- estimateSizeFactors(dds)\n  expect_true("normalizationFactors" %in% assayNames(dds))\n})\n'