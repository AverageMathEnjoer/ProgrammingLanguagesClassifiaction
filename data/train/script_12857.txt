b'package com.naman14.timber.activities;\n\nimport android.content.Context;\nimport android.content.SharedPreferences;\nimport android.graphics.Color;\nimport android.os.Bundle;\nimport android.preference.PreferenceManager;\nimport androidx.annotation.StyleRes;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\n\nimport com.afollestad.appthemeengine.Config;\nimport com.afollestad.appthemeengine.customizers.ATEActivityThemeCustomizer;\nimport com.afollestad.appthemeengine.customizers.ATEStatusBarCustomizer;\nimport com.afollestad.appthemeengine.customizers.ATEToolbarCustomizer;\nimport com.naman14.timber.R;\nimport com.naman14.timber.utils.Constants;\nimport com.naman14.timber.utils.NavigationUtils;\nimport com.naman14.timber.utils.PreferencesUtility;\n\n/**\n * Created by naman on 01/01/16.\n */\npublic class NowPlayingActivity extends BaseActivity implements ATEActivityThemeCustomizer, ATEToolbarCustomizer, ATEStatusBarCustomizer {\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_nowplaying);\n        SharedPreferences prefs = getSharedPreferences(Constants.FRAGMENT_ID, Context.MODE_PRIVATE);\n        String fragmentID = prefs.getString(Constants.NOWPLAYING_FRAGMENT_ID, Constants.TIMBER3);\n\n        Fragment fragment = NavigationUtils.getFragmentForNowplayingID(fragmentID);\n        FragmentManager fragmentManager = getSupportFragmentManager();\n\n        fragmentManager.beginTransaction()\n                .replace(R.id.container, fragment).commit();\n\n    }\n\n    @StyleRes\n    @Override\n    public int getActivityTheme() {\n        return PreferenceManager.getDefaultSharedPreferences(this).getBoolean("dark_theme", false) ? R.style.AppTheme_FullScreen_Dark : R.style.AppTheme_FullScreen_Light;\n    }\n\n    @Override\n    public int getLightToolbarMode() {\n        return Config.LIGHT_TOOLBAR_AUTO;\n    }\n\n    @Override\n    public int getLightStatusBarMode() {\n        return Config.LIGHT_STATUS_BAR_OFF;\n    }\n\n    @Override\n    public int getToolbarColor() {\n        return Color.TRANSPARENT;\n    }\n\n    @Override\n    public int getStatusBarColor() {\n        return Color.TRANSPARENT;\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        if (PreferencesUtility.getInstance(this).didNowplayingThemeChanged()) {\n            PreferencesUtility.getInstance(this).setNowPlayingThemeChanged(false);\n            recreate();\n        }\n    }\n}\n'