b'{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# LANGUAGE TypeFamilies #-}\n\n-- | [Twitter OAuth2 guide](https://developer.twitter.com/en/docs/authentication/oauth-2-0/authorization-code)\nmodule Network.OAuth2.Provider.Twitter where\n\nimport Data.Aeson\nimport Data.Char (toLower)\nimport Data.Map.Strict qualified as Map\nimport Data.Set qualified as Set\nimport Data.Text.Lazy (Text)\nimport GHC.Generics\nimport Network.OAuth.OAuth2\nimport Network.OAuth2.Experiment\nimport URI.ByteString.QQ\n\ndata Twitter = Twitter deriving (Eq, Show)\n\ntype instance IdpUserInfo Twitter = TwitterUserResp\n\ndefaultTwitterApp :: IdpApplication \'AuthorizationCode Twitter\ndefaultTwitterApp =\n  AuthorizationCodeIdpApplication\n    { idpAppClientId = ""\n    , idpAppClientSecret = ""\n    , idpAppScope = Set.fromList ["tweet.read", "users.read"]\n    , idpAppAuthorizeState = "CHANGE_ME"\n    , idpAppAuthorizeExtraParams = Map.empty\n    , idpAppRedirectUri = [uri|http://localhost|]\n    , idpAppName = "default-twitter-App"\n    , idpAppTokenRequestAuthenticationMethod = ClientSecretBasic\n    , idp = defaultTwitterIdp\n    }\n\ndefaultTwitterIdp :: Idp Twitter\ndefaultTwitterIdp =\n  Idp\n    { idpFetchUserInfo = authGetJSON @(IdpUserInfo Twitter)\n    , idpUserInfoEndpoint = [uri|https://api.twitter.com/2/users/me|]\n    , idpAuthorizeEndpoint = [uri|https://twitter.com/i/oauth2/authorize|]\n    , idpTokenEndpoint = [uri|https://api.twitter.com/2/oauth2/token|]\n    }\n\ndata TwitterUser = TwitterUser\n  { name :: Text\n  , id :: Text\n  , username :: Text\n  }\n  deriving (Show, Generic)\n\nnewtype TwitterUserResp = TwitterUserResp {twitterUserRespData :: TwitterUser}\n  deriving (Show, Generic)\n\ninstance FromJSON TwitterUserResp where\n  -- 15 = length "twitterUserResp"\n  parseJSON = genericParseJSON (defaultOptions {fieldLabelModifier = map toLower . drop 15})\n\ninstance FromJSON TwitterUser\n'