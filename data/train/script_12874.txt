b'// Listing 11.1\nlet tupledAdd(a,b) = a + b\nlet answer = tupledAdd (5,10)\n\nlet curriedAdd a b = a + b\nlet curriedAnswer = curriedAdd 5 10\n\n// Listing 11.2\nlet add first second = first + second\nlet addFive = add 5\nlet fifteen = addFive 10\n\n// Listing 11.3\nopen System\nlet buildDt year month day = DateTime(year, month, day)\nlet buildDtThisYearFull month day = buildDt DateTime.UtcNow.Year month day\nlet buildDtThisMonthFull day = buildDtThisYearFull DateTime.UtcNow.Month day\n\n// Listing 11.4\nlet buildDtThisYear = buildDt DateTime.UtcNow.Year\nlet buildDtThisMonth = buildDtThisYear DateTime.UtcNow.Month\n\n// Listing 11.5\nopen System.IO\nlet writeToFile (date:DateTime) filename text =\n    let path = sprintf "%s-%s.txt" (date.ToString "yyMMdd") filename\n    File.WriteAllText(path, text)\n\n// Listing 11.6\nlet writeToToday = writeToFile DateTime.UtcNow.Date\nlet writeToTomorrow = writeToFile (DateTime.UtcNow.Date.AddDays 1.)\nlet writeToTodayHelloWorld = writeToToday "hello-world"\n\nwriteToToday "first-file" "The quick brown fox jumped over the lazy dog"\nwriteToTomorrow "second-file" "The quick brown fox jumped over the lazy dog"\nwriteToTodayHelloWorld "The quick brown fox jumped over the lazy dog"\n\n// Listing 11.7\nlet checkCreation (creationDate:DateTime) =\n    if (DateTime.UtcNow - creationDate).TotalDays > 7. then sprintf "Old"\n    else sprintf "New"\n\nlet time =\n    let directory = Directory.GetCurrentDirectory()\n    Directory.GetCreationTime directory\ncheckCreation time\n\n// Listing 11.8\ncheckCreation(\n    Directory.GetCreationTime(\n        Directory.GetCurrentDirectory())) \n\n// Listing 11.9\nDirectory.GetCurrentDirectory()\n|> Directory.GetCreationTime\n|> checkCreation\n\n// Listing 11.10\n//let answer = 10 |> add 5 |> timesBy 2 |> add 20 |> add 7 |> timesBy 3\n\n// loadCustomer 17 |> buildReport |> convertTo Formats.PDF |> postToQueue\n\n(*\nlet customersWithOverdueOrders =\n    getSqlConnection "DevelopmentDb"\n    |> createDbConnection\n    |> findCustomersWithOrders Status.Outstanding (TimeSpan.FromDays 7.0)\n*)\n\n// Listing 11.12\nlet drive distance petrol =\n    if distance = "far" then petrol / 2.0\n    elif distance = "medium" then petrol - 10.0\n    else petrol - 1.0\n\nlet startPetrol = 100.0\n\nstartPetrol\n|> drive "far"\n|> drive "medium"\n|> drive "short"\n\n// Listing 11.13\nlet checkCurrentDirectoryAge =\n    Directory.GetCurrentDirectory\n    >> Directory.GetCreationTime\n    >> checkCreation\nlet description = checkCurrentDirectoryAge() \n'