b'package com.codeest.geeknews.ui.vtex.fragment;\n\nimport android.support.v4.widget.SwipeRefreshLayout;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\n\nimport com.codeest.geeknews.R;\nimport com.codeest.geeknews.app.Constants;\nimport com.codeest.geeknews.base.RootFragment;\nimport com.codeest.geeknews.model.bean.TopicListBean;\nimport com.codeest.geeknews.presenter.vtex.VtexPresenter;\nimport com.codeest.geeknews.base.contract.vtex.VtexContract;\nimport com.codeest.geeknews.ui.vtex.adapter.TopicAdapter;\nimport com.codeest.geeknews.widget.CommonItemDecoration;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport butterknife.BindView;\n\n/**\n * Created by codeest on 6/12/19.\n */\n\npublic class VtexPagerFragment extends RootFragment<VtexPresenter> implements VtexContract.View{\n\n    @BindView(R.id.view_main)\n    RecyclerView rvContent;\n    @BindView(R.id.swipe_refresh)\n    SwipeRefreshLayout swipeRefresh;\n\n    private TopicAdapter mAdapter;\n\n    private String mType;\n\n    @Override\n    protected void initInject() {\n        getFragmentComponent().inject(this);\n    }\n\n    @Override\n    protected int getLayoutId() {\n        return R.layout.view_common_list;\n    }\n\n    @Override\n    protected void initEventAndData() {\n        super.initEventAndData();\n        mType = getArguments().getString(Constants.IT_VTEX_TYPE);\n        mAdapter = new TopicAdapter(mContext, new ArrayList<TopicListBean>());\n        CommonItemDecoration mDecoration = new CommonItemDecoration(1, CommonItemDecoration.UNIT_DP);\n        rvContent.setLayoutManager(new LinearLayoutManager(mContext));\n        rvContent.setAdapter(mAdapter);\n        rvContent.addItemDecoration(mDecoration);\n        swipeRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n            @Override\n            public void onRefresh() {\n                mPresenter.getContent(mType);\n            }\n        });\n        stateLoading();\n        mPresenter.getContent(mType);\n    }\n\n    @Override\n    public void stateError() {\n        super.stateError();\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n    }\n\n    @Override\n    public void showContent(List<TopicListBean> mList) {\n        if(swipeRefresh.isRefreshing()) {\n            swipeRefresh.setRefreshing(false);\n        }\n        stateMain();\n        mAdapter.updateData(mList);\n    }\n}\n'