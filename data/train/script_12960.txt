b'package co.joebirch.composeplayground.animation\n\nimport androidx.compose.animation.Crossfade\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.text.TextStyle\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.unit.dp\nimport co.joebirch.composeplayground.ComposableLayout\n\nobject CrossfadeAnimationView : ComposableLayout {\n\n    @Composable\n    override fun build() {\n        Column(\n            modifier = Modifier.fillMaxSize().padding(32.dp),\n            verticalArrangement = Arrangement.SpaceEvenly,\n            horizontalAlignment = Alignment.CenterHorizontally\n        ) {\n            CrossfadeTextAnimation()\n            CrossfadeColorAnimation()\n        }\n    }\n\n    @Composable\n    fun CrossfadeTextAnimation() {\n        val strings = listOf("This the first text", "This is the second text")\n        var currentString = remember { mutableStateOf(strings[0]) }\n\n        Column(modifier = Modifier.fillMaxWidth()) {\n            Crossfade(targetState = currentString) { color ->\n                Text(\n                    text = color.value, modifier = Modifier.fillMaxWidth().clickable(onClick = {\n                        currentString.value = if (currentString.value == strings[0]) strings[1] else strings[0]\n                    }),\n                    style = TextStyle(textAlign = TextAlign.Center)\n                )\n            }\n        }\n    }\n\n    @Composable\n    fun CrossfadeColorAnimation() {\n        val colors = listOf(Color.Red, Color.Green)\n        val current = remember { mutableStateOf(colors[0]) }\n\n        Column(modifier = Modifier.fillMaxWidth()) {\n            Crossfade(targetState = current) { color ->\n                Box(Modifier.fillMaxWidth().height(120.dp).clickable(onClick = {\n                    current.value = if (current.value == colors[0]) colors[1] else colors[0]\n                }).background(current.value))\n            }\n        }\n    }\n\n}'