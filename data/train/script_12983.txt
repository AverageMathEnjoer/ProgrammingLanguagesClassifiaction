b'{-# LANGUAGE OverloadedStrings #-}\n\nmodule Test.Name\n(\n  spec\n)\nwhere\n\nimport qualified Pdf.Core.Name as Name\n\nimport Data.Either\nimport Test.Hspec\n\nspec :: Spec\nspec = describe "Name" $ do\n  makeSpec\n\nmakeSpec :: Spec\nmakeSpec = describe "make" $ do\n  it "should wrap bytestring to name" $ do\n    Name.make "hello" `shouldSatisfy` isRight\n\n  it "should not allow 0 byte inside a name" $ do\n    Name.make "hello\\0" `shouldSatisfy` isLeft\n'