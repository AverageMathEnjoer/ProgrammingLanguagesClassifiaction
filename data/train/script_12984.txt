b'package com.quyunshuo.androidbaseframemvvm.base.utils\n\nimport android.util.Log\nimport android.widget.Toast\nimport com.alibaba.android.arouter.launcher.ARouter\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.flow.catch\nimport kotlinx.coroutines.flow.flow\nimport kotlinx.coroutines.flow.flowOn\n\n/**\n * \xe4\xbd\xbf\xe7\x94\xa8 Flow \xe5\x81\x9a\xe7\x9a\x84\xe7\xae\x80\xe5\x8d\x95\xe7\x9a\x84\xe8\xbd\xae\xe8\xaf\xa2\n * \xe8\xaf\xb7\xe4\xbd\xbf\xe7\x94\xa8\xe5\x8d\x95\xe7\x8b\xac\xe7\x9a\x84\xe5\x8d\x8f\xe7\xa8\x8b\xe6\x9d\xa5\xe8\xbf\x9b\xe8\xa1\x8c\xe7\xae\xa1\xe7\x90\x86\xe8\xaf\xa5 Flow\n * Flow \xe4\xbb\x8d\xe6\x9c\x89\xe4\xb8\x80\xe4\xba\x9b\xe6\x93\x8d\xe4\xbd\x9c\xe7\xac\xa6\xe6\x98\xaf\xe5\xae\x9e\xe9\xaa\x8c\xe6\x80\xa7\xe7\x9a\x84 \xe4\xbd\xbf\xe7\x94\xa8\xe6\x97\xb6\xe9\x9c\x80\xe6\xb7\xbb\xe5\x8a\xa0 @InternalCoroutinesApi \xe6\xb3\xa8\xe8\xa7\xa3\n * @param intervals \xe8\xbd\xae\xe8\xaf\xa2\xe9\x97\xb4\xe9\x9a\x94\xe6\x97\xb6\xe9\x97\xb4/\xe6\xaf\xab\xe7\xa7\x92\n * @param block \xe9\x9c\x80\xe8\xa6\x81\xe6\x89\xa7\xe8\xa1\x8c\xe7\x9a\x84\xe4\xbb\xa3\xe7\xa0\x81\xe5\x9d\x97\n */\nsuspend fun startPolling(intervals: Long, block: () -> Unit) {\n    flow {\n        while (true) {\n            delay(intervals)\n            emit(0)\n        }\n    }\n        .catch { Log.e("flow", "startPolling: $it") }\n        .flowOn(Dispatchers.Main)\n        .collect { block.invoke() }\n}\n/**************************************************************************************************/\n\n/**\n * \xe5\x8f\x91\xe9\x80\x81\xe6\x99\xae\xe9\x80\x9aEventBus\xe4\xba\x8b\xe4\xbb\xb6\n */\nfun sendEvent(event: Any) = EventBusUtils.postEvent(event)\n\n/**************************************************************************************************/\n/**\n * \xe9\x98\xbf\xe9\x87\x8c\xe8\xb7\xaf\xe7\x94\xb1\xe4\xb8\x8d\xe5\xb8\xa6\xe5\x8f\x82\xe6\x95\xb0\xe8\xb7\xb3\xe8\xbd\xac\n * @param routerUrl String \xe8\xb7\xaf\xe7\x94\xb1\xe5\x9c\xb0\xe5\x9d\x80\n */\nfun aRouterJump(routerUrl: String) {\n    ARouter.getInstance().build(routerUrl).navigation()\n}\n\n/**************************************************************************************************/\n/**\n * toast\n * @param msg String \xe6\x96\x87\xe6\xa1\x88\n * @param duration Int \xe6\x97\xb6\xe9\x97\xb4\n */\nfun toast(msg: String, duration: Int = Toast.LENGTH_SHORT) {\n    ToastUtils.showToast(msg, duration)\n}\n\n/**\n * toast\n * @param msgId Int String\xe8\xb5\x84\xe6\xba\x90ID\n * @param duration Int \xe6\x97\xb6\xe9\x97\xb4\n */\nfun toast(msgId: Int, duration: Int = Toast.LENGTH_SHORT) {\n    ToastUtils.showToast(msgId, duration)\n}'