b'package com.quyunshuo.androidbaseframemvvm.base.mvvm.m\n\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.FlowCollector\nimport kotlinx.coroutines.flow.flow\nimport kotlinx.coroutines.flow.flowOn\n\n/**\n * \xe4\xbb\x93\xe5\xba\x93\xe5\xb1\x82 Repository \xe5\x9f\xba\xe7\xb1\xbb\n *\n * @author Qu Yunshuo\n * @since 8/27/20\n */\nopen class BaseRepository {\n\n    /**\n     * \xe5\x8f\x91\xe8\xb5\xb7\xe8\xaf\xb7\xe6\xb1\x82\xe5\xb0\x81\xe8\xa3\x85\n     * \xe8\xaf\xa5\xe6\x96\xb9\xe6\xb3\x95\xe5\xb0\x86flow\xe7\x9a\x84\xe6\x89\xa7\xe8\xa1\x8c\xe5\x88\x87\xe6\x8d\xa2\xe8\x87\xb3IO\xe7\xba\xbf\xe7\xa8\x8b\n     *\n     * @param requestBlock \xe8\xaf\xb7\xe6\xb1\x82\xe7\x9a\x84\xe6\x95\xb4\xe4\xbd\x93\xe9\x80\xbb\xe8\xbe\x91\n     * @return Flow<T> @BuilderInference block: suspend FlowCollector<T>.() -> Unit\n     */\n    protected fun <T> request(requestBlock: suspend FlowCollector<T>.() -> Unit): Flow<T> {\n        return flow(block = requestBlock).flowOn(Dispatchers.IO)\n    }\n}'