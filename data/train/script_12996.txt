b'module Main where\n\nimport qualified Database.Postgres.Temp as TempDb\nimport Test.Tasty\n\nimport qualified Database.Beam.Postgres.Test.Select as Select\nimport qualified Database.Beam.Postgres.Test.Marshal as Marshal\nimport qualified Database.Beam.Postgres.Test.DataTypes as DataType\nimport qualified Database.Beam.Postgres.Test.Migrate as Migrate\n\nmain :: IO ()\nmain = defaultMain $ withDb $ \\getDb ->\n  let getConnStr = TempDb.toConnectionString <$> getDb\n  in testGroup "beam-postgres tests"\n      [ Marshal.tests getConnStr\n      , Select.tests getConnStr\n      , DataType.tests getConnStr\n      , Migrate.tests getConnStr\n      ]\n  where\n    withDb = withResource\n      (either (\\e -> error $ "Failed to start DB: " <> show e) pure =<< TempDb.startConfig mempty)\n      TempDb.stop\n'