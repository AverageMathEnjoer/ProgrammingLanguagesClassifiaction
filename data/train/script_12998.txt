b'-- | Ingredient for listing test names\n{-# LANGUAGE CPP, GeneralizedNewtypeDeriving, DeriveDataTypeable #-}\nmodule Test.Tasty.Ingredients.ListTests\n  ( ListTests(..)\n  , testsNames\n  , listingTests\n  ) where\n\nimport Data.Proxy\nimport Data.Typeable\nimport Options.Applicative\n\nimport Test.Tasty.Core\nimport Test.Tasty.Options\nimport Test.Tasty.Ingredients\n\n-- | This option, when set to \'True\', specifies that we should run in the\n-- \xc2\xablist tests\xc2\xbb mode.\n--\n-- @since 0.4\nnewtype ListTests = ListTests Bool\n  deriving (Eq, Ord, Typeable)\ninstance IsOption ListTests where\n  defaultValue = ListTests False\n  parseValue = fmap ListTests . safeReadBool\n  optionName = return "list-tests"\n  optionHelp = return "Do not run the tests; just print their names"\n  optionCLParser = mkFlagCLParser (short \'l\') (ListTests True)\n\n-- | Obtain the list of all tests in the suite.\n--\n-- @since 0.4\ntestsNames :: OptionSet -> TestTree -> [TestName]\ntestsNames {- opts -} {- tree -} =\n  foldTestTree\n    trivialFold\n      { foldSingle = \\_opts name _test -> [name]\n      , foldGroup = \\_opts groupName names -> map ((groupName ++ ".") ++) (concat names)\n      }\n\n-- | The ingredient that provides the test listing functionality.\n--\n-- @since 0.4\nlistingTests :: Ingredient\nlistingTests = TestManager [Option (Proxy :: Proxy ListTests)] $\n  \\opts tree ->\n    case lookupOption opts of\n      ListTests False -> Nothing\n      ListTests True -> Just $ do\n        mapM_ putStrLn $ testsNames opts tree\n        return True\n'