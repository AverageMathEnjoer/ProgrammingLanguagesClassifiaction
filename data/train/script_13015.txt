b'package com.zzg.mybatis.generator.plugins;\n\nimport org.mybatis.generator.api.*;\nimport org.mybatis.generator.api.dom.java.*;\nimport org.mybatis.generator.exception.ShellException;\nimport org.mybatis.generator.internal.DefaultShellCallback;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static org.mybatis.generator.internal.util.StringUtility.stringHasValue;\n\n/**\n * Project: mybatis-generator-gui\n *\n * @author slankka on 2018/3/11.\n */\npublic class CommonDAOInterfacePlugin extends PluginAdapter {\n\n    private static final String DEFAULT_DAO_SUPER_CLASS = ".MyBatisBaseDao";\n    private static final FullyQualifiedJavaType SERIALIZEBLE_TYPE = new FullyQualifiedJavaType("java.io.Serializable");\n\n    private List<Method> methods = new ArrayList<>();\n\n    private ShellCallback shellCallback = null;\n\n    public CommonDAOInterfacePlugin() {\n        shellCallback = new DefaultShellCallback(false);\n    }\n    \n    private boolean isUseExample() {\n    \treturn "true".equals(getProperties().getProperty("useExample"));\n\t}\n\n    @Override\n    public List<GeneratedJavaFile> contextGenerateAdditionalJavaFiles(IntrospectedTable introspectedTable) {\n        boolean hasPk = introspectedTable.hasPrimaryKeyColumns();\n        JavaFormatter javaFormatter = context.getJavaFormatter();\n        String daoTargetDir = context.getJavaClientGeneratorConfiguration().getTargetProject();\n        String daoTargetPackage = context.getJavaClientGeneratorConfiguration().getTargetPackage();\n        List<GeneratedJavaFile> mapperJavaFiles = new ArrayList<>();\n        String javaFileEncoding = context.getProperty("javaFileEncoding");\n        Interface mapperInterface = new Interface(daoTargetPackage + DEFAULT_DAO_SUPER_CLASS);\n\n        if (stringHasValue(daoTargetPackage)) {\n            mapperInterface.addImportedType(SERIALIZEBLE_TYPE);\n\n            mapperInterface.setVisibility(JavaVisibility.PUBLIC);\n            mapperInterface.addJavaDocLine("/**");\n            mapperInterface.addJavaDocLine(" * " + "DAO\xe5\x85\xac\xe5\x85\xb1\xe5\x9f\xba\xe7\xb1\xbb\xef\xbc\x8c\xe7\x94\xb1MybatisGenerator\xe8\x87\xaa\xe5\x8a\xa8\xe7\x94\x9f\xe6\x88\x90\xe8\xaf\xb7\xe5\x8b\xbf\xe4\xbf\xae\xe6\x94\xb9");\n            mapperInterface.addJavaDocLine(" * " + "@param <Model> The Model Class \xe8\xbf\x99\xe9\x87\x8c\xe6\x98\xaf\xe6\xb3\x9b\xe5\x9e\x8b\xe4\xb8\x8d\xe6\x98\xafModel\xe7\xb1\xbb");\n            mapperInterface.addJavaDocLine(" * " + "@param <PK> The Primary Key Class \xe5\xa6\x82\xe6\x9e\x9c\xe6\x98\xaf\xe6\x97\xa0\xe4\xb8\xbb\xe9\x94\xae\xef\xbc\x8c\xe5\x88\x99\xe5\x8f\xaf\xe4\xbb\xa5\xe7\x94\xa8Model\xe6\x9d\xa5\xe8\xb7\xb3\xe8\xbf\x87\xef\xbc\x8c\xe5\xa6\x82\xe6\x9e\x9c\xe6\x98\xaf\xe5\xa4\x9a\xe4\xb8\xbb\xe9\x94\xae\xe5\x88\x99\xe6\x98\xafKey\xe7\xb1\xbb");\n\t\t\tif (isUseExample()) {\n\t\t\t\tmapperInterface.addJavaDocLine(" * " + "@param <E> The Example Class");\n\t\t\t}\n            mapperInterface.addJavaDocLine(" */");\n\n            FullyQualifiedJavaType daoBaseInterfaceJavaType = mapperInterface.getType();\n            daoBaseInterfaceJavaType.addTypeArgument(new FullyQualifiedJavaType("Model"));\n            daoBaseInterfaceJavaType.addTypeArgument(new FullyQualifiedJavaType("PK extends Serializable"));\n\t\t\tif (isUseExample()) {\n\t\t\t\tdaoBaseInterfaceJavaType.addTypeArgument(new FullyQualifiedJavaType("E"));\n\t\t\t}\n\n            if (!this.methods.isEmpty()) {\n                for (Method method : methods) {\n                    mapperInterface.addMethod(method);\n                }\n            }\n\n            List<GeneratedJavaFile> generatedJavaFiles = introspectedTable.getGeneratedJavaFiles();\n            for (GeneratedJavaFile generatedJavaFile : generatedJavaFiles) {\n                CompilationUnit compilationUnit = generatedJavaFile.getCompilationUnit();\n                FullyQualifiedJavaType type = compilationUnit.getType();\n                String modelName = type.getShortName();\n                if (modelName.endsWith("DAO")) {\n                }\n            }\n            GeneratedJavaFile mapperJavafile = new GeneratedJavaFile(mapperInterface, daoTargetDir, javaFileEncoding, javaFormatter);\n            try {\n                File mapperDir = shellCallback.getDirectory(daoTargetDir, daoTargetPackage);\n                File mapperFile = new File(mapperDir, mapperJavafile.getFileName());\n                // \xe6\x96\x87\xe4\xbb\xb6\xe4\xb8\x8d\xe5\xad\x98\xe5\x9c\xa8\n                if (!mapperFile.exists()) {\n                    mapperJavaFiles.add(mapperJavafile);\n                }\n            } catch (ShellException e) {\n                e.printStackTrace();\n            }\n        }\n        return mapperJavaFiles;\n    }\n\n    @Override\n    public boolean clientGenerated(Interface interfaze,\n                                   TopLevelClass topLevelClass,\n                                   IntrospectedTable introspectedTable) {\n        interfaze.addJavaDocLine("/**");\n        interfaze.addJavaDocLine(" * " + interfaze.getType().getShortName() + "\xe7\xbb\xa7\xe6\x89\xbf\xe5\x9f\xba\xe7\xb1\xbb");\n        interfaze.addJavaDocLine(" */");\n\n        String daoSuperClass = interfaze.getType().getPackageName() + DEFAULT_DAO_SUPER_CLASS;\n        FullyQualifiedJavaType daoSuperType = new FullyQualifiedJavaType(daoSuperClass);\n\n        String targetPackage = introspectedTable.getContext().getJavaModelGeneratorConfiguration().getTargetPackage();\n\n        String domainObjectName = introspectedTable.getTableConfiguration().getDomainObjectName();\n        FullyQualifiedJavaType baseModelJavaType = new FullyQualifiedJavaType(targetPackage + "." + domainObjectName);\n        daoSuperType.addTypeArgument(baseModelJavaType);\n\n        FullyQualifiedJavaType primaryKeyTypeJavaType = null;\n        if (introspectedTable.getPrimaryKeyColumns().size() > 1) {\n            primaryKeyTypeJavaType = new FullyQualifiedJavaType(targetPackage + "." + domainObjectName + "Key");\n        }else if(introspectedTable.hasPrimaryKeyColumns()){\n            primaryKeyTypeJavaType = introspectedTable.getPrimaryKeyColumns().get(0).getFullyQualifiedJavaType();\n        }else {\n            primaryKeyTypeJavaType = baseModelJavaType;\n        }\n        daoSuperType.addTypeArgument(primaryKeyTypeJavaType);\n\t\tinterfaze.addImportedType(primaryKeyTypeJavaType);\n\n\t\tif (isUseExample()) {\n\t\t\tString exampleType = introspectedTable.getExampleType();\n\t\t\tFullyQualifiedJavaType exampleTypeJavaType = new FullyQualifiedJavaType(exampleType);\n\t\t\tdaoSuperType.addTypeArgument(exampleTypeJavaType);\n\t\t\tinterfaze.addImportedType(exampleTypeJavaType);\n\t\t}\n        interfaze.addImportedType(baseModelJavaType);\n        interfaze.addImportedType(daoSuperType);\n        interfaze.addSuperInterface(daoSuperType);\n        return true;\n    }\n\n    @Override\n    public boolean validate(List<String> list) {\n        return true;\n    }\n\n    private void interceptExampleParam(Method method) {\n\t\tif (isUseExample()) {\n\t\t\tmethod.getParameters().clear();\n\t\t\tmethod.addParameter(new Parameter(new FullyQualifiedJavaType("E"), "example"));\n\t\t\tmethods.add(method);\n\t\t}\n    }\n\n    private void interceptPrimaryKeyParam(Method method) {\n        method.getParameters().clear();\n        method.addParameter(new Parameter(new FullyQualifiedJavaType("PK"), "id"));\n        methods.add(method);\n    }\n\n    private void interceptModelParam(Method method) {\n        method.getParameters().clear();\n        method.addParameter(new Parameter(new FullyQualifiedJavaType("Model"), "record"));\n        methods.add(method);\n    }\n\n    private void interceptModelAndExampleParam(Method method) {\n\t\tif (isUseExample()) {\n\t\t\tList<Parameter> parameters = method.getParameters();\n\t\t\tif (parameters.size() == 1) {\n\t\t\t\tinterceptExampleParam(method);\n\t\t\t}else{\n\t\t\t\tmethod.getParameters().clear();\n\t\t\t\tParameter parameter1 = new Parameter(new FullyQualifiedJavaType("Model"), "record");\n\t\t\t\tparameter1.addAnnotation("@Param(\\"record\\")");\n\t\t\t\tmethod.addParameter(parameter1);\n\n\t\t\t\tParameter parameter2 = new Parameter(new FullyQualifiedJavaType("E"), "example");\n\t\t\t\tparameter2.addAnnotation("@Param(\\"example\\")");\n\t\t\t\tmethod.addParameter(parameter2);\n\t\t\t\tmethods.add(method);\n\t\t\t}\n\t\t}\n    }\n\n    @Override\n    public boolean clientCountByExampleMethodGenerated(Method method,\n                                                       Interface interfaze, IntrospectedTable introspectedTable) {\n//        interface\n\t\tif (isUseExample()) {\n\t\t\tinterceptExampleParam(method);\n\t\t}\n\t\treturn false;\n\t}\n\n\n    @Override\n    public boolean clientDeleteByExampleMethodGenerated(Method method,\n                                                        Interface interfaze, IntrospectedTable introspectedTable) {\n        if (isUseExample()) {\n\t\t\tinterceptExampleParam(method);\n\t\t}\n        return false;\n    }\n\n\n    @Override\n    public boolean clientDeleteByPrimaryKeyMethodGenerated(Method method,\n                                                           Interface interfaze, IntrospectedTable introspectedTable) {\n    \tinterceptPrimaryKeyParam(method);\n        return false;\n    }\n\n    @Override\n    public boolean clientInsertMethodGenerated(Method method, Interface interfaze,\n                                                  IntrospectedTable introspectedTable) {\n        interceptModelParam(method);\n        return false;\n    }\n\n    @Override\n    public boolean clientSelectByExampleWithBLOBsMethodGenerated(Method method,\n                                                                 Interface interfaze, IntrospectedTable introspectedTable) {\n        if (isUseExample()) {\n\t\t\tinterceptExampleParam(method);\n\t\t\tmethod.setReturnType(new FullyQualifiedJavaType("List<Model>"));\n\t\t}\n        return false;\n    }\n\n    @Override\n    public boolean clientSelectByExampleWithoutBLOBsMethodGenerated(Method method,\n                                                                    Interface interfaze, IntrospectedTable introspectedTable) {\n        if (isUseExample()) {\n\t\t\tinterceptExampleParam(method);\n\t\t\tmethod.setReturnType(new FullyQualifiedJavaType("List<Model>"));\n\t\t}\n        return false;\n    }\n\n    @Override\n    public boolean clientSelectByPrimaryKeyMethodGenerated(Method method,\n                                                           Interface interfaze, IntrospectedTable introspectedTable) {\n    \tinterceptPrimaryKeyParam(method);\n        method.setReturnType(new FullyQualifiedJavaType("Model"));\n        return false;\n    }\n\n    @Override\n    public boolean clientUpdateByExampleSelectiveMethodGenerated(Method method,\n                                                                 Interface interfaze, IntrospectedTable introspectedTable) {\n        if (isUseExample()) {\n\t\t\tinterceptModelAndExampleParam(method);\n\t\t}\n        return false;\n    }\n\n    @Override\n    public boolean clientUpdateByExampleWithBLOBsMethodGenerated(Method method,\n                                                                 Interface interfaze, IntrospectedTable introspectedTable) {\n        if (isUseExample()) {\n\t\t\tinterceptModelAndExampleParam(method);\n\t\t}\n        return false;\n    }\n\n    @Override\n    public boolean clientUpdateByExampleWithoutBLOBsMethodGenerated(Method method,\n                                                                    Interface interfaze, IntrospectedTable introspectedTable) {\n        if (isUseExample()) {\n\t\t\tinterceptModelAndExampleParam(method);\n\t\t}\n        return false;\n    }\n\n    @Override\n    public boolean clientUpdateByPrimaryKeySelectiveMethodGenerated(Method method,\n                                                                    Interface interfaze, IntrospectedTable introspectedTable) {\n        interceptModelParam(method);\n        return false;\n    }\n\n    @Override\n    public boolean clientUpdateByExampleWithoutBLOBsMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {\n        if (isUseExample()) {\n\t\t\tinterceptModelAndExampleParam(method);\n\t\t}\n        return false;\n    }\n\n    @Override\n    public boolean clientUpdateByExampleSelectiveMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {\n        if (isUseExample()) {\n\t\t\tinterceptModelAndExampleParam(method);\n\t\t}\n        return false;\n    }\n\n    @Override\n    public boolean clientUpdateByPrimaryKeyWithBLOBsMethodGenerated(Method method,\n                                                                    Interface interfaze, IntrospectedTable introspectedTable) {\n    \tinterceptModelParam(method);\n        return false;\n    }\n\n    @Override\n    public boolean clientUpdateByPrimaryKeyWithoutBLOBsMethodGenerated(\n            Method method, Interface interfaze,\n            IntrospectedTable introspectedTable) {\n        interceptModelParam(method);\n        return false;\n    }\n\n    @Override\n    public boolean clientInsertSelectiveMethodGenerated(Method method, Interface interfaze, IntrospectedTable introspectedTable) {\n        interceptModelParam(method);\n        return false;\n    }\n}\n'