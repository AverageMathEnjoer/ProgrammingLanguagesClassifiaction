b"{-# LANGUAGE TemplateHaskell #-}\n\nmodule Hoodle.Web.Type.State where\n\nimport GHCJS.Types (JSVal)\nimport Hoodle.HitTest.Type (BBoxed)\nimport qualified JavaScript.Web.WebSocket as WS\nimport Lens.Micro.TH (makeLenses)\nimport Message (CommitId (..))\n\ndata SyncState = SyncState\n  { _syncstateQueue :: [[(Double, Double)]]\n  }\n\nmakeLenses ''SyncState\n\ndata RStroke = RStroke\n  { _rstrokeCommitId :: CommitId,\n    _rstrokePath :: [(Double, Double)]\n  }\n\nmakeLenses ''RStroke\n\ndata DocState = DocState\n  { _docstateLastCommit :: CommitId,\n    _docstateData :: [BBoxed RStroke]\n  }\n\nmakeLenses ''DocState\n\ndata HoodleState = HoodleState\n  { _hdlstateSVGBox :: JSVal,\n    _hdlstateOverlayCanvas :: JSVal,\n    _hdlstateOverlayOffCanvas :: JSVal,\n    _hdlstateWebSocket :: WS.WebSocket,\n    _hdlstateDocState :: DocState,\n    _hdlstateSyncState :: SyncState,\n    _hdlstateOverlayUpdated :: Bool\n  }\n\nmakeLenses ''HoodleState\n"