b'{-# LANGUAGE\n    DeriveDataTypeable\n  , DeriveGeneric\n  #-}\nmodule Type.UserPost where\n\nimport Data.Aeson\nimport Data.JSON.Schema\nimport Data.Typeable\nimport GHC.Generics\nimport Generics.Generic.Aeson\nimport Generics.XmlPickler\nimport Text.XML.HXT.Arrow.Pickle\n\nimport Type.CreatePost (CreatePost)\nimport Type.User (User)\n\ndata UserPost = UserPost\n  { user :: User\n  , post :: CreatePost\n  } deriving (Eq, Generic, Ord, Show, Typeable)\n\ninstance XmlPickler UserPost where\n  xpickle = gxpickle\ninstance JSONSchema UserPost where\n  schema = gSchema\ninstance FromJSON UserPost where\n  parseJSON = gparseJson\ninstance ToJSON UserPost where\n  toJSON = gtoJson\n'