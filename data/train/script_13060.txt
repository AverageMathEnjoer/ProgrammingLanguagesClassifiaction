b'{-# LANGUAGE RecordWildCards #-}\n\nmodule Text.Hoodle.Migrate.V0_3_to_HEAD where\n\nimport qualified Data.Hoodle.Simple as NH\nimport qualified Data.Hoodle.Simple.V0_3 as OH\nimport Lens.Micro (set)\nimport Lens.Micro.Extras (view)\n\ndim2Dim :: OH.Dimension -> NH.Dimension\ndim2Dim (OH.Dim w h) = NH.Dim w h\n\nbkg2Bkg :: OH.Background -> NH.Background\nbkg2Bkg OH.Background {..} =\n  NH.Background\n    { NH.bkg_type = bkg_type,\n      NH.bkg_color = bkg_color,\n      NH.bkg_style = bkg_style\n    }\nbkg2Bkg OH.BackgroundPdf {..} =\n  NH.BackgroundPdf\n    { NH.bkg_type = bkg_type,\n      NH.bkg_domain = bkg_domain,\n      NH.bkg_filename = bkg_filename,\n      NH.bkg_pageno = bkg_pageno\n    }\nbkg2Bkg OH.BackgroundEmbedPdf {..} =\n  NH.BackgroundEmbedPdf\n    { NH.bkg_type = bkg_type,\n      NH.bkg_pageno = bkg_pageno\n    }\n\nitem2Item :: OH.Item -> NH.Item\nitem2Item (OH.ItemStroke strk) = NH.ItemStroke (stroke2Stroke strk)\nitem2Item (OH.ItemImage image) = NH.ItemImage (image2Image image)\nitem2Item (OH.ItemSVG svg) = NH.ItemSVG (svg2SVG svg)\nitem2Item (OH.ItemLink lnk) = NH.ItemLink (link2Link lnk)\nitem2Item (OH.ItemAnchor anchor) = NH.ItemAnchor (anchor2Anchor anchor)\n\nstroke2Stroke :: OH.Stroke -> NH.Stroke\nstroke2Stroke OH.Stroke {..} =\n  NH.Stroke\n    { NH.stroke_tool = stroke_tool,\n      NH.stroke_color = stroke_color,\n      NH.stroke_width = stroke_width,\n      NH.stroke_data = stroke_data\n    }\nstroke2Stroke OH.VWStroke {..} =\n  NH.VWStroke\n    { NH.stroke_tool = stroke_tool,\n      NH.stroke_color = stroke_color,\n      NH.stroke_vwdata = stroke_vwdata\n    }\n\nimage2Image :: OH.Image -> NH.Image\nimage2Image OH.Image {..} =\n  NH.Image\n    { NH.img_src = img_src,\n      NH.img_pos = img_pos,\n      NH.img_dim = dim2Dim img_dim\n    }\n\nsvg2SVG :: OH.SVG -> NH.SVG\nsvg2SVG OH.SVG {..} =\n  NH.SVG\n    { NH.svg_text = svg_text,\n      NH.svg_command = svg_command,\n      NH.svg_render = svg_render,\n      NH.svg_pos = svg_pos,\n      NH.svg_dim = dim2Dim svg_dim\n    }\n\nlink2Link :: OH.Link -> NH.Link\nlink2Link OH.Link {..} =\n  NH.Link\n    { NH.link_id = link_id,\n      NH.link_type = link_type,\n      NH.link_location = link_location,\n      NH.link_text = link_text,\n      NH.link_command = link_command,\n      NH.link_render = link_render,\n      NH.link_pos = link_pos,\n      NH.link_dim = dim2Dim link_dim\n    }\nlink2Link OH.LinkDocID {..} =\n  NH.LinkDocID\n    { NH.link_id = link_id,\n      NH.link_linkeddocid = link_linkeddocid,\n      NH.link_location = link_location,\n      NH.link_text = link_text,\n      NH.link_command = link_command,\n      NH.link_render = link_render,\n      NH.link_pos = link_pos,\n      NH.link_dim = dim2Dim link_dim\n    }\nlink2Link OH.LinkAnchor {..} =\n  NH.LinkAnchor\n    { NH.link_id = link_id,\n      NH.link_linkeddocid = link_linkeddocid,\n      NH.link_location = link_location,\n      NH.link_anchorid = link_anchorid,\n      NH.link_render = link_render,\n      NH.link_pos = link_pos,\n      NH.link_dim = dim2Dim link_dim\n    }\n\nanchor2Anchor :: OH.Anchor -> NH.Anchor\nanchor2Anchor OH.Anchor {..} =\n  NH.Anchor\n    { NH.anchor_id = anchor_id,\n      NH.anchor_render = anchor_render,\n      NH.anchor_pos = anchor_pos,\n      NH.anchor_dim = dim2Dim anchor_dim\n    }\n\nlayer2Layer :: OH.Layer -> NH.Layer\nlayer2Layer OH.Layer {..} = NH.Layer {NH.layer_items = fmap item2Item layer_items}\n\npage2Page :: OH.Page -> NH.Page\npage2Page OH.Page {..} =\n  NH.Page\n    { NH.page_dim = dim2Dim page_dim,\n      NH.page_bkg = bkg2Bkg page_bkg,\n      NH.page_layers = fmap layer2Layer page_layers\n    }\n\nrev2Rev :: OH.Revision -> NH.Revision\nrev2Rev OH.Revision {..} =\n  NH.Revision\n    { NH._revmd5 = _revmd5,\n      NH._revtxt = _revtxt\n    }\nrev2Rev OH.RevisionInk {..} =\n  NH.RevisionInk\n    { NH._revmd5 = _revmd5,\n      NH._revink = map stroke2Stroke _revink\n    }\n\nhoodle2Hoodle :: OH.Hoodle -> IO NH.Hoodle\nhoodle2Hoodle oh =\n  set NH.hoodleID (view OH.hoodleID oh)\n    . set NH.title (view OH.title oh)\n    . set NH.revisions (map rev2Rev (view OH.revisions oh))\n    . set NH.embeddedPdf (view OH.embeddedPdf oh)\n    . set NH.embeddedText (view OH.embeddedText oh)\n    . set NH.pages ((fmap page2Page . view OH.pages) oh)\n    <$> NH.emptyHoodle\n'