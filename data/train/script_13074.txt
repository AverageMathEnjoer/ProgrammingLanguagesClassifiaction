b'package com.bennyhuo.kotlin.android.sample\n\nimport android.animation.ObjectAnimator\nimport android.os.Bundle\nimport android.view.View\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.lifecycle.lifecycleScope\nimport kotlinx.android.synthetic.main.activity_main.*\nimport kotlinx.coroutines.channels.awaitClose\nimport kotlinx.coroutines.channels.trySendBlocking\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.callbackFlow\nimport kotlinx.coroutines.flow.collect\nimport kotlinx.coroutines.launch\nimport org.slf4j.LoggerFactory\n\nclass MainActivity : AppCompatActivity() {\n    private val logger = LoggerFactory.getLogger(MainActivity::class.java)\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        lifecycleScope.launch {\n            getTextViewPositionFlow()\n                .collect {\n                    logger.debug(it.toString())\n                }\n        }\n\n        textView.setOnClickListener {\n            ObjectAnimator.ofFloat(textView, "x", 0f, 1000f)\n                .setDuration(1000)\n                .start()\n\n            ObjectAnimator.ofFloat(textView, "y", 0f, 500f)\n                .setDuration(1000)\n                .start()\n        }\n    }\n\n    private fun getTextViewPositionFlow(): Flow<Pair<Int, Int>> {\n        return callbackFlow<Pair<Int, Int>> {\n            val listener =\n                View.OnLayoutChangeListener { v, left, top, right, bottom, oldLeft, oldTop, oldRight, oldBottom ->\n                    logger.debug("left: $left, top: $top")\n                    trySendBlocking(top to left)\n                }\n            textView.addOnLayoutChangeListener(listener)\n\n            awaitClose {\n                textView.removeOnLayoutChangeListener(listener)\n            }\n        }\n    }\n}'