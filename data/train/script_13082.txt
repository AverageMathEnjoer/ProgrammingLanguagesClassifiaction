b'/*\n * Copyright (C) 2015 Naman Dwivedi\n *\n * Licensed under the GNU General Public License v3\n *\n * This is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n * See the GNU General Public License for more details.\n */\n\npackage com.naman14.timber.activities;\n\nimport android.os.Bundle;\nimport android.preference.PreferenceFragment;\nimport android.preference.PreferenceManager;\nimport androidx.annotation.ColorInt;\nimport androidx.annotation.NonNull;\nimport androidx.annotation.StyleRes;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.appcompat.widget.Toolbar;\nimport android.view.MenuItem;\n\nimport com.afollestad.appthemeengine.ATE;\nimport com.afollestad.appthemeengine.Config;\nimport com.afollestad.appthemeengine.customizers.ATEActivityThemeCustomizer;\nimport com.afollestad.materialdialogs.color.ColorChooserDialog;\nimport com.naman14.timber.R;\nimport com.naman14.timber.fragments.SettingsFragment;\nimport com.naman14.timber.subfragments.StyleSelectorFragment;\nimport com.naman14.timber.utils.Constants;\nimport com.naman14.timber.utils.PreferencesUtility;\n\npublic class SettingsActivity extends BaseThemedActivity implements ColorChooserDialog.ColorCallback, ATEActivityThemeCustomizer {\n\n    private String action;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n\n        if (PreferencesUtility.getInstance(this).getTheme().equals("dark"))\n            setTheme(R.style.AppThemeNormalDark);\n        else if (PreferencesUtility.getInstance(this).getTheme().equals("black"))\n            setTheme(R.style.AppThemeNormalBlack);\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_settings);\n\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n        action = getIntent().getAction();\n\n        if (action.equals(Constants.SETTINGS_STYLE_SELECTOR)) {\n            getSupportActionBar().setTitle(R.string.now_playing);\n            String what = getIntent().getExtras().getString(Constants.SETTINGS_STYLE_SELECTOR_WHAT);\n            Fragment fragment = StyleSelectorFragment.newInstance(what);\n            FragmentManager fragmentManager = getSupportFragmentManager();\n            fragmentManager.beginTransaction()\n                    .add(R.id.fragment_container, fragment).commit();\n        } else {\n            getSupportActionBar().setTitle(R.string.settings);\n            PreferenceFragment fragment = new SettingsFragment();\n            android.app.FragmentManager fragmentManager = getFragmentManager();\n            fragmentManager.beginTransaction()\n                    .replace(R.id.fragment_container, fragment).commit();\n        }\n\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(final MenuItem item) {\n        switch (item.getItemId()) {\n            case android.R.id.home:\n                finish();\n                return true;\n            default:\n                break;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    @StyleRes\n    @Override\n    public int getActivityTheme() {\n        return PreferenceManager.getDefaultSharedPreferences(this).getBoolean("dark_theme", false) ?\n                R.style.AppThemeDark : R.style.AppThemeLight;\n    }\n\n    @Override\n    public void onColorSelection(@NonNull ColorChooserDialog dialog, @ColorInt int selectedColor) {\n        final Config config = ATE.config(this, getATEKey());\n        switch (dialog.getTitle()) {\n            case R.string.primary_color:\n                config.primaryColor(selectedColor);\n                break;\n            case R.string.accent_color:\n                config.accentColor(selectedColor);\n                break;\n        }\n        config.commit();\n        recreate(); // recreation needed to reach the checkboxes in the preferences layout\n    }\n\n}\n'