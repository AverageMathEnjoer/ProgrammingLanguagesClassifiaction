b'\xef\xbb\xbf// UVa140 Bandwidth\n// Rujia Liu\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nconst int maxn = 10;\nint id[256], letter[maxn];\n\nint main() {\n  char input[1000];\n  while(scanf("%s", input) == 1 && input[0] != \'#\') {\n    // \xe8\xae\xa1\xe7\xae\x97\xe7\xbb\x93\xe7\x82\xb9\xe4\xb8\xaa\xe6\x95\xb0\xe5\xb9\xb6\xe7\xbb\x99\xe5\xad\x97\xe6\xaf\x8d\xe7\xbc\x96\xe5\x8f\xb7\n    int n = 0;\n    for(char ch = \'A\'; ch <= \'Z\'; ch++)\n      if(strchr(input, ch) != NULL) {\n        id[ch] = n++;\n        letter[id[ch]] = ch;\n      }\n\n    // \xe5\xa4\x84\xe7\x90\x86\xe8\xbe\x93\xe5\x85\xa5\n    int len = strlen(input), p = 0, q = 0;\n    vector<int> u, v;\n    for(;;) {\n      while(p < len && input[p] != \':\') p++;\n      if(p == len) break;\n      while(q < len && input[q] != \';\') q++;\n      for(int i = p+1; i < q; i++) {\n        u.push_back(id[input[p-1]]);\n        v.push_back(id[input[i]]);\n      }\n      p++; q++;\n    }\n\n    // \xe6\x9e\x9a\xe4\xb8\xbe\xe5\x85\xa8\xe6\x8e\x92\xe5\x88\x97\n    int P[maxn], bestP[maxn], pos[maxn], ans = n;\n    for(int i = 0; i < n; i++) P[i] = i;\n    do {\n      for(int i = 0; i < n; i++) pos[P[i]] = i; // \xe6\xaf\x8f\xe4\xb8\xaa\xe5\xad\x97\xe6\xaf\x8d\xe7\x9a\x84\xe4\xbd\x8d\xe7\xbd\xae\n      int bandwidth = 0;\n      for(int i = 0; i < u.size(); i++)\n        bandwidth = max(bandwidth, abs(pos[u[i]] - pos[v[i]])); // \xe8\xae\xa1\xe7\xae\x97\xe5\xb8\xa6\xe5\xae\xbd\n      if(bandwidth < ans) {\n        ans = bandwidth;\n        memcpy(bestP, P, sizeof(P));\n      }\n    } while(next_permutation(P, P+n));\n\n    // \xe8\xbe\x93\xe5\x87\xba\n    for(int i = 0; i < n; i++) printf("%c ", letter[bestP[i]]);\n    printf("-> %d\\n", ans);\n  }\n  return 0;\n}\n'