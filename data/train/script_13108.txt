b"import Data.Array\r\nimport Queue\r\n\r\nallcp xs = extract (until done step (as, empty, 0, 1))\r\n  where\r\n    extract (as, qs, h, k) = elemsQueue as\r\n    done (as, qs, h, k) = (k == n)\r\n    n = length xs\r\n    as = insert empty n\r\n    xa = listArray (0, n - 1) xs\r\n    step (as, qs, h, k) \r\n        | k >= h    = (insert as a, insert as' a, k + a, k + 1)\r\n        | q /= r    = (insert as m, insert qs' m, h, k + 1)\r\n        | q == r    = (insert as b, insert as' b, k + b, k + 1)\r\n          where \r\n            as' = snd (remove as)\r\n            (q, qs') = remove qs\r\n            r = h - k\r\n            m = min q r\r\n            a = llcp' 0 k\r\n            b = q + llcp' q (q + k)\r\n    llcp' :: Int -> Int -> Int\r\n    llcp' j k \r\n        | j == n || k == n  = 0\r\n        | xa!j == xa!k      = 1 + llcp' (j + 1) (k + 1)\r\n        | otherwise         = 0\r\n\r\n"