b'package com.naman14.timber.utils;\n\nimport androidx.annotation.NonNull;\nimport android.view.GestureDetector;\nimport android.view.MotionEvent;\nimport android.view.View;\n\nimport com.naman14.timber.MusicPlayer;\n\n/**\n * Created by nv95 on 02.11.16.\n */\n\npublic class SlideTrackSwitcher implements View.OnTouchListener {\n\n    private static final int SWIPE_THRESHOLD = 200;\n    private static final int SWIPE_VELOCITY_THRESHOLD = 100;\n\n    private GestureDetector mDetector;\n    private View mView;\n\n\n    public SlideTrackSwitcher() {\n    }\n\n    public void attach(@NonNull View v) {\n        mView = v;\n        mDetector = new GestureDetector(v.getContext(), new SwipeListener());\n        v.setOnTouchListener(this);\n    }\n\n    @Override\n    public boolean onTouch(View v, MotionEvent event) {\n        return mDetector.onTouchEvent(event);\n    }\n\n    private class SwipeListener extends GestureDetector.SimpleOnGestureListener {\n\n        @Override\n        public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {\n            boolean result = false;\n            try {\n                float diffY = e2.getY() - e1.getY();\n                float diffX = e2.getX() - e1.getX();\n                if (Math.abs(diffX) > Math.abs(diffY)) {\n                    if (Math.abs(diffX) > SWIPE_THRESHOLD && Math.abs(velocityX) > SWIPE_VELOCITY_THRESHOLD) {\n                        if (diffX > 0) {\n                            onSwipeRight();\n                        } else {\n                            onSwipeLeft();\n                        }\n                    }\n                    result = true;\n                }\n                else if (Math.abs(diffY) > SWIPE_THRESHOLD && Math.abs(velocityY) > SWIPE_VELOCITY_THRESHOLD) {\n                    if (diffY > 0) {\n                        onSwipeBottom();\n                    } else {\n                        onSwipeTop();\n                    }\n                }\n                result = true;\n\n            } catch (Exception exception) {\n                exception.printStackTrace();\n            }\n            return result;\n        }\n\n        @Override\n        public boolean onDown(MotionEvent e) {\n            return true;\n        }\n\n        @Override\n        public boolean onDoubleTap(MotionEvent e) {\n            MusicPlayer.playOrPause();\n            return true;\n        }\n\n        @Override\n        public boolean onSingleTapConfirmed(MotionEvent e) {\n            onClick();\n            return super.onSingleTapConfirmed(e);\n        }\n    }\n\n    public void onSwipeRight() {\n        MusicPlayer.previous(mView.getContext(), true);\n    }\n\n    public void onSwipeLeft() {\n        MusicPlayer.next();\n    }\n\n    public void onSwipeTop() {\n    }\n\n    public void onSwipeBottom() {\n    }\n\n    public void onClick() {\n\n    }\n}\n'