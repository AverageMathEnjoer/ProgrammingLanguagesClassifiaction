b'\xef\xbb\xbfusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Linq.Expressions;\nusing System.Text;\nusing Core.Entities;\nusing Microsoft.EntityFrameworkCore;\n\nnamespace Core.DataAccess.EntityFramework\n{\n    public class EfEntityRepositoryBase<TEntity, TContext> : IEntityRepository<TEntity>\n    where TEntity : class, IEntity, new()\n    where TContext : DbContext, new()\n    {\n        public void Add(TEntity entity)\n        {\n            using (var context=new TContext())\n            {\n               var addedEntity = context.Entry(entity);\n               addedEntity.State = EntityState.Added;\n               context.SaveChanges();\n            }\n        }\n\n        public void Delete(TEntity entity)\n        {\n            using (var context = new TContext())\n            {\n                var deletedEntity = context.Entry(entity);\n                deletedEntity.State = EntityState.Deleted;\n                context.SaveChanges();\n            }\n        }\n\n        public TEntity Get(Expression<Func<TEntity, bool>> filter)\n        {\n            using (var context = new TContext())\n            {\n                return context.Set<TEntity>().SingleOrDefault(filter);\n            }\n        }\n\n        public IList<TEntity> GetList(Expression<Func<TEntity, bool>> filter = null)\n        {\n            using (var context = new TContext())\n            {\n                return filter == null\n                    ? context.Set<TEntity>().ToList()\n                    : context.Set<TEntity>().Where(filter).ToList();\n            }\n        }\n\n        public void Update(TEntity entity)\n        {\n            using (var context = new TContext())\n            {\n                var updatedEntity = context.Entry(entity);\n                updatedEntity.State = EntityState.Modified;\n                context.SaveChanges();\n            }\n        }\n    }\n}\n'