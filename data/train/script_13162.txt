b"-- |\n-- Copyright  : (c) Ivan Perez and Manuel Baerenz, 2016\n-- License    : BSD3\n-- Maintainer : ivan.perez@keera.co.uk\n--\n-- 'ReactHandle's.\n--\n-- Sometimes it is beneficial to give control to an external main loop, for\n-- example OpenGL or a hardware-clocked audio server like JACK. This module\n-- makes Dunai compatible with external main loops.\nmodule Data.MonadicStreamFunction.ReactHandle where\n\n-- External imports\nimport Control.Monad.IO.Class (MonadIO, liftIO)\nimport Data.IORef             (IORef, newIORef, readIORef, writeIORef)\n\n-- Internal imports\nimport Data.MonadicStreamFunction              (MSF)\nimport Data.MonadicStreamFunction.InternalCore (unMSF)\n\n-- | A storage for the current state of an 'MSF'. The 'MSF' may not require\n-- input or produce output data, all such data must be handled through side\n-- effects (such as wormholes).\ntype ReactHandle m = IORef (MSF m () ())\n\n-- | Needs to be called before the external main loop is dispatched.\nreactInit :: MonadIO m => MSF m () () -> m (ReactHandle m)\nreactInit = liftIO . newIORef\n\n-- | The callback that needs to be called by the external loop at every cycle.\nreact :: MonadIO m => ReactHandle m -> m ()\nreact handle = do\n  msf <- liftIO $ readIORef handle\n  (_, msf') <- unMSF msf ()\n  liftIO $ writeIORef handle msf'\n"