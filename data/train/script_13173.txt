b"\xef\xbb\xbfusing System;\nusing Asn1;\nusing System.Text;\nusing System.Collections.Generic;\nusing Rubeus.Kerberos;\n\nnamespace Rubeus\n{\n    public class Ticket\n    {\n        //Ticket::= [APPLICATION 1] SEQUENCE {\n        //        tkt-vno[0] INTEGER(5),\n        //        realm[1] Realm,\n        //        sname[2] PrincipalName,\n        //        enc-part[3] EncryptedData -- EncTicketPart\n        //}\n\n        public Ticket(string domain, string service)\n        {\n            tkt_vno = 5;\n\n            realm = domain;\n\n            sname = new PrincipalName();\n            sname.name_type = Interop.PRINCIPAL_TYPE.NT_SRV_INST;\n            foreach (string part in service.Split('/'))\n            {\n                sname.name_string.Add(part);\n            }\n        }\n\n        public Ticket(AsnElt body)\n        {\n            foreach (AsnElt s in body.Sub)\n            {\n                switch (s.TagValue)\n                {\n                    case 0:\n                        tkt_vno = Convert.ToInt32(s.Sub[0].GetInteger());\n                        break;\n                    case 1:\n                        realm = Encoding.ASCII.GetString(s.Sub[0].GetOctetString());\n                        break;\n                    case 2:\n                        sname = new PrincipalName(s.Sub[0]);\n                        break;\n                    case 3:\n                        enc_part = new EncryptedData(s.Sub[0]);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n\n        public AsnElt Encode()\n        {\n            // tkt-vno         [0] INTEGER (5)\n            AsnElt tkt_vnoAsn = AsnElt.MakeInteger(tkt_vno);\n            AsnElt tkt_vnoSeq = AsnElt.Make(AsnElt.SEQUENCE, new AsnElt[] { tkt_vnoAsn });\n            tkt_vnoSeq = AsnElt.MakeImplicit(AsnElt.CONTEXT, 0, tkt_vnoSeq);\n\n\n            // realm           [1] Realm\n            AsnElt realmAsn = AsnElt.MakeString(AsnElt.IA5String, realm);\n            realmAsn = AsnElt.MakeImplicit(AsnElt.UNIVERSAL, AsnElt.GeneralString, realmAsn);\n            AsnElt realmAsnSeq = AsnElt.Make(AsnElt.SEQUENCE, realmAsn);\n            realmAsnSeq = AsnElt.MakeImplicit(AsnElt.CONTEXT, 1, realmAsnSeq);\n\n\n            // sname           [2] PrincipalName\n            AsnElt snameAsn = sname.Encode();\n            snameAsn = AsnElt.MakeImplicit(AsnElt.CONTEXT, 2, snameAsn);\n\n\n            // enc-part        [3] EncryptedData -- EncTicketPart\n            AsnElt enc_partAsn = enc_part.Encode();\n            AsnElt enc_partSeq = AsnElt.Make(AsnElt.SEQUENCE, enc_partAsn);\n            enc_partSeq = AsnElt.MakeImplicit(AsnElt.CONTEXT, 3, enc_partSeq);\n\n\n            AsnElt totalSeq = AsnElt.Make(AsnElt.SEQUENCE, new[] { tkt_vnoSeq, realmAsnSeq, snameAsn, enc_partSeq });\n            AsnElt totalSeq2 = AsnElt.Make(AsnElt.SEQUENCE, new[] { totalSeq });\n            totalSeq2 = AsnElt.MakeImplicit(AsnElt.APPLICATION, 1, totalSeq2);\n\n            return totalSeq2;\n        }\n\n        public EncTicketPart Decrypt(byte[] serviceKey, byte[] asrepKey, bool noAdData = false) {\n            var decryptedTicket = Crypto.KerberosDecrypt((Interop.KERB_ETYPE)enc_part.etype, Interop.KRB_KEY_USAGE_AS_REP_TGS_REP, serviceKey, enc_part.cipher);\n            var encTicket = AsnElt.Decode(decryptedTicket, false);\n            return  new EncTicketPart(encTicket.Sub[0], asrepKey, noAdData);\n        }\n\n        public void Encrypt(EncTicketPart encTicketPart, byte[] serviceKey) {\n\n            \n            //AuthorizationData ad_win2k_pac = new AuthorizationData(Interop.AuthorizationDataType.AD_WIN2K_PAC, pacs.Encode());           \n            //AuthorizationData ad_if_rel = new AuthorizationData(Interop.AuthorizationDataType.AD_IF_RELEVANT, ad_win2k_pac.Encode().Encode()); \n            //enc_part.cipher = Crypto.KerberosEncrypt((Interop.KERB_ETYPE)enc_part.etype, Interop.KRB_KEY_USAGE_AS_REP_TGS_REP, serviceKey, ad_if_rel.Encode().Encode());              \n        }\n\n\n        public int tkt_vno { get; set; }\n\n        public string realm { get; set; }\n\n        public PrincipalName sname { get; set; }\n\n        public EncryptedData enc_part { get; set; }\n    }\n}"