b'## ----include=FALSE------------------------------------------------------------\nlibrary(knitr)\nopts_chunk$set(\nconcordance=TRUE\n)\n\n\n## ----echo=FALSE, warning=FALSE, message=FALSE---------------------------------\n# The following packages must be installed\nlibrary(xtable)\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(utils)\n\n# Set rounding to 2 digits\noptions(digits=2)\n\n# Diambiguate filter function\nfilter <- dplyr::filter\n\n\n## ----include=FALSE------------------------------------------------------------\n# This unzips the necessary .csv file the first time you run this code.\nif(!file.exists("profiles_revised.csv")){\n  unzip("profiles_revised.csv.zip")\n}\n\n## ----cache=TRUE, warning=FALSE, message=FALSE---------------------------------\nprofiles_revised <- read.csv(file="profiles_revised.csv", header=TRUE,\n                             stringsAsFactors=FALSE)\nn <- nrow(profiles_revised)\n\n\n## ----include=FALSE------------------------------------------------------------\n# This unzips the necessary .csv file the first time you run this code.\nif(!file.exists("essays_revised_and_shuffled.csv")){\n  unzip("essays_revised_and_shuffled.csv.zip")\n}\n\n## ----cache=TRUE, warning=FALSE, message=FALSE---------------------------------\nessays_revised_and_shuffled <-\n  read.csv(file="essays_revised_and_shuffled.csv", header=TRUE, stringsAsFactors=FALSE)\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE, all_heights, fig.height=4, fig.width=6, fig.cap="Heights of all users.", fig.align=\'center\'----\nrequire(mosaic)\nfavstats(~height, data=profiles_revised)\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE---------------------------------\nrequire(dplyr)\nprofiles_revised.subset <- filter(profiles_revised, height>=55 & height <=80)\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE, heights_by_sex, fig.height=7, fig.width=10, fig.cap="Histograms of user heights split by sex.", fig.align=\'center\'----\nhistogram(~height | sex, width=1, layout=c(1,2), xlab="Height in inches",\n          data=profiles_revised.subset)\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE, sex_and_orientation, fig.height=4, fig.width=8, fig.cap="Distributions of sex and sexual orientation.", fig.align=\'center\'----\npar(mfrow=c(1, 2))\nbarplot(table(profiles_revised$sex)/n, xlab="sex", ylab="proportion")\nbarplot(table(profiles_revised$orientation)/n, xlab="orientation", ylab="proportion")\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE, sex_by_orientation, fig.height=3.5, fig.width=4, fig.cap="Joint distribution of sex and sexual orientation.", fig.align=\'center\'----\ntally(orientation ~ sex, data=profiles_revised, format=\'proportion\')\nsex.by.orientation <- tally(~sex + orientation, data=profiles_revised)\nsex.by.orientation\nmosaicplot(sex.by.orientation, main="Sex vs Orientation", las=1)\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE---------------------------------\nset.seed(76)\nsample(1:10)\nset.seed(76)\nsample(1:10)\nset.seed(79)\nsample(1:10)\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE---------------------------------\nprofiles_revised <- filter(profiles_revised, height>=55 & height <=80)\nset.seed(76)\nprofiles_revised <- sample_n(profiles_revised, 5995)\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE---------------------------------\nrequire(ggplot2)\nprofiles_revised <- mutate(profiles_revised, is.female = ifelse(sex=="f", 1, 0))\nbase.plot <- ggplot(data=profiles_revised, aes(x=height, y=is.female)) +\n  scale_y_continuous(breaks=0:1) +\n  theme(panel.grid.minor.y = element_blank()) +\n  xlab("Height in inches") +\n  ylab("Is female?")\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE, is_female_vs_height, fig.height=3, fig.width=6, fig.cap="Female indicator vs height.", fig.align=\'center\'----\nbase.plot + geom_point()\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE, is_female_vs_height_jittered, fig.height=3, fig.width=6, fig.cap="Female indicator vs height (jittered).", fig.align=\'center\'----\nbase.plot + geom_jitter(position = position_jitter(width = .2, height=.2))\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE---------------------------------\nlinear.model <- lm(is.female ~ height, data=profiles_revised)\nmsummary(linear.model)\nb1 <- coef(linear.model)\nb1\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE---------------------------------\nlogistic.model <- glm(is.female ~ height, family=binomial, data=profiles_revised)\nmsummary(logistic.model)\nb2 <- coefficients(logistic.model)\nb2\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE, is_female_vs_height_logistic_vs_linear, fig.height=3, fig.width=6, fig.cap="Predicted linear (red) and logistic (blue) regression curves.", fig.align=\'center\'----\ninverse.logit <- function(x, b){\n  linear.equation <- b[1] + b[2]*x\n  1/(1+exp(-linear.equation))\n}\nbase.plot + geom_jitter(position = position_jitter(width = .2, height=.2)) +\n  geom_abline(intercept=b1[1], slope=b1[2], col="red", size=2) +\n  stat_function(fun = inverse.logit, args=list(b=b2), color="blue", size=2)\n\n\n## ----cache=TRUE, warning=FALSE, message=FALSE, fitted_values, fig.height=3.5, fig.width=5, fig.cap="Fitted probabilities of being female and decision threshold (in red).", fig.align=\'center\'----\nprofiles_revised$p.hat <- fitted(logistic.model)\nggplot(data=profiles_revised, aes(x=p.hat)) +\n  geom_histogram(binwidth=0.1) +\n  xlab(expression(hat(p))) +\n  ylab("Frequency") +\n  xlim(c(0,1)) +\n  geom_vline(xintercept=0.5, col="red", size=1.2)\nprofiles_revised <- mutate(profiles_revised, predicted.female = p.hat >= 0.5)\ntally(~is.female + predicted.female, data=profiles_revised)\n\n\n## ----cache=TRUE, echo=FALSE, warning=FALSE, message=FALSE---------------------\n# Compute misclassification error rate\nperf.table <- table(truth=profiles_revised$is.female, prediction=profiles_revised$predicted.female)\nmisclass.error <- 1 - sum(diag(perf.table))/sum(perf.table)\n\n\n## ----echo=TRUE, eval=FALSE, warning=FALSE, message=FALSE----------------------\n## library(knitr)\n## purl(input="JSE.Rnw", output="JSE.R", quiet=TRUE)\n\n'