b'package io.github.javiewer.activity;\n\nimport android.animation.Animator;\nimport android.animation.AnimatorListenerAdapter;\nimport android.app.ProgressDialog;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.os.Looper;\nimport com.google.android.material.appbar.CollapsingToolbarLayout;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.google.android.material.snackbar.Snackbar;\nimport androidx.core.content.FileProvider;\nimport androidx.core.widget.NestedScrollView;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\nimport androidx.recyclerview.widget.StaggeredGridLayoutManager;\nimport androidx.appcompat.widget.Toolbar;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.ImageView;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.bumptech.glide.Glide;\nimport com.robertlevonyan.views.chip.Chip;\nimport com.wefika.flowlayout.FlowLayout;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.Collections;\nimport java.util.List;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport butterknife.OnClick;\nimport cn.jzvd.JZVideoPlayer;\nimport cn.jzvd.JZVideoPlayerStandard;\nimport io.github.javiewer.JAViewer;\nimport io.github.javiewer.R;\nimport io.github.javiewer.adapter.ActressPaletteAdapter;\nimport io.github.javiewer.adapter.MovieHeaderAdapter;\nimport io.github.javiewer.adapter.ScreenshotAdapter;\nimport io.github.javiewer.adapter.item.Genre;\nimport io.github.javiewer.adapter.item.Movie;\nimport io.github.javiewer.adapter.item.MovieDetail;\nimport io.github.javiewer.network.PSVS;\nimport io.github.javiewer.network.item.AvgleSearchResult;\nimport io.github.javiewer.network.provider.AVMOProvider;\nimport io.github.javiewer.util.SimpleVideoPlayer;\nimport io.github.javiewer.view.ViewUtil;\nimport okhttp3.ResponseBody;\nimport retrofit2.Call;\nimport retrofit2.Callback;\nimport retrofit2.Response;\n\npublic class MovieActivity extends SecureActivity {\n\n    public Movie movie;\n    public AvgleSearchResult.Response.Video video = null;\n\n    @BindView(R.id.toolbar_layout)\n    CollapsingToolbarLayout mToolbarLayout;\n\n    @BindView(R.id.toolbar)\n    Toolbar mToolbar;\n\n    @BindView(R.id.toolbar_layout_background)\n    ImageView mToolbarLayoutBackground;\n\n    @BindView(R.id.movie_content)\n    NestedScrollView mContent;\n\n    @BindView(R.id.movie_progress_bar)\n    ProgressBar mProgressBar;\n\n    @BindView(R.id.fab)\n    FloatingActionButton mFab;\n\n    @BindView(R.id.genre_flow_layout)\n    FlowLayout mFlowLayout;\n\n    MenuItem mStarButton;\n\n    @Override\n    @SuppressWarnings("ConstantConditions")\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_movie);\n\n        ButterKnife.bind(this);\n\n        Bundle bundle = this.getIntent().getExtras();\n        movie = (Movie) bundle.getSerializable("movie");\n\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        getSupportActionBar().setTitle(movie.title);\n\n        mFab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Intent intent = new Intent(MovieActivity.this, DownloadActivity.class);\n                Bundle arguments = new Bundle();\n                arguments.putString("keyword", movie.getCode());\n                intent.putExtras(arguments);\n                startActivity(intent);\n            }\n        });\n        mFab.bringToFront();\n\n        Call<ResponseBody> call = JAViewer.SERVICE.get(this.movie.getLink());\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n                if (!response.isSuccessful()) {\n                    return;\n                }\n\n                MovieDetail detail;\n                try {\n                    detail = AVMOProvider.parseMoviesDetail(response.body().string());\n                    detail.headers.add(0, MovieDetail.Header.create("\xe5\xbd\xb1\xe7\x89\x87\xe5\x90\x8d", movie.getTitle(), null));\n                    displayInfo(detail);\n\n                    Glide.with(mToolbarLayoutBackground.getContext().getApplicationContext())\n                            .load(detail.coverUrl)\n                            .into(mToolbarLayoutBackground);\n                } catch (IOException e) {\n                    onFailure(call, e);\n                }\n            }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n                t.printStackTrace();\n            }\n        });\n    }\n\n    private void displayInfo(MovieDetail detail) {\n        //Info\n        {\n            RecyclerView mRecyclerView = (RecyclerView) findViewById(R.id.headers_recycler_view);\n            ImageView mIcon = (ImageView) findViewById(R.id.movie_icon_header);\n\n            if (detail.headers.isEmpty()) {\n                TextView mText = (TextView) findViewById(R.id.header_empty_text);\n                mRecyclerView.setVisibility(View.GONE);\n                mText.setVisibility(View.VISIBLE);\n                ViewUtil.alignIconToView(mIcon, mText);\n            } else {\n                mRecyclerView.setAdapter(new MovieHeaderAdapter(detail.headers, this, mIcon));\n                mRecyclerView.setLayoutManager(new LinearLayoutManager(this));\n                mRecyclerView.setNestedScrollingEnabled(false);\n            }\n        }\n\n        //Screenshots\n        {\n            RecyclerView mRecyclerView = (RecyclerView) findViewById(R.id.screenshots_recycler_view);\n            ImageView mIcon = (ImageView) findViewById(R.id.movie_icon_screenshots);\n\n            if (detail.screenshots.isEmpty()) {\n                TextView mText = (TextView) findViewById(R.id.screenshots_empty_text);\n                mRecyclerView.setVisibility(View.GONE);\n                mText.setVisibility(View.VISIBLE);\n                ViewUtil.alignIconToView(mIcon, mText);\n            } else {\n                mRecyclerView.setAdapter(new ScreenshotAdapter(detail.screenshots, this, mIcon, movie));\n                mRecyclerView.setLayoutManager(new StaggeredGridLayoutManager(4, StaggeredGridLayoutManager.VERTICAL));\n                mRecyclerView.setNestedScrollingEnabled(false);\n            }\n        }\n\n        //Actress\n        {\n            RecyclerView mRecyclerView = (RecyclerView) findViewById(R.id.actresses_recycler_view);\n            ImageView mIcon = (ImageView) findViewById(R.id.movie_icon_actresses);\n\n            if (detail.actresses.isEmpty()) {\n                TextView mText = (TextView) findViewById(R.id.actresses_empty_text);\n                mRecyclerView.setVisibility(View.GONE);\n                mText.setVisibility(View.VISIBLE);\n                ViewUtil.alignIconToView(mIcon, mText);\n            } else {\n                mRecyclerView.setAdapter(new ActressPaletteAdapter(detail.actresses, this, mIcon));\n                mRecyclerView.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false));\n                mRecyclerView.setNestedScrollingEnabled(false);\n            }\n        }\n\n        //Genre\n        {\n            ImageView mIcon = (ImageView) findViewById(R.id.movie_icon_genre);\n\n            if (detail.genres.isEmpty()) {\n                mFlowLayout.setVisibility(View.GONE);\n                TextView mText = (TextView) findViewById(R.id.genre_empty_text);\n                mText.setVisibility(View.VISIBLE);\n                ViewUtil.alignIconToView(mIcon, mText);\n            } else {\n                for (int i = 0; i < detail.genres.size(); i++) {\n                    final Genre genre = detail.genres.get(i);\n                    View view = getLayoutInflater().inflate(R.layout.chip_genre, mFlowLayout, false);\n                    Chip chip = (Chip) view.findViewById(R.id.chip_genre);\n                    chip.setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View v) {\n                            if (genre.getLink() != null) {\n                                startActivity(MovieListActivity.newIntent(MovieActivity.this, genre.getName(), genre.getLink()));\n                            }\n                        }\n                    });\n                    chip.setChipText(genre.getName());\n                    mFlowLayout.addView(view);\n\n                    if (i == 0) {\n                        ViewUtil.alignIconToView(mIcon, view);\n                    }\n                }\n            }\n        }\n\n        //Changing visibility\n        mProgressBar.animate().setDuration(200).alpha(0).setListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                super.onAnimationEnd(animation);\n                mProgressBar.setVisibility(View.GONE);\n            }\n        }).start();\n\n        //Slide Up Animation\n        mContent.setVisibility(View.VISIBLE);\n        mContent.setY(mContent.getY() + 120);\n        mContent.setAlpha(0);\n        mContent.animate().translationY(0).alpha(1).setDuration(500).start();\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case android.R.id.home:\n                onBackPressed();\n                return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.movie, menu);\n\n        mStarButton = menu.findItem(R.id.action_star);\n        {\n            if (JAViewer.CONFIGURATIONS.getStarredMovies().contains(movie)) {\n                mStarButton.setIcon(R.drawable.ic_menu_star);\n                mStarButton.setTitle("\xe5\x8f\x96\xe6\xb6\x88\xe6\x94\xb6\xe8\x97\x8f");\n            }\n        }\n        mStarButton.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n            @Override\n            public boolean onMenuItemClick(MenuItem item) {\n                if (JAViewer.CONFIGURATIONS.getStarredMovies().contains(movie)) {\n                    JAViewer.CONFIGURATIONS.getStarredMovies().remove(movie);\n                    mStarButton.setIcon(R.drawable.ic_menu_star_border);\n                    Snackbar.make(mContent, "\xe5\xb7\xb2\xe5\x8f\x96\xe6\xb6\x88\xe6\x94\xb6\xe8\x97\x8f", Snackbar.LENGTH_LONG).show();\n                    mStarButton.setTitle("\xe6\x94\xb6\xe8\x97\x8f");\n                } else {\n                    List<Movie> movies = JAViewer.CONFIGURATIONS.getStarredMovies();\n                    Collections.reverse(movies);\n                    movies.add(movie);\n                    Collections.reverse(movies);\n                    mStarButton.setIcon(R.drawable.ic_menu_star);\n                    Snackbar.make(mContent, "\xe5\xb7\xb2\xe6\x94\xb6\xe8\x97\x8f", Snackbar.LENGTH_LONG).show();\n                    mStarButton.setTitle("\xe5\x8f\x96\xe6\xb6\x88\xe6\x94\xb6\xe8\x97\x8f");\n                }\n                JAViewer.CONFIGURATIONS.save();\n                FavouriteActivity.update();\n                return true;\n            }\n        });\n\n        final MenuItem mShareButton = menu.findItem(R.id.action_share);\n        mShareButton.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n            @Override\n            public boolean onMenuItemClick(MenuItem item) {\n                try {\n\n                    File cache = new File(getExternalFilesDir("cache"), "screenshot");\n\n                    //Generate screenshot\n                    FileOutputStream os = new FileOutputStream(cache);\n                    Bitmap screenshot = getScreenBitmap();\n                    screenshot.compress(Bitmap.CompressFormat.JPEG, 100, os);\n                    os.flush();\n                    os.close();\n\n                    Uri uri = FileProvider.getUriForFile(getApplicationContext(), "io.github.javiewer.fileprovider", cache);\n                    // Uri uri = Uri.fromFile(cache);\n                    Intent intent = new Intent(Intent.ACTION_SEND)\n                            .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)\n                            .addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)\n                            .setType("image/jpeg")\n                            .putExtra(Intent.EXTRA_STREAM, uri);\n                    startActivity(Intent.createChooser(intent, "\xe5\x88\x86\xe4\xba\xab\xe6\xad\xa4\xe5\xbd\xb1\xe7\x89\x87"));\n\n                    return true;\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    Toast.makeText(MovieActivity.this, "\xe6\x97\xa0\xe6\xb3\x95\xe5\x88\x86\xe4\xba\xab\xef\xbc\x9a" + e.getMessage(), Toast.LENGTH_SHORT).show();\n                }\n                return false;\n            }\n        });\n\n        return super.onCreateOptionsMenu(menu);\n    }\n\n    public Bitmap getScreenBitmap() {\n        int imageHeight = mToolbarLayoutBackground.getHeight();\n        int scrollViewHeight = 0;\n        for (int i = 0; i < mContent.getChildCount(); i++) {\n            scrollViewHeight += mContent.getChildAt(i).getHeight();\n        }\n        Bitmap result = Bitmap.createBitmap(mContent.getWidth(), imageHeight + scrollViewHeight, Bitmap.Config.ARGB_8888);\n        Canvas canvas = new Canvas(result);\n        canvas.drawColor(Color.parseColor("#FAFAFA"));\n\n        //Image\n        {\n            Bitmap bitmap = Bitmap.createBitmap(mToolbarLayoutBackground.getWidth(), imageHeight, Bitmap.Config.ARGB_8888);\n            Canvas c = new Canvas(bitmap);\n            mToolbarLayoutBackground.draw(c);\n            canvas.drawBitmap(bitmap, 0, 0, null);\n        }\n\n        //ScrollView\n        {\n            Bitmap bitmap = Bitmap.createBitmap(mContent.getWidth(), scrollViewHeight, Bitmap.Config.ARGB_8888);\n            Canvas c = new Canvas(bitmap);\n            mContent.draw(c);\n            canvas.drawBitmap(bitmap, 0, imageHeight, null);\n        }\n\n        return result;\n    }\n\n    @OnClick(R.id.view_preview)\n    public void onClickPreview() {\n        //TODO: Deprecated\n        if (video != null) {\n            JZVideoPlayerStandard.startFullscreen(MovieActivity.this, SimpleVideoPlayer.class, video.preview_video_url, movie.title);\n            return;\n        }\n\n        final ProgressDialog dialog = ProgressDialog.show(this, "\xe8\xaf\xb7\xe7\xa8\x8d\xe5\x90\x8e", "\xe6\xad\xa3\xe5\x9c\xa8\xe6\x90\x9c\xe7\xb4\xa2\xe8\xaf\xa5\xe5\xbd\xb1\xe7\x89\x87\xe7\x9a\x84\xe9\xa2\x84\xe8\xa7\x88\xe8\xa7\x86\xe9\xa2\x91", true, false);\n\n        Call<AvgleSearchResult> call = PSVS.INSTANCE.search(movie.code);\n        call.enqueue(new Callback<AvgleSearchResult>() {\n            @Override\n            public void onResponse(Call<AvgleSearchResult> call, Response<AvgleSearchResult> response) {\n                if (response.isSuccessful()) {\n                    AvgleSearchResult result = response.body();\n                    if (result.success && result.response.videos.size() > 0) {\n                        video = result.response.videos.get(0);\n                        JZVideoPlayerStandard.startFullscreen(MovieActivity.this, SimpleVideoPlayer.class, video.preview_video_url, movie.title);\n                        Toast.makeText(MovieActivity.this, "\xe6\x8f\x90\xe7\xa4\xba\xef\xbc\x9a\xe9\xa2\x84\xe8\xa7\x88\xe8\xa7\x86\xe9\xa2\x91\xe5\x8f\xaf\xe8\x83\xbd\xe9\x9c\x80\xe8\xa6\x81\xe7\xa7\x91\xe5\xad\xa6\xe4\xb8\x8a\xe7\xbd\x91", Toast.LENGTH_LONG).show();\n                        dialog.dismiss();\n                        return;\n                    }\n                }\n\n                Toast.makeText(MovieActivity.this, "\xe8\xaf\xa5\xe5\xbd\xb1\xe7\x89\x87\xe6\x9a\x82\xe6\x97\xa0\xe9\xa2\x84\xe8\xa7\x88", Toast.LENGTH_LONG).show();\n                dialog.dismiss();\n            }\n\n            @Override\n            public void onFailure(Call<AvgleSearchResult> call, Throwable t) {\n                t.printStackTrace();\n                Toast.makeText(MovieActivity.this, "\xe8\x8e\xb7\xe5\x8f\x96\xe9\xa2\x84\xe8\xa7\x88\xe5\xa4\xb1\xe8\xb4\xa5\xef\xbc\x8c\xe8\xaf\xb7\xe9\x87\x8d\xe8\xaf\x95\xef\xbc\x8c\xe6\x88\x96\xe4\xbd\xbf\xe7\x94\xa8\xe7\xa7\x91\xe5\xad\xa6\xe4\xb8\x8a\xe7\xbd\x91", Toast.LENGTH_LONG).show();\n                dialog.dismiss();\n            }\n        });\n    }\n\n    @OnClick(R.id.view_play)\n    public void onPlay() {\n        //TODO: Deprecated\n        final String ts = String.valueOf(System.currentTimeMillis() / 1000);\n        if (video != null) {\n            JZVideoPlayerStandard.startFullscreen(\n                    MovieActivity.this,\n                    SimpleVideoPlayer.class,\n                    String.format("http://api.rekonquer.com/psvs/mp4.php?vid=%s&ts=%s&sign=%s", video.vid, ts, JAViewer.b(video.vid, ts)),\n                    movie.title\n            );\n            return;\n        }\n\n        final ProgressDialog dialog = ProgressDialog.show(this, "\xe8\xaf\xb7\xe7\xa8\x8d\xe5\x90\x8e", "\xe6\xad\xa3\xe5\x9c\xa8\xe6\x90\x9c\xe7\xb4\xa2\xe8\xaf\xa5\xe5\xbd\xb1\xe7\x89\x87\xe7\x9a\x84\xe5\x9c\xa8\xe7\xba\xbf\xe8\xa7\x86\xe9\xa2\x91\xe6\xba\x90", true, false);\n\n        Call<AvgleSearchResult> call = PSVS.INSTANCE.search(movie.code);\n        call.enqueue(new Callback<AvgleSearchResult>() {\n            @Override\n            public void onResponse(Call<AvgleSearchResult> call, Response<AvgleSearchResult> response) {\n                if (response.isSuccessful()) {\n                    AvgleSearchResult result = response.body();\n                    if (result.success && result.response.videos.size() > 0) {\n                        video = result.response.videos.get(0);\n                        JZVideoPlayerStandard.startFullscreen(\n                                MovieActivity.this,\n                                SimpleVideoPlayer.class,\n                                String.format("http://api.rekonquer.com/psvs/mp4.php?vid=%s&ts=%s&sign=%s", video.vid, ts, JAViewer.b(video.vid, ts)),\n                                movie.title\n                        );\n                        dialog.dismiss();\n                        return;\n                    }\n                }\n\n                Toast.makeText(MovieActivity.this, "\xe8\xaf\xa5\xe5\xbd\xb1\xe7\x89\x87\xe6\x9a\x82\xe6\x97\xa0\xe5\x9c\xa8\xe7\xba\xbf\xe8\xa7\x86\xe9\xa2\x91\xe6\xba\x90", Toast.LENGTH_LONG).show();\n                dialog.dismiss();\n            }\n\n            @Override\n            public void onFailure(Call<AvgleSearchResult> call, Throwable t) {\n                t.printStackTrace();\n                Toast.makeText(MovieActivity.this, "\xe8\x8e\xb7\xe5\x8f\x96\xe5\x9c\xa8\xe7\xba\xbf\xe8\xa7\x86\xe9\xa2\x91\xe6\xba\x90\xe5\xa4\xb1\xe8\xb4\xa5\xef\xbc\x8c\xe8\xaf\xb7\xe9\x87\x8d\xe8\xaf\x95\xef\xbc\x8c\xe6\x88\x96\xe4\xbd\xbf\xe7\x94\xa8\xe7\xa7\x91\xe5\xad\xa6\xe4\xb8\x8a\xe7\xbd\x91", Toast.LENGTH_LONG).show();\n                dialog.dismiss();\n            }\n        });\n    }\n\n    /*@OnClick(R.id.view_play)\n    public void onPlay() {\n        //TODO: Deprecated\n        final ProgressDialog dialog = ProgressDialog.show(this, "\xe8\xaf\xb7\xe7\xa8\x8d\xe5\x90\x8e", "\xe6\xad\xa3\xe5\x9c\xa8\xe6\x90\x9c\xe7\xb4\xa2\xe8\xaf\xa5\xe5\xbd\xb1\xe7\x89\x87\xe7\x9a\x84\xe5\x9c\xa8\xe7\xba\xbf\xe8\xa7\x86\xe9\xa2\x91\xe6\xba\x90", true, false);\n\n        if (video != null) {\n            dialog.setMessage("\xe6\xad\xa3\xe5\x9c\xa8\xe8\x8e\xb7\xe5\x8f\x96\xe6\x92\xad\xe6\x94\xbe\xe5\x9c\xb0\xe5\x9d\x80");\n\n            String ts = String.valueOf(System.currentTimeMillis() / 1000);\n            Request request = new Request.Builder()\n                    .url(String.format(\n                            "https://avgle.com/mp4.php?vid=%s&ts=%s&hash=%s&m3u8"\n                            , video.vid\n                            , ts\n                            , PSVS21.computeHash(new PSVS21.StubContext(MovieActivity.this.getApplicationContext()), video.vid, ts)))\n                    .build();\n            JAViewer.HTTP_CLIENT.newCall(request).enqueue(new okhttp3.Callback() {\n                @Override\n                public void onFailure(okhttp3.Call call, IOException e) {\n                    dialog.dismiss();\n                    Toast.makeText(MovieActivity.this, "\xe8\x8e\xb7\xe5\x8f\x96\xe6\x92\xad\xe6\x94\xbe\xe5\x9c\xb0\xe5\x9d\x80\xe5\xa4\xb1\xe8\xb4\xa5\xef\xbc\x8c\xe8\xaf\xb7\xe5\xb0\x9d\xe8\xaf\x95\xe7\xa7\x91\xe5\xad\xa6\xe4\xb8\x8a\xe7\xbd\x91", Toast.LENGTH_LONG).show();\n                }\n\n                @Override\n                public void onResponse(okhttp3.Call call, okhttp3.Response response) throws IOException {\n                    dialog.dismiss();\n                    startFullscreen(response.request().url().toString(), movie.title);\n                }\n            });\n            //startActivityForResult(WebViewActivity.newIntent(MovieActivity.this, video.embedded_url), 0x0000eeff);\n            return;\n        }\n\n        Call<AvgleSearchResult> call = Avgle.INSTANCE.search(movie.code);\n        call.enqueue(new Callback<AvgleSearchResult>() {\n            @Override\n            public void onResponse(Call<AvgleSearchResult> call, Response<AvgleSearchResult> response) {\n                if (response.isSuccessful()) {\n                    AvgleSearchResult result = response.body();\n                    if (result.success && result.response.videos.size() > 0) {\n                        video = result.response.videos.get(0);\n                        //startActivityForResult(WebViewActivity.newIntent(MovieActivity.this, video.embedded_url), 0x0000eeff);\n                        //dialog.dismiss();\n                        dialog.setMessage("\xe6\xad\xa3\xe5\x9c\xa8\xe8\x8e\xb7\xe5\x8f\x96\xe6\x92\xad\xe6\x94\xbe\xe5\x9c\xb0\xe5\x9d\x80");\n\n                        String ts = String.valueOf(System.currentTimeMillis() / 1000);\n                        Request request = new Request.Builder()\n                                .url(String.format(\n                                        "https://avgle.com/mp4.php?vid=%s&ts=%s&hash=%s&m3u8"\n                                        , video.vid\n                                        , ts\n                                        , PSVS21.computeHash(new PSVS21.StubContext(MovieActivity.this.getApplicationContext()), video.vid, ts)))\n                                .build();\n                        JAViewer.HTTP_CLIENT.newCall(request).enqueue(new okhttp3.Callback() {\n                            @Override\n                            public void onFailure(okhttp3.Call call, IOException e) {\n                                dialog.dismiss();\n                                Toast.makeText(MovieActivity.this, "\xe8\x8e\xb7\xe5\x8f\x96\xe6\x92\xad\xe6\x94\xbe\xe5\x9c\xb0\xe5\x9d\x80\xe5\xa4\xb1\xe8\xb4\xa5\xef\xbc\x8c\xe8\xaf\xb7\xe5\xb0\x9d\xe8\xaf\x95\xe7\xa7\x91\xe5\xad\xa6\xe4\xb8\x8a\xe7\xbd\x91", Toast.LENGTH_LONG).show();\n                            }\n\n                            @Override\n                            public void onResponse(okhttp3.Call call, okhttp3.Response response) throws IOException {\n                                dialog.dismiss();\n                                startFullscreen(response.request().url().toString(), movie.title);\n                            }\n                        });\n                        return;\n                    }\n                }\n\n                Toast.makeText(MovieActivity.this, "\xe8\xaf\xa5\xe5\xbd\xb1\xe7\x89\x87\xe6\x9a\x82\xe6\x97\xa0\xe5\x9c\xa8\xe7\xba\xbf\xe8\xa7\x86\xe9\xa2\x91\xe6\xba\x90", Toast.LENGTH_LONG).show();\n                dialog.dismiss();\n            }\n\n            @Override\n            public void onFailure(Call<AvgleSearchResult> call, Throwable t) {\n                t.printStackTrace();\n                Toast.makeText(MovieActivity.this, "\xe8\x8e\xb7\xe5\x8f\x96\xe8\xa7\x86\xe9\xa2\x91\xe6\xba\x90\xe5\xa4\xb1\xe8\xb4\xa5\xef\xbc\x8c\xe8\xaf\xb7\xe5\xb0\x9d\xe8\xaf\x95\xe7\xa7\x91\xe5\xad\xa6\xe4\xb8\x8a\xe7\xbd\x91", Toast.LENGTH_LONG).show();\n                dialog.dismiss();\n            }\n        });\n    }*/\n\n    /*@Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        if (requestCode == 0x0000eeff && resultCode == RESULT_OK) {\n            JZVideoPlayerStandard.startFullscreen(MovieActivity.this, SimpleVideoPlayer.class, data.getStringExtra("m3u8"), movie.title);\n        }\n    }*/\n\n    void startFullscreen(final String url, final String title) {\n        new Handler(Looper.getMainLooper()).post(new Runnable() {\n            @Override\n            public void run() {\n                JZVideoPlayerStandard.startFullscreen(MovieActivity.this, SimpleVideoPlayer.class, url, title);\n            }\n        });\n    }\n\n    @Override\n    public void onBackPressed() {\n        if (JZVideoPlayer.backPress()) {\n            return;\n        }\n\n        super.onBackPressed();\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        JZVideoPlayer.releaseAllVideos();\n    }\n}\n'