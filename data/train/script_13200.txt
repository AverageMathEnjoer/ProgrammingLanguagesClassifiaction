b'package com.loper7.date_time_picker.controller\n\nimport com.loper7.date_time_picker.ext.getMaxDayInMonth\nimport com.loper7.date_time_picker.number_picker.NumberPicker\nimport java.lang.Exception\nimport java.util.*\n\n/**\n *\n * @CreateDate:     2021/6/18 9:35\n * @Description:    \xe6\x8e\xa7\xe5\x88\xb6\xe5\x99\xa8\xe5\x9f\xba\xe7\xb1\xbb\n * @Author:         LOPER7\n * @Email:          loper7@163.com\n */\nabstract class BaseDateTimeController : DateTimeInterface {\n\n    abstract fun bindPicker(type: Int, picker: NumberPicker?): BaseDateTimeController\n\n    abstract fun bindGlobal(global: Int): BaseDateTimeController\n\n    abstract fun build(): BaseDateTimeController\n\n    /**\n     * \xe8\x8e\xb7\xe5\x8f\x96\xe6\x9f\x90\xe6\x9c\x88\xe6\x9c\x80\xe5\xa4\xa7\xe5\xa4\xa9\xe6\x95\xb0\n     */\n    protected fun getMaxDayInMonth(year: Int?, month: Int?): Int {\n        if (year == null || month == null)\n            return 0\n        if (year <= 0 || month < 0)\n            return 0\n        try {\n            val calendar: Calendar = Calendar.getInstance()\n            calendar.clear()\n            calendar.set(Calendar.YEAR, year)\n            calendar.set(Calendar.MONTH, month)\n            return calendar.getMaxDayInMonth()\n        } catch (e: Exception) {\n            return 0\n        }\n\n    }\n\n}'