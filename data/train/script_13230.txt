b"{-# LANGUAGE ConstraintKinds #-}\n\nmodule Database.Beam.Backend.Types\n  ( BeamBackend(..)\n\n  , Exposed, Nullable\n\n  ) where\n\nimport GHC.Types\n\n-- | Class for all Beam backends\nclass BeamBackend be where\n  -- | Requirements to marshal a certain type from a database of a particular backend\n  type BackendFromField be :: Type -> Constraint\n\n-- | newtype mainly used to inspect the tag structure of a particular\n--   'Beamable'. Prevents overlapping instances in some case. Usually not used\n--   in end-user code.\ndata Exposed x\n\n-- | Support for NULLable Foreign Key references.\n--\n-- > data MyTable f = MyTable\n-- >                { nullableRef :: PrimaryKey AnotherTable (Nullable f)\n-- >                , ... }\n-- >                 deriving (Generic, Typeable)\n--\n-- See 'Columnar' for more information.\ndata Nullable (c :: Type -> Type) x\n"