b'{-# LANGUAGE\n    DeriveDataTypeable\n  , DeriveGeneric\n  #-}\nmodule Type.UserInfo where\n\nimport Data.Aeson\nimport Data.JSON.Schema\nimport Data.Typeable\nimport GHC.Generics\nimport Generics.Generic.Aeson\nimport Generics.XmlPickler\nimport Text.XML.HXT.Arrow.Pickle\n\nimport qualified Type.User as User\n\nnewtype UserInfo = UserInfo\n  { name :: User.Name\n  } deriving (Generic, Show, Typeable)\n\ninstance XmlPickler UserInfo where xpickle   = gxpickle\ninstance JSONSchema UserInfo where schema    = gSchema\ninstance FromJSON   UserInfo where parseJSON = gparseJson\ninstance ToJSON     UserInfo where toJSON    = gtoJson\n'