b'\xef\xbb\xbfusing System;\nusing System.Windows.Input;\n\nnamespace DMSkin.Core\n{\n    public class DelegateCommand : ICommand\n    {\n        private readonly Action<object> executeAction;\n        private readonly Func<object, bool> canExecuteFunc;\n        public event EventHandler CanExecuteChanged;\n        public DelegateCommand(Action<object> execute)\n            : this(execute, null)\n        { }\n\n        public DelegateCommand(Action<object> execute, Func<object, bool> canExecute)\n        {\n            if (execute == null)\n            {\n                return;\n            }\n            executeAction = execute;\n            canExecuteFunc = canExecute;\n        }\n        public bool CanExecute(object parameter)\n        {\n            if (canExecuteFunc == null)\n            {\n                return true;\n            }\n            return canExecuteFunc(parameter);\n        }\n        public void Execute(object parameter)\n        {\n            if (executeAction == null)\n            {\n                return;\n            }\n            executeAction(parameter);\n        }\n        public void OnCanExecuteChanged()\n        {\n            CanExecuteChanged?.Invoke(this, EventArgs.Empty);\n        }\n    }\n}\n'