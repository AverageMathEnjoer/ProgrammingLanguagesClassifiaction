b'package effectivejava.chapter6.item39.repeatableannotation;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n// Program containing repeatable annotations (Page 186)\npublic class Sample4 {\n    @ExceptionTest(ArithmeticException.class)\n    public static void m1() {  // Test should pass\n        int i = 0;\n        i = i / i;\n    }\n\n    @ExceptionTest(ArithmeticException.class)\n    public static void m2() {  // Should fail (wrong exception)\n        int[] a = new int[0];\n        int i = a[1];\n    }\n\n    @ExceptionTest(ArithmeticException.class)\n    public static void m3() { }  // Should fail (no exception)\n\n    // Code containing a repeated annotation (Page 186)\n    @ExceptionTest(IndexOutOfBoundsException.class)\n    @ExceptionTest(NullPointerException.class)\n    public static void doublyBad() {\n        List<String> list = new ArrayList<>();\n\n        // The spec permits this staticfactory to throw either\n        // IndexOutOfBoundsException or NullPointerException\n        list.addAll(5, null);\n    }\n}\n'