b'package icu.nullptr.twifucker.hook\n\nimport com.github.kyuubiran.ezxhelper.ClassUtils.loadClass\nimport com.github.kyuubiran.ezxhelper.HookFactory.`-Static`.createHook\nimport com.github.kyuubiran.ezxhelper.Log\nimport com.github.kyuubiran.ezxhelper.finders.FieldFinder\nimport com.github.kyuubiran.ezxhelper.finders.MethodFinder\nimport icu.nullptr.twifucker.afterMeasure\nimport icu.nullptr.twifucker.modulePrefs\n\nobject JsonTimelineModuleHook : BaseHook() {\n    override val name: String\n        get() = "JsonTimelineModuleHook"\n\n    override fun init() {\n        if (!modulePrefs.getBoolean("disable_video_carousel", false)) return\n        val jsonTimelineModuleMapperClass =\n            loadClass("com.twitter.model.json.timeline.urt.JsonTimelineModule\\$\\$JsonObjectMapper")\n        val jsonTimelineModuleClass =\n            loadClass("com.twitter.model.json.timeline.urt.JsonTimelineModule")\n        val jsonClientEventInfoClass =\n            loadClass("com.twitter.model.json.timeline.urt.JsonClientEventInfo")\n        val jsonClientEventInfoField =\n            FieldFinder.fromClass(jsonTimelineModuleClass).filterByType(jsonClientEventInfoClass)\n                .first()\n        val moduleField =\n            FieldFinder.fromClass(jsonClientEventInfoClass).filterByType(String::class.java).first()\n\n        MethodFinder.fromClass(jsonTimelineModuleMapperClass).filterByName("_parse")\n            .filterByReturnType(jsonTimelineModuleClass).first().createHook {\n                afterMeasure(name) { param ->\n                    param.result ?: return@afterMeasure\n                    val module = jsonClientEventInfoField.get(param.result) ?: return@afterMeasure\n                    if (moduleField.get(module) == "video_carousel") {\n                        param.result = null\n                        Log.d("Removed video carousel")\n                    }\n                }\n            }\n    }\n}'